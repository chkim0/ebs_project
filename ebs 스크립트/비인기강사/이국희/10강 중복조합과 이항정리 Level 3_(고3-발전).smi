<SAMI>
<HEAD>
<TITLE>Time Tools (C) CCNSOFT 2005</TITLE>
<STYLE TYPE="text/css">
<!--
P { margin-left:8pt; margin-right:8pt; margin-bottom:2pt;
    margin-top:2pt; font-size:12pt; text-align:left;
    font-family:굴림, Arial; font-weight:normal; color:white;
    background-color:#405A8D; }
.KRCC { Name:한국어; lang:ko-KR; SAMIType:CC; }
#STDPrn { Name:Standard Print; }
#LargePrn { Name:Large Print; font-size:20pt; }
#SmallPrn { Name:Small Print; font-size:10pt; }
-->
</STYLE>
</HEAD>
<BODY>
<Sync Start=9530><P Class=KRCC>
반갑습니다. 만점으로 가는 최단 경로! 2024 수능특강 확률과 통계! 
<Sync Start=13822><P Class=KRCC>
함께하고 있는 저는 이국희입니다. 낙관적이라고 불리는 사람들의 대부분은요. 
<Sync Start=18929><P Class=KRCC>
낙관적인 생각과 부정적인 생각의 비율이 한 1:1 정도 된다고 합니다. 
<Sync Start=24650><P Class=KRCC>
생각보다 그렇게 크지 않죠? 차이가. 보통 낙관적이라고 하면 한 10, 낙관적인 생각을 
<Sync Start=31400><P Class=KRCC>
그리고 부정적인 생각을 1, 이렇게 할 것 같은데, 
<Sync Start=34500><P Class=KRCC>
낙관적인 사람들도 부정적인 생각을 거의 엇비슷하게 하지만 
<Sync Start=39257><P Class=KRCC>
낙관적인 거를 조금 더 한다고 보시면 될 것 같습니다. 
<Sync Start=43116><P Class=KRCC>
그러니까 우리가 똑같은 상황이어도 부정적으로 바라보는 사람들이 있고 
<Sync Start=46873><P Class=KRCC>
낙관적으로 바라보는 사람들이 있거든요. 
<Sync Start=49130><P Class=KRCC>
근데 그 사람들은 원래 성향이 그래서가 아니라 
<Sync Start=52450><P Class=KRCC>
그냥 바라보는 관점을 조금 더 낙관적으로 바라보냐! 내가 조금 더 부정적으로 바라보냐! 
<Sync Start=57733><P Class=KRCC>
이 차이인 것 같아요. 우리가 공부할 때요. 힘든 상황에 많이 놓일 겁니다. 
<Sync Start=62968><P Class=KRCC>
내가 슬럼프를 겪을 거고요. 고3 때는 분명히 한 번쯤은 내가 성적도 잘 안 오르고 
<Sync Start=68366><P Class=KRCC>
내가 하고 있는 게 맞나? 내 공부법을 바꿔볼까? 
<Sync Start=70947><P Class=KRCC>
이런 여러 가지 생각들로 되게 약간의 그런 지칠 때가 올 겁니다. 
<Sync Start=75972><P Class=KRCC>
그러면 그냥 그 똑같은 상황에서 조금 더 긍정적으로 보세요. 
<Sync Start=79839><P Class=KRCC>
내가 너무 열심히 해서 지쳤나 보다, 조금 쉬어가야겠다. 
<Sync Start=84244><P Class=KRCC>
아니면 내가 너무 문제를 많이 풀어서 머리가 이제 조금 복잡해졌나 보다. 
<Sync Start=88990><P Class=KRCC>
문제를 좀 덜 풀고 개념을 봐야 되겠다. 이런 식으로 한 템포 쉬면서, 
<Sync Start=93603><P Class=KRCC>
방향을 바꿔나가면서 공부를 하면 지치지 않고 멀리 갈 수 있습니다. 
<Sync Start=98267><P Class=KRCC>
근데 그냥 한 방향이 아닌 것들로만 가면, 내가 어떤 방향으로 가려고 했는데 
<Sync Start=103798><P Class=KRCC>
그 방향이 아닌 쪽으로 살짝만 틀어도 불안감을 느끼는 친구들이 많거든요. 
<Sync Start=108025><P Class=KRCC>
입시에서는 그런 친구들이 오래 가면 좀 힘들어집니다. 
<Sync Start=112579><P Class=KRCC>
그러니까 그냥 긍정적으로 조금 더 좋은 사고방식으로 
<Sync Start=117030><P Class=KRCC>
이렇게 여러 가지 상황들을 헤쳐 나가셨으면 좋겠습니다. 
<Sync Start=120600><P Class=KRCC>
그래서 적당하게! 당연히 부정적인 게 있겠구나, 
<Sync Start=123513><P Class=KRCC>
내 상황이 항상 좋지만은 않겠구나, 이런 마음가짐으로요. 
<Sync Start=127684><P Class=KRCC>
부정적인 상황이 와도 그냥 이렇게 의연하게 지나가는 여러분이 되셨으면 합니다. 
<Sync Start=133982><P Class=KRCC>
오늘 아마 부정적인 시선으로 문제를 풀 수도 있을 것 같아서 이런 얘기를 했고요. 
<Sync Start=138929><P Class=KRCC>
어려운 문항들입니다. 근데 어렵지만도 않아요. 
<Sync Start=143361><P Class=KRCC>
무슨 얘기냐! 여러분이 바라봤을 때는 그냥 무조건 다 복잡하게 생겼고 난도가 높고 
<Sync Start=149054><P Class=KRCC>
이렇게 보이겠지만 선생님의 관점으로 보면 
<Sync Start=151812><P Class=KRCC>
이건 여러분이 어떤 경로를 통해서 문제를 풀면 해석이 쉽겠다. 이런 것들이 좀 보이거든요. 
<Sync Start=157540><P Class=KRCC>
그럼 그 경로들이 그렇게 복잡하지 않은 문제는 할 만한 거예요. 
<Sync Start=162140><P Class=KRCC>
근데 그 경로들이, 제가 설명하기에도 그 경로들이 복잡하다면 정말 어려운 문제입니다. 
<Sync Start=168294><P Class=KRCC>
그러니까 여러분이 이번 level 3 문제들은 복습을 꼭 하시면서 내 걸로 만드셔야 돼요. 
<Sync Start=173739><P Class=KRCC>
연계교재! 한 번 풀고 그냥 버리는 문제집 아닙니다. 
<Sync Start=177659><P Class=KRCC>
두고두고 수능 때까지 반복하는 문제집이기 때문에 
<Sync Start=180816><P Class=KRCC>
저하고 수업 들었던 것들 필기 꼼꼼히 하시면서, 
<Sync Start=183636><P Class=KRCC>
level 3들은 특히나 정리를 좀 잘해놓으시기를 바라요. 1번부터 한번 진행을 해보죠. 
<Sync Start=189025><P Class=KRCC>
함수의 개수. 제가 말했죠? 중복조합에서 가장 많이 나오는 형태 중의 하나가 
<Sync Start=193999><P Class=KRCC>
함수의 개수를 세는 거다. 이 파트는 무궁무진합니다. 왜냐! 
<Sync Start=200458><P Class=KRCC>
조건만 다르게 해주면 되거든요. 조건 A, 조건 B, 조건 C. 그래, 이것은 조건 D. 
<Sync Start=205860><P Class=KRCC>
이것은 조건 A, B 섰고요 조건 C, D 섰고요. C의 반대 조건 넣고 D의 반대 조건 넣고, 
<Sync Start=212585><P Class=KRCC>
이런 식으로 조건들을 막 다양하게 하면 경우의 수가 무궁무진해요. 
<Sync Start=217068><P Class=KRCC>
그러니까 가장 중요한 건 이런 문제가 나왔을 때 그 유형들을, 
<Sync Start=221361><P Class=KRCC>
그 조건들 하나하나를 다 기억해 놓고서 외우는 게 아니라 비슷한 조건들이 있었으면 
<Sync Start=226697><P Class=KRCC>
그거에 대한 걸 기억해서 조금 더 빠르게 푸는 그 과정이 또 필요하고요. 
<Sync Start=231089><P Class=KRCC>
어떤 새로운 조건이 나오면 그 조건을 내가 알고 있던 조건과 이렇게 비교해 가면서 
<Sync Start=236778><P Class=KRCC>
해결법을 찾아나가는 거예요. 집합 {1, 2, 3, 4, 5, 6, 7}이 있고요. 
<Sync Start=241679><P Class=KRCC>
X에서 X로의 함수 f의 개수를 구하라고 합니다. 일단 (가)의 조건은 너무 편하죠. 
<Sync Start=246911><P Class=KRCC>
이거 중복조합입니다. 
<Sync Start=249950><P Class=KRCC>

<Sync Start=252217><P Class=KRCC>
이때 4부터 5까지라고 되어 있다, f(5)- f(3)이. 
<Sync Start=256035><P Class=KRCC>
그럼 결국은 여러분, f(5)와 f(3)의 차이가 4 또는 5가 된다는 얘기거든요. 
<Sync Start=262875><P Class=KRCC>
그럼 뭐가 더 크다는 얘기예요? 사실. f(5)가 크단 얘기죠. 
<Sync Start=266679><P Class=KRCC>
이거에 의해서도 당연히 f(5)가 클 거예요. 
<Sync Start=270710><P Class=KRCC>
그러면 f(5)보다는 f(3)을 기준으로 해서 f(5)를 한정해 가면 
<Sync Start=276275><P Class=KRCC>
조금 더 케이스가 쉽게 나오지 않을까? 이렇게요. 첫 번째, f(3)이라고 하는 값을요. 
<Sync Start=286236><P Class=KRCC>
만약에 1이라고 한번 해보자고요. 그러면 f(5)가 될 수 있는 건 
<Sync Start=292907><P Class=KRCC>
차이가 4 이상이 돼야 되는 거잖아요. 그럼 4가 될 수 있는 거는 5가 되겠다. 괜찮죠? 
<Sync Start=299660><P Class=KRCC>
그러면 또 이거하고 유사하게 f(3)의 값이 1이에요. 
<Sync Start=304950><P Class=KRCC>
그러면 f(5)라고 하는 게 어디까지 되겠냐? 그렇죠. 차이가 5까지 되니까 6까지 되겠다. 
<Sync Start=312640><P Class=KRCC>
또 f에, 일단 써놓고 안 되는 건 제외하는 방향으로 가시면 됩니다. f(3)은 1로 놓고요. 
<Sync Start=320770><P Class=KRCC>
그다음에 f(5)라고 하는 거는 원래는 7이 가능하기는 하지만 이 차이는 얼마야? 6입니다. 
<Sync Start=327820><P Class=KRCC>
그러니까 이거는 5하고 4까지밖에 안 되기 때문에 안 돼요. 
<Sync Start=330970><P Class=KRCC>
그래서 이 친구는 제외를 시켜준다. 이런 식으로. 됐나요? 그러면 첫 번째 것부터 한번 보죠. 
<Sync Start=338368><P Class=KRCC>
f(3)은 1이고 f(5)는 5다. 그러면 여기 있는 거! 1, 2, 3, 4, 5, 6, 7. 그다음에 여기 있는 거! 
<Sync Start=345775><P Class=KRCC>
1, 2, 3, 4, 5, 6, 7. 이 상태에서 3은 1로 가요. 그다음에 5는 5로 가요. 이렇게! 
<Sync Start=358037><P Class=KRCC>
나머지는 중복조합입니다. 그러면 1, 2는 어차피 몇 가지야? 한 가지야. 
<Sync Start=364609><P Class=KRCC>
얘들은 무조건 1로 가야 돼요. 지난 시간에 말했죠? 
<Sync Start=368535><P Class=KRCC>
부장님이 짜장면 먹으면 그냥 짜장면 드셔야 돼요. 나머지! 3, 4, 5. 
<Sync Start=374120><P Class=KRCC>
5까지는 이제 여기 5가 됐기 때문에 4라고 하는 친구가 가능한 거는 다 되겠다. 몇 개? 
<Sync Start=380830><P Class=KRCC>
5개. 돼요? 6, 7이 선택할 수 있는 거는 5, 6, 7 중에 하나씩 되겠구나. 
<Sync Start=389334><P Class=KRCC>
그럼 서로 다른 3개 중에 중복을 허용해 2개를 뽑겠다. 5, 6, 7이 가능한 거니까. 
<Sync Start=394974><P Class=KRCC>
그래서 얘는 이렇게 놓고요. 이따가 계산하시고! 두 번째 거! f(3)은 1로 갑니다. 
<Sync Start=401389><P Class=KRCC>
여기 있는 거! f(3)은 1로 갔고요. f(5)는 6으로 간대요. 이거 6으로 가자. 이렇게! 
<Sync Start=407980><P Class=KRCC>
그럼 첫 번째 거, 1은 똑같습니다. 그다음에 4가 올 수 있는 거는 1부터 6까지예요. 
<Sync Start=413600><P Class=KRCC>
6으로 늘었네. 그다음 6, 7이 갈 수 있는 건 6, 7 중에 하나씩 되겠죠. 
<Sync Start=418930><P Class=KRCC>
그럼 얘는 서로 다른 2개 중에 중복을 허용해 2개를 뽑겠다. 됐나요? 
<Sync Start=425600><P Class=KRCC>
그러면 이제 f(3)이 1인 거는 끝났고 f(3)이 2인 것도 한번 해봐야 되겠죠. 
<Sync Start=432282><P Class=KRCC>
얘가 2라면 f(5)는 최소 얼마? 그렇지. 6이 돼야 되겠죠. 또 f(3)이 2라면 f(5)는 7. 
<Sync Start=447919><P Class=KRCC>
여기까지도 됩니다. 됐나요? f(3)이 3이라면 가정을 한번 해볼까요? 그럼 3까지야. 
<Sync Start=454477><P Class=KRCC>
그러면 f(5)가 7이 되는 경우도 있겠구나. 그럼 그건 조금 있다가 한번 해보도록 하고, 
<Sync Start=459840><P Class=KRCC>
여기 있는 거 2로 갑니다. 그럼 여기 있는 거를 좀 밑에다가 다시 쓸까요? 
<Sync Start=464068><P Class=KRCC>
1, 2, 3, 4, 5, 6, 7. 그다음 1, 2, 3, 4, 5, 6, 7. 첫 번째, 3이 2로 가. 여기 있는 거 2로. 
<Sync Start=476460><P Class=KRCC>
그다음 5가 6으로 갑니다. 이렇게요. 그러면 1, 2가 선택할 수 있는 건 
<Sync Start=482774><P Class=KRCC>
1, 2 중에서 하나씩 가겠죠. 그럼 중복을 허용해서 2개를 뽑고요. 
<Sync Start=487827><P Class=KRCC>
그다음 4가 선택할 수 있는 거! 하나, 둘, 셋, 넷, 5개가 되겠네. 
<Sync Start=492280><P Class=KRCC>
그다음 6, 7이 갈 수 있는 거! 2개 중에 중복 허용해서 뽑겠구나. 이렇게. 
<Sync Start=498094><P Class=KRCC>
또! 2로 가고 7로 갑니다. 그럼 5라고 하는 게 7로 가야 되니까 이렇게 가겠죠. 괜찮아요? 
<Sync Start=505959><P Class=KRCC>
앞에 있는 건 똑같아요. 2H2. 그다음 하나, 둘, 셋, 넷, 다섯, 6개가 되겠구나. 
<Sync Start=512535><P Class=KRCC>
그다음 6, 7은 무조건 어디로 가야 돼? 7로 가야 되겠죠. × 1이겠구나. 괜찮아요? 
<Sync Start=518870><P Class=KRCC>
그리고 하나만 더! f(3)짜리가 3으로 가는 것도 되겠다. 5라고 한번 해보자. 
<Sync Start=525120><P Class=KRCC>
f(3)은 3으로 갑니다. 그럼 그 상태에서 f(5)는 7까지는 됩니다. 그 이상은 안 되죠. 
<Sync Start=533774><P Class=KRCC>
어차피 8이라고 하는 숫자 자체도 없고. 그럼 이것만 만족을 하면 되는 거니까, 
<Sync Start=537940><P Class=KRCC>
이건 그냥 여기다가 할까요? 하얀색으로. 3이 3으로 가요. 이렇게 가요. 
<Sync Start=542237><P Class=KRCC>
그다음에 5가 7로 갑니다. 여기로 갑니다. 
<Sync Start=545725><P Class=KRCC>
그러면 1, 2가 갈 수 있는 거는 1, 2, 3 중에서 하나가 되겠죠. 3H2가 되겠다. 됐나요? 
<Sync Start=553300><P Class=KRCC>
그다음 하나, 둘, 셋, 넷, 5개가 되겠다. 4가 갈 수 있는 거. 
<Sync Start=559069><P Class=KRCC>
그다음 나머지는 7로 무조건 가야 되겠다. 1. 이렇게! 계산을 해볼까요? 
<Sync Start=564829><P Class=KRCC>
여기는 거 4C2가 될 겁니다. 그러면 6이 되겠죠. 6 × 5, 30. 
<Sync Start=570470><P Class=KRCC>
그다음에 두 번째 거, 3C1이 될 거예요. 그러니까 3이니까 18, 이렇게 될 거고요. 
<Sync Start=577300><P Class=KRCC>
여기 있는 것도! 여기 있는 거 3이니까 15에다가 3 곱하니까 45가 될 거고요. 
<Sync Start=583740><P Class=KRCC>
여기 있는 거 3일 거니까 6 곱하면 18, 이렇게 되겠다. 
<Sync Start=588105><P Class=KRCC>
그다음에 여기 있는 거는 4C2가 될 거고요. 5가 되겠구나. 그럼 여기 있는 거는 얼마야? 
<Sync Start=595710><P Class=KRCC>
6, 5, 30, 이렇게 되겠다. 괜찮죠? 이거 얼마예요? 48. 그다음에 이거 더하면 63. 
<Sync Start=607190><P Class=KRCC>
그다음에 이거 하게 되면 30. 됐나요? 그러면 이거 하면 얼마? 111. 
<Sync Start=616080><P Class=KRCC>
이렇게 될 거고 그다음에 30 더하니까 얼마예요? 141. 이렇게. 
<Sync Start=622137><P Class=KRCC>
그래서 이 문제는 케이스만 잘 분류하면 되는 거고요. 
<Sync Start=625500><P Class=KRCC>
그렇게까지 level 3에 올 정도의 수준은 아니다. 
<Sync Start=629640><P Class=KRCC>
솔직히 저는 level 2에 있던 문제들이 좀 더 낫다고 생각을 하거든요, 
<Sync Start=635510><P Class=KRCC>
난이도 차이로만 본다면. 그래서 이 문제는 적당하게 그냥 f(3)에 대한 경우만 나눠주면 
<Sync Start=641647><P Class=KRCC>
어렵지 않게 할 수 있으니까 그냥 중복조합에 대한 함수의 종류, 
<Sync Start=646249><P Class=KRCC>
개수 구하는 그냥 기본적인 계산 과정과 거의 똑같다고 보시면 돼요. 
<Sync Start=652004><P Class=KRCC>
그래서 1번 이렇게 해결하고요. 2번으로 가볼까요? 2번이 좀 어려웠을 텐데, 
<Sync Start=659364><P Class=KRCC>
저도 이제 이항정리 파트 문제에서 수식으로 뭔가 미지수를 찾아내는 문제들이 
<Sync Start=665073><P Class=KRCC>
어렵게 출제가 됐었긴 하지만 약간 느낌이 좀 다릅니다. 
<Sync Start=669138><P Class=KRCC>
그래서 이런 것들은 좀 기억해 두시는 게 좋을 것 같아요. 
<Sync Start=672306><P Class=KRCC>
자연수 n에 대하여 (2x³ + x²분의 1)ⁿ의 전개식에서 x의 5제곱의 계수와 
<Sync Start=680054><P Class=KRCC>
x의 10제곱의 계수가 같더라. 오케이. 그러면 n은 몰라요, 지금. 그렇죠? 
<Sync Start=687020><P Class=KRCC>
그러면 n도 모르고 5제곱이 되기 위해서 몇 개씩 쪼개야 되는지도 몰라요. 
<Sync Start=692510><P Class=KRCC>
그럼 그냥 쓰는 거야, 일반항으로. nCr이라고 이렇게 쓰고요. 2x³이 r개. 
<Sync Start=699744><P Class=KRCC>
그다음 x²분의 1짜리가 (n-r)개라고 이렇게 씁니다. 됐죠? 
<Sync Start=706086><P Class=KRCC>
그러면 x에 대한 것들만 먼저 계산을 해볼까요? 여기 있는 거! x의 3r제곱이고요. 
<Sync Start=712901><P Class=KRCC>
그다음에 여기 있는 거는 (x의 (2n-2r)제곱)분의 1이 되겠다. 
<Sync Start=718308><P Class=KRCC>
이건 지금 곱하기의 형태이기 때문에 얘 마이너스 붙이게 되면 
<Sync Start=721580><P Class=KRCC>
x에다가 3r-2n+2r의 형태가 될 겁니다. 됐죠? 그러면 여기에 있는 이 값이 얼마여야 돼? 
<Sync Start=732270><P Class=KRCC>
5가 돼야 된다고요. 됐죠? 그럼 이거 정리해 볼까? 5r-2n은 5가 될 겁니다. 
<Sync Start=742990><P Class=KRCC>
근데 우리가 이제 10제곱에 대한 거하고 5제곱에 대한 거 비교할 거 아니에요? 
<Sync Start=747153><P Class=KRCC>
그러면 5와 10은 다르겠지만 공통적으로 들어가 있는 문자는 있을 겁니다. n이죠. n. 
<Sync Start=753048><P Class=KRCC>
그렇죠? 이때 r과 이때 r값이 당연히 다르겠지만 n은 여기서도 n이고요. 여기서도 n이에요. 
<Sync Start=759689><P Class=KRCC>
그러니까 각각에 대한 r값을 n에 대한 걸로 표현해 주는 게 더 바람직하지 않을까요? 
<Sync Start=765130><P Class=KRCC>
따라서 여기에 있는 걸 r에 대한 걸로 좀 풀어봅니다. 5r=5+2n 
<Sync Start=772350><P Class=KRCC>
그러면 r은 1 + (5분의 2)n이라고 표현을 할 수 있겠죠. 이렇게! 
<Sync Start=779975><P Class=KRCC>
얘를 r1이라고 해볼게요. 괜찮아요? 
<Sync Start=784088><P Class=KRCC>
또 여기에 있는 건 일반항이었기 때문에 이렇게 나오는 것도 다 일반항입니다. 
<Sync Start=788500><P Class=KRCC>
그러면 두 번째 거는, 5r-2n이라고 하는 게 10이 되는 경우를 생각을 해보자. 
<Sync Start=794500><P Class=KRCC>
그러면 여기에서도 5r-. 5r = 10 + 2n이 될 거고요. r = 2 + (5분의 2)n이 될 겁니다. 
<Sync Start=808810><P Class=KRCC>
이거는! 그렇죠. 두 번째 거에서의 r이야. 그러니까 얘는 r2라고 이렇게 이름을 짓겠습니다. 
<Sync Start=816761><P Class=KRCC>
괜찮아요? 그러면 이때 저 계수를 계산하는 과정을 한번 써볼까요? 
<Sync Start=821812><P Class=KRCC>
첫 번째 거에서 nCr과 그다음에 2의 r제곱이 영향을 주는 거잖아요. 
<Sync Start=826536><P Class=KRCC>
그러면 n에다가 r1을 집어넣을 거예요. 1 + (5분의 2)n. 그리고 2의 r제곱. r1. 이렇게! 
<Sync Start=837382><P Class=KRCC>
아이고! 어차피 n으로 다 집어넣기로 했죠? 1 + (5분의 2)n. 이렇게 하겠습니다. 
<Sync Start=845334><P Class=KRCC>
나머지는 어차피 계수에 영향을 안 줘요. 1이니까. 얘가 x의 5제곱의 계수고요. 
<Sync Start=852233><P Class=KRCC>
그다음 x의 10제곱의 계수를 보자면 n에다가 r2, 이거 집어넣어야 되겠죠? 
<Sync Start=857979><P Class=KRCC>
그럼 2 + (5분의 2)n. 그리고 얘는 2에다가 2 + (5분의 2)n, 이렇게 되겠네. 괜찮죠? 
<Sync Start=869150><P Class=KRCC>
근데 이 2개가 어떻대요? 같대요. 그러면 여러분, 이것만 한번 비교를 해볼까요? 
<Sync Start=876330><P Class=KRCC>
nC에 1 + (5분의 2)n. 그리고 2에다가 1 + (5분의 2)n과, 
<Sync Start=884390><P Class=KRCC>
오른쪽에 있는 거는 nC에 2 + (5분의 2)n 그리고 2에다가 2 + (5분의 2)n이야. 
<Sync Start=893990><P Class=KRCC>
그럼 약분되는 게 있죠? 요거! (5분의 2)n제곱은 다 약분될 겁니다. 
<Sync Start=899680><P Class=KRCC>
여기 있는 거 1도 약분되고요. 여기 1만 남아요. 
<Sync Start=901872><P Class=KRCC>
그러니까 여기다가 2만 이렇게 곱해주면 되겠구나. 
<Sync Start=904784><P Class=KRCC>
그럼 결국 nC1 + (5분의 2)n이라고 하는 것은 
<Sync Start=911060><P Class=KRCC>
2 × n에다가 C2 + (5분의 2)n이라고 둘 수 있겠다. 괜찮아요? 
<Sync Start=920330><P Class=KRCC>
여기서! 물론 Combination의 계산법에 의해서 팩토리얼로 바꿔서요. 
<Sync Start=925770><P Class=KRCC>
그들의 관계식을 찾는 것도 괜찮습니다. 그게 이제 여러분 교재에 나와 있는 풀이인데, 
<Sync Start=930980><P Class=KRCC>
상식적으로 편하게 생각을 해보면 얘도 결국은 0 아니면 자연수의 형태가 돼야 되지 않아요? 
<Sync Start=938600><P Class=KRCC>
0은 당연히 아닐 거고 1이 있기 때문에 n이 자연수이기 때문에 
<Sync Start=943963><P Class=KRCC>
이 친구 전체는 무조건 자연수가 나올 거예요. 그렇죠? 
<Sync Start=949204><P Class=KRCC>
여기가 Combination에서 갑자기 ½개, 4분의 3개 이런 거 없잖아요. 
<Sync Start=954847><P Class=KRCC>
그럼 여기가 자연수가 되기 위한 n값을 유추를 하는 거죠. 그 첫 번째 값이 뭐다? 5다. 
<Sync Start=962033><P Class=KRCC>
n은 5의 배수여야 되니까. 기본적으로 5분의 2가 분수에서 자연수로 바뀌어야 되거든요. 
<Sync Start=967949><P Class=KRCC>
그러니까 n은 5부터 시작을 해보자. 
<Sync Start=969973><P Class=KRCC>
그러면 얘는 5C, 5 하게 되면 2하고 1 더하니까 3일 거거든요. 
<Sync Start=975583><P Class=KRCC>
그리고 이 친구하고 오른쪽에 있는 거 비교해 볼까요? 
<Sync Start=977405><P Class=KRCC>
2에다가 5C에 5 넣으면 이거 1이니까 4가 될 거예요. 이렇게! 이거 얼마예요? 
<Sync Start=984334><P Class=KRCC>
5C2니까 10입니다. 얘 얼마예요? 10이네요. 같군요. 괜찮죠? 되세요? 무슨 얘긴지. 
<Sync Start=995707><P Class=KRCC>
그러면 5가 된다는 얘기예요, n값이. 그 상태에서 상수항을 구하여라, 이런 얘기입니다. 
<Sync Start=1003380><P Class=KRCC>
이해가 되시죠? 또 되는 거 있는지 한 번씩 볼까요? 한 번쯤은 봐야 돼. 
<Sync Start=1008840><P Class=KRCC>
n이라고 하는 거 10으로 이렇게 두겠습니다. 
<Sync Start=1011598><P Class=KRCC>
그럼 여기 있는 거! 10C, 10C에, 여기에다가 10 넣게 되면 이 친구는 4가 될 거예요. 
<Sync Start=1018206><P Class=KRCC>
그러니까 10C5가 될 거 고요. 그다음에 2 ×. 이거는 같은지 다른지 모르죠. 아직. 
<Sync Start=1024074><P Class=KRCC>
2 ×, 10C, 여기 있는 거 4에다가 2 더할 거니까 6이 될 겁니다. 됐죠? 
<Sync Start=1030618><P Class=KRCC>
그냥 이거는 이제 계산법으로 봐요. 5, 4, 3, 2, 1에다가 10, 9, 8, 7, 6입니다. 
<Sync Start=1039230><P Class=KRCC>
그리고 여기 있는 거는 4, 3, 2, 1. 10C4로 할 거예요. 10, 9, 8, 7입니다. 됐어요? 
<Sync Start=1050645><P Class=KRCC>
그럼 여기에 있는 거하고 여기에 있는 거하고는 같죠. 
<Sync Start=1052988><P Class=KRCC>
그럼 오른쪽에 있는 게 같아지려면 여기에 5가 곱해져야 해. 
<Sync Start=1055940><P Class=KRCC>
그럼 여기에 있는 거 5를 이렇게 곱해요. 그러면 여기에도 5를 곱해야 되겠죠. 이렇게? 
<Sync Start=1059568><P Class=KRCC>
그러면 10, 9, 8, 7, 5. 언뜻 보면 될 것 같은데, 여기에 남아있는 건 2밖에 없습니다. 2. 
<Sync Start=1067616><P Class=KRCC>
근데 여기에 뭐가 있어요? 지금. 6이 있네? 그러면 6이 되려면 2에다가 또 3이 있어야 되겠죠. 
<Sync Start=1073097><P Class=KRCC>
그러니까 얘는 안 된다고요. 되세요? 이다음부터도 숫자의 차이가 커집니다. 괜찮아요? 
<Sync Start=1083349><P Class=KRCC>
그러니까 그냥 여러분이 딱 결정할 수 있는 거는 n값이 얼마구나? 5구나. 
<Sync Start=1092451><P Class=KRCC>
이 상태에서 시작을 하는 게 맞아요. 
<Sync Start=1095009><P Class=KRCC>
그러면 여기에서 이거의 상수항을 구하시오, 라고 했기 때문에 몇 개씩 나눠 가지면 될까? 
<Sync Start=1100191><P Class=KRCC>
그러면 똑같이 그냥 3이니까 2, 3으로 나누면 되는 거 아니에요? 2, 3 나눠보자. 
<Sync Start=1104934><P Class=KRCC>
여기 있는 거! 2개, 3개. 됐죠? 그러면 6개가 될 거고 여기 6개가 될 거니까 
<Sync Start=1111193><P Class=KRCC>
5개 중에 2개를 가져갑니다. 뭐가요? 2x³이 2개, x²분의 1이 몇 개? 3개 가져갈 겁니다. 
<Sync Start=1120507><P Class=KRCC>
따라서 여기에 있는 건 해보나 마나 상수일 거고 여기 있는 거 10이고요. 
<Sync Start=1124772><P Class=KRCC>
그다음에 이거 제곱하게 되면 4가 될 거니까요. 결국 답은 얼마다? 40이겠다. 
<Sync Start=1130794><P Class=KRCC>
그래서 조금 특이하기는 한 그런 문제입니다. 
<Sync Start=1134291><P Class=KRCC>
여러분이 r이라고 하는 거를 n에 대하여 표현을 한 다음에 그다음에 식 전개를 하는 건데 
<Sync Start=1138986><P Class=KRCC>
여기서 좀 통찰력 있게, 개념으로 그냥 바탕으로 하면 
<Sync Start=1143354><P Class=KRCC>
여기에 있는 이 숫자의 제한 조건이 딱 걸리는 거죠. 
<Sync Start=1146793><P Class=KRCC>
그러니까 그걸 바탕으로 해서 풀면 괜찮은 그런 문제입니다. 되셨어요? 2번! 
<Sync Start=1153629><P Class=KRCC>
3번으로 가보겠습니다. 할 만하죠? level 3인데. 
<Sync Start=1157763><P Class=KRCC>
오히려 level 2에 있던 문제들보다 조금 무난하게 지나갈 수 있습니다. 
<Sync Start=1164109><P Class=KRCC>
이 2번이 좀 오히려 어려웠고요. 3번으로 가보죠. 3번. 
<Sync Start=1170684><P Class=KRCC>

<Sync Start=1174368><P Class=KRCC>
3번 문제는 결국은 여러분, 이렇게 생각하시면 돼요. 
<Sync Start=1177391><P Class=KRCC>
곱셈 공식이랑 그다음에 인수분해, 이런 문제들을 활용을 한 거다. 
<Sync Start=1183525><P Class=KRCC>

<Sync Start=1186334><P Class=KRCC>
그러니까 이항계수의 성질 파트 있죠? 
<Sync Start=1190693><P Class=KRCC>

<Sync Start=1192315><P Class=KRCC>
이 개념에서는 어쨌든 식을 정리해서 뭔가 어떤 값을 구하는 거니까 
<Sync Start=1197866><P Class=KRCC>
그 과정 중에는 인수분해나 곱셈 공식을 이용한 그런 아이디어들이 많이 나올 겁니다. 
<Sync Start=1203868><P Class=KRCC>
그러니까 여러분이 이 문제뿐만 아니라 비슷한 문제를 풀더라도 
<Sync Start=1209214><P Class=KRCC>
그냥 이런 식으로 식만 좀 깔끔하게 정리해 놓으면 금방 나와요, 답이. 
<Sync Start=1214295><P Class=KRCC>
그래서 그렇게까지 겁먹을 필요가 전혀 없습니다, 여기는. 
<Sync Start=1218507><P Class=KRCC>
그리고 솔직히 이항계수의 성질 파트만 단독으로 초고난도 문항이 나올까요? 
<Sync Start=1225915><P Class=KRCC>
힘들다고 봅니다, 저는. 이게 만약에 나오더라도 그냥 
<Sync Start=1230163><P Class=KRCC>
하나의 조건 해석하는 정도로만 나올 거지, 이걸 가지고 깊이 있게 묻는다는 거는 
<Sync Start=1235602><P Class=KRCC>
쉽지 않거든요. 그러니까 이 수준 정도만 풀 수 있어도 
<Sync Start=1239065><P Class=KRCC>
이항계수의 성질, 이항정리 파트는 깔끔하게 정리가 될 겁니다. 30 이하의 자연수고요. 
<Sync Start=1245065><P Class=KRCC>
(가) 집합 X의 원소 중에 짝수의 개수는 8 이상이다. 
<Sync Start=1249703><P Class=KRCC>
그러면 짝수라고 하는 게 몇 개 들었는지 봐야 되겠죠. 15개입니다. 
<Sync Start=1254318><P Class=KRCC>
홀수도 몇 개 들었나 볼까요? 15개. 그러면 이걸, (가), (나)의 조건을 조합을 해보면, 
<Sync Start=1261679><P Class=KRCC>
이런 거 아니에요? 여기에 X가 있는데 짝수가 8개 이상, 그다음 홀수가 7개 이하. 
<Sync Start=1275630><P Class=KRCC>
그럼 이걸로 되어 있는 조합을 여러분이 계산하면 되는 거거든요. 
<Sync Start=1279424><P Class=KRCC>
조금 귀찮긴 하지만 사실 그냥 우리가 알고 있는 공식 그대로 식이 나옵니다. 
<Sync Start=1285845><P Class=KRCC>
그래서 별거 아니에요. 첫 번째! 짝수가 8개라고 가정을 하고 시작을 하죠. 
<Sync Start=1294020><P Class=KRCC>
어쨌든 어떤 집합을 구성하는데 짝수 8개로 고정되어 있는 거야. 
<Sync Start=1297550><P Class=KRCC>
그러면 15개 중에서 몇 개를 뽑아요? 8개를 뽑아요. 그다음 홀수가 7개 이하여야 된다. 
<Sync Start=1305380><P Class=KRCC>
그 말은 홀수가 하나도 없을 수 있겠죠. 그것부터 먼저 쓰겠습니다. 그럼 15C0. 
<Sync Start=1312840><P Class=KRCC>
이게 케이스 하나예요. 근데 이것만 있냐! 아니죠. 
<Sync Start=1316207><P Class=KRCC>
15C8이라고 하는 짝수는 고정되어 있지만 홀수가 몇 개로 늘어요? 하나로 늘어요. 
<Sync Start=1322225><P Class=KRCC>
이런 경우도 있겠지. 또 15C8에다가 15C2라고 하는 게 있겠고요. 결국 어디까지 가겠냐! 
<Sync Start=1331024><P Class=KRCC>
15C8에다가 홀수도 몇 개까지? 7개까지. 15C, 7개까지! 이렇게요. 돼요? 
<Sync Start=1340891><P Class=KRCC>
그러면 똑같은 맥락 아니에요? 짝수 7개면. 여기 앞에만 바뀌는 거야. 
<Sync Start=1346693><P Class=KRCC>
15C7로 고정을 시켜놓고요. 여기 뒤에 있는 건 다 똑같습니다. 이렇게요. 
<Sync Start=1353947><P Class=KRCC>
밑에도 다 마찬가지! 따라서 결국은 모든 집합 X의 개수, 
<Sync Start=1359222><P Class=KRCC>
집합이 가능한 모든 경우의 수를 구하여라, 이런 얘기죠. 
<Sync Start=1362300><P Class=KRCC>
그러면 얘, 얘, 얘, 얘, 여기 나오는 거 싹 다 어떻게 하면 돼요? 더하면 돼요. 
<Sync Start=1370316><P Class=KRCC>
그러면 지금 공통인수가 있네. 15C8, 이거 다 묶일 거고, 15C7, 이거 다 묶일 거고. 
<Sync Start=1376141><P Class=KRCC>
나열해 볼까요? 첫 번째! 여기 있는 거, 15C0부터 해서 15C7까지입니다. 근데요. 
<Sync Start=1383953><P Class=KRCC>
이것도 15라고 하는 거를 절반으로 나눠봐요. 그럼 7죠. 
<Sync Start=1389240><P Class=KRCC>
그럼 7를 근방으로 한 7과 8까지의 합이 양쪽 끝에서부터 더한 것들은 똑같다. 
<Sync Start=1396179><P Class=KRCC>
그러니까 이게 얼마였어요? 이게 여기 15였잖아요. 14제곱이 되는 겁니다. 알겠죠? 
<Sync Start=1402335><P Class=KRCC>
그래서 이것도 그냥 한 번에 쓸게요. 2의 14제곱. 이렇게요. 됐죠? 
<Sync Start=1410660><P Class=KRCC>
또! 15C7. 그다음에 뒤에 오는 건 똑같을 거니까 2의 14제곱. 이렇게 오겠네요. 
<Sync Start=1418800><P Class=KRCC>
그럼 이렇게 가서 어디까지 가야 돼요? 8개 이상이었네. 
<Sync Start=1424370><P Class=KRCC>
그러면 짝수가 7개가 아니라 9개로 가야 되겠네요. 9개. 8개 이상이니까. 
<Sync Start=1429960><P Class=KRCC>
여기 반대로만 해주면 됩니다. 그다음 여기 이렇게 가서 짝수. 몇 개까지? 15개까지. 
<Sync Start=1439546><P Class=KRCC>
이런 식으로! 괜찮죠? 그래서 15C15에 땡땡. 다 뒤에 똑같이. 
<Sync Start=1448195><P Class=KRCC>
그럼 여기 있는 것도 결국은 15C7이 아니라 9가 와야 될 거고, 
<Sync Start=1453141><P Class=KRCC>
15C15, 2의 14제곱까지 오면 됩니다. 얘들만 더해주면 되겠죠? 
<Sync Start=1459876><P Class=KRCC>
그러니까 인수분해야, 얘도. 결국 2의 14제곱으로 묶고요. 
<Sync Start=1464792><P Class=KRCC>
15C8에다가 쭉 가서 15C15까지 가면 되는 겁니다. 근데 이것도 마찬가지예요. 
<Sync Start=1472933><P Class=KRCC>
8이라고 하는 것부터 끝까지죠? 그럼 15를 절반으로 나누면 7. 
<Sync Start=1477613><P Class=KRCC>
그러면 '7까지랑 8까지랑'이니까 8부터 시작해서 15까지. 얘가 이게 2의 14제곱이겠구나. 
<Sync Start=1485324><P Class=KRCC>
그럼 2개 곱하니까 얼마예요? 2의 28제곱이 문제의 답이죠. 되세요? 별거 없잖아요. 사실. 
<Sync Start=1495302><P Class=KRCC>
그냥 아까 말했던 곱셈공식과 인수분해만 조금 가미된 그런 문제입니다. 
<Sync Start=1502293><P Class=KRCC>
그래서 이항정리 파트는 확률과 통계 전체 단원에서도 
<Sync Start=1506990><P Class=KRCC>
난도가 좀 높지 않은 그런 쪽에 속하죠. 중복조합이랑 같이 있어서 좀 어렵게 느껴질 뿐이지, 
<Sync Start=1514000><P Class=KRCC>
중복조합 뒤에 붙어 있다고 해서 중복조합 정도의 난이도가 되지는 않습니다. 
<Sync Start=1518840><P Class=KRCC>
그래서 이항정리는 여러 번 풀어보면 해결이 될 거예요. level 3이어도 할 만하다. 
<Sync Start=1526469><P Class=KRCC>
이렇게 정리를 하고요. 우리 BOGO 문제 제가 갖고 왔습니다. 
<Sync Start=1529366><P Class=KRCC>
작년 건데 작년 게 조금 더 어려워서! 
<Sync Start=1534833><P Class=KRCC>
이게 level 2에 있던, 우리가 앞에서 풀었던 1, 2, 3번 문항의 형태하고 좀 비슷하죠? 
<Sync Start=1540273><P Class=KRCC>
우리 왜 6 이하의 숫자로 구성되어 있는 그 문제 풀었었죠? 
<Sync Start=1545145><P Class=KRCC>
그거하고 약간 유사한 형태입니다. 같은 종류의 구슬 10개가 있고요. 
<Sync Start=1551592><P Class=KRCC>
다음 조건을 만족시키도록 구슬을 서로 다른 4개의 주머니에 넣는다. 
<Sync Start=1555090><P Class=KRCC>
조건 해석을 잘하셔야 돼요. 각 주머니에는 7개 이하의 구슬을 넣는다. 
<Sync Start=1559550><P Class=KRCC>
이게 중요한 거예요. 첫 번째! 7개 이하만 넣어야 된다. 빈 주머니가 있을 수도 있다. 
<Sync Start=1568780><P Class=KRCC>
두 번째! 다시 말하면 음아정의 형태로 구성을 해도 된다, 방정식으로 짜면. 
<Sync Start=1577106><P Class=KRCC>
어느 주머니에도 넣지 않은 구슬이 있다. 이거는 무조건 있다는 얘기입니다. 
<Sync Start=1581730><P Class=KRCC>
이게 무슨 소리냐면 잔여 구슬이라고 제가 그냥 이름 붙일까요? 
<Sync Start=1587900><P Class=KRCC>
어디에도 속하지 못한 구슬이 무조건 1개 이상은 있어야 되는 거예요. 그렇죠? 
<Sync Start=1592752><P Class=KRCC>
그럼 그것들을 다 고려한다면 이렇게 생각을 할 수 있겠다. 
<Sync Start=1595983><P Class=KRCC>
잔여라고 하는 것도 바깥에 그냥 굴러다니겠지만 
<Sync Start=1599080><P Class=KRCC>
그냥 제가 그걸 예쁘게 주머니에다 담아놓을 수 있겠죠. 
<Sync Start=1602029><P Class=KRCC>
그러니까 결국 주머니 4개는 a+b+c+d가 될 건데 
<Sync Start=1607146><P Class=KRCC>
이 주머니 외에 잔여 구슬을 담아놓는 주머니를 제가 하나 만든다고요. 그걸 e라고 할게요. 
<Sync Start=1613449><P Class=KRCC>
그러면 이 결괏값이 얼마여야 돼? 10개여야 되겠죠. 일단 가장 기본적인 세팅입니다, 이게. 
<Sync Start=1620124><P Class=KRCC>
그렇죠? 그리고 또 e라고 하는 건 최소 1이야. 그래서 e는 1보다 크거나 같습니다. 
<Sync Start=1629497><P Class=KRCC>
또 a, b, c, d는요. 0부터 가능하고요. 왜! 빈 주머니가 있어도 된다고 했으니까. 
<Sync Start=1637198><P Class=KRCC>
근데 얼마까지는 안 돼? 7개 이하여야 된대요. 7 이하구나. 이 조건이 만족이 돼야 돼요. 
<Sync Start=1644763><P Class=KRCC>
이렇게! 가능하겠죠? 그러면 이렇게 할 수 있지 않을까? 
<Sync Start=1651866><P Class=KRCC>
가장 먼저 할 수 있는 건 7 이하여야 된다는 게 좀 중요하잖아요. 
<Sync Start=1657091><P Class=KRCC>
그러니까 7을 벗어나는 것부터 고려를 해보자고요. 
<Sync Start=1661159><P Class=KRCC>
a+b+c+d에다가 +1을 이렇게 할 건데 첫 번째! 어떤 하나가 8을 갖고 있습니다. 
<Sync Start=1673120><P Class=KRCC>
8개를 넣어버린 거예요. 그럼 몇 개 남아요? 2개 남죠. 
<Sync Start=1677407><P Class=KRCC>
근데 2개 남는데 e에는 무조건 하나가 들어가야 돼요. 최소. 이게 케이스 1입니다. 
<Sync Start=1684876><P Class=KRCC>
이게 첫 번째, 1번이라고 한번 해볼게요. 그러면 이렇게 구성을 해놓으면, 
<Sync Start=1688942><P Class=KRCC>
나머지에는 무조건 3개 중의 하나가 1개를 갖고 있어야 된다는 얘기죠. 
<Sync Start=1693920><P Class=KRCC>
그럼 8+1+0+0, 이런 구성입니다. 괜찮아요? 
<Sync Start=1700541><P Class=KRCC>
그러면 이 케이스가 되면 얘가 합쳐서 10개가 되는 거다. 
<Sync Start=1706913><P Class=KRCC>
이거에 대한 경우의 수를 세겠습니다. 첫 번째! 8이 올 수 있는 거. 
<Sync Start=1713194><P Class=KRCC>
이거 같은 것이 있은 순열로 해서 그냥 깔끔하게 풀어도 되겠지만 
<Sync Start=1716312><P Class=KRCC>
이거 8이 오는 거 몇 개예요? 4개예요. 그다음에 여기 있는 거 1이 올 수 있는 거? 
<Sync Start=1721854><P Class=KRCC>
나머지 중의 하나니까 8개예요. 4 × 3. 이렇게 되겠다. 괜찮아요? 
<Sync Start=1729390><P Class=KRCC>
그리고 같은 것이 있는 순열로 하면 4!을 2!로 나눈다. 
<Sync Start=1733100><P Class=KRCC>
두 번째 케이스는 이렇게 될 수 있습니다. 8이기는 한데, 하나가 8이기는 한데, 
<Sync Start=1741026><P Class=KRCC>
여기 잔여 구슬에 2개가 있어도 되는 거 아니에요? 
<Sync Start=1744252><P Class=KRCC>
있다고만 했지 하나만 있어야 된다, 이런 얘기 안 했잖아요. 그럼 8+0+0+0이겠구나. 
<Sync Start=1751695><P Class=KRCC>
이거 경우의 수 몇 개? 이거 합쳐서 10개겠지만 경우의 수로 따지면 4개겠다. 4가지. 
<Sync Start=1760042><P Class=KRCC>
되세요? 또 하나 해볼까요? a+b+c+d+e가 10개가 돼야 되는데 그중에서 9개를 갖고 있는 거예요. 
<Sync Start=1772090><P Class=KRCC>
그럼 9개가 있으면, 잘 보세요. e라고 하는 주머니에는 무조건 1개가 들어가야 돼. 
<Sync Start=1777450><P Class=KRCC>
그러면 얘하고 얘만 합쳐도 몇 개예요? 10개예요. 그러니까 나머지 3개는 무조건 0이겠다. 
<Sync Start=1783919><P Class=KRCC>
이거 몇 가지 경우 나와요? 이거 몇 가지? 4가지 경우 나오겠다. 
<Sync Start=1790241><P Class=KRCC>
그럼 지금까지 구한 이 케이스가 몇 개냐면 20개거든요. 
<Sync Start=1797559><P Class=KRCC>
얘는 내가 원하는 거예요? 원하지 않는 거예요? 원하지 않는 거죠. 왜? 
<Sync Start=1804692><P Class=KRCC>
7 이하의 구슬을 넣어야 되는데 지금 7을 넘는 숫자들로 구성되어 있는 
<Sync Start=1808802><P Class=KRCC>
나머지의 조건들을 만족하는 걸 구한 거잖아요. 그러니까 이거는 나중에 빼줘야 되는 거다. 
<Sync Start=1815240><P Class=KRCC>
괜찮죠? 그러면 이제부터 우리가 해야 될 건 이겁니다. 
<Sync Start=1820057><P Class=KRCC>
어차피 7을 넘는 거에 대한 건 계산을 했기 때문에 
<Sync Start=1823173><P Class=KRCC>
이제 7 이하의 구슬이어야 된다는 조건은 불필요한 거예요. 
<Sync Start=1827720><P Class=KRCC>
그냥 얘와 얘만 만족하는 거 체크하면 끝나는 겁니다. 따라서 a+b+c+d+e에다가요. 
<Sync Start=1837080><P Class=KRCC>
얘가 10이 돼야 되고 a, b, c, d라고 하는 거는 0부터 가능하고, 
<Sync Start=1845708><P Class=KRCC>
그다음에 또 e라고 하는 건 얼마부터 가능하다? 1부터 가능하다. 
<Sync Start=1850435><P Class=KRCC>
이것까지만 해도 괜찮다고요. 왜? 7 이하인 거는 이거에서 그냥 빼버리면 끝날 거니까. 
<Sync Start=1856206><P Class=KRCC>
그 조건까지 고려할 필요 없다고요. 전혀! 
<Sync Start=1858357><P Class=KRCC>
따라서 여기에 있는 거 그냥 음아정인 세팅으로 만들어주면 되겠죠. 
<Sync Start=1861285><P Class=KRCC>
그럼 나머지는 어차피 원래 음아정이야. 근데 얘가 문제죠. 하나 이상 들어가야 되니까. 
<Sync Start=1867193><P Class=KRCC>
아! 얘는 e′+1 = 10이겠구나. 그럼 얘는 a+b+c+d+e′은 9가 될 거니까요. 
<Sync Start=1875645><P Class=KRCC>
얘는 서로 다른 몇 개 중에? 5개 중에 9개 선택하는 겁니다. 중복 허용해서. 
<Sync Start=1882606><P Class=KRCC>
따라서 얘는 얼마야? 13C, 9가 될 건데, 4라고 하죠. 
<Sync Start=1889338><P Class=KRCC>
계산하게 되면 4, 3, 2, 1. 13, 12, 11, 10까지! 이렇게 하고요. 약분해 볼까요? 
<Sync Start=1898130><P Class=KRCC>
4 × 3, 12. 그다음 이렇게 할 거니까 55에다가 13을 곱해요. 5 × 3, 15. 
<Sync Start=1905890><P Class=KRCC>
5, 5 하면 715가지가 나올 겁니다. 됐죠? 근데 715가지가 답이 아니잖아. 
<Sync Start=1915097><P Class=KRCC>
이거 어떻게 하라고요? 빼라고요. 그러니까 715에서 20을 빼면 되니까 답은 얼마? 
<Sync Start=1921483><P Class=KRCC>
695가지가 답이 되겠네요. 이렇게요. 괜찮죠? 
<Sync Start=1928490><P Class=KRCC>
이 문제가 지난 시간에 풀었던 문제의 확장판! 조금 더 어려운 그런 문제예요. 
<Sync Start=1935030><P Class=KRCC>
얘는 잔여 구슬이라는 걸로 표현을 바꿨을 뿐이지 그냥 이미 1개를 갖고 있는 주머니가 있다. 
<Sync Start=1942142><P Class=KRCC>
이거랑 똑같은 거예요. 이게 1개를 필수로 갖는 주머니가 있더라. 
<Sync Start=1953090><P Class=KRCC>
시작부터 체크를 해놓으면 훨씬 편하게 풀리는 거죠. 
<Sync Start=1959160><P Class=KRCC>
근데 이걸 진짜 우리나라 표현대로 남는 구슬? 
<Sync Start=1962706><P Class=KRCC>
그럼 남는 구슬이니까 1개일 때, 2개일 때, 3개일 때 케이스 분류해야지. 
<Sync Start=1967173><P Class=KRCC>
도전은 좋지만 목표에 다다를 수 없는 도전이다. 
<Sync Start=1972428><P Class=KRCC>
그래서 이런 식으로 뭔가 표현을 좀 쉽게 쉽게 바꿔서요. 계산식도 심플하게! 
<Sync Start=1977890><P Class=KRCC>
그러니까 '방정식으로 풀어라'는 아니지만 방정식으로 구성이 되잖아요. 
<Sync Start=1982210><P Class=KRCC>
그러니까 이 아이디어가 정말 중요한 거라고요, 중복조합은. 
<Sync Start=1985890><P Class=KRCC>
그래서 이 연습 충분히 하셔야 됩니다. 정말 충분히! 됐나요? 하나 더 풀어볼게요. 
<Sync Start=1993136><P Class=KRCC>
이것도 또 어려웠던 문제인데 {-3, -2, -1, 1, 2, 3}에 대하여 
<Sync Start=2000529><P Class=KRCC>
다음 조건을 만족시키는 X에서 X로 가는 개수를 구하여라. 
<Sync Start=2004552><P Class=KRCC>
절댓값이 나오면 이제 심장이 바운스, 바운스 하는데 
<Sync Start=2009111><P Class=KRCC>
X의 임의의 두 원소 x1, x2에 대하여 이거를 만족한대요. 
<Sync Start=2012666><P Class=KRCC>
근데 저게 절댓값만 아니면 좋겠어. 그러면 이제 중복조합이잖아요. 
<Sync Start=2017156><P Class=KRCC>
그러니까 그냥 얘를 편하게 절댓값 f(x)라고 하는 거를 g(x)로 바꿉니다. 괜찮죠? 
<Sync Start=2027369><P Class=KRCC>
g(x)로 바꿔놓으면 이렇게 되지 않아요? 
<Sync Start=2030392><P Class=KRCC>
얘는 임의의 두 원소 x1, x2에 대하여 x1보다 x2가 크다면, 아이고. 습관이 무서워요. 
<Sync Start=2038139><P Class=KRCC>
g(x1)보다 g(x2)가 크거나 같습니다. 그럼 중복조합이라는 얘기예요. 
<Sync Start=2046875><P Class=KRCC>
선생님, 그러면 g(x)의 값은요? g(x)의 값은 f(x)에 절댓값 씌우면 되는 거니까. 
<Sync Start=2052427><P Class=KRCC>
그냥 얘는요. 1, 2, 3 중에서 하나예요. 
<Sync Start=2056645><P Class=KRCC>
-3, -2, -1이지만 절댓값 씌우면 1, 2, 3으로 다 바뀔 거 아니에요? 
<Sync Start=2061914><P Class=KRCC>
그러니까 그냥 1, 2, 3으로 가능한 것들로 체크하면 되는 거다. 괜찮죠? 
<Sync Start=2068219><P Class=KRCC>
그럼 (나), 함수 f(x), 즉 이것도 바꿔요. 이것도 뭐로 바꿔? g(x)로 바꿔요. 
<Sync Start=2075663><P Class=KRCC>
아! g(x)의 최댓값은 3이구나. 그러면 함숫값 최댓값이 3이 된다는 얘기는 
<Sync Start=2082000><P Class=KRCC>
어쨌든 선택을 받는 거고, 여기에 -3, -2, -1, 1, 2, 3이 있고요. 
<Sync Start=2091550><P Class=KRCC>
여기에, Y라고 그냥 할게요. 1, 2, 3이 있습니다. 
<Sync Start=2097652><P Class=KRCC>
그러면 이 친구가 선택이 돼야 돼, 무조건. 그렇죠? 
<Sync Start=2102065><P Class=KRCC>
그럼 최댓값을 선택할 수 있는 거는 뭐밖에 없어요? 
<Sync Start=2106185><P Class=KRCC>
물론 다른 것도 선택할 수 있긴 하겠지만 얘는 무조건 여기로밖에는 못 가요. 무조건. 
<Sync Start=2113741><P Class=KRCC>
왜? 이 전에 있는 것들이 얘로 가버리면 얘는 무조건 여기로 가야 되고요. 
<Sync Start=2119259><P Class=KRCC>
얘가 만약에 여기로 가더라도 이 친구는 얘로 가야 최댓값이 3이라는 걸 만족을 한다고요. 
<Sync Start=2126034><P Class=KRCC>
그렇죠? 그러니까 결국 아! g(3)이 3이구나, 라는 뜻입니다, 저게. 괜찮죠? 
<Sync Start=2135701><P Class=KRCC>
그럼 나머지만 체크해 볼까? 이 3개 중에 중복을 허용해 몇 개를 뽑으면 되겠다? 
<Sync Start=2141266><P Class=KRCC>
하나, 둘, 셋, 넷, 5개를 뽑으면 되겠다. 3H5의 형태가 가면 될 겁니다. 
<Sync Start=2150394><P Class=KRCC>
선생님! 그래도 여기 있는 거 마이너스, 여기 원래는 마이너스가 있어야 되는 거잖아요. 
<Sync Start=2155224><P Class=KRCC>
f(x)니까. 그건 나중 문제예요. 마지막에 체크해 주면 됩니다. 볼까요? 얼마예요? 
<Sync Start=2162826><P Class=KRCC>
7C2가 될 거거든요. 그러면 21입니다. 그러면 이 21가지가 뭐냐면, 
<Sync Start=2169429><P Class=KRCC>
g(x)로 가정했을 때 함수의 종류의 개수예요. g(3)이 3이면서. 
<Sync Start=2176292><P Class=KRCC>
근데 우리가 원하는 건 뭐야? 여러분 말대로 절댓값이 있는 상태였잖아요, 저게. 
<Sync Start=2182161><P Class=KRCC>
그러니까 실제 f(x1)과 f(x2)라고 하는 건 저거의 값들은 음수일 수도 있겠다. 
<Sync Start=2189030><P Class=KRCC>
근데 뭐가 음수여야 하고 뭐가 양수여야 한다는 제한 조건은 없죠. 그냥 이런 거예요. 
<Sync Start=2194460><P Class=KRCC>
예를 들어 이 친구가 2로 갔어요. 그럼 이 말은 뭐냐면, 
<Sync Start=2199560><P Class=KRCC>
'아! 얘는 실제 -2일 수도 있고요. 2일 수도 있습니다.'라는 뜻이에요. 얘도 마찬가지! 
<Sync Start=2207217><P Class=KRCC>
3이 여기로 가야 된다고 하는 건 절댓값의 값이 3이라는 거지 
<Sync Start=2211147><P Class=KRCC>
실제로는 -3일 수도 있고요. 3일 수도 있는 겁니다. 
<Sync Start=2215991><P Class=KRCC>
그 말은 결국 여기에서 간 함숫값들은 다 몇 가지의 경우의 수가 생기는 거다? 
<Sync Start=2223230><P Class=KRCC>
2가지씩 생기는 거다. 그러니까 이 친구도 선택한 거에서 2가지 경우가 생길 거고요. 
<Sync Start=2228420><P Class=KRCC>
얘도 2가지, 얘도 2가지, 그러니까 이게 몇 제곱? 6제곱. 나중에 곱해줘야 됩니다. 그렇죠? 
<Sync Start=2236110><P Class=KRCC>
그러면 64에다가, 얼마예요? 21 곱할까요? 그럼 4에다가, 6에다가요. 8. 12. 
<Sync Start=2244860><P Class=KRCC>
그러면 1344라고 해서 답은 ⑤번, 이렇게 가겠네요. 그렇죠? 
<Sync Start=2254460><P Class=KRCC>
BOGO 문제 1번이랑 2번 문제의 가장 큰 특징은, 
<Sync Start=2258485><P Class=KRCC>
1번 문제 같은 경우는 뭔가 이하일 때, 뭔가 이상이 될 때, 크기의 제한이 걸릴 때, 
<Sync Start=2264108><P Class=KRCC>
그들을 먼저 제외시켜 놓고선 여사건의 형태, 여집합의 형태로 풀어나가는 거고요. 
<Sync Start=2269160><P Class=KRCC>
이 BOGO 문제 2번은 사실 작년에도 좀 되게 신선하다고 느꼈던 건데 
<Sync Start=2274051><P Class=KRCC>
절댓값이 나왔기 때문에 여러분이 어렵게 느끼지만 사실은, 
<Sync Start=2279944><P Class=KRCC>
하나만 절댓값이 있으면 진짜 어려울 수 있거든요. 
<Sync Start=2283278><P Class=KRCC>
2개가 다 절댓값이 있기 때문에 이 친구는 그냥 하나로 새로운 함수를 만들면 되는 거예요. 
<Sync Start=2288730><P Class=KRCC>
그렇게 하면 부등호는 그냥 유지가 될 거니까, 
<Sync Start=2291330><P Class=KRCC>
g(x1)과 g(x2)가 다음 부등호처럼 연결이 되면 그냥 얘는 중복조합이구나. 
<Sync Start=2298370><P Class=KRCC>
그러니까 여러분이 이걸 풀 때, 솔직히 그렇죠. 
<Sync Start=2301500><P Class=KRCC>
작년에도 이 문제 딱 보자마자 거의 대부분 친구들이 멘붕이 왔을 겁니다. 
<Sync Start=2306423><P Class=KRCC>
기존에 있던 중복조합 문제랑 유사하게 보이는데 그리고 중복조합 단원에 있는데 
<Sync Start=2311472><P Class=KRCC>
절댓값이 나와서 왜 날 괴롭히나? 절댓값은 항상 날 괴롭히기 위한 존재예요. 
<Sync Start=2318389><P Class=KRCC>
함수 중에서 절댓값이 같이 나온 것 중에 쉽게 풀리는 문제는 거의 없거든요. 
<Sync Start=2325121><P Class=KRCC>
그게 수능에 항상 나오기도 하고. 그러니까 거의 저거 처음 보면 멘붕이 왔을 건데, 
<Sync Start=2331366><P Class=KRCC>
생각을 해보세요. 처음 배우는 거를 여러분한테 정말 
<Sync Start=2335644><P Class=KRCC>
완벽하게 100% 처음 배우는 개념을 이용한 문제는 내지 않습니다. 
<Sync Start=2340455><P Class=KRCC>
그럼 이 형태면 어느 정도 중복조합이라는 힌트는 얻을 거고요. 
<Sync Start=2344429><P Class=KRCC>
그리고 여러분이 이걸 뭐 절댓값 있으나 없으나 그냥 내가 내 눈에서 어려울 뿐이지, 
<Sync Start=2352440><P Class=KRCC>
그냥 저걸 g(x)로 바꾸면 편하겠다. 그러니까 같은 개념인데 어떻게 한 거예요? 
<Sync Start=2359440><P Class=KRCC>
다른 표현으로 한 거예요. 그러니까 문제 자체가 어려워지는 그 포인트는 
<Sync Start=2367120><P Class=KRCC>
표현법이라는 겁니다, 결국은. 그래서 이 표현도 낯설겠지만 한번 익혀두시고요. 
<Sync Start=2373041><P Class=KRCC>
작년 선배들도 이거에 대해서 좀 한번 익혀두고 준비를 하니까 
<Sync Start=2377496><P Class=KRCC>
혹시나 이게 유사한 게 나오면 좀 대처할 수 있는 능력이 생기는 거지, 
<Sync Start=2381396><P Class=KRCC>
이걸 한 번도 안 보고 만약에 시험장에서 맞닥뜨린다. 
<Sync Start=2384947><P Class=KRCC>
그게 학평이나 모의평가면 다행이죠. 수능에서 맞닥뜨린다 그러면 이제 어려워지는 거거든요. 
<Sync Start=2391662><P Class=KRCC>
그러니까 이런 유사한 개념이 나와도 마찬가지야. 이거랑 완벽히 똑같이 안 나오겠죠. 
<Sync Start=2396810><P Class=KRCC>
그래도 절댓값이 씌워져 있는 형태로 함수의 개수를 구하는 문제가 약간 활용돼서 나온다면 
<Sync Start=2402135><P Class=KRCC>
그래도 여러분이 알고 있는 지식이 여러 개가 있기 때문에 
<Sync Start=2404645><P Class=KRCC>
그중에서 하나 꺼내서 쓰면 되는 거예요. 그래서 이 문제! 좋은 문제입니다. 
<Sync Start=2410222><P Class=KRCC>
저는 개인적으로 되게 좋게 보거든요. 2번이었고요. 마지막 3번! 
<Sync Start=2414950><P Class=KRCC>
얘는 이제 이항계수, 이항정리 파트에서 꺼내왔고요. 
<Sync Start=2418350><P Class=KRCC>
아무리 level 3으로 구성을 하려고 해도 한계가 있습니다. 
<Sync Start=2423927><P Class=KRCC>
그래서 얘는 사실 작년 level 2 수준에 있던 문제인데 
<Sync Start=2428398><P Class=KRCC>
제가 올해 level 3쪽에다가 그래도 골고루 개념을 이제 배치를 했고요. 
<Sync Start=2433522><P Class=KRCC>
다항식 (x + 4제곱근2), 거기의 6제곱의 전개식에서 '계수가 유리수인'이라고 했습니다. 
<Sync Start=2439504><P Class=KRCC>
유리수인. 항의 계수의 총합을 구하여라. 
<Sync Start=2443208><P Class=KRCC>
유리수인! 자연수인, 정수인, 이런 거 나올 수 있는데 유리수인 건 또 낯설죠. 
<Sync Start=2448094><P Class=KRCC>
근호가 나오기도 했고. 그럼 여기에 있는 걸 나누시면 돼요. 일단 문제가 되는 건 뭐예요? 
<Sync Start=2454374><P Class=KRCC>
그렇죠. 근호. 4제곱근. 그럼 저 4제곱근만 처리해 주면 되겠다. 
<Sync Start=2458700><P Class=KRCC>
그래서 이렇게 풀었을 겁니다. 대부분! 6개 중에서 2개 가져가고요. x의 4제곱. x². 
<Sync Start=2467710><P Class=KRCC>
그리고 4제곱근2의 4제곱. 그러면 이제 4제곱근은 없어질 거니까. 
<Sync Start=2474610><P Class=KRCC>
그럼 얘는 15가 될 거고 그다음에 여기 있는 거는 2가 될 거고요. 
<Sync Start=2478369><P Class=KRCC>
그리고 여기 있는 거는 x²이 될 겁니다. 
<Sync Start=2482087><P Class=KRCC>
그러면 여기에 있는 거는, 계수가 되는 거는 이거 딱 하나겠다. 30이라고 하는 거. 
<Sync Start=2489269><P Class=KRCC>
그러면 이제 여기에서 객관식이니까 답이 없으니까 
<Sync Start=2492046><P Class=KRCC>
이거 문제가 있구나, 이렇게 판단할 수 있겠지만 실제 아니죠. 이거 말고도 또 있습니다. 
<Sync Start=2497675><P Class=KRCC>
어떤 게 있죠? 그렇죠. 여기 자체가 없어지는 게 있겠죠. 
<Sync Start=2502140><P Class=KRCC>
그러니까 저걸 만약에 전체적으로 전개를 해보면 6C0부터 시작을 해서요. 
<Sync Start=2506200><P Class=KRCC>
6C1, 6C2, 쭉 가서 6C6까지 갈 거예요. 근데 내가 x를 기준으로 삼는다면, 
<Sync Start=2512783><P Class=KRCC>
x의 0제곱, x의 1제곱, x의 6제곱, 이렇게 갈 겁니다. 
<Sync Start=2518039><P Class=KRCC>
그러면 나머지 뒤에 있는 항은 어때요? 여기 있는 건 4제곱근2에다가 6제곱이 될 거고요. 
<Sync Start=2523047><P Class=KRCC>
5제곱, 4제곱, 쭉 갈 건데 여기 있는 거! 4제곱근 2라고 하는 게 0제곱이다. 그렇죠? 
<Sync Start=2529489><P Class=KRCC>
그러니까 얘가 얼마가 돼야 돼? 1이 돼야 되겠죠. 
<Sync Start=2532896><P Class=KRCC>
얘를 빠뜨려서 틀리는 친구들이 꽤 있습니다. 
<Sync Start=2535193><P Class=KRCC>
그래서 이거에 대한 건 이것과 그다음에 어떤 거? 이거까지 해서요. 31. 
<Sync Start=2542210><P Class=KRCC>
이렇게 구해주시면 되겠죠. 됐나요? 그래서 유리수인 것들을 딱 찾아라! 
<Sync Start=2548047><P Class=KRCC>
그러면 이제 4제곱근이나 3제곱근이나 이런 것들이 됐을 때 
<Sync Start=2551238><P Class=KRCC>
그냥 빠르게 여러분이 그것만 없애주는 형태로만 구할 수 있는데, 
<Sync Start=2555111><P Class=KRCC>
나머지들에 대한 것도 꼭 고려를 해서 그 자체가 없어지는 것도 
<Sync Start=2558847><P Class=KRCC>
한 번쯤은 생각을 해봐야 될 것 같습니다. 
<Sync Start=2560824><P Class=KRCC>
이게 그러니까 이항계수 파트에서 어렵게 나올 법한 게 거의 없어요. 
<Sync Start=2566240><P Class=KRCC>
사실 level 2가 올해 2024 문제에서 난도 높게 출제됐었잖아요. 
<Sync Start=2571680><P Class=KRCC>
그러니까 그 문제들 빼고는, 작년에 있던 교재들도 마찬가지고요. 
<Sync Start=2576170><P Class=KRCC>
이항계수나 이항정리 파트는 어렵게 내려야 낼 수 없습니다. 
<Sync Start=2579400><P Class=KRCC>
level 3은 아예 애초에 없어요, 이것도. 빠져있는 겁니다. 
<Sync Start=2583482><P Class=KRCC>
그래서 제가 일부러 이제 이걸 구성할 때도 level 2에 있는 걸로 갖고 오기는 했는데 
<Sync Start=2588904><P Class=KRCC>
여러분의 수준에는 앞에 있는 level 3 풀다가 
<Sync Start=2591960><P Class=KRCC>
이거 푸니까 약간 조금 더 쉽게 느끼기는 했겠죠. 
<Sync Start=2596040><P Class=KRCC>
그래서 이것들은 어느 정도 좀 보완을 해서 그냥 기본적인 문제 나오겠다는 생각으로 
<Sync Start=2603025><P Class=KRCC>
좀 약간 편하게 생각하시면 될 것 같습니다. 
<Sync Start=2606046><P Class=KRCC>
그래서 이렇게 하면 level 3까지가 다 끝났고요. 
<Sync Start=2608972><P Class=KRCC>
그래서 여러분, 이번에 중복조합과 이항정리는 워낙 또 출제가 많이 되는 것이기 때문에 
<Sync Start=2614125><P Class=KRCC>
간단하게 좀 중요하게 우리가 문제 풀면서 포인트가 됐던 것들만 짚고요. 
<Sync Start=2618679><P Class=KRCC>
그리고선 이제 단원 마무리를 하는 걸로 가겠습니다. 
<Sync Start=2622430><P Class=KRCC>
잠깐 한번 보시면, 중복조합에서 제일 많이 나오는 게 뭐였죠? 함수였습니다. 함수. 그렇죠? 
<Sync Start=2629524><P Class=KRCC>
그래서 함수의 종류의 개수를 구하는 문제에서 가장 많이 힌트로 나왔던 게 
<Sync Start=2633827><P Class=KRCC>
임의의 두 원소에 대하여 x1보다 x2가 클 때 f(x1)과 f(x2)라고 하는 관계식, 
<Sync Start=2641626><P Class=KRCC>
그러니까 이게 나오면 그냥 거의 100% 중복조합이라고 보시면 되고요. 
<Sync Start=2646809><P Class=KRCC>
여기에서 파생됐던 우리가 풀었던 문제 중에서 기억해야 될 게 첫 번째 거! 
<Sync Start=2651404><P Class=KRCC>
방금 했던 것부터 기억을 해볼까요? 우리 절댓값으로 나온 것도 어떻다? 문제없다. 
<Sync Start=2656933><P Class=KRCC>
이렇게 된 것도. 그렇죠? 얘도 뭐로만 치환하면 돼? g(x)로 치환하면 끝나는 거라고요. 
<Sync Start=2664178><P Class=KRCC>
g(x1), g(x2)로. 그러니까 결국은 같은 얘기! 두 번째. 
<Sync Start=2670653><P Class=KRCC>
우리가 지난 시간에 했던 것이기는 한데 x1과 x2일 때 
<Sync Start=2675002><P Class=KRCC>
f(x1)과 f(x2)의 관계를 준 게 아니라요. 이런 식으로 준 겁니다. 
<Sync Start=2678559><P Class=KRCC>
f(x1)과 f(x2)와 f(x3)입니다. 이렇게 그냥 한 줄로만 문구를 딱 줘도, 
<Sync Start=2687361><P Class=KRCC>
아! 이거는 중복조합이구나. 이렇게 판단하셔야 돼요. 
<Sync Start=2692510><P Class=KRCC>
그래서 이거는 어느 정도는 맞힐 수 있을 거라는 생각이 드는데, 
<Sync Start=2695550><P Class=KRCC>
그래도 한 번 보고 푸는 거랑 처음 보는 거랑 또 다르죠. 
<Sync Start=2699495><P Class=KRCC>
그다음에 사실은 이게 우리 중복조합에서 포인트였던 건데, 뭐였죠? 그렇죠. 
<Sync Start=2704591><P Class=KRCC>
작년 거였는데 어떤 x1과 x2에 대하여 이 친구가 이렇게 된다면, 
<Sync Start=2713518><P Class=KRCC>
이때 f(x1)하고 그다음에 f(x2)라고 하는 게 이렇게 되더라. 
<Sync Start=2720009><P Class=KRCC>
그럼 이걸 그냥 일반적인 조합으로 생각하면 돼요? 안 돼요? 안 된다고요. 
<Sync Start=2723730><P Class=KRCC>
이 친구가 '어떤'이기 때문에 이 친구는 임의의 두 원소랑은 완전히 다른 차원이다. 
<Sync Start=2730532><P Class=KRCC>
얘는 특정되어 있는 거다. 그래서 이 문제는 어떻게 풀었죠? 그렇죠. 
<Sync Start=2736471><P Class=KRCC>
얘와 반대되는 걸 썼다. 그래서 임의의 두 원소 x1, x2에 대하여 
<Sync Start=2742951><P Class=KRCC>
얘하고 반대되는 거였으니까 f(x1)하고요. f(x2)라고 하는 형태로 가는 거였습니다. 
<Sync Start=2749754><P Class=KRCC>
그러니까 이 방향에 대한 것은 문제없어요. 우리가 중복조합을 할 때. 
<Sync Start=2753294><P Class=KRCC>
그러니까 거꾸로만 가면 되는 거지, 이 친구가 같은 방향이나 다른 방향이나 
<Sync Start=2757220><P Class=KRCC>
이거는 전혀 문제가 안 된다고요. 그래서 이 상태로 풀게 되면 어떤 특정한 거였기 때문에 
<Sync Start=2763100><P Class=KRCC>
이거하고 반대도 임의의 두 원소, 그다음에 이거 크기순은 어차피 상관이 없고요. 
<Sync Start=2768190><P Class=KRCC>
이것도 반대로 됐기 때문에 우리가 그냥 딱 얘는 중복조합으로 해결이 가능하다. 
<Sync Start=2776190><P Class=KRCC>
이렇게 보시면 됩니다. 됐죠? 이게 가장 큰 포인트 중의 하나였고요. 이게 첫 번째 거! 
<Sync Start=2782060><P Class=KRCC>
그다음에 2가지만 하면 될 것 같은데, 이 두 번째 게 방정식이었죠. 방정식. 
<Sync Start=2788900><P Class=KRCC>
이 방정식의 해를 이용해서 문제를 푸는 건 무조건 음아정 세팅이 중요합니다. 
<Sync Start=2796170><P Class=KRCC>

<Sync Start=2798570><P Class=KRCC>
무슨 소리예요? 방정식을 어쨌든 막 길게 세웠어요. 
<Sync Start=2802044><P Class=KRCC>
근데 이 친구들의 형태가 무조건 0부터 시작하는 형태로 가야 된다. 
<Sync Start=2806887><P Class=KRCC>
그래야 얘가 중복조합으로 계산이 가능하기 때문에. 그러니까 우리 이거 구분해 볼까요? 
<Sync Start=2814654><P Class=KRCC>
가장 쉽게 나왔던 거! 이거하고, 이 2개를 표현할 때 얘는 0 포함하는 거고요. 
<Sync Start=2823259><P Class=KRCC>
얘는 자연수만입니다. 그럼 어떻게 해야 돼요? 얘는 2에다가요. 
<Sync Start=2827062><P Class=KRCC>
x라고 한다면 x′까지만 하면 끝나요. 얘! 왜? 0부터 시작하라니까요. 
<Sync Start=2833653><P Class=KRCC>
그럼 0 넣었을 때 0 나오고요. 1 넣으면 2 나오고요. 2 넣으면 4 나와요. 그렇죠? 
<Sync Start=2837739><P Class=KRCC>
얘는 2x′+2를 해줘야 돼요. 왜? 얘는 0부터라니까! 0+2, 2+2. 
<Sync Start=2845533><P Class=KRCC>
그러면 2, 4, 6, 이렇게 가겠죠? 그래서 이 2가지의 세팅 형태만 구분을 하시면 
<Sync Start=2851465><P Class=KRCC>
거의 대부분의 방정식 문제들은 잘 해결이 될 겁니다. 
<Sync Start=2855080><P Class=KRCC>
그리고 여기에 덧붙이자면 '~이하'인 조건들이 있었죠? 
<Sync Start=2858260><P Class=KRCC>
그거는 나머지들, 우리가 필요 없는 것들을 이용해서 제외시켜 놓고 풀면 되겠다. 그렇죠? 
<Sync Start=2863920><P Class=KRCC>
그래서 level 3까지 다 풀어봤고요. 이제 수능완성 문제들만 나중에 연계교재로 풀어보시면 
<Sync Start=2869540><P Class=KRCC>
충분히 도움이 될 겁니다. 고생 많이 하셨고요. 
<Sync Start=2872030><P Class=KRCC>
오늘도 level 3에 있던 문제를 퀴즈로 갖고 왔습니다. 좀 어렵긴 할 텐데, 
<Sync Start=2875998><P Class=KRCC>
한번 풀어보시고 충분히 고민해 보신 다음에 후기에 올려주시면 될 것 같습니다. 
<Sync Start=2881083><P Class=KRCC>
전 다음 시간에 더 알찬 내용으로 여러분을 찾아뵙도록 할게요. 수고하셨습니다. 
</BODY>
</SAMI>
