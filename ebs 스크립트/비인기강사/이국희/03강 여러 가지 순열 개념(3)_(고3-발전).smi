<SAMI>
<HEAD>
<TITLE>(주)기록법인상생 자막 2019</TITLE>
<STYLE TYPE="text/css">
<!--
P { margin-left:8pt; margin-right:8pt; margin-bottom:2pt;
    margin-top:2pt; font-size:12pt; text-align:left;
    font-family:굴림, Arial; font-weight:normal; color:white;
    background-color:#405A8D; }
.KRCC { Name:한국어; lang:ko-KR; SAMIType:CC; }
#STDPrn { Name:Standard Print; }
#LargePrn { Name:Large Print; font-size:20pt; }
#SmallPrn { Name:Small Print; font-size:10pt; }
-->
</STYLE>
</HEAD>
<BODY>
<SYNC Start=11573><P Class=KRCC>
만점의 기쁨을 함께하겠습니다. 2023 수능특강 확률과 통계, 함께하고 있는 저는 이국희입니다. 여러분, 비행기 타시면요. 가끔 이렇게 흔들릴 때도 있고요. 가끔 되게 막 걱정될 때도 있지요.
<SYNC Start=26797><P Class=KRCC>
실제 비행기 운항을 하면요. 99%는 예상된 궤도를 벗어나 있다고 합니다. 그러니까 우리 생각할 때는 처음에 비행기가 2시에 출발해서 5시에 도착을 한다, 이렇게 예상 시간을 말해 주잖아요.
<SYNC Start=41228><P Class=KRCC>
3시간 정도 걸린다, 그러면 ‘이게 궤도에 따라서 쭉 움직이기 때문에 3시간 동안 딱 걸리겠구나.’라고 생각을 하고 중간에 흔들릴 때 ‘이럴 때만 약간 궤도에서 벗어났구나.’라고 인지를 하잖아요.
<SYNC Start=54630><P Class=KRCC>
그런데 아니에요. 실제로 비행기는 99%가 빗겨 가 있고요. 그것을 궤도에 맞추는 게 조종사의 역할이라고 합니다. 그러니까 어떻게 보면 우리가 계획을 세우고요.
<SYNC Start=67437><P Class=KRCC>
그 계획을 세워서 공부를 할 때 100% 맞아떨어지지 않는다니까요. 그것은 당연히 인정을 하셔야 돼요. 내가 좌절할 때도 있고요. 내가 생각한 것보다 성적이 안 나올 때도 있고요.
<SYNC Start=78760><P Class=KRCC>
실망할 때도 있고요. 자연스러운 현상이에요. 그런데 여러분들이 바라보고 있는 이 목표에 대한 방향성은 명확하게 하셔야 되는 겁니다.
<SYNC Start=87069><P Class=KRCC>
내가 중간에 넘어지고 내가 계획한 것보다 시간이 조금 늦춰지는 것 같고, 이런 생각이 들 수 있는데 그런 순간순간 조급해 하는 마음이 여러분들을 불안하게 할 건데요. 그것보다요.
<SYNC Start=98218><P Class=KRCC>
‘나는 그래도 제대로 된 방향으로 가고 있구나.’ 아니면 ‘방향으로 가고 있나?’라는 것을 끊임없이 그냥 계속 고민해 보시면 될 것 같습니다.
<SYNC Start=107220><P Class=KRCC>
내가 지금 당장 슬럼프에 빠졌다, 이게 중요한 게 아니라 내가 과연 올바른 길로 가고 있느냐? 비행기가 예상된 시간으로 3시간 동안 이렇게 운항을 할 거라고 하는데 궤도에서는 99% 벗어나 있지요.
<SYNC Start=119014><P Class=KRCC>
그런데 신기하게도 실제 도착하는 건 거의 비슷하게 도착을 합니다. 그러니까 결국은 방향성이 중요한 거예요. 저하고 지금 같이 하고 있는 이 수능특강 강좌도요.
<SYNC Start=129404><P Class=KRCC>
여러분들이 지금 이 문제를 풀고, 그다음에 맞혔다, 틀렸다. 그리고 내가 이쪽 개념이 부족하니까 이것을 어떻게 공부하지? 이런 것에 초점을 두기보다는, 물론 중요합니다.
<SYNC Start=139531><P Class=KRCC>
그것보다는 내가 이 연계교재를 공부할 때 어떤 식으로 공부를 할 거냐, 그리고 이 연계교재를 통해서 내가 어떤 것을 얻을 거냐, 이 방향성을 정확하게 인지하고 가는 게 중요할 것 같아요.
<SYNC Start=150432><P Class=KRCC>
그 방향성은 제가 안내할 겁니다. 그러니까 제가 적절하게 여러분들을 이끌어 갈 거니까 여러분들은 그것에 맞춰서 성실하게만 따라와 주시면 될 것 같아요. 알겠지요?
<SYNC Start=161395><P Class=KRCC>
오늘 강의도 열심히 들어 주시고, 개념 강좌 여러 가지 순열에서 마지막 시간입니다. 3시간 동안 공부한 것 이제 다음 시간부터는 문제 풀이로 쭉 연습을 할 거고
<SYNC Start=169821><P Class=KRCC>
그다음에 Level 3 같은 경우에서는 실제 수능에서는 어떤 식으로 출제가 될지에 대한 얘기도 좀 해 볼 건데 철저하게 공부하셔야 되고요.
<SYNC Start=177476><P Class=KRCC>
지금 예제하고 유제 다 풀었다고 해서 또 방심하시면 안 됩니다. 지금 하고 있는 것은 기본 베이스 다 맞아야 되는 거예요. 그리고 우리의 목표는 뭐라고 했지요?
<SYNC Start=185551><P Class=KRCC>
만점입니다. 제가 항상 인사 때 말씀드리잖아요. 제가 한번도 EBS 강좌를 할 때 만점을 함께하겠다는 말, 이런 말 안 했거든요. 그런데 이번 강좌는 달라요. 여러분과 함께 만점을 할 겁니다.
<SYNC Start=197417><P Class=KRCC>
그러니까 정확하고 꼼꼼하게 공부하시기 바라요. 일단 같은 것이 있는 순열은요. 수능에 출제된 지 좀 됐습니다. 2019년에 시행한 시험 때 한번 출제가 됐고요.
<SYNC Start=209597><P Class=KRCC>
그 뒤로는 6월 달 정도에서 계속 출제가 되고 있는데 출제 요소가 오히려 앞에 있는 것보다는 조금 틀이 정해져 있어요.
<SYNC Start=218149><P Class=KRCC>
그렇다 보니까 수능이나 이런 데에서 좀 출제하기에는 부담스러운 게 없지 않아 있겠지요. 그래도 여러분들이 지금까지 나와 있던 그 틀, 패턴을 어느 정도 이해할 필요가 있고,
<SYNC Start=227685><P Class=KRCC>
제가 그것에 맞춰서 개념 설명을 좀 쭉 해 볼 겁니다. 일단 같은 것이 있는 순열이라는 것은 이런 식의 이해를 하면 좋을 것 같아요. a, a, b, c, 이 정도 4개만 한번 갖고 놀아 볼까요?
<SYNC Start=242108><P Class=KRCC>
그러면 이 a, a, b, c를 갖다가 제가 나열을 할 겁니다. 그러면 이런 경우가 있겠지요. a, a, c, b. 그다음에 a, b, a, c, 이런 게 있을 거고요. 굉장히 좀 많아 보이지요.
<SYNC Start=257597><P Class=KRCC>
그런데 같은 게 들어가니까 되게 헷갈린다고요. 그러니까 사람들이 어떻게 생각을 하냐? ‘이것 그냥 다른 거라고 생각을 해 보자.’ 그래서 a의 1번, a의 2번, 그리고 b하고 c,
<SYNC Start=267481><P Class=KRCC>
이 4개를 한번 나열을 해 보자는 겁니다. 이것 나열하면 몇 팩? 4!이지요, 서로 다른 4개를 줄 세우는 거니까.
<SYNC Start=276349><P Class=KRCC>
그런데 약간 원순열하고 좀 비슷하게 느낄 수 있는데 서로 다른 4개를 가지고 줄을 세웠는데 그중의 a의 1과 a의 2는 사실 같은 거라고요.
<SYNC Start=287718><P Class=KRCC>
그런데 얘들끼리 자리 바꾼 것은 같은 것으로 인지할 수 있겠지요. 그러니까 이것을 나눠 줍니다, 뭐로요? 2!로 나눠 주면 돼요. 이것을 제가 수능개념 때 어떻게 설명을 했냐면, 이렇게 했지요.
<SYNC Start=299476><P Class=KRCC>
우리 간단하게 보고 갈 거예요. 여기에 하얀 분필이 이렇게 있고요. 여기에 빨간색 분필이 이렇게 있습니다. 하나, 둘, 이렇게. 그런데 이 빨간색 분필에는요. 홀더가 끼워 있는 거야, 하나는.
<SYNC Start=317949><P Class=KRCC>
그럼 얘는 서로 다른 3개를 배열하는 것하고 똑같아요. 여기에 있는 것 a이고 여기에 있는 것 b라고 하고 여기에 있는 것 c라고 한번 해 보자.
<SYNC Start=324035><P Class=KRCC>
그러면 결국은 a, b, c를 3개로 배열하는 거니까 이것 경우 한번 나눠 볼까요? 분필 아깝지만, 그래도 편하게 하려면 이렇게 부숴야 됩니다. a 이렇게 하고요. 그다음에 b 여기에 있고 여기에 있다.
<SYNC Start=340023><P Class=KRCC>
위의 것과 좀 차이점은 뭐예요? 그렇지요. 홀더가 여기 있는 겁니다. 이것 당연히 다른 거지요, 이것하고 이것. 돼요? 그다음 이제 하얀색이 여기에 와요.
<SYNC Start=349983><P Class=KRCC>
그다음에 빨간색이 여기에 오고 여기에 옵니다. 그다음에 여기에 홀더가 하나 끼워 있고요. 또 똑같은 경우처럼 보이지만, 빨간색과 빨간색이 여기에 있는데 여기에 하얀색이 이렇게 있고요.
<SYNC Start=364655><P Class=KRCC>
이번에는 홀더가 여기에 있는 거야. 되세요? 하얀색이 이번에는 여기 끝으로 갑니다. 이것 한 번에 그릴까, 이렇게. 그리고 빨간색 분필이 여기에, 여기에 이렇게 있습니다. 여기에 이렇게 오고요.
<SYNC Start=379886><P Class=KRCC>
이 상태에서 홀더를 끼게 되면 여기에 홀더 낀 게 오고요. 그다음에 홀더 낀 게 이쪽에 오겠지요. 사실 서로 다른 3개를 갖다 줄 세우게 되면 3!이기 때문에 3!은 3×2×1 해서 6개가 나와야 돼요.
<SYNC Start=393094><P Class=KRCC>
그런데 이 6개의 종류 중에 내가 이렇게 홀더가 끼워 있는 것을 홀더를 빼 버려요. 그러면 기존에 있던 분필하고 구분이 안 되지요. 결국은 어떤 종류가 되는 거예요? 같은 게 되는 겁니다.
<SYNC Start=408140><P Class=KRCC>
여기에서 홀더를 빼 버릴게요, 이런 식으로. 여기도 홀더를 빼. 그럼 이 친구는 그냥 이렇게 되고 이렇게 되는 거야. 그럼 이거 몇 가지예요? 한 가지 종류예요. 또 여기에 있는 것 홀더 빼고요.
<SYNC Start=424773><P Class=KRCC>
여기에 있는 것 홀더 빼면 결국 빨흰빨, 빨흰빨, 똑같지요? 이것도 한 가지 경우예요. 얘도 빨빨흰, 빨빨흰, 얘도 한 가지 경우가 나올 겁니다. 그럼 이것 전체의 개수가 몇 개가 되는 거냐?
<SYNC Start=439332><P Class=KRCC>
3개가 나온다고요. 그런데 이 3개가 나오는 원리를 수식으로 정리하면 3!, 그냥 일반적인 다른 것으로 인식하고 줄 세우는 것을 쓴 다음에 똑같은 것에 대한 팩토리얼,
<SYNC Start=454614><P Class=KRCC>
똑같은 것들끼리 자리 바꾼 것들로 나눠 주면 끝나는 거라고요, 이렇게 2!로. 그리고 이게 3이 된다는 거지요. 돼요?
<SYNC Start=464195><P Class=KRCC>
그래서 이게 같은 것이 있는 순열에서 제가 예시로 든 건데 이것을 이용해서 이제 문제를 푸는 겁니다. 그래서 결국은 여러분들이 직접 보게 될 것은 이런 거겠지요. 서로 다른 문자 n개.
<SYNC Start=478618><P Class=KRCC>
그런데, 다시. n개 중에, 그런데 이 n개에는 뭐가 포함되어 있냐면 같은 것 p개가 들어 있었어요. 같은 것 q개가 들어 있고요. 같은 것 r개가 들어 있다고 해 볼게요. 즉, 전체 문자의 개수는 n개야.
<SYNC Start=497452><P Class=KRCC>
그런데 a라고 하는 게 p개가 있고요. b라고 하는 게 q개가 있고요. c라고 하는 게 r개가 있는 겁니다. 그러니까 얘는 p+q+r이라고 하는 게 n개가 되는 거다, 이렇게 인지하면 되겠지요.
<SYNC Start=509913><P Class=KRCC>
그럼 이것을 줄 세우는 경우의 수는 어떻게 되느냐? 일단 다 서로 다른 문자라고 생각을 해요. 그럼 얼마? n!. 그다음에 a에 대한 것, 각자 자리 바꾼 것들이 지금 포함되어 있지요?
<SYNC Start=524630><P Class=KRCC>
그런데 그것들이 다 하나라고요. 그러니까 p!로 나눠요. 그다음에 b, 똑같은 게 q개 있는데 걔들이 다 자리 바꾼 것으로 포함되어 있다고요, n!에는.
<SYNC Start=536448><P Class=KRCC>
그러니까 그 친구가 같은 것이기 때문에 그것들끼리 자리 바꾼 것 나눠 줘요. 얘도 r!로 나눠 줘요. 그래서 이게 같은 것이 포함되어 있는 문자의 나열, 이것의 순열의 개수가 이렇게 나오는 거다.
<SYNC Start=553708><P Class=KRCC>
이해가 됐지요? 가장 기본적인 개념이고요. 그런데 이것보다 더 중요한 게 2가지가 있습니다. 첫 번째는 최단 거리 문제예요.
<SYNC Start=569322><P Class=KRCC>
최단 거리 문제가 우리 교재에 뒤에 나오는데 사실 좀 신유형이라고 볼 수는 있는 거예요. 왜냐? 보통 최단 거리는 어느 정도 직관적으로 봤을 때
<SYNC Start=582253><P Class=KRCC>
A에서 C로 갈 때 B를 거쳐 가는 형태의 최단 거리 문제를 내는데 우리 연계교재에서는 약간 거꾸로 가는 형태의 문제를 출제했습니다.
<SYNC Start=591213><P Class=KRCC>
그런데 이게 연계교재에 나왔다는 것은 혹시나 이것을 반영한다고 하면 ‘최단 거리의 문제, 일반적인 우리가 봤던 문제가 아니라 새로운 문제, 새로운 경로에 대한 것으로 물어볼 수 있겠구나.’라고
<SYNC Start=602212><P Class=KRCC>
받아들일 수 있겠지요. 그래서 이따 좀 보긴 할 건데, 어쨌든 최단 거리 문제가 자주 출제가 되고요. 이 문제는 이렇게 보면 됩니다. 가장 정형화되어 있는 것으로 보지요.
<SYNC Start=619434><P Class=KRCC>
A에서 B로 가요. ‘A에서 B로 가는데 최단 거리의 경로의 수를 구하여라.’라고 합니다. 그럼 이 친구는 결국 가는 길의 종류는 2가지밖에 없어요.
<SYNC Start=630454><P Class=KRCC>
이렇게 가는 것 하나랑 그다음에 이렇게 가는 것 하나. 2가지밖에 없다. 어떠한 점에서든지요. 이게 다 얘가 갈 수 있는, 선택을 해야 되는 위치잖아요.
<SYNC Start=648456><P Class=KRCC>
그런데 여기하고 여기 같은 경우는 어쩔 수 없겠지만. 이런 경우에 내가 선택할 수 있는 길은요. 이 2가지 중에 하나밖에 없다고요, 결국.
<SYNC Start=656605><P Class=KRCC>
그러면 내가 A에서 B로 가는데 그냥 아무 경로나 선택을 해서 딱 봤을 때 얘, 오른쪽으로 가는 게 몇 개 필요해요, 무조건?
<SYNC Start=666527><P Class=KRCC>
4개 필요해요. 어쨌든 얘가 이쪽으로 가는 데는 이만큼의 간격이기 때문에 4칸을 가야 된다고요. 그다음에 위로 가는 것도 마찬가지, 얘가 위로 가는 것도 몇 개가 필요합니까? 2개가 필요하지요.
<SYNC Start=681123><P Class=KRCC>
그렇지요? 그러면 결국 이 오른쪽으로 가는 걸 내가 a라고 해 보고 위로 가는 걸 b라고 해 보자고요. 그럼 내가 처음 시작점 자체가 a, b 둘 중의 하나를 선택할 수 있지요.
<SYNC Start=696437><P Class=KRCC>
그러니까 이 상태에서 내가 얘들을 배치하면 되겠구나. 어떻게? a, a, a, a, b, b, 얘들을 줄 세우면 되겠다. 그럼 아무거나 세워 볼게요. 아무거나, 정말.
<SYNC Start=708580><P Class=KRCC>
선생님 머릿속 그대로 그냥, abbaaa, 이렇게 해 보자. 그럼 이것의 뜻이 뭐예요? 오른쪽으로 1칸 가요. b, 위로 올라갔어. 그다음 b, 위로 올라갔어. a, 오른쪽으로 가. a, 오른쪽으로 가.
<SYNC Start=725574><P Class=KRCC>
a, 오른쪽으로 가. B로 가지요. 그렇지요? 다시. baaaba야. b라고 하는 것 위로 가요. 그다음 a라고 하는 것 오른쪽으로 가고 오른쪽으로 가고 오른쪽으로 가요. 그다음에 b야. 위로 가요.
<SYNC Start=739495><P Class=KRCC>
그다음 이렇게 오른쪽으로 가요. 그래도 B로 가네. 결국은 a와 b라고 하는 문자, ‘같은 것이 포함되어 있는 이 문자의 배열의 경우의 수와 내가 A에서부터 B까지 가는 최단 거리의 경로의 수가
<SYNC Start=752600><P Class=KRCC>
똑같겠구나.’라고 인지하는 거고요. 그래서 결국은, 5가 아니지요. 6. 전체 총 경우, 전체 길의 개수 6개, 팩토리얼로 하고 같은 것 4!, 같은 것 2!, 이렇게 하면 끝난다고요. 결국 얼마인데?
<SYNC Start=771226><P Class=KRCC>
6!을 4!로 나누면 6×5=30인데 2로 나누니까 15, 이렇게 되겠지요. 15가지가 되겠다. 돼요? 그다음에 또 이것을 푸는 방법, 한 가지가 더 있지요. 이게 편할 때가 있습니다. 합의 법칙으로 푸는 건데요.
<SYNC Start=785763><P Class=KRCC>
합의 법칙과 그다음에 곱의 법칙. 이것은 사실 중학교 정도에, 초등학교 때부터도 풀 수 있고요. 어떻게 하는 거냐면, 얘가 여기로 간다고 생각을 해 볼게요. 그럼 여기로 가는 것 몇 가지 경우예요?
<SYNC Start=801552><P Class=KRCC>
한 가지 경우이고요. 여기에 왔어. 그런데 얘가 이리로 가는 것도 한 가지 경우밖에 안돼요. 그렇지요? 좀 지우고 할까? 이렇게 지우고 다시 해 볼게요. 깨끗한 상태로 이렇게.
<SYNC Start=822439><P Class=KRCC>
A가 있고 B가 있습니다. 얘가 이 위로 가는 것 여기 한 가지 경우 있을 거고요. 여기로 가는 것 한 가지 경우가 될 거예요. 그대로 그냥 1칸 갔다가 1칸 가는 거니까.
<SYNC Start=832770><P Class=KRCC>
오른쪽으로 가는 것 이것 한 가지예요, 여기에서 여기로 가는 것 하나밖에 없으니까. 이리로 가는 것도 하나, 여기 있는 것 하나, 하나, 이렇게 될 겁니다.
<SYNC Start=838804><P Class=KRCC>
그래서 양쪽 사이드는 무조건 1이 될 거예요, 모양이 특이하지 않은 한. 여기가 문제지요. 여기에서부터가 문제야. 여기에 위치하는 경우는요.
<SYNC Start=848074><P Class=KRCC>
이쪽에서 오는 게 하나가 있을 거고 이쪽에서 오는 게 하나가 있을 겁니다. 그런데 그게 하나, 하나 해서 몇 개? 2가지예요. 여기에서 이리로 가는 것 2가지 이미 왔지요.
<SYNC Start=859612><P Class=KRCC>
그럼 2가지의 길로 갈 수 있고요. 여기에서 한 가지가 올 거니까 여기 3가지야. 그렇지요? 여기로 오는 것 몇 가지? 3가지지요. 왜? 이리로 가는 것 2가지에 이리로 올라오는 것 한 가지니까.
<SYNC Start=871917><P Class=KRCC>
이렇게 가는 것 6가지, 3, 3 더하는 것. 여기 있는 것 몇 가지? 4가지. 여기에 있는 것 10가지, 여기에 있는 것 5가지, 여기에 있는 것 15가지. 그래서 답은 15, 이렇게도 나오지요.
<SYNC Start=884952><P Class=KRCC>
그래서 얘는 같은 것이 있는 순열로 푸는 게 편하긴 한데요. 모양이 굉장히 특이하게 되어 있을 때, 그 친구를 그냥 간단하게 합의 법칙과 곱의 법칙 이용해서 풀 수 있을 때가 있습니다.
<SYNC Start=897694><P Class=KRCC>
그래서 무조건 같은 것이 있는 순열, 이것으로 계산하기보다는 이 방법도 알아 두시는 게 좋아요. 이게 첫 번째 유형이고요.
<SYNC Start=906317><P Class=KRCC>
두 번째. 뒤에 패턴화 설명하겠지만, 그 패턴화 이전에 가장 많이 출제되는 수능개념 2가지를 소개하는 거예요. 두 번째가 뭐냐면 백지 카드라고 하는 건데요.
<SYNC Start=926310><P Class=KRCC>
백지 카드는 제가 이름을 붙인 거라 이것을 여러분들 교재나 이런 데에서 찾으려고 해도 못 찾습니다. 어떤 거냐면, 여기에 써 볼게요. 순서가 정해진 순열.
<SYNC Start=943194><P Class=KRCC>
이렇게 하면 이것은 이제 여러분들 교재나 문제집에 나오는 얘기지요. 예를 들어 이런 거예요. 1, 2, 3, 4, 5라고 하는 게 있습니다. 그런데 이 중에 3이라고 하는 것은요.
<SYNC Start=959500><P Class=KRCC>
‘무조건 4보다는 왼쪽에 있어야 돼.’라고 하는 것을 설정을 했다고 해 볼게요. 그러니까 이런 것 있잖아요. 원래 이것 그냥 나열하게 되면 4에 2에 3에 1에 5, 이런 것도 다 가능하잖아요.
<SYNC Start=974983><P Class=KRCC>
그런데 이런 것들 중에 얘는 안 된다고요. 왜? 4보다 3이 왼쪽에 있어야 돼. 그런데 얘는 4보다 오른쪽에 있지요, 3이. 안 된다고요. 그럼 이런 것들을 다 골라내면서 하기는 좀 쉽지 않잖아요.
<SYNC Start=987795><P Class=KRCC>
그럼 이것을 풀 때 어떻게 하냐? 이렇게 합니다. 1, 2, 3, 4, 5라고 하는 것 중에서요. 내가 문제에서 제시된 이 3, 4, 얘는 순서가 정해져 있는 거예요.
<SYNC Start=1000270><P Class=KRCC>
3이 왼쪽에 와야 되고 4가 오른쪽에 와야 된다고 이미 문제에서 순서를 준 거지요. 그럼 얘를 카드라고 생각을 해서 지워 버려요, 이렇게. 똑같은 카드로 만들어요. 백지 카드라고 놓습니다.
<SYNC Start=1020114><P Class=KRCC>
그럼 지금 카드가 5장이 있는데요. 이 5장을 배열할 거예요. 그러면 5!에 같은 백지 카드 2장이 있기 때문에 이 친구 배열하는 것, 2!로 나눠 줄 수 있겠지요. 그러면 5×4×3을 하게 되니까 얼마?
<SYNC Start=1035962><P Class=KRCC>
60. 60가지예요. ‘선생님, 그런데 이게 왜 문제에서 원하는 3하고 4의 순서 정해진 거랑 같나요?’ 보세요.
<SYNC Start=1046164><P Class=KRCC>
얘를 배열한 예시를 몇 개로 뽑아 보면, 백지 카드 이렇게 하나 있고, 백지 카드 이렇게 하나 있고요. 그다음에 여기에 2, 1, 5, 이렇게 옵니다.
<SYNC Start=1057207><P Class=KRCC>
그다음 또 백지 카드 여기에 오고 백지 카드 여기에 와요. 그다음에 여기에는 5, 2, 1, 이렇게 오고요. 또 하나만 더 해 볼까? 여기에 하나가 있고요. 그다음에 여기에 하나가 이렇게 와.
<SYNC Start=1068176><P Class=KRCC>
그리고 여기 있는 것은 1, 5, 2, 이렇게 옵니다. 가능하겠지요? 그럼 이 백지 카드에 문제에서 요구하는 것을 나중에 내가 볼펜으로 쓰는 거예요, 그냥. 어떻게? 3이 4보다 왼쪽에 있어야 된다.
<SYNC Start=1084192><P Class=KRCC>
그럼 여기 백지 있고 여기 백지 있는데 이것을 3으로 쓰자. 여기에 있는 것 4라고 써 버리자. 그럼 끝나는 거예요. 이 경우의 수가 내가 원하는 경우의 수가 된다고요. 하나로 체크되겠지요.
<SYNC Start=1095726><P Class=KRCC>
얘도 왼쪽에 있고 오른쪽에 있는데 얘 3으로 해, 얘 4로 해. 그럼 내가 원하는 거잖아요. 얘? 얘 3으로 하고 얘 4로 해. 그럼 문제의 조건 다 만족하는 거잖아요.
<SYNC Start=1106390><P Class=KRCC>
그러니까 결국은 백지 카드로 체크한 다음에 얘가 같은 것이기 때문에 같은 것이 있는 순열의 개수를 구하면 결국 그 친구가 순서가 정해진 순열의 경우의 수하고 똑같아진다는 거예요.
<SYNC Start=1120803><P Class=KRCC>
그래서 문제에서 뭔가 어떤 것보다 어떤 게 앞에 있고, 어떤 것보다 어떤 게 뒤에 있고, 이런 얘기를 할 때는요.
<SYNC Start=1127691><P Class=KRCC>
그냥 거기에 연결되어 있는 것들을 다 묶어서 백지 카드로 만들고 그 친구들을 나중에 내가 볼펜으로 문자나 숫자를 써 준다고 인지하는 게 편할 겁니다.
<SYNC Start=1138815><P Class=KRCC>
좀 어려운 문제도 뒤에 있기는 한데 그것은 이따가 다시 풀면서 또 소개를 해 보도록 하고요. 결국은 순서가 정해진 순열과 그다음에 최단 거리 문제,
<SYNC Start=1146596><P Class=KRCC>
이 2가지가 같은 것이 있는 순열로 굉장히 출제가 자주 되는 겁니다. 어떤 패턴이 또 있는지 볼까요? 첫 번째, 문자의 배열. 문자의 배열은 당연히 아까 처음에 예시를 했던 그겁니다.
<SYNC Start=1159967><P Class=KRCC>
aabc, 이것에 대한 것. 그다음에 숫자의 나열인데 이 숫자의 나열 같은 경우는요. 여기에 추가적인 조건이 들어가요.
<SYNC Start=1167677><P Class=KRCC>
그래서 좀 어려울 수 있는데 여기에 짝수의 조건이라든지 아니면 홀수의 조건이라든지 아니면 몇 번째 자리에는 소수가 들어가야 된다, 이런 조건들이 들어가게 되면 문제가 좀 까다로워지지요.
<SYNC Start=1180495><P Class=KRCC>
그런데 우리는 지금 발전 단계이기 때문에 이런 우리가 확장된 개념들까지도 공부할 필요가 있습니다. 이 숫자의 나열 같은 경우도 좀 주의 깊게 보셔야 되고요.
<SYNC Start=1189526><P Class=KRCC>
이미 정해진 순서, 그러니까 문제에서 순서를 준 거예요, 문제 자체에서. 이런 것들은 내가 고려할 필요가 없이 그냥 나중에 백지 카드로 풀면 되는 거다. 백지 수표 아니고요, 백지 카드.
<SYNC Start=1207370><P Class=KRCC>
최단 거리 문제, 이것도 이제 여러분들 많이 나오는 건데 우리가 수능특강에서 지금 약간 다른 형태가 나왔습니다. 그래서 조금 제가 처음에는 문제가 잘못됐나 싶을 정도로.
<SYNC Start=1219985><P Class=KRCC>
왜냐하면, 선생님이 먼저 교재의 자료를 받고 그다음에 강의 준비를 해서 이렇게 강의를 찍다 보면 여러분들이 교재가 출판돼서 교재의 문제를 풀고, 이렇게 하잖아요.
<SYNC Start=1229579><P Class=KRCC>
그러면 가끔가다가 이제 강의 준비할 때 받았던 PDF 파일이나 이런 것들이 오타가 있는 경우가 있습니다. 그래서 이것 봤을 때 ‘이것은 이거겠지?’라고 생각을 했는데 아니더라고요.
<SYNC Start=1241695><P Class=KRCC>
그러니까 이것을 수능특강에서 이렇게 했다는 것은 얼마든지 우리가 기존에 봤던 그 유형과 약간 다르게도 출제할 수 있다는 겁니다. 문제 풀어 볼게요, 직접.
<SYNC Start=1253988><P Class=KRCC>
예제 3번, 7개의 숫자 1, 1, 1, 2, 2, 3, 3 중에서 1, 2, 3이 각각 적어도 하나씩 포함되도록 5개를 택해 일렬로 나열한다. 그러니까 숫자의 나열 같은 경우에는요.
<SYNC Start=1265892><P Class=KRCC>
이런 개수 같은 것도 좀 중요한데 1, 2, 3이 각각 적어도 하나씩 포함이 된대요. 그 말은 ‘적어도 하나씩 포함되어야 된다.’ 이 말은 ‘무조건 포함 시켜라.’랑 똑같습니다. 그럼 무조건 1 하나 빼고요.
<SYNC Start=1282500><P Class=KRCC>
2 하나 빼고요. 3 하나 빼요. 그러면 남아 있는 게 5개를 택하라고 했는데 2개가 남는 거지요. 그래서 ‘이것으로 나열하여 만들 수 있는 5자리의 자연수의 개수 구하여라.’라고 했지요.
<SYNC Start=1293675><P Class=KRCC>
그래서 얘는 케이스를 나누는 게 중요합니다. 돼요? 첫 번째, 1, 2, 3, 얘들은 무조건 쓰는 거예요. 그럼 남아 있는 이 2자리를 선택하는 게 중요한 건데, 남아 있는 것의 개수를 따져 보니까
<SYNC Start=1308004><P Class=KRCC>
1은 2개가 있습니다. 그러면 기본적으로 1, 1이 들어와도 괜찮다는 거지요. 그다음 남아 있는 것은 2, 3이 하나씩밖에 없지요. 그럼 이런 것도 돼, 1, 2, 1, 3. 돼요? 또 2, 3도 된다는 거예요.
<SYNC Start=1322487><P Class=KRCC>
그럼 이것에 따라서 이제 하나씩 해 주면 되는 거니까. 첫 번째, 5개의 숫자인데 그중에 똑같은 게 3개가 있는 거지요. 5!을 3!로 나누니까 20가지가 되겠다. 돼요?
<SYNC Start=1337968><P Class=KRCC>
두 번째, 1, 2, 3, 1, 2, 그런데 이 중에서 1이 2개고 2가 2개지요. 그러니까 얘는 5!에 2!2!, 이렇게 될 겁니다. 이것 좀 이따 계산하고요.
<SYNC Start=1352967><P Class=KRCC>
여기에 있는 것도 마찬가지로 1이 2개, 3이 2개니까 위에 있는 거랑 똑같아. 2!2!, 5!, 이렇게 될 거고요. 그렇지요? 여기 있는 것도 똑같아요. 2가 2개, 3이 2개.
<SYNC Start=1365385><P Class=KRCC>
그럼 여기 있는 것도 마찬가지로 2!2!, 5!, 이렇게 될 거라고요. 맞지요? 그럼 여기 있는 건 얼마야? 5×3=15, 2 곱하면 30, 이렇게 될 겁니다. 밑에 있는 것도 30이고요. 밑에 있는 것도 얼마?
<SYNC Start=1382195><P Class=KRCC>
30, 이렇게 될 거예요. 그럼 얼마? 이것 90에 20 더하니까 110가지가 되겠지요. 그래서 이것은 제한되어 있는 개수 중에서 내가 어떤 것을 쓰냐, 그리고 남아 있는 개수가 몇 개냐,
<SYNC Start=1395762><P Class=KRCC>
이것을 통해 문제의 조건에 맞게끔 식을 구성하는 겁니다. 유제 보지요.
<SYNC Start=1403152><P Class=KRCC>
문자 a, a, b, b, c, c를 모두 일렬로 나열할 때, a끼리 이웃하는 경우의 수를 구하래요. 그러면 일단은 이웃해야 된다고 했기 때문에 덩어리를 생각을 해야 되고요. 이 덩어리 안에 뭐가 있는 거다?
<SYNC Start=1416911><P Class=KRCC>
a와 a가 있는 거다. 그다음 남아 있는 것 이제 b, b, c, c가 이렇게 있겠지요. 그럼 결국은 전체 개수는 몇 개예요? 6개가 아니라 5개지요.
<SYNC Start=1429183><P Class=KRCC>
이 5개를 나열하는데 같은 것이 b가 2개 있고 c가 2개 있기 때문에 2!2!, 이렇게 해 버리면 되고요. 이것 아까 했으니까 이것 30가지가 될 겁니다. ‘선생님, a끼리는요?’ 의미 없지요.
<SYNC Start=1442115><P Class=KRCC>
같은 것이기 때문에. 이렇게 심플하게 끝납니다.
<SYNC Start=1446901><P Class=KRCC>
6번, 최단 거리 문제 나왔는데 이거예요. 이게 약간. 그림과 같이 직사각형 모양으로 연결된 도로망이 있다. 이 도로망을 따라 A지점에서 출발하여 B지점을 거쳐 C지점까지 최단 거리로 이동할 때.
<SYNC Start=1463635><P Class=KRCC>
이 문제를 B와 C를 바꾸기만 하면요. 우리가 예전에 풀었던 문제하고 똑같습니다. 제가 이것 그냥 유제 정도인데 뭐 이것을 이렇게까지 굳이 바꿔 놨나?
<SYNC Start=1475580><P Class=KRCC>
그런데 바꿔 놨더라고요. C지점을 지나지 않은 경로의 수를 구하여라. 그러니까 중간에 C는 지나면 안 되고 결국 A에서 B를 갔다가 B에서 C로 가야 된다는 얘기입니다.
<SYNC Start=1485387><P Class=KRCC>
그러면 이런 문제를 풀 때 여러분들이 체크해야 되는 개념은 뭐냐면 ‘지나지 않는다.’ 지나지 않는 점을 기준으로 해서요. 경로를 차단해야 됩니다.
<SYNC Start=1498102><P Class=KRCC>
그런데 그 경로 차단하는 것은 이 C를 근방으로 해서 이렇게 차단해 버리면 돼요, 일단. 물론 A쪽에서 B쪽으로 먼저 가는 것이기 때문에 오른쪽은 크게 영향 없지만,
<SYNC Start=1508859><P Class=KRCC>
그래도 일단 C를 근방으로 해서 여기, 여기, 여기는 무조건 체크를 해야 된다. 그래서 이렇게 일단 생각을 해 두고요. 그다음에 B로 가야 돼요.
<SYNC Start=1519285><P Class=KRCC>
그럼 B로 가는데 얘도 전체적으로 최단 거리이기 때문에 A 그다음 B, C야. 그럼 A, B에서 최단 거리가 되어야 될 거고요.
<SYNC Start=1529903><P Class=KRCC>
여기에서도 최단, 그다음에 C, B에서 C로 가는 것도 최단 거리가 되어야 돼요. 그럼 결국 여기에서 B로 가는데 C를 거치지 않으면서 최단 거리가 되는 것은 이렇게 잘리는 겁니다.
<SYNC Start=1546724><P Class=KRCC>
됐지요? 이것 2가지의 방법으로 풀 건데 첫 번째, 가장 수월하게는 합의 법칙으로 해 볼 거예요. 이렇게, 이렇게 합니다, 하나하나 체크하면 되니까. 이리로 가는 것 한 가지이고요.
<SYNC Start=1559219><P Class=KRCC>
이렇게, 이렇게 오니까 이것 몇 가지? 2가지가 될 거예요. 이렇게 가는 것은 여기 그대로 2가지, 2가지, 2가지, 이렇게 따라갈 겁니다. 왜? 여기에서 위로 올라가는 것은 없을 거라고요.
<SYNC Start=1571339><P Class=KRCC>
왜냐하면, 밑쪽으로 가야 되는데 위로 올라오는 것 자체가 최단 거리에 위배되는 거거든요. 그래서 이렇게 더해요, 3이고. 이렇게 더해, 4야. 이렇게 더하면 5가 될 거고요.
<SYNC Start=1580837><P Class=KRCC>
이렇게 더하면 9가 될 거고요. 여기 7이 될 거고 여기 있는 것 16이 될 거고 여기 있는 것 9가 될 거고 25가 될 겁니다, 이렇게. 됐지요?
<SYNC Start=1589859><P Class=KRCC>
또 같은 것이 있는 순열로 풀려면, 우리가 이런 경우는 경로의 중간 포인트를 잘 잡아야 되는데 이렇게 설정할 수 있겠지요. 경로가 이렇게 나뉘어 있어요.
<SYNC Start=1608424><P Class=KRCC>
이 친구를 잡을 때요. A에서 B로 가는데 얘가 대각선의 형태로 되어 있다면 이것과 크로스가 되는 대각선 형태로 잡는 게 편합니다. 그러면 얘가 이리로 갈 때 거쳐야 되는 포인트를 짚어 볼게요.
<SYNC Start=1621139><P Class=KRCC>
그럼 일단 여기 포인트가 될 겁니다, 여기. 돼요? 얘를 하나 설정을 했다, 그러면 머릿속에 이렇게 생각할 거예요. ‘여기하고 여기를 선택하면 안 될까요?’ 여기를 선택해. 그러면 문제가 생겨요.
<SYNC Start=1634588><P Class=KRCC>
이 친구 포인트를 통해서 가는 것 중에 여기 포인트를 지나면서 가는 것도 중복이 된다고요. 그러면 내가 포인트를 짚는 것은 중복이 안 되게끔 빠짐없이 세려고 하는 거라
<SYNC Start=1647730><P Class=KRCC>
얘하고 가로선으로 있는 것은 안 되고요. 대각선상으로 여기를 짚으셔야 됩니다. 또한 마찬가지예요. 얘하고 여기를 짚는다, 그러면 이쪽을 통해서 가는 것하고 이렇게, 이렇게, 이렇게 가는 것하고
<SYNC Start=1662361><P Class=KRCC>
중복이 된다는 거지요, 지금. 그러니까 여기 포인트하고 여기 포인트하고 셌을 때 똑같은 게 없어야 돼요. 그래야만 더하기로 해서 체크를 할 건데 얘하고 얘하고는요.
<SYNC Start=1672143><P Class=KRCC>
똑같은 경로가 또 포함이 된다고요. 그래서 안돼요. 그래서 대각선, A에서 B로 갈 때 이것하고 크로스 되는 대각선을 선택하면 됩니다. 첫 번째, 그럼 여기를 지나야 돼, 그럼 이렇게 선택을 하지요.
<SYNC Start=1684728><P Class=KRCC>
그러면 이것 하나, 하나니까 이것은 그냥 2가지 경우가 될 겁니다. 그다음에 여기에서 여기로 가는 것, 같은 것이 있는 순열로 해 볼까요? 5!을 2!3!로 나눠요. 돼요? 그럼 10가지. 이렇게 해서.
<SYNC Start=1699379><P Class=KRCC>
그럼 첫 번째, 이렇게 해서 이렇게 된 것, 이게 몇 가지라고요? 10가지라고요. 여기 포인트를 기준으로 해서 왼쪽과 오른쪽은요.
<SYNC Start=1710705><P Class=KRCC>
서로 기찻길 있잖아요, 우리 합의 법칙, 곱의 법칙 배웠을 때, 그러니까 2가지와 여기에 있는 것 10가지가 서로 짝지어지는 것이기 때문에 20 곱하기로 하면 됩니다. 이것 10으로 했네?
<SYNC Start=1721943><P Class=KRCC>
20. 밑에 있는 것 하게 되면요. 여기에서부터 여기까지 오는 것은 그냥 하나예요. 더 이상 체크할 게 없습니다. 왜? 오른쪽으로 갔다가 이렇게 돌아왔다, 이런 것 안 된다고요.
<SYNC Start=1733095><P Class=KRCC>
그럼 여기까지 오는 것 하나인데 이 밑에 있는 것만 체크하면 되는 거니까 이 친구는 5!을 4!로 나누면 돼요, 오른쪽으로 가는 것 똑같은 것 4개니까. 그럼 이것 얼마? 5가지가 되겠다.
<SYNC Start=1744291><P Class=KRCC>
그럼 결국 A에서 B로 오는 전체 경우의 수는 몇 가지가 돼요? 25가지가 되겠지요, 20+5 해서. 됐지요? 이렇게 한 다음에, 그다음에 어디에서 어디로 가는 것 체크해야 되는 거예요, 이제?
<SYNC Start=1759330><P Class=KRCC>
그렇지요, B에서 C로 가는 것. 그런데 얘는요. 고민할 게 없습니다. 중간에 거쳐 가는 게 아니기 때문에 그냥 단순한 최단 거리 문제로 풀면 돼요. 5!을 뭐로 나눈다?
<SYNC Start=1772383><P Class=KRCC>
2!3!로 나누면 되겠지요. 왼쪽 2개, 위로 가는 것 3개. 하게 되면 얼마? 10가지. 이렇게 되기 때문에 25라고 하는 것은 A에서 B로 가는 경우의 수가 될 거고요.
<SYNC Start=1786068><P Class=KRCC>
그다음에 B에서 C로 가는 것은 얼마가 되는 거야? 10가지가 되는 거예요. 이 2개를 곱해야 되는 거니까 결국 내가 원하는 것은 250가지가 되는 거겠지요.
<SYNC Start=1795066><P Class=KRCC>
그래서 이 문제 같은 경우는 어렵다기보다는요. 여러분들이 기존에 생각했던 것과 약간의 차이점이 있기 때문에 ‘이런 문제 자체도 출제될 수 있구나.’를 인지하셔야 돼요.
<SYNC Start=1805899><P Class=KRCC>
단순하게 우리가 시험 볼 때, 그렇잖아요, 내신 시험 같은 경우에 내가 문제를 많이 푼 친구들일수록 그런 실수를 많이 하는데 내가 봤던 것 같아. 그러니까 이 풀이도 왠지 그럴 것 같아.
<SYNC Start=1816152><P Class=KRCC>
그래서 막 풀어요. 물었는데 객관식이면 다행히도 보기에 없어요, 답이. 그런데 주관식이야, 그럼 틀린 거예요. 채점할 때 선생님한테 오지요. ‘선생님, 왜 이것 답이 이렇게 돼요?’
<SYNC Start=1828595><P Class=KRCC>
이것 조건 A 아니라 B잖아. ‘어!’ 그럼 이제 이미 끝났습니다. 이미 내신은 떨어졌어요. 그러니까 그런 실수 안 하기 위해서는 문제를 많이 푼 친구일수록 문제를 꼼꼼하게 읽어야 되고요.
<SYNC Start=1844628><P Class=KRCC>
그리고 여러분들 보통 건너 넘지 말라고 하잖아요. 내가 문제를 예측하시면 안돼요. 내가 출제자가 아니잖아요.
<SYNC Start=1852229><P Class=KRCC>
선생님이 시험 문제 출제하고 그다음에 여러분들이 문제를 푸는 건데 선생님은 출제하고 검토를 할 때 내가 냈기 때문에 그 문제에 대한 예상으로 딱딱 풀어 나갑니다.
<SYNC Start=1861968><P Class=KRCC>
그런데 여러분들이 출제한 것도 아닌데 내가 어떤 문제를 냈을 때 기존에 풀었던 것하고 유사하다고 해서 그것을 예측해서 풀면 당연히, 운 좋게 맞을 수도 있겠지만, 아니라는 거지요.
<SYNC Start=1873917><P Class=KRCC>
그래서 이런 것, 한번은 수능특강에 이렇게 나왔다는 것, 꼭 기억하시고요.
<SYNC Start=1881051><P Class=KRCC>
작년 것 한번 풀어 보도록 할게요. 야구공, 테니스공, 탁구공이 각각 2개, 2개, 3개씩 모두 7개의 공이 있다. 이 7개의 공 중에서요. 5개의 공을 택하여 5명의 학생에게 각각 1개씩 나누어 준대요.
<SYNC Start=1894366><P Class=KRCC>
경우의 수 문제를 풀다 보면 초반에 많이 어려워하는 게, 서로 다른 공 그리고 같은 것, 뒤에 조합 문제를 좀 풀다 보면 더 어렵게 느껴질 수 있거든요,
<SYNC Start=1907722><P Class=KRCC>
특히나 중복 조합 파트나 이런 데 들어가다 보면. 그런데 여러분들이 이런 문제를 딱 봤을 때 기억을 해야 될 것은요.
<SYNC Start=1917346><P Class=KRCC>
내가 지금 이 단원에 나오니까 ‘이게 같은 것이 있는 순열일 거야.’ 이렇게 예측하기보다는 이 문제의 상황을 이해하는 게 제일 중요해요.
<SYNC Start=1925589><P Class=KRCC>
그러니까 가장 실생활과 연관되어 있는 학문 자체가 확률과 통계인데 이 확률과 통계의 상황을 내가 암기한 것으로 어떤 문제 틀에서 앞에 나와 있는 것은 여기에 집어넣고
<SYNC Start=1934749><P Class=KRCC>
뒤에 나와 있는 것은 여기에 집어넣고 서로 다를 때는 이렇게 하고 같을 때는 이렇게 하고. 물론 제가 수능개념 강좌에서는요.
<SYNC Start=1942075><P Class=KRCC>
그 케이스를 8가지로 나눠서 조합에 대한 것과 순열에 대한 것 다 나눠서 설명은 했습니다. 그런데 그때도 말씀드렸던 게, 암기하지 말고요.
<SYNC Start=1950671><P Class=KRCC>
그냥 문제를 봤을 때 내가 착각하지 말고 이게 이런 조건들도 나올 수 있다는 것을 기억하라고 한 거거든요. 그러니까 여러분들이 지금 보세요.
<SYNC Start=1960729><P Class=KRCC>
야구공이 2개씩은 똑같고 테니스공 2개씩 똑같고 탁구공 3개씩 똑같은 상황이에요. 그리고 이 중에서 5개를 택해서 5명의 서로 다른 학생한테 나누어 주는 것입니다.
<SYNC Start=1970839><P Class=KRCC>
그럼 이게 같은 것이 있는 순열이 아닐 때는 이 문제가 같은 것이 있는 순열인지 아니면 중복조합인지 헷갈린다고요. 그럼 어떻게 할 거냐? 상황을 이해해야지요. 볼게요.
<SYNC Start=1981261><P Class=KRCC>
같은 종류의 공끼리는 서로 구별하지 않는다고 했습니다. 그럼 여기에 이제 써요. 야구공을 a라고 하고 테니스공을 b라고 해 볼게요. 탁구공을 c라고 해 볼게요. 이렇게 전체 7개야.
<SYNC Start=1992957><P Class=KRCC>
그런데 이 중에 5개를 뽑아서요. 이것을 5명한테 줄 겁니다. 그러면 5개 뽑는 구성이 제일 중요한 것 아니에요?
<SYNC Start=2003630><P Class=KRCC>
그러고 나서 5개가 구성이 되면 그것을 배열하는 거니까 이것은 비로소 같은 것이 있는 순열이 되는 거니까. 따라서 a, a, b, b, c, c, c가 있을 때 어떤 하나의 공을 기준으로 해서요.
<SYNC Start=2015967><P Class=KRCC>
그것을 중점으로 해서 케이스를 나눠야 됩니다. 저는 가장 개수가 많은 것부터 나눌 거예요. 즉, c, c, c, 탁구공 3개가 다 들어가 있는 경우에 어떤 형태가 될 거냐.
<SYNC Start=2028546><P Class=KRCC>
그럼 첫 번째, a, a가 들어올 수 있겠지요, 탁구공 3개에 야구공 2개. 혹은 a, b가 올 수 있겠지요. 혹은 b, b가 이렇게 들어올 수 있겠지요. 이것 하나로 먼저 하고요.
<SYNC Start=2041695><P Class=KRCC>
그다음 탁구공이 3개가 아니라 2개가 될 수도 있는 거잖아요. 그럼 이 상태에서는 남아 있는 자리가 3개예요. 그중에 a, a, b가 될 수 있고, 그렇지요?
<SYNC Start=2053129><P Class=KRCC>
지금은 순서를 기억하는 게 아니라 경우만 보는 거니까. 지금은 a, 그다음은 또 뭐? b, b가 될 수 있다고요, 이렇게. 더 이상 돼요? 안돼요. 이것밖에 없어. 그다음 또 c가 하나밖에 없어요.
<SYNC Start=2067652><P Class=KRCC>
그럼 무조건 4개를 뽑아야 되는데 그것은 a, a, b, b, 이것밖에 없지요, 선택의 여지가 없습니다. 따라서 얘와 얘, 얘, 얘, 얘, 얘를 케이스로 해서 나눈 다음에
<SYNC Start=2079787><P Class=KRCC>
이 친구들을 같은 것이 있는 순열로 배열하면 끝나는 거다. 첫 번째 것, 5!을요. 3!2!로 하면 됩니다. ‘선생님, 서로 다른 5명한테 나눠 줘야 되는데요?’ 나눠 준다는 것 자체가 뭐예요?
<SYNC Start=2093952><P Class=KRCC>
줄 세운다는 거예요. 그런데 같은 것이 있는 순열 자체가 같은 것이 포함되어 있는 것들을 나열한다, 순서가 있게끔 나열한다는 거잖아요.
<SYNC Start=2102192><P Class=KRCC>
그러니까 그것은 이미 5명한테 배열하는 거랑 똑같은 얘기예요, 첫째 자리, 둘째 자리, 셋째 자리, 넷째 자리, 다섯째 자리. 그렇지요?
<SYNC Start=2109999><P Class=KRCC>
이렇게 하게 되면 5×4=20, 2로 나누면 10가지, 이렇게 될 거고요. 이것 5!에 3!만 하면 되겠다. 그러면 20이 될 거고요. 그다음에 이것은 앞의 것과 똑같아요. 이것은 10가지가 될 거고.
<SYNC Start=2122592><P Class=KRCC>
그다음에 이것은 5!을 2!2!으로 할 겁니다. 이것 얼마예요? 30이지요. 이것 얼마예요? 얘도 똑같이 30이구나. 그다음에 이것도 똑같이 얼마다? 30이구나. 그러면 30짜리가 지금 몇 개야?
<SYNC Start=2137450><P Class=KRCC>
하나, 둘, 셋, 90에 그다음에 이것 10, 10, 20이니까 40, 이렇게 되겠지요. 이것 계산하면 얼마? 130가지가 나올 겁니다. 돼요?
<SYNC Start=2150072><P Class=KRCC>
이 문제는 이 자체, 여기에 있는 단원에 들어가 있기 때문에 좀 생각보다 쉽다고 느꼈을 수 있겠지만, 이것을 만약에 중복 조합 다 배우고 경우의 수 전체 정리하는, 예를 들어 우리가 대단원,
<SYNC Start=2162332><P Class=KRCC>
경우의 수 파트가 다 끝나면 한 강씩 제가 좀 어려운 문제 갖고 와서 풀 건데 그 Next Level 강좌에서 이것을 가져왔다, 그럼 이것도 어렵게 느낄 거라고요, 느낌이. 알겠지요?
<SYNC Start=2174778><P Class=KRCC>
2번. 7개의 문자가 있는데 모두 일렬로 나열한대요. 두 문자 C와 L은 문자 T보다 왼쪽에 나열하고, 여기에 별표 좀 치시고요.
<SYNC Start=2185165><P Class=KRCC>
오늘 푸는 문제 중에 가장 난이도가 있는 거고 여러분들이 기억해야 되는 백지 카드 문제입니다. 두 문자 R과 E는요. 문자 T보다 오른쪽에 나열하는 경우의 수다.
<SYNC Start=2195281><P Class=KRCC>
제가 개념으로 설명했던 백지 카드는 ‘순서가 정해진 것들은 같은 것이 있는 순열로 푼다.’였는데 그때는 하나의 순서가 정해져 있을 때의 얘기거든요. 그런데 얘는요. 2가지의 규칙이 있습니다.
<SYNC Start=2205740><P Class=KRCC>
첫 번째, 일단 C, U, L, T, U, R, E라고 하는 문자에서요. C하고 L, 얘는 T보다 왼쪽에 있어야 된대요. 그다음 R과 E는요. 문자 T보다 오른쪽에 있어야 된대요, 그러니까 R과 E는 이쪽에.
<SYNC Start=2224134><P Class=KRCC>
이런 식의 형태를 띠어야 된다는 거지요, 위치가. 그러면 여기에서 고민이 될 거예요. C, L, T라고 하는 것을 동그라미 3개, 아니면 C, L을 동그라미 2개, 백지 카드 똑같은 것,
<SYNC Start=2236629><P Class=KRCC>
여기에 있는 것 백지 카드 종류 다른 것 2개, 이렇게 한 다음에, 전체 한 다음에 T의 위치에 따라 나눌까? 고민이 되겠지요. 어렵게 생각을 하면 그렇습니다. 그런데요. 간단하게 풀 수 있거든요.
<SYNC Start=2249584><P Class=KRCC>
여기에 남아 있는 문자를 한번 볼 거예요. C, L 썼고 T 썼고 그다음에 R 썼고 E 썼지요. 남아 있는 것 U 2개입니다.
<SYNC Start=2259437><P Class=KRCC>
그럼 여기에서 제가 백지 카드를 어떻게 만들 거냐면, 얘도 백지 카드, 얘도 백지 카드, 얘도 백지 카드, 얘도 백지 카드, 얘도 백지 카드로 만들 거예요.
<SYNC Start=2275981><P Class=KRCC>
그냥 종류가 똑같은 백지 카드. 물론 다른 문제는요. 종류가 다른 백지 카드로 써야 되는 때가 있습니다. 얘는 왜 같이 쓰냐?
<SYNC Start=2285703><P Class=KRCC>
T하고 이것 C, L과 그다음에 R, E, 얘들이 다 T를 기준으로 해서 좀 기준이 잡히기 때문에 그냥 하나로 다 해도 돼요.
<SYNC Start=2295459><P Class=KRCC>
그러면 이 문제를 풀 때 결국은 백지 카드 5장이랑 U 2개가 있는 거니까 7장의 카드를 배열을 했을 때, 앞에 있는 것은 5!이 될 거고요. 뒤에 있으니까 것 2!이 될 겁니다.
<SYNC Start=2313578><P Class=KRCC>
같은 것이 있는 순열로 한 거예요. 그럼 예를 들어 이런 게 있겠지. 백지 카드 하나 둘, 셋, 넷, 다섯, 이렇게 할까요? 그럼 여기 있는 것 U, U, 이렇게 돼요, 이런 경우도 있을 거고.
<SYNC Start=2328270><P Class=KRCC>
또 하나, 둘, 셋, 넷, 다섯, 이런 경우도 있을 겁니다. 그럼 여기 있는 게 U가 될 거고, 그렇지요, 여기 U, 이렇게 될 거예요. 그러면 C, L과 T, R, E를 어떻게 배열할 거냐?
<SYNC Start=2348782><P Class=KRCC>
첫 번째, 백지 카드 5장이 배열되어 있는 것 중에서요. 가운데에 있는 것부터 T로 고정을 시킵니다. 즉, 여기에 있는 가운데에 무조건 T를 쓸 수밖에 없지요.
<SYNC Start=2359585><P Class=KRCC>
여기도 무조건 가운데에 T를 쓸 수밖에 없다. 돼요? 그럼 여기까지는 백지 카드의 경우의 수하고 똑같아. 그런데 문제가 되는 건 여기 왼쪽 편과 오른쪽 편의 얘기지요. 여기를 이렇게 써도 돼요.
<SYNC Start=2374253><P Class=KRCC>
C, L, 이렇게 써도 되고요. 혹은 L, C, 이렇게 써도 됩니다. 그러면 이 하나의 경우의 수에 C, L과 L, C, 2가지 경우가 생기기 때문에 2가지의 케이스가 따로 생기는 거예요.
<SYNC Start=2390413><P Class=KRCC>
거기에다가 같은 이 안에서 R과 E, 그다음 E와 R이라고 하는 게 또 나뉠 수 있겠지요. 왜? 얘들끼리의 순서는 정해 주지 않았으니까.
<SYNC Start=2402756><P Class=KRCC>
따라서 2×2라고 하는 것을 통해 하나의 백지 카드, 이 경우의 수에서 몇 가지가 파생되는 거예요? 4가지가 파생되는 거지요. 이 말 이해하세요?
<SYNC Start=2415792><P Class=KRCC>
다시. 그냥 5개를 백지 카드를 만든 다음에 U 2개짜리하고 배열을 해요. 그럼 여기가 이렇게 쭉 나올 건데, 이 개수 구해 볼까요? 6×7=42니까 2로 나누게 되면 21이에요. 21가지가 나올 거라고요.
<SYNC Start=2429988><P Class=KRCC>
그렇지요? 6, 7, 6×7=42 얘니까. 그러면 이런 상태에서 여러분들이 이것을 문제의 조건에 맞게끔 배열을 해야 되는 건데 가운데에 있는 것은 무조건 고정이 되잖아요, T. 왜?
<SYNC Start=2446451><P Class=KRCC>
왼쪽에 C, L 와야 되고 오른쪽에 R, E 와야 되니까. 그럼 T를 고정한 상태에서 왼쪽 편에 있는 것과 오른쪽 편에 있는 게 2가지씩 종류가 생기기 때문에
<SYNC Start=2456678><P Class=KRCC>
이 한 줄에서 나오는 전체 경우의 수는 4가지가 될 거라고요. 맞아요? 따라서 21이라고 하는 것은 백지 카드 5장과 U 2개짜리만 배열한 거고 여기에서 각각 파생되는 게 몇 개씩이 있다?
<SYNC Start=2469455><P Class=KRCC>
4개씩이 있다. 따라서 문제의 답은 뭐가 되는 거예요? 84가 답이 되는 거지요. 돼요? 그래서 이 문제, 오늘 푸는 문제 중에서 어쩌면 중요한 문제이고요.
<SYNC Start=2482951><P Class=KRCC>
여러분들이 지금 이쪽 개념 파트에서는 이 백지 카드 얘기가 안 나와서 제가 갖고 오긴 했는데 이 아이디어적인 것을 꼭 기억하시기 바랍니다. 편하게 생각하세요, 순서가 정해진 것은.
<SYNC Start=2497384><P Class=KRCC>
우리 왜 옛날에 조합 배웠을 때 순서가 정해진 것은 그냥 뽑기만 하면 된다는 것 했잖아요. 그런데 같은 것이 있는 순열도 마찬가지라고요. 3번입니다.
<SYNC Start=2511098><P Class=KRCC>
‘그림과 같이 직사각형 모양으로 연결된 도로망이 있다. 한번 지나간 도로는 다시 지나갈 수 없을 때, 이 도로망을 따라 A지점에서 출발하여 C지점을 지나 B점까지
<SYNC Start=2521199><P Class=KRCC>
최단 거리로 가는 경우의 수를 구하여라.’라고 했습니다. 이번에는 C를 지나서 B로 가야 돼요. 이 C를 무조건 지나야 되기 때문에 여기에 이렇게 포인트로 짚어 놓습니다. 됐지요?
<SYNC Start=2535905><P Class=KRCC>
이 문제에서는 또 중요한 게 뭐냐? 무조건 C는 가야 돼요. 무조건 C는 거쳐서 가야 되는 거야. 그럼 첫 번째 이리로 오는 경우가 있을 거고요. 그렇지요? 두 번째, 이렇게 오는 경우가 있을 겁니다.
<SYNC Start=2553561><P Class=KRCC>
그럼 일단 이 2가지로 먼저 나눠 놓고, 그다음 C부터 시작해서 B로 가는 것을 고려를 해 보자고요. 그럼 일단 여기까지 오는 것, 케이스 나눠 보면 여기 위로 가는 것만 따로 체크를 할 겁니다.
<SYNC Start=2564794><P Class=KRCC>
그럼 여기에서 이렇게 가는 것 하나니까 이것 1개라고 생각을 하고요. 여기 있는 것 총 3개에 2개로 나누는 거니까 3이에요. 그렇지요, 3!을 2!로 나누는 거니까.
<SYNC Start=2575553><P Class=KRCC>
그럼 여기 위에 있는 것은 경우의 수가 3×1이 될 거라고요. 이게 3가지. 그다음 밑에서 오는 것, 이렇게 오는 것일 테니까 여기 있는 것도 역시나 3×1 해서 3가지가 될 겁니다, 이렇게. 됐지요?
<SYNC Start=2593432><P Class=KRCC>
그런데 그다음이 중요한 건데요. 여기까지 왔어. 그다음에 여기까지 온 상태에서 얘 위에서 온 것을 보게 되면 얘는 이렇게 오는 거예요. 그렇지요?
<SYNC Start=2607094><P Class=KRCC>
그러면 얘가 이렇게 왔다는 것은 여기에 있는 이 길을 관통하지 않고 왔었기 때문에 이 길도 그냥 새롭게 갈 수 있는 거라고요. 그러니까 이 오른편에 있는 것은 5!을 3!2!로 나누면 되는 거예요.
<SYNC Start=2620212><P Class=KRCC>
그러면 5×4=20을 2로 나누면 되는 거니까 10, 이렇게 될 거예요. 맞지요? 그럼 결국 첫 번째 경로, 즉 이렇게 와서 이렇게 가는 것은 몇 가지가 된다? 3×10 해서 30가지가 될 겁니다.
<SYNC Start=2635012><P Class=KRCC>
그다음 두 번째 것은? 얘가 이렇게 올라왔지요. 그럼 이렇게 올라왔으면 여기 C를 찍고 다시 내려오면 되겠다? 아니지요. 한번 지나간 도로는 다시 지나갈 수 없다고 했습니다.
<SYNC Start=2645423><P Class=KRCC>
그러면 얘가 이렇게 올라갔으면요. 이다음부터는 무조건 오른쪽으로 갈 수밖에 없어요. 오른쪽으로 간 뒤에는 어떤 일이 벌어지느냐?
<SYNC Start=2651722><P Class=KRCC>
여기에서부터 출발인데 얘가 이렇게 내려가서 바로 사각형을 만들어야지 이 친구가 왔다가 다시 돌아가는 것은 최단 거리에 위배된다고요. 맞지요?
<SYNC Start=2662378><P Class=KRCC>
따라서 오른쪽에 있는 것 구하게 되면 4!을 2!2!로 할 거니까 6가지가 될 겁니다. 따라서 앞에 있던 것, 이렇게 위로 올라오는 것 3가지에 여기에서 6가지의 종류가 있을 거니까
<SYNC Start=2679004><P Class=KRCC>
3×6 하게 되면 얼마예요? 18가지, 이렇게 되니까 전체 개수 몇 개? 48개가 되겠다. 이렇게 체크하면 되겠지요. 또 이렇게 하셔도 돼요.
<SYNC Start=2691853><P Class=KRCC>
우리가 합의 법칙, 곱의 법칙을 이런 데에 써도 괜찮은 게, 몇 개안되잖아요. 오른쪽에 있는 것은 그냥 단순하게 우리가 같은 것이 있는 순열로 해도 되겠지만,
<SYNC Start=2702974><P Class=KRCC>
여기에 오는 것들을 여러분들이 C라고 하는 것을 기준으로 해서 이렇게 오는 것, 이렇게 오는 것 나눠야 되잖아요. 그러니까 그냥 여기까지만 구해요.
<SYNC Start=2711762><P Class=KRCC>
그럼 여기 있는 것 1, 1, 1, 그럼 여기 있는 것 2가 될 거고 여기 있는 것 3이야. 그럼 이렇게 오는 것 몇 가지? 3가지가 될 거고. 이렇게 가는 것 몇 가지? 3가지가 될 거다.
<SYNC Start=2721170><P Class=KRCC>
그다음 경로에 대한 것은 여기 노란색일 때 이렇게. 그다음 여기 이렇게 올라올 때는 이렇게 가서 이렇게. 그래서 2가지에 대한 곱으로 표현하면 되겠지요. 이해돼요?
<SYNC Start=2734651><P Class=KRCC>
그래서 우리가 보통 보면 같은 것이 있는 순열을요. 우리가 이것을 증명하는 시간은 아니에요. 이 수능특강 발전 강좌에서 추구하는 것은 개념과 그다음에 실전 문제의 브릿지 역할,
<SYNC Start=2754612><P Class=KRCC>
OT 때 말씀드렸지요? 이 다리 역할, 가교 역할을 해서 내가 어떤 개념을 알았을 때, 이 친구를 문제로 어떻게 끌고 올 거냐를 연습하는 거라 세부적으로 이 같은 것이 있는 순열, 즉 n!을 p!q!,
<SYNC Start=2769422><P Class=KRCC>
이 계산법이 조합으로 했을 때 어떻게 나왔냐, 이런 것들에 대한 증명은 지금 하는 것은 아닙니다. 그런데 이것에 대한 아이디어를 알고는 있으면
<SYNC Start=2782399><P Class=KRCC>
‘이 같은 것이 있는 순열을 풀 때도 조합과 약간 유사한 점이 있구나.’라고 판단할 수는 있겠지요, 특히나 아까 앞에 풀었던 그 플러스 문제 2번에서 백지 카드 문제. 기억하시지요?
<SYNC Start=2795064><P Class=KRCC>
그래서 지금 오늘까지 배우면 우리가 여러 가지 순열 3가지의 개념을 다 배우는 건데, 사실 ‘생각보다 예전에 배웠던 개념이랑 크게 다르지 않네? 심화 개념이 특별하게 없네?’라고 생각할 수 있지만,
<SYNC Start=2808231><P Class=KRCC>
심화 개념이라고 하는 것은요. 수능 문제하고 연결되어 있는 이 개념들을 조금 더 정돈을 해서 알려 드리는 거거든요.
<SYNC Start=2815374><P Class=KRCC>
그런데 지금 오늘 했던 내용들 중에 가장 큰 것 지금 2가지의 흐름을 알려 드린 겁니다. 그래서 이제 최단 거리와 백지 카드에 대한 문제인데 이것을 문제 표현이 어떻게 되느냐에 따라
<SYNC Start=2825814><P Class=KRCC>
여러분들이 이것을 인지할 수도 있고 인지를 못할 수도 있어요. 그리고 지금은 단원별로 제가 끊어서 개념 설명을 하다 보니까 ‘이게 이쪽 단원에 있으니까 이렇게 풀어야 되겠다.’
<SYNC Start=2835948><P Class=KRCC>
특히나 조합까지 다 배우고 나면 이게 헷갈리기 시작합니다. 경험했잖아요. 우리 지금 이것, 확률과 통계, 이것 발전 하는데
<SYNC Start=2843415><P Class=KRCC>
완전 고등학교 1, 2학년 처음 확률과 통계 배우는 친구들은 아닐 거라고 생각은 하거든요. 보통은 그래도 한번쯤은 공부를 했던 친구들이라고 생각을 하기 때문에 헷갈리는 것 알잖아요.
<SYNC Start=2856463><P Class=KRCC>
경우의 수 특히나. 그리고 이 경우의 수를 제대로 못하면 확률이 어려워진다는 것 알지요. 그래서 어떤 단원에 대한 것을 정확하게 외워서 이것을 문제에서 풀어내는 것보다는
<SYNC Start=2868608><P Class=KRCC>
이 문제 상황에 대한 것을 명확하게 이해하는 게 훨씬 더 중요할 것 같습니다. 그래서 그 연습을 좀 저하고 했으면 좋겠고요.
<SYNC Start=2876238><P Class=KRCC>
그리고 뒤에 제가 Level 1, 2, 3을 쭉 풀어 갈 건데 한 가지 좀 주의해야 될 점은 이 Level 1, 2, 3을 풀 때, 이 문제의 단원을 좀 머릿속으로 좀 예측을 해 봐라,
<SYNC Start=2890091><P Class=KRCC>
이것을 좀 주의하시면 좋을 것 같아요. 내가 단순하게 ‘이 문제를 어떻게 풀 거야.’가 아니라 얘가 어디 단원에 있다, 어디 단원에 있을 거야, 이것은 이것과 이게 연결되어 있어,
<SYNC Start=2899538><P Class=KRCC>
이것을 좀 생각하면서 푸시면 좋을 것 같습니다. 고생 많이 하셨고요. 오늘 개념 마지막 시간이었는데 같은 것이 있는 순열 퀴즈 나가니까 꼭 풀어서 후기에 올려 주시면 될 것 같습니다.
<SYNC Start=2909981><P Class=KRCC>
다음 시간에 저는 문제 풀이로 찾아오도록 할게요.
<SYNC Start=2912932><P Class=KRCC>
&nbsp;
<SYNC Start=2914187><P Class=KRCC>
(오늘의 퀴즈) 다섯 개의 숫자 1, 2, 3, 4, 5를 모두 일렬로 나열하여 다섯 자리 자연수를 만들 때, 1이 2보다 왼쪽에 나열되는 홀수인 자연수의 개수는? ①16 ②18 ③20 ④22 ⑤24
<SYNC Start=2934985><P Class=KRCC>
&nbsp;
</BODY>
</SAMI>