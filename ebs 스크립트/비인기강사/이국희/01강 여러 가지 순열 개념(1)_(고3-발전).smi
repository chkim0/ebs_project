<SAMI>
<HEAD>
<TITLE>Time Tools (C) CCNSOFT 2005</TITLE>
<STYLE TYPE="text/css">
<!--
P { margin-left:8pt; margin-right:8pt; margin-bottom:2pt;
    margin-top:2pt; font-size:12pt; text-align:left;
    font-family:굴림, Arial; font-weight:normal; color:white;
    background-color:#405A8D; }
.KRCC { Name:한국어; lang:ko-KR; SAMIType:CC; }
#STDPrn { Name:Standard Print; }
#LargePrn { Name:Large Print; font-size:20pt; }
#SmallPrn { Name:Small Print; font-size:10pt; }
-->
</STYLE>
</HEAD>
<BODY>
<SYNC Start=10065><P Class=KRCC>
만점으로 가는 최단 경로 2024 수능특강 확률과 통계 함께하고 있는 저는 이국희고요. 여러분 1강에서 이렇게 만나뵙게 돼서 정말 반갑습니다. 여러분들의 최상의 목표는 무엇인가요? 다양할 수 있겠죠. 
<SYNC Start=23986><P Class=KRCC>
여러분들이 직업을 최상의 목표로 둘 수도 있고요. 내가 어떤 대학교를 가는 걸 최상의 목표로 둘 수도 있고요. 아니면 내가 되게 가치 있는 일을 최상의 목표로 둘 수도 있습니다. 
<SYNC Start=34023><P Class=KRCC>
그 어떤 거든지 여러분들의 목표로 정한 거를 다 존중하고요. 여러분들은 그 목표를 향해 나아가야 됩니다. 그런데 어떤 책에서 이런 얘기를 하더라고요. 
<SYNC Start=43613><P Class=KRCC>
최상의 목표를 세워놓고 그 안에 마치 수학에서의 수형도처럼 하위 그룹의 목표들을 세워놔야 된다고 하더라고요. 우리가 어떤 목표 하나만 추상적으로 생각을 하면 내가 지금 당장 해야 될 걸 생각하지 못하거든요. 
<SYNC Start=57642><P Class=KRCC>
그런데 최상의 목표를 정해 놓고 그 밑에다가 이렇게 가지치기하듯이 그 하위 그룹의 목표를 정해 놓으면 내가 지금 뚜렷하게 뭘 해야 되는지가 보인다고 합니다. 
<SYNC Start=67355><P Class=KRCC>
여러분들이 지금 코앞에 있는 최상의 목표 중에서는 아마 수능 만점 아니면 수능에서 정말 좋은 성적을 얻는 게 대부분이겠죠. 그럼 그 최상의 목표를 향해서 달려가야 될 건데 그 목표들을 향해서는 여러분들이 그 하위 그룹에 있는 목표를 잘 세워놔야 됩니다. 
<SYNC Start=85621><P Class=KRCC>
그중에 하나가 저와 지금 시작하게 되는 수능특강일 거예요. 이 수능특강 강좌는 연계 교재로서 굉장히 큰 의미가 있고요. 여러분들이 수능을 준비하는 친구들이라면 무조건 다 필독을 해야 되는 그런 교재이자 강좌입니다. 
<SYNC Start=99550><P Class=KRCC>
여러분들이 1강부터 35강까지 진행을 할 건데 저와 함께하는 이 강좌 시간에 최선을 다해서 공부를 해 주시고요. 이 강좌만 들으면 만점이 된다, 이런 말씀은 못 드리겠지만 
<SYNC Start=110915><P Class=KRCC>
이 강좌를 들으면 누구나 만점이 될 수 있는 자격은 갖출 수 있다고 말씀드리고 싶습니다. 그러니까 어쨌든 여러분들의 노력이 거기에 더해지면 누구나 다 만점으로 갈 수 있거든요. 
<SYNC Start=121865><P Class=KRCC>
그래서 열심히 저와 함께 시작을 해 보면 좋을 것 같습니다. 총 35강이고요. 여러분들 처음 시작부터 각 단원별로 제가 조금씩 나눠놔서 이렇게 문제도 준비를 해 놨으니까 꼼꼼하게 자료실에 있는 거 다운받아서 공부하시면 될 것 같습니다. 
<SYNC Start=138360><P Class=KRCC>
첫 번째 단원입니다. 우리 원순열인데요. 우리가 수능개념이라는 강좌가 있고요. 그리고 저하고 함께했던 친구들이 대부분 여기에 들어올 것 같은데 수능개념에서 제가 원순열 때 강조했던 포인트들, 그거에 대한 얘기를 간단하게 또 할 거고요. 
<SYNC Start=153597><P Class=KRCC>
이게 아무래도 문제 풀이랑 그다음에 개념이 좀 섞여 있는데 수능완성과 수능특강은 조금 결이 다릅니다. 수능완성은 정말 실전 연습을 하는 그런 강좌고요. 
<SYNC Start=163132><P Class=KRCC>
그런 교재고 수능특강은 개념과 그다음에 문제를 연결해 주는 그런 교재이자 강좌라고 보시면 됩니다. 그래서 지금까지 수능 개념으로 들었던 친구들도 마지막이라는 생각으로 이 수능특강에서 개념 정리 한번 깔끔하게 하시고 
<SYNC Start=178103><P Class=KRCC>
문제 풀이하면서 또 설명해 드리는 그런 개념들을 꼼꼼하게 필기해 두시면 훨씬 더 도움이 될 겁니다. 어쨌든 수학이라는 교과목도 공부할 양이 많기 때문에 단권화를 해 놓는 게 좋거든요. 
<SYNC Start=189043><P Class=KRCC>
이 교재가 됐든 아니면 제가 올려드리는 발상 노트가 됐든 그런 것들을 이용하셔서 내가 최선의 노력을 해서 어쨌든 효율적으로 이렇게 진행할 수 있게끔 계획을 짜시기 바랍니다. 알겠죠? 
<SYNC Start=203415><P Class=KRCC>
원순열이에요. 원순열은 원형으로 배열을 하는 거죠. 원형으로 배열을 하는 거다. 이때 이제 전제 조건이 뭐냐면 서로 다른 것입니다, 서로 다른. 서로 다른 n개가 있는데요. 
<SYNC Start=221656><P Class=KRCC>
이 친구를 일직선으로 배열하는 게 아니라 원에다가 배열을 하는 거예요. 그러면 직선과 다른 점은 이 원순열이라고 하는 거는 회전을 했을 때 같은 것들이 생기기 때문에 그 같은 것들은 경우의 수에 포함되면 안 됩니다. 
<SYNC Start=233443><P Class=KRCC>
그러니까 그런 것들을 빼줘야 된다는 얘기예요. 그럼 일단 예시로 들어보면 여기에 원형이 있고요. 4개만 할까요? a, b, c, d가 있다고 한번 해 보죠. 그럼 이 친구가 이렇게 배열되어 있는 거나 아니면 a부터 시작하는데 여기 b에서 출발을 하는 거예요. 
<SYNC Start=248510><P Class=KRCC>
abcd이거나 abcd이거나 아니면 abcd나 다 같은 경우다. 그러니까 abcd라고 하는 순서가 사실 직순열로 따지면 하나였지만 그리고 얘가 순서가 밀리면 그거에 따라서 경우의 수가 추가가 됐지만 원순열은 그렇지 않다고요. 
<SYNC Start=266822><P Class=KRCC>
그러니까 어쨌든 원형이라는 데에 배열을 하게 되면 같은 경우가 생기기 때문에 그런 것들을 다 없애주는 그런 처리를 해 줘야 됩니다. 가장 대표적인 게 이런 거죠. 4개를 직순열로 배열을 합니다. 
<SYNC Start=279552><P Class=KRCC>
여기다가 일단 직순열이라고 써볼게요. 직선에다 배열하는 수열이에요. 저하고 수업 여러 번 들었던 친구들은 이미 익숙할 거고 4!이라고 하는 걸로 계산을 해 놓고요. 내가 같은 경우의 수가 몇 개가 생기는지를 보는 겁니다. 
<SYNC Start=295292><P Class=KRCC>
몇 개가 생기죠? 4개가 생깁니다, 이렇게. 따라서 이 친구는 3!이다, 이런 결과가 나오겠죠. 그럼 여기서 나눠주는 이 4라고 하는 건 뭐냐면 같은 자리라고 보면 돼요. 
<SYNC Start=311048><P Class=KRCC>
a라고 하는 친구가 여기에 있는 거나, 여기에 있는 거나, 여기에 있는 거나, 여기에 있는 거나 똑같습니다. 그러면 거기부터 출발해서 abcd의 순서로 가는 거는 똑같은 경우의 수다, 이런 얘기죠. 
<SYNC Start=320526><P Class=KRCC>
그러니까 다음과 같이 배열하는 게 가장 기본적인 형태다. 괜찮아요? 아니면 이렇게 해 주는 것도 괜찮습니다. 여러분들이 이걸 그냥 딱 암기를 하는 거예요. 가만 봤더니 결과가 3!이야. 그러면 n개다. 
<SYNC Start=334983><P Class=KRCC>
이 친구는 n-1!이다, 이렇게 기억을 하는 게 좋겠죠. 여러분들 대부분은 다 이렇게 풀지 않을까 이런 생각을 하는 거예요. 그다음에 여러분들이 원순열에서는 포인트가 두 가지가 있습니다. 
<SYNC Start=350213><P Class=KRCC>
이게 가장 기본적인 거고 여러분들 공식으로도 기억할 수 있는 이 형태인데 같은 자리 수만큼 나눠주는 게 있고요. 두 번째 방법은 이런 거예요. 일단 4명 중에서 1명이 가서 앉습니다. 
<SYNC Start=362451><P Class=KRCC>
그런데 이 4명 중에 1명이 앉는다는 건 어차피 그들 중에 누군가는 당연히 앉을 거잖아요. 그러니까 순서만 그냥 먼저 앉고 나중에 앉고는 중요하지 않으니까 4명 중에 아무나 딱 p개 해서 그냥 배열해요. 
<SYNC Start=376473><P Class=KRCC>
그럼 그게 1가지 경우예요. 선생님, 네 자리가 있는데요? 아니죠. 네 자리 중에서 이제 한 자리만 딱 차지할 거니까 그냥 한 자리라고만 생각하시면 됩니다. 다른 자리 아니에요. 
<SYNC Start=388785><P Class=KRCC>
원형이라고 하는 거는 이 원형에 바깥이 다 하얀색으로 둘러싸인 아니면 배경이 다 똑같은 그런 상태이기 때문에 자리마다 구분되어 있는 상태가 아닙니다. 알겠죠? 여기에 만약에 제가 앉았어요, 여기에. 
<SYNC Start=402474><P Class=KRCC>
국희 쌤이 앉았습니다. 그러면 저하고 같이 하고자 하는 학생들, 수업 듣는 친구들이 저하고 가까이 앉으려고 할 수도 있고요. 멀리 떨어져 앉을 수도 있겠죠. 
<SYNC Start=412357><P Class=KRCC>
그러면 제가 여기 앉는 순간 이 나머지 자리는 다 다른 자리가 되는 거예요. 그럼 이렇게 생각을 하는 거예요. 제가 먼저 가서 앉았고 나머지 세 학생이 앉아야 되는데 그 세 학생은 다 다른 자리다. 
<SYNC Start=426239><P Class=KRCC>
회전했을 때 같은 자리가 생기는 거는 하나도 없다. 그러니까 이 뒤에 그냥 직순열로서 3!을 곱해 주면 되는 겁니다. 그래서 첫 번째, 이 친구는 먼저 가서 착석을 하는 거고요. 그다음에 이 3명에 대한 거는 직순열로 앉는 거다. 
<SYNC Start=442680><P Class=KRCC>
왜? 이미 누군가 가서 앉아 있다는 거는 이미 그냥 원순열의 기능을 잃어버린 거예요. 그러니까 1을 곱하고 그다음에 3!을 해도 결과는 똑같이 3!이 되겠다. 이게 원순열의 기본 아이디어입니다. 알겠죠? 
<SYNC Start=456959><P Class=KRCC>
이 두 가지를 잊으시면 안 돼요. 항상 제가 강조하는 건 이 두 가지 아이디어입니다. 어쨌든 공식은 n-1! 이거 모르는 친구는 거의 없겠죠. 됐나요? 그다음에 이제 교재에 보시면 n명 중에서 r명이 원형에 앉는다. 
<SYNC Start=477038><P Class=KRCC>
원탁에다가 배열을 한다, 이런 얘기가 나오거든요. 이것도 어렵게 생각할 필요는 없습니다. 원순열의 기본 개념만 익히시면 돼요. 기본 개념이 뭐였죠? 직순열, 일단 일반적으로 순열을 계산을 해 놓고 그다음에 같은 자리만큼을 나눠주는 거다. 
<SYNC Start=497671><P Class=KRCC>
그러면 보세요, n명이 어쨌든 있는데 그중에서 r명을 택해서 원형에다가 배열을 하겠다는 거죠. 그러면 원형에 앉을 사람들은 r명이라는 얘기죠. 그러면 전체는 n명이었어요. 
<SYNC Start=512587><P Class=KRCC>
그럼 n명 중에서 내가 r명을 택해서 원형에다 배열을 할 거기 때문에 일단 그걸 직순열로 계산을 합니다. 그게 뭐냐면 nPr이 되는 거겠죠. 됐나요? 그런데 이 친구가 원형이 앉았기 때문에 같은 자리들이 생길 수밖에 없겠다. 
<SYNC Start=528303><P Class=KRCC>
그런데 그 자리가 몇 개예요? r명이 앉을 거니까 r개겠지. 그러니까 얘를 r로 나눠주면 되는 겁니다. 외우라는 얘기가 아니라 그냥 이해를 하라는 얘기예요. 
<SYNC Start=537794><P Class=KRCC>
단순하게 그냥 공식으로 외우는 원순열은 여러분들 수능 준비할 때 적합하지 않아요. 제가 OT 때도 말씀드렸지만 그리고 뒤에서도 계속 말하겠지만 수능다움을 익히셔야 됩니다. 어떤 문항의 수능다움이 뭔가 보여야 돼요. 
<SYNC Start=553272><P Class=KRCC>
그거에 대한 안목이 생기셔야 됩니다. 그래서 어쨌든 이런 거 외우는 게 아니라 이해를 하는 거다. 그래서 이런 문제 풀 때 다양하게 해석할 수 있겠지만 기본 원리에 입각해서 이렇게 해결하시면 됩니다. 
<SYNC Start=565866><P Class=KRCC>
이게 원순열의 기본 개념 전부입니다. 알겠죠? 그럼 어떻게 원순열이 나오는지를 한번 보도록 하죠. 제가 수능다움이라고 이름을 붙였는데 내신에서도 당연히 이렇게 출제가 될 수 있겠지만 
<SYNC Start=577141><P Class=KRCC>
어쨌든 우리는 수능을 준비하는 입장이기 때문에 수능에 입각해서 제가 패턴을 좀 정리를 해봤습니다. 첫 번째 이웃하는 것과 이웃하지 않는 것들에 대한 문제가 출제가 됩니다. 
<SYNC Start=589631><P Class=KRCC>
얘는 원순열뿐만 아니라 어떠한 경우의 수든지 간에 항상 나올 수 있는 개념이니까 이거는 거의 다 대부분 아실 거고 교대로라고 하는 건 물론 직순열에서도 나올 수 있지만 이 교대로가 거의 원순열에서 많이 나와요. 
<SYNC Start=604314><P Class=KRCC>
그래서 이 친구는 이렇게 해결하셔야 됩니다. 그룹을 설정을 하셔야 돼요. A그룹, B그룹. 그래서 A그룹을 먼저 내가 배열을 하고요. 먼저 배열. 그다음에 B그룹을 배열을 하는 거다. 
<SYNC Start=622404><P Class=KRCC>
이때 주의해야 할 거는 원순열이기 때문에 원탁에다가 먼저 A그룹을 배열을 한다는 얘기죠. 그럼 이 A그룹은 원형에 먼저 앉기 때문에 얘는 원순열로서의 기능을 하는 겁니다. 원순열로 계산을 하셔야 돼요. 
<SYNC Start=635047><P Class=KRCC>
그런데 이미 A그룹이 앉았어. 그럼 그 뒤에 B그룹이 앉는 거는 직순열이에요. 왜? 이미 아까 원순열, 원형에 내가 앉아 있으면 다 다른 자리라니까요. 내 왼쪽, 내 오른쪽, 내 맞은편 이렇게. 
<SYNC Start=649872><P Class=KRCC>
그러니까 그룹 자체가 원순열로 먼저 배열이 되고 그다음에 직순열로 배열이 되는 거다. 제가 이런 것들 발상 노트에다가 다 써놨습니다. 정말 제가 야심차게 준비를 한 거기 때문에 여러분들은 그냥 다운받아서 읽으시면 돼요. 
<SYNC Start=663172><P Class=KRCC>
복습하기 가장 최적의 자료이지 않을까, 그런 생각을 합니다. 3번 다각형 순열인데요. 이번 교재에는 나와 있지 않아서 제가 작년 교재 중에서 BOGO 문제로 좀 준비를 해 놨습니다. 이때 다시 한번 또 정리를 할 거고요. 
<SYNC Start=677861><P Class=KRCC>
색칠하는 경우도 당연히 출제가 많이 되고 있죠. 그래서 여러분들 레벨1에 보시면 또 나와 있습니다. 마주 보는 경우도 당연히 있고요. 그래서 마주 보는 거나 아니면 어쨌든 자리에 대한 조건을 먼저 주는 것들이 있죠. 
<SYNC Start=690765><P Class=KRCC>
그럼 이 조건을 먼저 해결을 해야 된다. 먼저 해결을 하고 그다음에 이 조건과 상관없는 나머지들 있죠. 그 친구들을 배열을 해 주면 되는 겁니다. 
<SYNC Start=701659><P Class=KRCC>
그래서 어쨌든 확률과 통계를 감으로 푸는 친구들은 저하고 수업 들을 때 정말 많은 것들이 깨질 겁니다. 나의 기본적인 수학을 대하는 태도도 깨질 거고요. 그리고 문제 풀이하는 패턴도 깨질 거고요. 
<SYNC Start=714911><P Class=KRCC>
시험장 안에서도 여러 가지가 다 깨질 겁니다. 그러니까 그게 깨지셔야 성적이 올라요. 그래서 그냥 단순하게 내가 감각으로만 의존했던 친구들은 논리적이구나, 확률과 통계는 정말 논리적이구나, 
<SYNC Start=728871><P Class=KRCC>
이거를 깨닫는 시간이 되셔야 됩니다. 그래서 어쨌든 이런 유형으로 나오고요. 우리 직접 문제를 좀 풀어보겠습니다. 원순열 예제고요. 레벨1보다 예제와 유제가 더 어렵습니다. 
<SYNC Start=742568><P Class=KRCC>
그래서 예제, 유제를 더 집중해서 보시고 오히려 레벨1이 제일 수능특강에서는 쉬워요. 그래서 그쪽 파트는 정말 교과서적인 개념으로만 해결할 수 있습니다. 그림과 같이 원형의 탁자의 중심에 원이 그려져 있습니다. 
<SYNC Start=756041><P Class=KRCC>
원형의 탁자 나왔고요. 탁자의 둘레에 따라 원 8개가 일정한 간격으로 그려져 있습니다. 숫자 1, 2, 3, 4, 5가 하나씩 적힌 흰 공 5개와 그다음에 6, 7, 8, 9가 하나씩 적힌 검은 공 4개가 있더라. 됐죠? 
<SYNC Start=770368><P Class=KRCC>
그룹 2개예요. 그럼 그 그룹에 따라서 뭔가 배열하는 게 달라질 수도 있고 아니면 그 그룹끼리 연관되어 있는 게 있고 그건 문제를 봐야 되겠죠. 어쨌든 이걸 만족시키도록 탁자 위에 모두 놓는다. 
<SYNC Start=783406><P Class=KRCC>
회전하여 일치하는 것은 같은 것으로 본대요. (가), 탁자의 중심에 그려진 원에는 흰 공 한 개를 놓는다고 합니다. 그럼 이것부터 먼저 처리를 해 줘야 되겠지. 여기 가운데에는 흰 공을 놓습니다. 
<SYNC Start=795789><P Class=KRCC>
그럼 이 흰 공으로 가능한 것들은 5가지가 되겠다. 이게 첫 번째. 두 번째, 탁자의 둘레를 따라 그려진 원 위에 흰 공의 양옆에는 반드시 검은 공이 있도록 한다. 
<SYNC Start=810035><P Class=KRCC>
얘가 어떤 느낌이 드냐면 사실 일반적으로 얘는 이웃하는 문제라고도 볼 수 있거든요. 그런데 이 문제는 좀 다릅니다. 연계 교재로서 제가 의미가 있다고 하는 거는 이런 것들의 포인트들을 잘 기억해 두셔야 
<SYNC Start=823497><P Class=KRCC>
수능장에 다른 표현이지만 내가 이게 이렇게도 해석될 수 있다는 거를 경험한 그 능력치, 그걸 가지고 수능장에 가는 거예요. 그럼 훨씬 더 든든하거든요. 보세요. 흰색이 이미 사용이 됐습니다. 
<SYNC Start=838053><P Class=KRCC>
그러면 하얀색 몇 개 남았어요? 4개. 검은색 몇 개 남았어요? 4개 남았어요. 그럼 이게 총 8개예요. 그러면 생각을 해 봐요. 흰색 양 옆에 반드시 검은 공이 와야 된다고 했는데 흰색이 여기에 있고요. 
<SYNC Start=854409><P Class=KRCC>
검은색이 이렇게 양옆에 있습니다. 그런데 흰색과 검은색의 개수는 똑같아요. 그 말은 무조건 검은색 옆에는 또 흰색이 와야 된다는 얘기입니다. 그럼 얘가 뭐야? 이 문제는 이웃하는 문제라기보다는 교대로 앉는 문제와 동일한 겁니다. 
<SYNC Start=878094><P Class=KRCC>
표현만 좀 다를 뿐이에요. 따라서 흰색부터 먼저 배열을 할게요. 그럼 흰색 4개를 원형에다 배열하는 거기 때문에 원형 원순열 3! 해 주고요. 그러면 이미 앉았어. 그럼 만약에 여기에 하얀색 앉았고요. 
<SYNC Start=893092><P Class=KRCC>
그리고 여기에 앉았고요. 여기에 앉았고요. 그리고 여기에 앉았습니다. 이쪽 오른쪽에, 여기에. 선생님, 의자가 8개 있기는 하지만 이 사이사이에 앉는 것까지 이렇게 띄엄띄엄 앉는 거를 이미 애초에 고려할 필요는 없지 않나요? 맞아요. 
<SYNC Start=911370><P Class=KRCC>
그래서 여러분들이 직접 풀 때 이렇게 생각을 하는 거야. 여기에 가운데에 흰색 앉았고요. 그리고 그냥 4명이 이렇게 앉은 겁니다. 이렇게 생각해요. 그다음에 검은색을 배열할 때는 제가 여러 번 말씀드리잖아요. 
<SYNC Start=924345><P Class=KRCC>
나중에 오는 애들은 의자를 직접 들고 오는 거다. 그러면 의자가 여기 사이사이에 들어가게끔만 배치를 해 주면 되는 겁니다. 그러니까 이거는 여러분들이 교대로라고 했기 때문에 이대로 앉히면 된다, 딱 결정하는 거예요. 
<SYNC Start=937681><P Class=KRCC>
그러니까 어쨌든 흰색이 앉을 자리는 앉는 경우에 수는 3!, 그다음에 검은색이 앉는 경우의 수 몇 가지예요? 얘는 직순열이야. 왜? 이미 흰색이 앉았으니까. 4!. 따라서 결정적으로 답을 구할 때 5×3!×4!이 될 겁니다. 됐나요? 
<SYNC Start=957401><P Class=KRCC>
그럼 30에다가 24가 될 거니까 얼마죠, 얘가? 720겠다. 정답은 720입니다. 됐어요? 좋은 문제입니다, 이거. 이 표현법 꼭 익히셔야 돼요. 
<SYNC Start=971760><P Class=KRCC>
그러니까 막 익혀라 하면 또 외운다, 이게 아니라 이렇게 나왔는데 얘가 무조건 이웃하는 걸로 푸는 건 아니구나 교대로로 해석이 되는 상태가 되는구나. 왜? 개수가 똑같기 때문에. 알겠죠? 
<SYNC Start=984347><P Class=KRCC>
예제 1번이었고요. 유제 1번입니다. 그림과 같이 원형의 탁자에 6개의 의자가 일정한 간격으로 놓여 있고요. 3학년 학생 2명과 2학년 학생 3명이 의자에 앉는다. 그럼 얘도 어쨌든 그룹이 이렇게 나눠져 있네요. 
<SYNC Start=999866><P Class=KRCC>
빈 의자에 바로 양 옆에 3학년 학생이 앉는 경우의 수를 구하여라. 그럼 볼게요. 의자가 몇 개예요? 일단 6개예요. 그런데 학생 수는 학생은 5명이에요. 그럼 이 상태라면 무조건 빈 의자가 생길 수밖에 없겠죠. 
<SYNC Start=1020940><P Class=KRCC>
그래야 이것과 이 의자의 6개가 같아질 거니까. 그런데 가만 보니까 빈 의자의 바로 양 옆에는 3학년 친구들이 앉는대요. 심지어 3학년은 몇 명이야? 2명이야. 그러면 3학년 전체가 그냥 빈 의자 바로 양 옆에 앉아야 된다는 얘기죠. 
<SYNC Start=1037521><P Class=KRCC>
그러니까 얘는 그냥 묶어버리면 되는 거야. 이렇게. 이런 작업을 하는 걸 제가 덩어리 작업이라고 했었죠. 덩어리로 묶어요. 그러면 이 덩어리는 어떻게 구성된 거냐면 3학년 친구와 그다음에 빈 의자, 그다음에 3학년 친구 이렇게 배열이 된 겁니다. 
<SYNC Start=1055463><P Class=KRCC>
그럼 이 세부적인 거는 나중에 해 주면 되는 거고요. 여러분들은 이 덩어리에다가 나머지 3개를 원형에다 배열하는 거니까 4명을 배열하는 것과 마찬가지죠. 그러니까 3!이에요. 괜찮아요? 
<SYNC Start=1069790><P Class=KRCC>
그다음에 이 안에서 바뀌는 게 있겠죠. 예를 들어 3학년에 A라고 하는 친구가 있고 B라고 하는 친구가 있어요. 이거하고 B라고 하는 친구가 여기 앉고 A라고 하는 친구가 여기 앉는 건 다르잖아요, 엄연히. 
<SYNC Start=1082710><P Class=KRCC>
빈 의자를 기준으로 놨을 때 내 옆에 왼쪽에는 A, 오른쪽에는 B 다르잖아요. 여기는 B, 여기는 A 다르잖아요. 따라서 3!에다가 여기 양 옆에 있는 거 배열하는 거 2명을 배열하는 거니까 2!. 
<SYNC Start=1097033><P Class=KRCC>
아니면 그냥 2개 자리 바꾸는 거니까 2 이렇게 곱해도 되고요. 6×2다. 답은 12 이렇게 가는 겁니다. 괜찮죠? 그래서 그룹으로 묶이는 건데 앞에 거는 예제는 이제 교대로 앉는 거였고요. 
<SYNC Start=1111269><P Class=KRCC>
두 번째는 묶어서 하는 이웃하는 문제였다. 유제 2번, 여학생 2명과 남학생 n명이 모두 일정한 간격을 두고 원형의 탁자에 둘러 앉는다고 합니다. 전체 인원이 몇 명이죠? 이렇게 되면 n+2명이죠, n+2명. 
<SYNC Start=1127792><P Class=KRCC>
이때 여학생 2명이 이웃하게 앉는 이런 거면 그냥 딱 눈에 띄죠. 그럼 여학생 2명을 묶어야 되니까 전체 덩어리로 생각하면 n+1명이 되겠구나. 얘는 그냥 개라고 할까요? 사람이지만 그냥 덩어리까지 포함시킨 거니까. 
<SYNC Start=1146122><P Class=KRCC>
얘를 원형에다가 배열을 한 거예요, 원형에다가. 그럼 볼게요. 일단 여학생 2명을 이웃하게 한 상태에서, 그러니까 여기에 원형이 있는데 쭉 n명이 앉은 겁니다. 이게 남학생이야. 
<SYNC Start=1164948><P Class=KRCC>
그다음에 여학생이 A라고 하는 친구가 있고 B라고 하는 친구가 있는데 이 2명을 이웃하게 앉힌 거예요. 그럼 전체 덩어리를 포함하면 얘는 n+1개를 원형에다가 배열하는 거예요. 그러면 n!이에요. 맞아요? 
<SYNC Start=1181989><P Class=KRCC>
그러고 나서 이거 자리 바꾸는 거 곱해 줘야 되겠죠. 덩어리 내부에서. 그럼 2가 되겠다. 얘가 얼마예요? 그럼 계산한 게 48. 따라서 n!은 24가 되겠구나. 됐나요? 그럼 이거 n!은 n부터 1까지잖아요. 
<SYNC Start=1203390><P Class=KRCC>
이거 소인수분해서 해야 되는데 어느 정도 느낌이 오죠, 이 정도는. 4×3×2× 1이다. 얘는 24. 그래서 얘는 4가 되는 겁니다. 됐죠? 좋아요. 유제 2번까지, 우리 수능특강에 나와 있는 예재, 유제 원순열에 대한 건 다 풀었고요. 
<SYNC Start=1223256><P Class=KRCC>
이제 BOGO 문제 하나 갖고 와봤습니다. 다각형이 없길래 일부러 연계 교재 작년 거에서 올해 거하고 유사한 건 다 뺐고요. 사실 작년에 제가 수능특강 했을 때는 문항 수를 조금 더 넣을 수도 있었는데 이번에는 그렇게 많이는 못 넣어요. 
<SYNC Start=1238605><P Class=KRCC>
대신 그래도 제가 정말 필요한 거는 다 선정을 했습니다. 그러니까 걱정할 필요 없고요. 작년 연계 교재하고 올해 연계 교재 다 푼다고 생각하시면 됩니다. 그림과 같이 정삼각형 모양이 탁자에 일정한 간격으로 6개의 의자가 놓여 있고요. 
<SYNC Start=1251233><P Class=KRCC>
6명이 이 6개의 의자에 모두 앉는 경우의 수를 구하여라. 얘는 주제가 뭐예요? 다각형 순열이다. 그런데 이 다각형 순열이 교과서에서 딱 개념으로 나와 있지는 않거든요. 그런데 여전히 출제가 될 수 있는 포인트입니다. 
<SYNC Start=1271933><P Class=KRCC>
왜 그러냐? 이 아이디어 자체가 원순열로 시작을 하기 때문에. 그러니까 사실은 원순열이라고 단원을 딱 정해 놔서 그렇지, 이걸 제가 만약에 이름을 다시 붙인다. 그러면 이럴 것 같아요. 
<SYNC Start=1287199><P Class=KRCC>
같은 경우가 생기는 순열, 이렇게 붙일까요? 왜요? 원순열이니까 아까도 말했지만 같은 경우가 생기잖아요. 얘도 마찬가지예요. 같은 경우가 생기기 때문에 문젯거리가 되는 겁니다. 
<SYNC Start=1301148><P Class=KRCC>
그래서 제일 쉬운 것부터 제가 예시를 들어서 한번 볼게요. 사각형인데요. 다각형이죠, 얘도. 여기에 1명이 앉고요. 1명, 1명, 1명이 앉아요. 얘는 어떻게 될까요, 경우의 수가? 
<SYNC Start=1316053><P Class=KRCC>
선생님, 사각형이니까 원과는 좀 다르니까 계산법이 달라질 것 같은데. 아니고요. 원과 똑같습니다. 왜요? 이 자리나 이 자리나 이 자리나 이 자리나 내가 가서 앉을 때 다 똑같은 자리거든요. 
<SYNC Start=1328849><P Class=KRCC>
그러니까 얘는 그냥 4!을 4로 나눠준다. 원리는 똑같습니다. 그런데 만약에 제가 이렇게 해 볼게요. 똑같은 사각형인데 2명씩 앉아요, 이렇게. 그럼 얘는 어떻게 풀까? 
<SYNC Start=1349513><P Class=KRCC>
일단 첫 번째 아이디어로 생각을 해 보면 일단 직순열로 생각을 합니다. 8!이에요. 그다음에 같은 경우가 생기는 거를 고려하라고 했었죠. 그러면 볼까요? 예를 들어서 여기에서부터 A가 이렇게 출발을 합니다. 
<SYNC Start=1364855><P Class=KRCC>
그러면 여기에서 출발한 하나의 경우와 똑같아지는 자리가 또 생기죠. 그게 어디예요? 여기요, 하나. 또 어디가 있죠? 여기요. 또 어디가 있죠? 다른 색이 없네. 여기요. 이렇게. 
<SYNC Start=1388882><P Class=KRCC>
즉 이 A라고 하는 친구가 여기 앉아서 경로가 이렇게 생길 거 아니에요, 경우가. 그런데 그중에서 하나를 딱 선정을 했을 때 그 경우와 똑같아지는 게 얘, 얘, 얘, 얘가 있다고요. 
<SYNC Start=1400825><P Class=KRCC>
왜? 이 친구 왼쪽에 모서리가 이렇게 있거든요. 여기도 왼쪽에 모서리가 있고요. 얘 왼쪽에 모서리가 있고 얘 왼쪽에 모서리가 있고 오른편에 사람이 있고 오른편에 사람이 있고 오른편에 사람이 있고 오른편에 사람이 있고. 
<SYNC Start=1412977><P Class=KRCC>
그러면 같은 경우가 네 가지가 생기는 거다. 그래서 얘를 4로 나눠줘야 되는 겁니다. 알겠죠? 괜찮아요? 또 아니면 이렇게 해도 돼요. 이건 조금 어렵게 느낄 수도 있겠지만 아까 전에 그 원형을 계산할 때 원순열 계산할 때 첫 번째가 지금 이 아이디어였고요. 
<SYNC Start=1434534><P Class=KRCC>
두 번째가 누군가 가서 앉는다고 했죠. 그럼 보세요. A라고 하는 친구가 여기에 가서 앉았어요. 그냥 나는 가서 앉기만 한 거야. 그런데 여기 앉고 나서 남는 친구가 몇 명이에요? 7명이야. 
<SYNC Start=1448168><P Class=KRCC>
그럼 그 7명이 이미 얘가 여기 앉았기 때문에 7명끼리 여기 안에서 자리를 바꾸는 거는 7!로 끝나요. 왜? 회전해서 같은 경우들이 생기진 않거든요, A가 고정된 상태라면. 그러면 그 7!이 몇 개가 있을까요? 
<SYNC Start=1463478><P Class=KRCC>
A가 여기 앉을 수도 있지만 여기 앉을 수도 있겠죠. 선생님, 여기는요? 여기는 이거랑 똑같잖아요. 그러니까 고려하지 않는 거예요. 즉 여기에 앉거나 여기에 앉는 경우에서 두 가지가 있기 때문에 A가 앉을 수 있는 자리를 먼저 고려를 하고요. 
<SYNC Start=1478291><P Class=KRCC>
그런데 이게 A가 됐든 누가 됐든 상관이 없는 겁니다. 그냥 누군가 가서 한 명이 앉을 때 가서 앉는 다른 자리의 수를 생각하시면 돼요. 그래서 이 2는 다른 자리다. 애초에 시작을 다르게 할 수 있는 자리. 
<SYNC Start=1493995><P Class=KRCC>
그러고 나서 나머지는 어차피 직순열로 계산을 할 겁니다. 되세요? 그럼 이 결과가 어떨까? 똑같나 볼까요? 8, 7, 6, 5, 4, 3, 2, 1, 얘를 4로 나눕니다. 됐죠? 그럼 이 친구는 7, 6, 5, 4, 3, 2, 1이고요. 
<SYNC Start=1519335><P Class=KRCC>
거기에 2를 곱한 겁니다. 되세요? 그럼 여기 위에 있는 거랑 차이점이 여기 4가 없죠. 그런데 대신 8이 있어요. 그런데 여기에 있는 거 4를 만약에 빼요. 그럼 4하고 2하고 곱하면 얼마야? 얘하고 곱하면 8이죠.
<SYNC Start=1534359><P Class=KRCC>
그럼 8×7×6×5×3×2×1, 여기에 있는 거랑 완벽하게 똑같죠. 그래서 제가 원순열 기본에서 두 가지 포인트 기억하라고 했잖아요. 그게 다각형에서도 똑같이 일어나는 겁니다. 아시겠죠? 
<SYNC Start=1549225><P Class=KRCC>
그러니까 저게 사각형이든 삼각형이든 오각형이든 직사각형이든 상관이 없다니까요. 하나만 더 해 볼까요, 우리? 이거는 조금 어렵게 느낄 수 있으니까 여기에 1명이 앉고요. 여기에 3명이 앉는다고 해 볼까요? 
<SYNC Start=1566994><P Class=KRCC>
여기 1명, 3명. 그럼 이것도 첫 번째 아이디어로 한번 풀어보겠습니다. 일단 직순열로 생각을 하는 거야. 몇 명이에요, 이거? 똑같이 8명이에요. 그리고서는 얘는 같은 경우로 나누는 거다. 
<SYNC Start=1583877><P Class=KRCC>
얘가 A라고 하는 친구가 여기 앉아서 시작하는 하나의 경우와 여기 앉아서 시작하는 하나의 경우가 똑같습니다. 여기에 앉아요, 만약에. 그럼 이걸 기준으로 했을 때 여기에 앉아서 배열되는 거나 여기 앉아서 배열되는 거나 똑같습니다. 
<SYNC Start=1602356><P Class=KRCC>
같은 경우가 두 가지씩 생기겠구나. 그것만 하나로만 줄여주면 되는 거잖아요. 그다음 두 번째는 누군가 가서 앉겠지. 그런데 내가 가서 앉을 건데 내가 앉았을 때 다른 느낌이 드는 거, 사실 느낌이 아니라 이건 사실이죠. 
<SYNC Start=1619244><P Class=KRCC>
아예 다른 자리 하나, 둘, 셋, 넷이죠. 왜? 얘는 얘랑 똑같고 얘는 얘랑 똑같고 얘는 얘, 얘는 얘. 돼요? 내가 앉을 수 있는 다른 자리는 네 가지구나. 그리고 내가 여기에 앉았다면 이미 나머지 7명은 그냥 직순열이다. 
<SYNC Start=1636675><P Class=KRCC>
그러니까 얘는 7!. 괜찮죠? 그러면 얘도 똑같이 계산을 해 볼까요? 8, 7, 6, 5, 4, 3, 2, 1 이거를 2로 나눕니다. 쭉쭉 없어졌죠. 2만 빠진 거야, 8!에서. 그럼 얘는 4×7, 6, 5, 4, 3, 2, 1입니다. 
<SYNC Start=1660244><P Class=KRCC>
어때요? 8!에서 2만 빠졌어. 그럼 여기에 있는 거 2를 이쪽으로 한번 보내봐요. 여기 있는 거 곱하면 8이네. 그럼 8, 7, 6, 5, 4, 3, 1, 위에랑 똑같죠. 됐나요? 그런데 여러분들 어떤 게 편해요? 어떤 게 편해요? 
<SYNC Start=1678566><P Class=KRCC>
저는 개인적으로 이게 편합니다. 둘 중에 하나 선택하라고 하면. 왜? 심플하거든요. 내가 처음에 들어갈 때 다른 자리를 세는 게 훨씬 더 좋은 거예요. 그냥 보이거든, 이건. 다른 자리 몇 개지? 4개구나. 
<SYNC Start=1695626><P Class=KRCC>
그럼 거기다가 나 그냥 가서 앉고 나머지 친구들 배열하면 되겠다. 얘도 이 문제 풀어볼 거예요, 이제. 6명이 이 6개의 의자에 모두 앉는대요. 그럼 그냥 한 명이 가서 먼저 앉아볼게요. 
<SYNC Start=1706992><P Class=KRCC>
그럼 그 친구가 가서 앉아볼 때 다른 자리는 총 몇 가지예요? 두 자리밖에 없어요. 그럼 두 자리에다가 나머지가 5명, 5!. 돼요? 따라서 얘는 240개구나. 이거 5!은 120입니다. 5!은 120이에요. 따라서 2×120. 
<SYNC Start=1731331><P Class=KRCC>
그럼 아까 했던 첫 번째 방법으로도 풀어볼까요? 이것도 쉬우니까 6개니까 이 친구를 직순열로 일단 배열을 합니다. 그런데 같은 경우들이 생긴다는 거지. 여기에 있는 거부터 출발해서 생기는 게 있고요. 
<SYNC Start=1747791><P Class=KRCC>
또 이 자리와 똑같은 여기, 또 이 자리와 똑같은 여기. 몇 개예요? 3개다. 되세요? 따라서 이 친구하고 이 친구하고 완벽하게 똑같습니다. 됐나요? 좋습니다. 그래서 원순열에 대한 거는 개념으로 했을 때 이 정도면 정말 충분합니다. 
<SYNC Start=1766781><P Class=KRCC>
더 이상의 그런 거는 없고요. 대신 여기에 플러스 조건들이 추가되는 것뿐이니까 그 조건에 대한 해석만 잘 해결하시면 되는 거예요. 알겠죠? 이렇게 해서 원순열은 마무리를 하고요. 이제 중복순열로 넘어가겠습니다. 
<SYNC Start=1783231><P Class=KRCC>
중복순열. 제가 BOGO 문제 자료실에 다 올려놨으니까 그것도 여러분들 교재 풀듯이 미리 풀어보고 그다음에 오셔야 돼요. 그리고 제가 BOGO 문제 할 때는 이렇게 개념 편이 각 단원마다 있잖아요. 
<SYNC Start=1798167><P Class=KRCC>
그럼 거기에 따라서 다 BOGO 문제들을 한두 개씩 넣었는데 그 문제를 그냥 처음부터 번호를 매겨놨습니다. 그래서 이제 두 번째 중복순열에서 나오는 BOGO 문제는 다음 시간에 풀겠지만 그건 2번, 3번, 그 뒤에 건 3번, 
<SYNC Start=1813358><P Class=KRCC>
이렇게 나갈 거니까 단원마다 번호가 끊어지지 않아요. 그래서 큰 단원만 묶여서 그 안에서 번호가 이렇게 진행될 거니까 헷갈릴 필요는 없을 것 같습니다. 알겠죠? 그래서 여러분들 교재 보시면 6페이지예요. 
<SYNC Start=1826374><P Class=KRCC>
중복순열 6페이지, 그러면 이 개념을 좀 볼 건데 얘는 여러 번 공부했으니까 알 것 같은데요. 이 중복순열은 이름을 별로 기억할 필요는 없다. 그리고 이름도 그렇고 계산법도, 이름에다가 계산법이라고 하면 이제 π라고 하는 게 나오잖아요. 
<SYNC Start=1852624><P Class=KRCC>
그런데 그 π에 대한 계산식을 굳이 활용할 필요는 없습니다. 여러분들이 직접 내가 어떤 문제를 풀 때 단순하게 딱 떨어지는 계산이 있는데 그거를 굳이 수학에서 약속한 표현대로 바꿀 필요는 없거든요. 
<SYNC Start=1867784><P Class=KRCC>
시간도 없는데. 얘는 그냥 거듭제곱에 대한 걸로 해결을 하시면 돼요. 그리고 더 정확히 표현하면 이 친구의 기본 원리는 곱의 법칙입니다. 
<SYNC Start=1879880><P Class=KRCC>
제가 이제 수능특강이라서 이 얘기까지는 뺐는데 여러분들 제가 수능개념 강좌에다가 뭘 올려놨냐면 3개로 좀 준비를 해 놨고요. 기본적으로 확률과 통계를 풀어낼 때의 아이디어, 그게 이제 수세기의 구조와 원리, 
<SYNC Start=1901348><P Class=KRCC>
이렇게 제가 제목을 붙여놨는데 수능개념 제 강좌에 들어가시면 거기 딱 세 강좌가 여러분들이 경우에서 문제를 해결하기 위한 가장 기본 베이스가 되는 거를 쭉 풀어놨습니다. 내용도 자세하게 해 놨고요. 
<SYNC Start=1916787><P Class=KRCC>
그리고 여러분들이 특별하게 교재를 구매 안 하셔도 충분히 들으면서 할 수 있는 내용이니까 꼭 만약에 곱의 법칙과 합의 법칙에 대한 내용들을 조금 더 정확하게 알고 싶다 그러면 그 강좌를 들으시면 됩니다. 
<SYNC Start=1929332><P Class=KRCC>
그래서 이 곱의 법칙과 합의 법칙에 대한 내용까지도 자세하게 나와 있고요. 어쨌든 이 중복순열은 그냥 곱의 법칙이 전부다. 그리고 여러분들이 중학교 개념으로 생각을 한다면 수형도의 형태로 해결을 해도 괜찮습니다. 
<SYNC Start=1945947><P Class=KRCC>
수세기라고 하는 게 우리가 지금부터 배우는 원순열, 중복순열, 그다음에 뒤에 나오는 조합들 이런 것들은 계산을 좀 편하게 하기 위한 하나의 기능성 있는 아이템을 갖고 가는 거고요. 
<SYNC Start=1959842><P Class=KRCC>
이 아이템들이 없어도 내가 수세기를 할 수는 있습니다. 그게 기본이 되는 게 수형도, 곱의법칙, 합의 법칙 이런 것들이에요. 그러니까 그런 걸로 문제를 푼다고 해서 문제 될 게 전혀 없습니다. 
<SYNC Start=1971913><P Class=KRCC>
대신 우린 시험을 봐야 되기 때문에 이런 아이템들을 장착해야 조금 더 빠르게 풀 수 있고 조금 더 효과적으로 식을 구성할 수 있다는 거죠. 그러니까 이 중복 선열에서만큼은 수형도나 이런 아이디어들을 곱의 법칙으로 해결하는 것도 충분히 괜찮습니다. 
<SYNC Start=1986222><P Class=KRCC>
그래서 여러분들 공부할 때 너무 부담 가질 필요는 없을 것 같아요. 시작은 이렇게 되죠. 서로 다른 n개가 있는데요. 이 n개를 배열을 할 건데 내가 중복을 허용해. 중복을 허용해서 r개를 팩하고요. 
<SYNC Start=2009839><P Class=KRCC>
그런 다음에 나열을 하는 거다. 나열까지 고려를 해야 됩니다. 알겠죠? 그러면 여기에서 중요한 포인트는 당연히 이름에서도 알 수 있다시피 중복을 허용하는 겁니다. 그러면 생각을 한번 해 볼까? 내가 r개를 뽑을 거예요. 
<SYNC Start=2032188><P Class=KRCC>
여기에 r개가 있다고 한번 해 보시죠. 이렇게 r개. 그리고선 얘를 나열을 하는 겁니다. 나열을 한다는 거는 다시 말하면 순서가 있단 얘기입니다. 순서를 고려해야 된다. 생각을 해 볼게요. 서로 다른 n개가 있어요. 
<SYNC Start=2050873><P Class=KRCC>
그냥 n개의 카드라고 해 볼까? 그럼 그 카드를 여기다가 이제 놓는 겁니다. 그런데 여기 첫 번째 자리가 있겠죠. 그다음에 여기 두 번째 자리가 있을 거고요. 
<SYNC Start=2059972><P Class=KRCC>
여기 세 번째 자리가 있을 거고 네 번째 자리가 있을 거고 다섯 번째 자리가 있을 겁니다. 그럼 이 자리에 들어올 수 있는 거는 총 n가지가 될 거예요. 왜? n개 카드 있는데 첫 번째 자리 할 거 그냥 들어가면 돼, 그중에 하나. 
<SYNC Start=2074408><P Class=KRCC>
두 번째 자리도 몇 개가 될까요? n개가 될 겁니다. 왜요? 중복을 허용한다고 했으니까 여기에서 뽑았던 거 또 뽑아도 상관없다고요. 얘도 n개야. 얘도 n개고 얘도 n개예요. 그러면 얘들끼리는 어떻게 계산을 해야 될까? 
<SYNC Start=2091209><P Class=KRCC>
첫 번째 자리에 뭐가 오느냐에 따라 두 번째 자리에 오는 거, 세 번째 자리에 오는 거 다 영향을 받는 거죠. 물론 앞자리에 뭘 썼다고 해서 두 번째 자리를 못 쓰는 건 아니지만 얘들이 하나의 어떤 문자 
<SYNC Start=2102409><P Class=KRCC>
아니면 숫자를 구성할 때 첫 번째 자리에 오고 두 번째 자리 오고 세 번째 자리 오고 네 번째 자리 오고 다섯 번째 자리에 오는 거는 영향이 있는 거라고요. 그러니까 얘는 곱의 법칙을 쓰는 거다. 
<SYNC Start=2112519><P Class=KRCC>
그래서 첫 번째 자리에 오는 거 n가지, 두 번째 자리에 오는 거 n가지, 세 번째, 네 번째, 다섯 번째. 다 다른 숫자가 될 거야, 만약에 이걸 숫자라고 한다면. 
<SYNC Start=2123587><P Class=KRCC>
그러니까 이 친구를 이렇게 놓으면 되는 건데 내가 지금 이거 5개로 썼지만 실제 r개입니다, r개. 알겠죠? 5개로 썼네. 그러면 5개로 해요. 그리고서 r개를 확장하면 되지. 눈에 보이는 대로 r개를 5개로 바꿉니다. 
<SYNC Start=2142548><P Class=KRCC>
그럼 어쨌든 이게 계산하게 되면 n이 5개가 있는 거구나. 괜찮아요? 그러면 확장팩, 이번에는 땡땡땡으로 해야겠다. 이렇게 하게 되면 얘가 r개가 됩니다, r개. r자리라고도 해도 되고요. 됐나요? 
<SYNC Start=2163993><P Class=KRCC>
그러면 여기에 올 수 있는 거 n가지, n가지, n가지, n가지, 그럼 n이 r개 있겠다. 이게 그냥 중복순열이잖아요. 더 이상 고려할 거 없습니다. 그럼 이 중복순열은 이렇게 해도 되긴 하지만 우리가 확률과 통계에서는 얘를 굳이굳이 이름을 붙인대요. 
<SYNC Start=2185792><P Class=KRCC>
그게 product입니다. π라고 하죠. 그래서 우리가 이걸 쓸 때는 nπr이라고 표현을 하고요. 이렇게 표현되어 있는 문제는 그냥 n의 r제곱이구나, 이렇게 이해를 하시면 되고. 
<SYNC Start=2203906><P Class=KRCC>
문제를 풀어가는데 이 π라고 하는 걸 내가 집착해서 n에다가 이걸 넣고 r에다가는 이걸 넣고 이렇게 하는 건 아니라고요. 그냥 자연스럽게 거듭제곱, 이 곱의 법칙을 이용해서 계산이 되니까 이렇게 나오는구나. 
<SYNC Start=2216535><P Class=KRCC>
그런데 얘를 만약에 내가 프로덕트로 표현한다면 이렇게 되겠구나, 이렇게 이해하면 되는 거예요. 알겠죠? 그래서 중복순열은 여러분들이 계산하는 거에 그렇게 어렵게 느낄 필요도 전혀 없고 
<SYNC Start=2225943><P Class=KRCC>
그다음에 표현이나 이런 것도 어렵게 느낄 필요는 전혀 없습니다. 대신 이 친구는 어디에서 많이 쓰냐면 그런 거예요. 문제에서 어떤 조건을 줘요. 
<SYNC Start=2236915><P Class=KRCC>
그럼 그 조건에 대한 경우의 수를 해결을 하고 나머지들에 대한 것들을 처리할 때 많이 쓰입니다. 사실은 중복순열은 거의 대부분의 경우의 수 파트에서 그냥 다 포함돼서 나온다고 보시면 돼요. 
<SYNC Start=2250447><P Class=KRCC>
그냥 중복순열 문제야, 딱 주는 것보다는 그냥 어쨌든 여러분들한테 중복순열이라고 하는 거를 가볍게 다 그냥 기본적인 계산을 할 수 있게끔 제시하는 겁니다. 단독으로 뭔가 이게 어렵게 나오기는 쉽지는 않아요. 
<SYNC Start=2266168><P Class=KRCC>
대신 이제 오늘 풀어보는 문제 중에 문제 하나가 계산하는 과정에서 중복되는 것들이 있으니까 그런 것들을 처리해 주는 게 좀 어렵거든요. 그런 것들만 잘하시면 됩니다. 알겠죠? 
<SYNC Start=2276491><P Class=KRCC>
그래서 여러분들이 페이지 6에 있는 문제나 예제나 이런 개념들은 제가 설명한 걸로 충분히 다 해결이 됐을 거니까 한번 눈으로만 쭉 보시면 돼요. 됐나요? 그럼 뒤에 넘어가서 문제를 한번 보죠. 
<SYNC Start=2290151><P Class=KRCC>
수능다움, 이것도 한번 패턴이 어떻게 나오는지 보겠습니다. 중복순열이라고 하는 건 사실 빠지는 데가 없습니다. 빠지는 데가 없고요. 거의 대부분에서 함께 출제가 되는 포인트입니다. 
<SYNC Start=2304744><P Class=KRCC>
첫 번째 문자 배열, 당연히 문자 배열에서는 나오겠죠. 그다음에 상자와 주머니라고 했는데 이것도 결국은 문자의 배열과 별반 다르지는 않습니다. 내가 어떤 상자, 어떤 주머니에다가 무언가를 집어넣거나 아니면 무언가를 빼내는 거예요. 
<SYNC Start=2319203><P Class=KRCC>
그런데 중복을 허용해서 빼거나 그다음에 그걸 뽑아서 나열을 하거나 이렇게 해서 그 포인트가 되는 그냥 키워드만 가져온 거고요. 세 번째 나눠주는 거다. 
<SYNC Start=2329221><P Class=KRCC>
이게 조금 어렵게 느껴질 수 있는데 나눠준다는 거는 내가 예를 들어서 아이스크림 가게를 갔으면 아이스크림이 거의 대부분 무한정 있잖아요. 그럼 그걸 뽑아요. 그런 다음에 나눠줘요. 
<SYNC Start=2340744><P Class=KRCC>
그럼 나눠줄 때 순서를 고려해야 되기 때문에 어쨌든 이 뽑는 것들은 무한정 뽑을 수 있으니까 중복을 허용하는 거고 나눠줄 때 순서를 고려하니까 순열의 개념이 있고 그래서 중복순열의 문제로 나오기도 합니다. 
<SYNC Start=2353495><P Class=KRCC>
이것도 뒤에 문제에서 볼 거고요. 가장 또 많이 나오는 게 함수의 종류죠. 우리가 고등학교 1학년 때 함수의 종류를 구하는 거를 배웠습니다, 경우의 수 파트에서. 그런데 그 경우의 수에서는 이 함수의 종류를 다양하게 배우진 않거든요. 
<SYNC Start=2374843><P Class=KRCC>
딱 배우는 거 이거 하나예요. 일대일대응이랑 그다음에 일대일함수 그리고 사실은 지금 이 중복순열에서 나오는 거기는 하지만 그냥 일반적인 함수의 종류. 
<SYNC Start=2393185><P Class=KRCC>
이게 그 당시에 고등학교 1학년 때에는 이 중복순열이라고 하는 개념을 안 배웠기 때문에 곱의 법칙으로 해결을 했습니다. 정의역이 예를 들어, 정의역이고요. 그다음에 공역이에요. 
<SYNC Start=2407682><P Class=KRCC>
x에서 y로 간다, 이렇게 했을 때 여기에 있는 게 a, b, c고요. 여기 있는 게 1, 2, 3, 4, 5예요. 그러면 얘가 함수가 되기 위해서는 a라고 하는 친구가 화살을 몇 개 쏠 수 있죠? 하나. 
<SYNC Start=2420370><P Class=KRCC>
그러면 이 친구가 선택할 수 있는 거는 5개야, 5개. 거기에 b라고 하는 친구가 가는 것도 제한이 없습니다. 일반적인 함수이기 때문에 그냥 함수만 되면 돼요. 얘가 갈 수 있는 것도 총 5개야. 
<SYNC Start=2434579><P Class=KRCC>
c가 갈 수 있는 것도 5개야. 그래서 얘는 5³이었구나 이렇게 풀었었습니다, 이미. 그런데 이때 배웠던 건 중복순열로가 아니라 곱의 법칙으로 해결을 했었죠. 그러니까 제가 말하잖아요. 
<SYNC Start=2447598><P Class=KRCC>
중복순열을 꼭 중복순열로 해결할 필요는 없다니까요. 그냥 중복순열 자체가 곱의 법칙이에요. 그러니까 아이디어나 추가되는 조건이나 이런 것만 좀 고려하시면 되고. 
<SYNC Start=2461419><P Class=KRCC>
왜 이렇게 제가 별표를 강조를 했냐면 이 중복순열뿐만 아니라 경우의 수 파트 전반에서, 전반이라고 하는 거는 조합까지 포함을 해서 이 조합까지 배우면 함수의 종류 구하는 과정이 되게 다양하게 나옵니다. 
<SYNC Start=2478493><P Class=KRCC>
그래서 그런 것들을 해결할 수 있는 실력이 있어야 돼요. 100% 함수의 종류는 중요 포인트 중에 하나입니다. 정말 출제될 확률이 매우 높은. 그러니까 이거는 나올 때마다 좀 체크를 해놓는 게 좋겠다, 그런 생각이 들어요, 여러분들이. 
<SYNC Start=2494958><P Class=KRCC>
그래서 우리가 유형으로 좀 보자면 이 정도의 형태로 나올 수 있고요. 이게 수능다움 문제들이다. 문제 하나 보겠습니다. 예제 2번이고요. 레벨1보다 어려워요, 훨씬. 두 집합 1, 2, 3, 4, 그다음에 Y가 1, 2, 3, 4, 5가 있습니다. 
<SYNC Start=2515189><P Class=KRCC>
X에서 Y로 가는 함수 f 중에서 치역의 모든 원소의 합이 6인 함수 f의 개수를 구하여라. 이 문제에서 포인트가 되는 건 정의역, 공역 이건 당연한 거고요. 우리 1학년 아니니까. 치역의 모든 원소의 합이라고 했습니다. 
<SYNC Start=2530386><P Class=KRCC>
그럼 여기에서 먼저 치역이라고 하는 거의 특징은 무조건 다 서로 다른 원소의 집합이다. 우리가 치역을 구성할 때 1, 1, 1, 2, 2 이런 식으로 안 쓴다는 거죠. 어떻게 써요? 그냥 1, 2 이렇게 쓰면 다야. 
<SYNC Start=2551855><P Class=KRCC>
그러니까 여기에서 이 모든 원소의 합이 6이라고 하는 건 6을 구성하는 자연수, 전문적인 용어를 쓰면 자연수의 분할이라고 하는데요. 조합할 때 가끔 나오죠. 자연수의 분할이 다 다른 숫자로 구성이 되는 거구나. 알겠죠? 
<SYNC Start=2571077><P Class=KRCC>
그러니까 6을 만들기 위해서는 서로 다른 숫자들로만 구성되게끔 식을 세워야 되겠다. 제일 쉬운 게 뭐가 있을까요? 2+4가 있겠네. 돼요? 또 1+5가 있겠네. 또 1+2+3이 있겠네. 
<SYNC Start=2589030><P Class=KRCC>
원소가 2개짜리인 게 있고요. 원소가 3개짜리인 게 있습니다. 4개짜리는 없죠. 왜? 제일 작은 것부터 셌는데 얘가 3개거든요. 그들의 합이 6이잖아요. 그럼 하나 더 하면 당연히 6보다 크겠지. 괜찮아요? 
<SYNC Start=2603376><P Class=KRCC>
그럼 어쨌든 이렇게 되는 함수의 종류의 개수를 구하여라. 그럼 패턴, 케이스를 나눠서 해야 되겠죠. 첫 번째 1부터 할까요? 1+5, 즉 1과 5가 치역인 상태를 한번 보자. 그러면 {1, 2, 3, 4}, {1, 2, 3, 4, 5}가 이렇게 되어 있습니다. 
<SYNC Start=2623135><P Class=KRCC>
얘가 의미하는 건 이런 거죠. 그다음에 여기는 1, 2, 3, 4, 5, 여기 1이 여기 있고 X에서 Y로 간다. 그러면 치역으로 돼야 되는 거는 무조건 1하고 5밖에 없겠다. 괜찮아요? 
<SYNC Start=2642194><P Class=KRCC>
그럼 이 친구들이 가는 거는 1이 선택할 수 있는 거 2개, 2가 선택할 수 있는 것도 2개, 3이 선택할 수 있는 것도 2개, 2개 이렇게 돼서 얘는 2⁴이 되겠다. 그런데 문제가 생겨요. 치역이 2개가 됐는데요. 
<SYNC Start=2658122><P Class=KRCC>
이 경우 안에 뭐가 들어가냐면 1명한테 다 쏠리는 게 생겨요. 이렇게. 왜 둘 중 하나 선택하니까 다 1 선택할 수도 있잖아요. 그럼 그 경우는 빼줘야지. 그래야 치역이 온전히 2개가 되는 게 살아남으니까. 
<SYNC Start=2670188><P Class=KRCC>
그래서 여기에서 두 개를 빼줘야 돼요. 됐나요? 그게 14개야. 되셨죠? 일단 여러분들이 그냥 보이는 대로 쉽게 쉽게 치역을 구성해서 경우의 수를 체크해 봅니다. 두 번째 올 수 있는 건 2하고 4가 있겠죠. 
<SYNC Start=2689424><P Class=KRCC>
얘도 똑같을 겁니다. 그러니까 얘 경우에서는 그냥 14개라고 한번 써볼게요. 그다음에 세 번째, 이게 조금 중요한데 1, 2, 3으로 가야 돼요. 그럼 여기에서 1, 2, 3, 4, X에서 Y로 가더라. 1, 2, 3, 4, 5예요. 
<SYNC Start=2709606><P Class=KRCC>
그럼 선택할 수 있는 거는 1, 2, 3이 있겠죠. 맞나요? 그럼 이 상태에서 얘가 선택할 수 있는 건 총 세 가지야. 세 가지, 세 가지, 세 가지예요. 맞나요? 그럼 여기에서 3의 4개에서 일단은 한쪽으로 다 쏠리는 거는 제외시켜줘야 되겠죠.
<SYNC Start=2733355><P Class=KRCC>
3을 빼요. 이거는 뭐 당연한 거야. 그런데 이렇게 한다고 해서 얘 더하고요. 얘하고 얘하고 얘하고 더하면 답이 안 나와요. 왜 안 나올까요? 왜 안 나올까? 잘 보세요. 이 구성 중에 뭐가 있냐면 이렇게 가는 게 있고요. 
<SYNC Start=2756200><P Class=KRCC>
이렇게 가는 게 있을 거야. 이게 무슨 소리예요? 이 안에 원소 2개짜리로 가는 형태들이 생기는구나. 그럼 이걸 어떻게 계산을 하냐? 결국 내가 원하는 거는 두 개로 가는 경우들에 대한 경우의 수를 또 빼줘야 되는 거거든요. 
<SYNC Start=2777063><P Class=KRCC>
그러니까 결국 1과 2, 이렇게 가는 경우가 생길 거고 또 1과 3이 생길 거고요. 또 2하고 3으로 가는 경우가 생길 거야. 그러니까 한 세트에 대한 것만 계산을 정확하게 해 주면 나머지는 어차피 곱하기 3으로 그냥 처리하면 되는 거니까 
<SYNC Start=2792320><P Class=KRCC>
만약에 내가 1과 2로만 간다. 그럼 이거 어떻게 할까요? 1, 2로만 가게끔 배열을 하는 거예요. 그럼 얘가 선택할 수 있는 거 1, 2 중에 하나, 얘가 선택할 수 있는 거 1, 2, 얘도 1, 2, 얘도 1, 2. 
<SYNC Start=2805721><P Class=KRCC>
그러니까 2⁴이구나. 그런데 또 이렇게만 처리하면 안 되고요. 여기에서 빼줘야 될 게 생깁니다. 뭐예요? 아까 처음에 빼줬던 이 3개짜리가 지금 2개 중에서 선택하는 거에서도 또 나온다고요. 
<SYNC Start=2821255><P Class=KRCC>
그러니까 그거 빼줘야죠, 중복되는 거니까. 1과 2로 쏠리는 경우가 있을 거기 때문에 2개를 이렇게 빼줘야 됩니다. 괜찮아요? 따라서 2⁴-2라고 하는 게 여기에서도 생길 거고 
<SYNC Start=2833837><P Class=KRCC>
여기에서도 생길 거니까 3에다가 2⁴-2라고 하는 계산 결과가 결국은 이 3⁴에서 또 빼줘야 되는 게 되는 거죠. 왜? 얘가 2개짜리였으니까 2개로 가는 경우니까. 됐나요? 
<SYNC Start=2852244><P Class=KRCC>
따라서 여기에 있는 건 14개, 거기다가 3개 곱하는 거니까 여기 3개 곱하니까 42개가 되겠죠. 됐나요? 계산을 한번 해 볼까요? 여기 있는 거 3⁴에서 여기 있는 거 81이 될 거니까 81 빼기 이거랑 이거 더할 거니까 45가 될 겁니다. 맞나요? 
<SYNC Start=2875146><P Class=KRCC>
그럼 여기 있는 거 36이 되겠네요. 그러면 36에다가 온전히 아까 전에 2개 치역으로 딱 선택된 거 있었죠. 그게 14개짜리하고 그다음에 또 14개짜리, 이거 정리하면 이거 50이 될 거니까 64 이렇게 처리가 될 겁니다. 됐나요? 
<SYNC Start=2898515><P Class=KRCC>
그래서 여러분들 이거는 복습을 철저하게 하셔야 되고 딱 봐도 그냥 단순하게 풀리는 문제는 아닙니다. 그래서 이런 식으로 중복순열이 어렵게 나오면 그냥 그 안에서 중복되는 것들을 빼주는 그런 형태로 나오니까 
<SYNC Start=2911501><P Class=KRCC>
이 문제 복습 철저하게 해 놓으시면 좋을 것 같아요. 그래서 발상 노트에다가 제가 차근차근 다 써놨으니까 그거 읽어가시면서 다시 한번 아이디어를 키워내시기 바랍니다. 고생하셨고요. 
<SYNC Start=2922622><P Class=KRCC>
뒤에 쿠키즈 나가니까 꼭 풀어서 수강 후기에 남겨주시면 좋겠습니다. 저는 다음 시간에 더 알찬 내용으로 찾아뵙도록 할게요. 
<SYNC Start=2929194><P Class=KRCC>

</BODY>
</SAMI>
