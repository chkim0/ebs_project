<SAMI>
<HEAD>
<TITLE>(주)기록법인상생 자막 2022</TITLE>
<STYLE TYPE="text/css">
<!--
P { margin-left:8pt; margin-right:8pt; margin-bottom:2pt;
    margin-top:2pt; font-size:12pt; text-align:left;
    font-family:굴림, Arial; font-weight:normal; color:white;
    background-color:#405A8D; }
.KRCC { Name:한국어; lang:ko-KR; SAMIType:CC; }
#STDPrn { Name:Standard Print; }
#LargePrn { Name:Large Print; font-size:20pt; }
#SmallPrn { Name:Small Print; font-size:10pt; }
-->
</STYLE>
</HEAD>
<BODY>
<SYNC Start=11192><P Class=KRCC>
만점의 기쁨을 함께하겠습니다. 2023 수능특강 확률과 통계, 함께하고 있는 저는 이국희입니다. 지금은 좀 잘못하는데요. 제가 원래 자전거를 좀 탔습니다, 취미로.
<SYNC Start=20856><P Class=KRCC>
예전에 자전거를 처음 탔을 때 학교에 계신 선생님들이랑 같이 탔는데 오르막길을 갈 때요. 보통은 로드 사이클, 로드 바이크라고 하면 페달을 신발이랑 같이 묶고요.
<SYNC Start=34837><P Class=KRCC>
그다음에 그것을 계속 구르면서 올라가는 겁니다. 그러니까 보통 일반적으로 저희가 자전거를 타는 것은 페달이랑 그다음에 신발이랑 묶여 있거나 그렇지 않지요.
<SYNC Start=43401><P Class=KRCC>
그런데 로드 바이크 같은 경우는 취미로 하는 것보다 조금 더 전문적으로 타는 경우에는 신발이랑 그다음에 자전거랑 묶습니다. 그래서 오르막길에서도 계속 그것을 굴러야만 올라가는 거거든요.
<SYNC Start=57165><P Class=KRCC>
처음에 탈 때는 제가 당연히 못 탔지요. 올라가다가 중간쯤에 페달을 푸르고 그다음에 그냥 거의 쓰러지다시피 해서 넘어진 다음에 그냥 걸어서 자전거를 끌고 올라간 적이 있었습니다.
<SYNC Start=69787><P Class=KRCC>
그때는 좀 ‘이거 도저히 안 되겠다. 자전거를 아무리 타도 내가 이 오르막은 끝까지 못 올라가겠다, 정상까지.’ 그 코스를 여러 번 갈 기회가 생겼는데요.
<SYNC Start=79786><P Class=KRCC>
제가 연습을 좀 충분히 하고 그다음에는 최종적으로 한번 딱 다른 선생님과 탔을 때 결국은 올라갔습니다. 자전거를 페달로만 계속 굴러서 올라갔거든요.
<SYNC Start=90819><P Class=KRCC>
그런데 그러고 나서 제가 느끼는 바가 뭐가 있었냐면, ‘이게 정말 내가 힘들게 올라오기는 했지만, 이만한 쾌감이 없구나.’라는 것을 느꼈습니다.
<SYNC Start=99317><P Class=KRCC>
제가 중간에 내려서 걸어서 올라가도 어차피 정상에 올라가는 것은 똑같겠지요. 그런데 자전거에서 내리지 않고 어쨌든 그 힘든 시기를 밟아 가면서 올라간 것은 그 느낌 자체가 완전히 다릅니다.
<SYNC Start=111111><P Class=KRCC>
내리막을 위해서 오르막을 올라가는 것은 꼭 아니지만, 그 올라가는 것 자체만으로도 쾌감이 있고요. 그것을 올랐을 때, 그 성취감이 이루 말할 수 없습니다.
<SYNC Start=120992><P Class=KRCC>
여러분도 공부를 하다 보면 정말 내가 내려오고 싶을 때가 있을 거예요. 자전거에서 내려서 그냥 걸어 올라가야 되겠다, 아니면 중간에 포기를 하고 다시 돌아내려 가거나.
<SYNC Start=131092><P Class=KRCC>
그런데 그 힘든 시기를 어쨌든 극복을 하셔야 되고요. 그것을 극복한 다음에 쾌감을 느끼시면 그다음에 또 정상까지, 더 높은 정상까지 올라갈 수 있습니다.
<SYNC Start=140187><P Class=KRCC>
여러분들이 공부를 하다 보면 내가 어떤 단계마다 턱턱 숨이 막히는 구간이 있을 거거든요. 그럼 그럴 때 어떤 친구는 끝까지 밀고 가고요.
<SYNC Start=148180><P Class=KRCC>
어떤 친구는 거기에서 ‘나는 안 되겠다.’ 해서 포기하는 친구가 있을 거예요. 그런데 여러분들한테 선택지는 하나입니다. 포기하시면 안 되고요. 그냥 가셔야 돼요.
<SYNC Start=156830><P Class=KRCC>
그러니까 오늘 하는 내용들이 사실 지난 시간까지 전체적인 경우의 수를 정리하는 시간이거든요. 문제 난이도도 좀 높고 여러분들이 실제 수능 때 맞닥뜨릴 수 있는 문제들이기 때문에
<SYNC Start=168100><P Class=KRCC>
약간 와 닿는 게 다를 거예요. 그런데 이 부분을 충분히 연습을 많이 해서 극복을 하셔야 되고 나중에 한 6월 달 정도, 아니면 7월 달 정도에 다시 한번 이 기출문제를 풀었을 때 막힘없이,
<SYNC Start=179965><P Class=KRCC>
그다음에 여러분들이 이것을 좀 친구한테도 술술 설명할 수 있게끔 복습이 되시면 여러분들이 또 다른 정상으로 올라갈 수 있는 계기가 될 겁니다. 알겠지요?
<SYNC Start=190310><P Class=KRCC>
오늘 하는 내용들이 사실은 문제가 다 어렵습니다. 몇 문항 안 가져오긴 했는데 다 4점짜리이고요. 그다음에 기존에 어려웠다고 하던 것들, 그리고 기본적으로 경우의 수는
<SYNC Start=203050><P Class=KRCC>
어떤 중복순열, 순열, 조합, 이런 것들을 이용하는 것뿐만 아니라 곱의 법칙이랑 그다음에 합의 법칙의 가장 기본, 기저에 깔려 있는 거거든요.
<SYNC Start=212879><P Class=KRCC>
기출 문제 보시면 알겠지만, 거의 다 곱의 법칙과 합의 법칙에서 복잡한 것들로만 출제가 됩니다. 그래서 그런 것들 위주로 제가 갖고 왔으니까 충분히 좀 연습하셔야 되고
<SYNC Start=222931><P Class=KRCC>
이것을 케이스를 내가 어떤 식으로 나눠야 되는지에 대한 논리적인 근거까지 정확하게 체크하시기 바라요. 알겠지요?
<SYNC Start=229534><P Class=KRCC>
첫 번째, 가장 최근에 기출문제로 나왔고 그다음에 여러분들이 눈여겨봐야 될 겁니다. 작년에 출제됐던 문제이고요.
<SYNC Start=238392><P Class=KRCC>
여기에서 여러분들이 약간, 확통 선택한 선배들이 ‘이것 좀 생각과 다르네?’ 이렇게 느꼈던 그런 문제입니다.
<SYNC Start=245552><P Class=KRCC>
두 집합 {1, 2, 3, 4, 5}에서 Y={1, 2, 3, 4}로 가는데 다음 조건을 만족시키는 X에서 Y로의 함수의 개수를 구하여라. 우리가 기존에 풀던 문제하고 똑같아요. 함수의 개수를 구하는 것.
<SYNC Start=256218><P Class=KRCC>
그래서 이런 문제들은 여러분들이 기존에 많이 풀었기 때문에 어렵지는 않을 건데 제가 누차 말씀드리지만, 조건이 어려울 거라고 했지요. 조건이 어렵습니다, 이 마지막 것.
<SYNC Start=267523><P Class=KRCC>
이 ㈏의 조건 때문에 이 문제가 풀리거나 안 풀리거나 했겠지요. ㈎ 집합 X의 모든 원소 x에 대하여 f(x)는 √x보다 크거나 같다고 했는데, 한번 볼게요, 일단.
<SYNC Start=278528><P Class=KRCC>
이 조건을 가지고 바로 뭔가 치역을 선택하기는 쉽지 않아요. 그냥 예시를 통해서 그냥 몇 개 하면 됩니다. 1을 집어넣어 볼게요. 그럼 f(1)이라고 하는 것은 √1보다는 크거나 같을 거야.
<SYNC Start=289635><P Class=KRCC>
√1이라고 하는 것 그냥 자연수로 할까요, 이렇게. 됐지요? f(2)라고 하는 것도 하게 되면 √2가 될 건데 이 친구는요. 어차피 1.XXX이지요. 얘가 1.XXX이다.
<SYNC Start=303082><P Class=KRCC>
그러니까 f(2)라고 하는 것은 우리가 치역으로 딱 따졌을 때, 함숫값으로 딱 따졌을 때 갈 수 있는 것은 2, 3, 4가 될 겁니다. 여기 위에 쓸까요? 얘는 1, 2, 3, 4가 모두 가능하고요. 그렇지요?
<SYNC Start=316271><P Class=KRCC>
f(3)도 볼까요? 얘는 √3이 될 건데 이 친구도 1.XXX이 될 거예요. 이것보다 크거나 같은 것이기 때문에 가능한 것은 2, 3, 4가 되겠지요. 또 f(4)라고 하는 것은 √4가 될 거고 얘가 2가 될 겁니다.
<SYNC Start=333588><P Class=KRCC>
그러면 2까지 포함시켜도 되니까 얘는 가능한 게 2, 3, 4가 될 거예요. 마지막 f(5)라고 하는 것을 보게 되면 √5, 이것보다 크거나 같은 건데 얘는 당연히 2.XXX이 되겠지요.
<SYNC Start=347734><P Class=KRCC>
그럼 가능한 것은 뭐가 되겠다? 3, 4가 되겠다. 돼요? 그러면 여러분들이 케이스를 나눌 때 기준이 되어야 될 것은 갈 수 있는 것들의 분류입니다. 첫 번째 것은 1, 2, 3, 4로 다 갈 수 있고요.
<SYNC Start=365796><P Class=KRCC>
두 번째, 세 번째, 네 번째 것은 2, 3, 4로 밖에 못 가고요. 마지막 것은 3, 4밖에 못 갑니다. 알겠지요?
<SYNC Start=373090><P Class=KRCC>
그러니까 내가 공역의 입장에서 본다면 나한테 올 수 있는 애들이 제한이 딱 걸린다는 거지요. 아니면 1, 2, 3, 4, 5, 얘들에 따라서 갈 수 있는 게 달라지거나. 같은 의미지요.
<SYNC Start=386482><P Class=KRCC>
어쨌든 이게 ㈎의 조건이고. ㈏는 함수 f의 치역의 원소의 개수는 3이다. 그럼 치역의 원소의 개수라고 하는 것은 우리 연습 많이 했으니까, 얘가 가능한 것은 {1, 2, 3}, 그다음에 {1, 2, 4},
<SYNC Start=402063><P Class=KRCC>
그렇지요? 또 {1, 3, 4}, 그다음 {2, 3, 4}가 될 거예요. 치역에는 특별한 조건이 없으니까 이 4가지로 하면 됩니다.
<SYNC Start=413174><P Class=KRCC>
그러면 이것들을 만족하는 함수의 개수를 구하라는 것이기 때문에 첫 번째 조건과 두 번째 조건을 다 만족시키는 것을 찾으면 돼요. 그럼 케이스를 나눠야겠지요.
<SYNC Start=421831><P Class=KRCC>
첫 번째, {1, 2, 3}과 {1, 2, 4}와 {1, 3, 4}의 공통점은 뭐가 있냐면 공통으로 1이 들어 있다는 거지요. 맞아요? 가만 보면 1로 갈 수 있는 것은 뭐밖에 없다? 얘밖에 없다.
<SYNC Start=437205><P Class=KRCC>
그러니까 {1, 2, 3}이나 {1, 2, 4}나 {1, 3, 4}가 되는 것은 무조건 1로 가는 것은 1이겠구나, 이것부터 선택하면 되는 것이고요.
<SYNC Start=444106><P Class=KRCC>
그런 식으로 해서 구간을 좀 나누면 되는 건데 일단 {1, 2, 3}부터 한번 보지요. {1, 2, 3}에서는 우리 케이스를 나누면 1, 2, 3, 4, 5가 될 거고요. 여기에 있는 것은 1, 2, 3, 4가 될 거야.
<SYNC Start=461750><P Class=KRCC>
그런데 갈 수 있는 것은 이것, 이것, 이것. 맞지요? 그럼 1이 갈 수 있는 것은 무조건 1밖에는 안 돼요.
<SYNC Start=470903><P Class=KRCC>
그다음 3으로 갈 수 있는 것이나 아니면 2로 갈 수 있는 것이나 얘들이 다 가능하긴 한데 5의 입장에서 보면 얘는 무조건 3으로밖에 못 갑니다. 그렇지요? 얘는 2로 갈 수가 없어요.
<SYNC Start=484144><P Class=KRCC>
따라서 얘도 고정, 이렇게. 그러면 나는 따져 줘야 될 게 2, 3, 4밖에는 없는 거야. 그럼 2, 3, 4가 갈 수 있는 영역은요. 사실 1, 2, 3 중에 어디? 2, 3밖에 없겠지요. 왜?
<SYNC Start=500308><P Class=KRCC>
1이라고 하는 애는 무조건 1에서 가야 되는 거니까. 그러면 얘가 갈 수 있는 것은 2가지 중의 하나이고요. 얘가 갈 수 있는 것도 2가지 중의 하나, 얘가 갈 수 있는 것도 2가지 중의 하나예요.
<SYNC Start=509731><P Class=KRCC>
그러니까 2³이 될 거고요. 이것으로 해서 끝나는 게 아니라 만약에 얘들이 2가지 중의 하나로 가는데 하필이면 이 친구가 3으로 다 몰려요.
<SYNC Start=521148><P Class=KRCC>
그럼 치역의 원소를 딱 봤을 때 1, 2, 3으로 했는데 2라고 하는 애는 아무도 선택을 하지 않은 거잖아요. 그럼 이런 것은 문제의 조건에 해당하지 않지요. 그래서 그 경우를 빼 줍니다.
<SYNC Start=533450><P Class=KRCC>
그래서 7가지가 되는 거예요. 됐지요? 1, 2, 4도 할 건데 얘는 완벽하게 얘하고 똑같습니다. 왜냐하면, 4로 갈 수 있는 친구는 뭐밖에 없냐? 5밖에 없어요.
<SYNC Start=550624><P Class=KRCC>
물론 다른 애들도 4로 갈 수 있겠지만, 5라고 하는 애는 무조건 가긴 가야 되는데 갈 수 있는 영역 자체가 4밖에는 선택지가 없습니다.
<SYNC Start=559385><P Class=KRCC>
그러니까 1이라고 하는 애도 무조건 1에서 가야 되는 거고 4라고 하는 애도 무조건 5에서 가야 되는 거예요. 그러면 나머지들, 2, 3, 4가 선택할 수 있는 것은 당연히 2하고 4가 되겠지요, 이번에는.
<SYNC Start=571891><P Class=KRCC>
그러면 이 친구도 2³에서 -1을 하는 거니까 얼마가 되겠다? 7가지가 되겠다. 되세요? 그래서 이 2가지에 대한 것은 같은 영역으로 들어가면 됩니다.
<SYNC Start=582498><P Class=KRCC>
두 번째 것, 케이스를 나눠서, 여기에 해 볼까요? 이번에는 {1, 3, 4}를 한번 보지요. 이번에도 X에 대한 것 그리고요. 1, 2, 3, 4, 5, 그다음에 Y에 대한 것, 1, 2, 3, 4.
<SYNC Start=601744><P Class=KRCC>
선택을 받는 친구부터 정하면, 1 그다음에 3 그다음에 4가 되겠다. 아까도 말했지만, 무조건 1이라고 하는 친구는 1로 가야 됩니다, 이렇게. 됐지요?
<SYNC Start=616628><P Class=KRCC>
그다음에 2라고 하는 친구가 갈 수 있는 것은 몇 가지예요? 2가지가 될 겁니다. 3이라고 하는 애도 2가지, 4라고 하는 애도 2가지, 5라고 하는 애도 갈 수 있는 것 어디? 2가지가 될 거예요.
<SYNC Start=629197><P Class=KRCC>
그러면 이번에는 고민할 필요 없이 2⁴으로 이렇게 해 주면 되고요. 이 상태에서 또 공교롭게도 얘들이 3으로 아예 몰리거나 아니면 4로 몰리거나 하는 것들은 문제의 조건에 부합하지 않는 거지요,
<SYNC Start=643435><P Class=KRCC>
치역이 1, 3, 4가 되어야 되는데 그중에 2개밖에 안 되는 거니까. 그러면 그 친구들을 빼 줘야 되겠다, 이런 식으로. 얘가 뭐예요, 이게? 3 또는 4로 몰려가는 경우.
<SYNC Start=657522><P Class=KRCC>
그럼 여기에서 나오는 경우는 몇 가지예요? 16개에서 2개를 빼는 거니까 14가지가 나올 거예요. 됐지요? 마지막 것, 네 번째 것이 좀 어려우니까 이쪽에 지우고.
<SYNC Start=668973><P Class=KRCC>
&nbsp;
<SYNC Start=671929><P Class=KRCC>
아까 했던 것 중의 첫 번째 것은 7개, 그다음 7개, 세 번째 것 얼마? 14개, 이렇게 될 겁니다. 됐지요? 마지막 것은 이거예요. {2, 3, 4}에 대한 것. 그럼 얘도 한번 그려 볼게요.
<SYNC Start=690746><P Class=KRCC>
여기에 X가 오고요, 1, 2, 3, 4, 5. 그다음에 여기에 Y, 1, 2, 3, 4. 이중에 선택되는 것은 이것. 그렇지요? 그러면 1의 입장에서 갈 수 있는 것은 당연히 2, 3, 4, 다 될 겁니다.
<SYNC Start=708505><P Class=KRCC>
이번에는 ‘1로 무조건 가야 된다.’가 아니에요. 1이 선택 받는 게 없기 때문에. 그러니까 자유롭게 좀 더 갈 수 있겠지요.
<SYNC Start=714534><P Class=KRCC>
그러면 3가지가 될 거고 2가 갈 수 있는 것도 3가지, 3이 갈 수 있는 것도 3가지, 4가 갈 수 있는 것도 3가지, 5가 갈 수 있는 것은 몇 가지? 2가지.
<SYNC Start=723764><P Class=KRCC>
따라서 3⁴에 ×2라고 하는 게 내가 전체 가능한 경우입니다. 물론 이 중에 치역이 3개가 되는 것을 골라야 되겠지요. 이 친구 얼마예요? 81이 될 거고 81에 2 곱하니까 얼마? 162.
<SYNC Start=739176><P Class=KRCC>
이 중에 골라내 줘야 되는데 첫 번째, 치역이 2개만 딱 되는 경우가 있겠지요. 예를 들어 {2, 3}, {2, 4}, {3, 4}가 되는 경우 있을 거고요. 그다음 두 번째는 치역이 하나만 딱 되는 경우, 뭐가 있지요?
<SYNC Start=761360><P Class=KRCC>
여기에 쓸까요? {2}, 그다음에 {3}, {4}, 이런 식으로. 되시지요? 그러면 이것들을 가지고 내가 다 골라내야 되는 건데 일단 첫 번째 것, {2, 3}이라고 하는 게 선택이 된다고 생각을 해 보지요.
<SYNC Start=779325><P Class=KRCC>
그러면 5라고 하는 친구가 갈 수 있는 것은 무조건 3으로만 딱 가야 되는 겁니다. 이것은 어쩔 수 없는 선택이에요.
<SYNC Start=785905><P Class=KRCC>
그럼 앞에 있는 것들은 얘가 1, 2, 3, 4라고 하는 애가 2, 3 중의 하나로 가야 되겠지요. 그러면 결국은 이 친구를 선택한다는 것은 4개, 그렇지요?
<SYNC Start=795964><P Class=KRCC>
2⁴에 5라고 하는 애가 갈 수 있는 것도 어디로 가야 돼? 3으로 가야 돼, 1이 될 거고요. 그렇지요? 그중에 1, 2, 3, 4 자체가 3으로 가는 경우가 있을 겁니다. 2로 가는 것은 괜찮아요.
<SYNC Start=812282><P Class=KRCC>
치역이 2개라고 했는데 이 2라고 하는 데는 선택이 되면 어차피 치역 2개의 조건을 만족하는 거니까 상관이 없다고요. 그러면 1, 2, 3, 4가 3으로 쏠리는 경우가 있겠지요.
<SYNC Start=821560><P Class=KRCC>
그럼 그 친구들을 빼 줘야 됩니다, 다시 이렇게. 돼요? 그다음에 또 {2, 4}로 가는 경우도 한번 볼까요? 4로 갈 수 있는 것은 무조건 5가 이리로 가야 되는 겁니다. 그렇지요?
<SYNC Start=834961><P Class=KRCC>
그러면 이때는 2⁴에 5가 선택할 수 있는 것 하나가 될 거고요. 이때도 마찬가지로 얘들이 다 4로 가는 경우가 있겠다.
<SYNC Start=843353><P Class=KRCC>
그러면 이 친구도 결국은 치역이 하나로밖에 안 되는 것이기 때문에 이런 식으로 될 겁니다. 됐지요? 그다음에 {3, 4}로 가는 경우도 한번 볼까요?
<SYNC Start=852276><P Class=KRCC>
{3, 4}일 때는 이 친구들 중에서 5라고 하는 애도 지금 2가지로 갈 수 있는 거지요. 따라서 얘는 2의 5제곱이 될 겁니다.
<SYNC Start=861863><P Class=KRCC>
위에 있는 것은 아까 5라고 하는 게 갈 수 있는 게 둘 중 만약에 2, 4였어요. 그러면 이 중에서 갈 수 있는 게 4밖에 안 돼. 만약에 2, 3이에요. 그럼 이 중에서 갈 수 있는 것 3밖에 안 돼.
<SYNC Start=872081><P Class=KRCC>
그런데 마지막 것 3, 4같은 경우는 5라고 하는 애가 3, 4로 다 갈 수 있기 때문에 2⁴에 ×1이 아니라 2⁴에 ×2가 돼서 2의 5제곱이 되는 거라고요. 가능하겠지요? 이 중에 만약에 3, 4로만 딱 간다.
<SYNC Start=886691><P Class=KRCC>
그러면 이 친구가 다 이리로 가는 것과 이 친구가 다 이리로 가는 것, 3이나 4로, 둘 중의 하나로 가는 것, 2, 이렇게 될 겁니다. 돼요? 그러면 여기에 있는 것 몇 개?
<SYNC Start=895825><P Class=KRCC>
16에서 1을 빼는 거니까 15가 될 거고요. 여기 있는 것 15가 될 거고요. 그다음에 여기 있는 것 30, 이렇게 되겠지요. 됐나요?
<SYNC Start=905250><P Class=KRCC>
그다음에 이 치역이 2로 간다는 것은 얘가 하나로만 딱 가는 건데 얘는 불가능한 게 어차피 5라고 하는 친구가 갈 수 있는 것은 3 아니면 4가 될 겁니다. 그렇지요?
<SYNC Start=917815><P Class=KRCC>
그러니까 얘는 애초에 불가능한 거예요. 얘는 제외시켜 주고. 3이라고 하는 것으로 간다고 해 볼까요? 그러면 여기 있는 것들이 다 3으로 가. 그렇지요? 이것 몇 가지? 1가지 경우가 있고요.
<SYNC Start=928915><P Class=KRCC>
그다음에 4라고 하는 친구로 다 가요, 이렇게. 그러면 이 친구도 1가지가 있겠지요. 즉, 얘를 케이스를 나눈 것은 치역이 무조건 2개가 되는 것과 그다음에 무조건 1개가 되는 것을 체크한 다음에
<SYNC Start=942720><P Class=KRCC>
얘들은 내가 원하는 조건이 아니기 때문에 이 162에서 뭘 해야 된다? 빼 줘야 된다. 따라서 여기에 있는 것, 60개가 될 거고요.
<SYNC Start=950622><P Class=KRCC>
여기에 있는 것 2개가 될 거니까 이 친구에서 62개를 빼게 되면 100개가 이 세 번째 조건에서 나오는 거지요. 됐나요? 그래서 7개, 7개, 14개에 100개, 이렇게 할 거니까 28에 100 더하니까요.
<SYNC Start=965471><P Class=KRCC>
결국은 128가지가 될 겁니다. 돼요? 여러분들, 이 문제 케이스 나누는 게 굉장히 까다로웠던 문제입니다. 헷갈리기 쉽고요.
<SYNC Start=976757><P Class=KRCC>
그다음에 이 문제를 통해서 내가 정의역에서 공역으로 갈 때 어떤 제한이 걸리는지에 대한 것을 정확하게 판단해야 되는 거예요. 항상 경우의 수 문제에서 어렵게 나오는 것은 결국은 이겁니다.
<SYNC Start=989540><P Class=KRCC>
곱의 법칙과 합의 법칙. 즉, 쉽게 말하면 케이스 분류, 이게 핵심인 거지 내가 중복순열, 중복조합, 이런 것들을 할 수 있느냐, 없느냐, 이게 주된 게 아니라고요.
<SYNC Start=1004421><P Class=KRCC>
그것을 활용하는 것들 중에 추가적인 조건이 붙으니까 그 조건들을 내가 어떤 식으로 나눠야 될지가 제일 중요한 거예요. 그래서 이것 작년 기출이었는데 어려운 문제였고요.
<SYNC Start=1014497><P Class=KRCC>
여러분들이 매우 당황했던 그런 문제입니다. 차근차근히 이 케이스에 따라서 나누면 충분히 풀 수 있겠다.
<SYNC Start=1021747><P Class=KRCC>
새로운 아이디어를 갖고 오는 게 아니라 그냥 지금까지 배웠던 것을 기준으로 문제에 오류가 없게끔 논리적으로만 나누시면 돼요. 됐지요? 두 번째 문제 가 볼게요.
<SYNC Start=1031318><P Class=KRCC>
&nbsp;
<SYNC Start=1034328><P Class=KRCC>
얘도 기출인데 얘는 작년 것은 아니고요. 몇 년도 거냐면 얘가 재작년, 재작년 거네요. 4명의 학생 A, B, C, D에게 검은색 모자 6개, 흰색 모자 6개를
<SYNC Start=1047404><P Class=KRCC>
다음 규칙에 따라 남김없이 나누어 주는 경우의 수를 구하시오. 각 학생은 1개 이상의 모자를 받는다고 했습니다. 일단은 모자를 무조건 다 받아야 되겠구나, 색깔이랑은 안 나왔지만.
<SYNC Start=1060367><P Class=KRCC>
㈏ 학생 A가 받는 검은색 모자의 개수는 4 이상이다. ㈏라고 하는 게 제일 중요하고요. 얘가 첫 번째 여러분들이 따져 줘야 될 조건입니다.
<SYNC Start=1071577><P Class=KRCC>
㈐ 흰색 모자보다 검은색 모자를 더 많이 받는 학생은 A를 포함하여 2명뿐이다. 여기 ‘뿐이다.’에 뭐라고 쓰면 좀 좋겠냐면 2명이다. 선생님, ‘뿐이다.’나 ‘이다.’똑같은 것 같은 것 같은데요? 맞아요.
<SYNC Start=1086353><P Class=KRCC>
그런데 느낌이 뭐냐? 흰색 모자보다 검은색 모자를 더 많이 받는 학생은 A를 포함해서요. 2명이 나와야 된다는 거예요, 꼭.
<SYNC Start=1095913><P Class=KRCC>
보통 ‘뿐이다.’라고 하는 것은 이것 이상이 더 나올지 말지에 대한 고민이 더 들어가는 영역인데 2명뿐이라는 것은 어쨌든 2명은 무조건 나오긴 나와야 된다는 거지요. 이해돼요?
<SYNC Start=1107835><P Class=KRCC>
그래서 이 ㈐의 조건도 굉장히 중요한 겁니다. 그럼 이것에 따라서 제가 케이스를 나눠서 해 볼 건데 그림을 그려서 한번 해 보지요. A, B, C, D.
<SYNC Start=1123685><P Class=KRCC>
이 친구들이 있는데 ㈏, 학생 A가 받는 검은색 모자의 개수는 4 이상이래요. 그러면 모자가 지금 검은색이 6개까지 있는 거잖아요. 그럼 얘가 4개를 가져가는 경우가 있을 거고요.
<SYNC Start=1139105><P Class=KRCC>
5개를 가져가는 경우가 있을 거고요. 그다음 6개를 가져가는 경우도 일단 있을 겁니다, ㈏의 조건에 의하면. 그런데 ㈐, 흰색 모자보다 검은색 모자를 더 많이 받는 학생은 A를 포함하여 몇 명뿐이다?
<SYNC Start=1152250><P Class=KRCC>
2명뿐이다. 결국 2명이 있어야 된다. 그러면 이 6개짜리는 불가능한 게요. 검은색을 다 가져가면 검은색 모자보다 흰색을, 그러니까 검은색 모자를 더 많이 가져가는 친구가
<SYNC Start=1164604><P Class=KRCC>
1명밖에 안 생기는 거지요. ㈐의 조건에서는 2명이 꼭 필요한 거거든요. 그래서 이 6명짜리는 안 되는 겁니다.
<SYNC Start=1171741><P Class=KRCC>
가장 크게 케이스를 나눌 때 우리는 4개를 가져가는 것과 5개를 가져가는 것으로 나누시면 돼요. 여기에 추가적으로 1명이 더 생겨야 되는 것이기 때문에
<SYNC Start=1181414><P Class=KRCC>
검은색 모자를 더 나눠야 되는데 4개를 가져간다, 그럼 2가지가 있을 겁니다. 1개, 1개를 가져가는 경우가 있을 거고요. 지금 이 순서는 나중에 고려할 거예요.
<SYNC Start=1192786><P Class=KRCC>
‘왜 B, C에 들어가나요?’ 이것은 질문 거리가 아닙니다. 그다음 또 2개를 가져가는 친구가 존재하는 경우, 이렇게 2가지로 또 나뉠 거예요.
<SYNC Start=1201820><P Class=KRCC>
그다음 5개를 가져갔다, 그러면 그다음은 당연히 검은색 모자를 가져가는 게 1명이겠지요. 그래서 각 영역마다 우리가 구간을 나눠서 분류를 해 주시면 되고요.
<SYNC Start=1213144><P Class=KRCC>
일단 여기에서 보면, 만약에 2개, 4개를 가져간다고 해 볼게요. 그럼 이것부터 하게 되면 좀 쉽거든요. 이것부터 먼저 해 보겠습니다. 일단은 하얀색 모자가 몇 개가 있지요, 흰색이? 6개.
<SYNC Start=1232155><P Class=KRCC>
검은색 6개를 다 쓴 거야. 그렇지요? 그러면 나머지에는 무조건 흰색이 하나씩은 들어가야 되는 겁니다.
<SYNC Start=1239315><P Class=KRCC>
그리고 검은 색 모자를 A가 4개를 갖고 가고 그다음에 나머지 어떤 친구가 2개를 가져가야 되는 건데 이 2개가 들어가는 것 자체도 경우의 수가 존재하지요.
<SYNC Start=1248853><P Class=KRCC>
첫 번째, 검은색을 2개 가져가는 친구들, B, C, D, 중의 1명일 것 아니에요. 그게 3가지가 될 겁니다. 돼요? 그러고 나서 얘가, B가 받았다고 해 볼게요.
<SYNC Start=1261942><P Class=KRCC>
그럼 나머지는 무조건 흰색을 하나, 하나 넣어야 됩니다, 이렇게. 그럼 흰색이 몇 개 남지요, 6개 중에서? 4개가 남습니다. 맞아요?
<SYNC Start=1271795><P Class=KRCC>
그럼 이 4개를 나눠서 넣어야 되는 건데 일단은 이 친구가 지금 2개가 들어갔지요. 그러면 여기에 들어갈 수 있는 하얀색, 여기에 들어갈 수 있는 하얀색의 개수는 하나도 없거나, 그렇지요?
<SYNC Start=1286397><P Class=KRCC>
아니면 1개가 있거나가 되는 거야. 왜냐하면, 흰색 모자보다 검은색 모자를 더 많이 받는 학생은 A를 포함하여 2명이라고 했기 때문에
<SYNC Start=1297272><P Class=KRCC>
얘가 만약에 2개를 가져갔다면 하얀색 모자는 이것보다 적은 개수로 갖고 가야 되는 겁니다. 그렇지요? 그럼 여기에서 또 구간이 나뉘는 거예요. 만약에 얘가 검은색을 2개 받고요.
<SYNC Start=1310576><P Class=KRCC>
하얀색을 하나도 안 받는다고 해보지요. 그럼 이 경우에는 여기에 흰색 뿌리고 여기에 흰색을 뿌리기 때문에 이 친구는 흰색이 4개가 남습니다. 그렇지요?
<SYNC Start=1324289><P Class=KRCC>
그런데 이 4개가 남는 것 중에 더 이상 여기에는 흰색이 들어가면 안 돼요, B라고 하는 애는. 그럼 나머지 여기나, 여기나, 여기에 추가적으로 들어가면 되겠지요.
<SYNC Start=1333417><P Class=KRCC>
그러니까 서로 다른 3개 중에 중복을 허용해 4개를 뽑으면 되겠구나, 이러면 끝날 것 같은데 안 끝나요. 왜? 만약에요. 얘가 4개가 여기에 다 쏠리는 경우도 있겠지요.
<SYNC Start=1347175><P Class=KRCC>
그러면 얘도 당연히 검은색이 흰색보다 많아야 되는 건데 흰색이 여기 4개가 다 들어간다는 것은 조건에 부합하지 않는 겁니다. 따라서 그 친구를 또 빼 줘야 되니까 이런 식으로 해 줘야 돼요.
<SYNC Start=1359803><P Class=KRCC>
되시지요? 그러면 이 친구는, 여기에 있는 것 15거든요, 6C2가 되어서. 그럼 15에서 1을 빼야 되니까 14가지가 나올 겁니다. 돼요?
<SYNC Start=1370697><P Class=KRCC>
그다음 것. 여기 하나, 그다음에 여기도 당연히 하나, 하나, 이렇게 가져가겠지요. 그러면 흰색이 몇 개야? 3개가 남을 겁니다. 그런데 이 3개는 나머지 3개에 넣으면 되는 거예요.
<SYNC Start=1386825><P Class=KRCC>
이번에는 아까처럼 여기에 다 들어간다고 해서 문제가 되지 않아요. 왜? 애초에 검은색이 4개이고 흰색이 3개가 될 거니까. 따라서 얘는 단순하게 그냥 3H3을 해 버리면 끝나는 겁니다. 그렇지요?
<SYNC Start=1399274><P Class=KRCC>
그래서 5C2가 될 거니까요. 이 친구는 10이 되겠지요. 따라서 이 두 번째 것 같은 경우는 여기에 올 수 있는 게 14가지짜리랑 그다음에 10가지짜리, 이렇게 해서 3×24가 될 겁니다. 됐지요?
<SYNC Start=1416078><P Class=KRCC>
그다음, 이것 한번 해 볼까? 하나씩 나눠 갖는 것. 하나씩 나눠 갖는 것조차 경우의 수가 존재하겠지요. 그럼 몇 가지가 나와요? 1, 1. 1, 1. 1, 1. 3가지가 나올 겁니다.
<SYNC Start=1426840><P Class=KRCC>
그래서 이것은 첫 번째, 검은색을 하나씩 나눠 갖는 경우 3가지가 일단 곱해지고요. 만약에 이렇게 하나하나 집어넣었다, 그럼 이중에 흰색이 들어가야 되는 게 있고
<SYNC Start=1440101><P Class=KRCC>
안 들어가야 되는 게 있을 것 아니에요. 그럼 만약에 이 친구가 ㈐의 조건을 만족하는 거야. 그럼 흰색이 무조건 0개로 해요. 그런데 여기가 0개가 될 수도 있고 여기가 0개가 될 수도 있겠지요.
<SYNC Start=1450569><P Class=KRCC>
그럼 둘 중의 하나가 어쨌든 0개가 되어는 되는 것이기 때문에 그다음 2가 이렇게 곱해집니다. 얘는 두 번째 단계야. 어떤 단계라고요?
<SYNC Start=1459257><P Class=KRCC>
검은색을 하나씩 넣은 상태에서 하얀색이 하나도 안 들어가는 것을 선택하는 게 2가지라는 거지요, B, C 중의 하나니까. 돼요? 그럼 만약에 B에 흰색을 아무것도 안 넣었다고 가정을 해 볼게요.
<SYNC Start=1472133><P Class=KRCC>
그럼 C하고 D에는 무조건 하나씩 들어가야 되겠지요. D에 넣는 이유는 무조건 하나는 갖고 가야 되기 때문에 넣는 것이고. 얘는? 얘가 만약에 여기가 0이 돼요.
<SYNC Start=1482881><P Class=KRCC>
그럼 ㈐의 조건에서 2명뿐이라고 했는데 3명이 되는 거거든요. 그렇지요? 그러니까 이 친구도 당연히 넣어야 되는 겁니다. 1, 이런 식으로. 그러면 이 경우에는 흰색이 몇 개가 남아요?
<SYNC Start=1494403><P Class=KRCC>
오른쪽에 써 볼까? 4개가 남습니다. 그렇지요? 이 4개가 다시 여기하고, 여기하고, 여기하고, 여기 중에서 안 들어가야 되는 게 있는데 여기는 안 들어가야지요. 왜? 0으로 애초에 딱 결정한 거니까.
<SYNC Start=1512086><P Class=KRCC>
그럼 결국은 여기, 여기, 여기에 추가적으로 들어가면 되는 거거든요. 그럼 결국 얘도 3H4야. 그렇지요? 그런데 이 중에 안 되는 게 있다고요. 또 어떤 것?
<SYNC Start=1524321><P Class=KRCC>
그렇지, 4개가 남아 있는데 이 4개가 여기에 온전히 다 들어가 버리면 안 되는 거지요. 그렇지요? 그래서 그 친구를 빼야 됩니다. 1가지 경우. 그래서 이것도 얼마가 되느냐?
<SYNC Start=1535720><P Class=KRCC>
얘도 14가지가 될 겁니다. 따라서 이것은 14개가 나오고요. 여기 앞에 있는 게 3×2에 뒤에 있는 것 14가지가 될 거니까 이것 조금 이따가 계산해 보고. 마지막 것, 얘는 좀 쉬워요.
<SYNC Start=1550521><P Class=KRCC>
여기 5개가 들어갔다, 그러면 여기 1, 1, 1. 3개 중에 하나 넣어야 되니까 첫 번째 단계는 똑같은 원리로 3이 이렇게 곱해질 거고요. 그다음에 하얀색은 무조건 들어가야 되겠지요? 그렇지요?
<SYNC Start=1563276><P Class=KRCC>
여기는 무조건 0이 될 거야. 검은색이 많으려면 무조건 안 들어가야 돼. 그럼 나머지한테 하얀색을 넣어야 되니까 1, 1, 이렇게 배정을 하면 남아 있는 흰색이 몇 개가 되냐면 4개가 됩니다. 됐지요?
<SYNC Start=1576204><P Class=KRCC>
그럼 얘도 마찬가지로 3H4를 하면 되는 건데, 얘는 위에 있는 거랑은 다릅니다. 왜냐? 남는 게 4개인데요. 이 4개를 가지고 여기에 온전히 다 몰아넣는다고 해도 문제의 조건에 부합해요.
<SYNC Start=1591196><P Class=KRCC>
5개보다 4개는 작잖아요. 그러니까 얘는 여기에서 뭔가 1 빼 주거나 할 필요 없이 단순하게 이것만 해 주시면 끝납니다. 따라서 여기 있는 것 6C2가 될 거니까 15가 되겠지요.
<SYNC Start=1603647><P Class=KRCC>
그럼 여기 있는 것 45가지가 될 거야. 그다음 얘도 계산을 하게 되면 24에 3을 곱하면 72가 될 거고요. 그다음에 6×14가 될 거니까 84가 될 겁니다.
<SYNC Start=1618579><P Class=KRCC>
그럼 84, 72, 45를 더해야 되니까 156에 그다음 45를 더하면 201, 그래서 전체 경우의 수는 201가지가 되겠다. 이 문제, 다시 한번 정리를 해 볼게요.
<SYNC Start=1633348><P Class=KRCC>
케이스 나누는 게 파생되고, 파생되고, 파생되고, 이런 식이라. 일단은 ㈏의 조건을 먼저 기준으로 잡는 게 편하다. 왜? 4개 이상이기 때문에 4개, 5개, 6개로 하면 되겠다.
<SYNC Start=1644228><P Class=KRCC>
그런데 6개짜리는 안 되는 게 검은색 모자가 하얀색 모자보다 많아야 되는 친구가 2명이잖아요, 무조건. 그러니까 2명이 되기 위해서는 A에 6개를 다 집어넣어 버리면 문제에 해당하지 않는 거지요.
<SYNC Start=1657546><P Class=KRCC>
그 친구 빼 버리고요. 4개, 5개로 나누면 되는 건데 4개일 때가 좀 문제가 되지요. 하나, 하나 나눠 갖는 경우도 있고요. 2개 몰아서 가져가는 경우도 있을 겁니다.
<SYNC Start=1666881><P Class=KRCC>
그런데 하나하나 나눠 갖는 것은 약간 고려할 게 많기 때문에 2개부터 먼저 하게 되면 누군가가 2개를 가져가는 경우, 그게 3가지가 될 거고요.
<SYNC Start=1674736><P Class=KRCC>
그 상태에서 흰색을 하나도 안 넣는 경우와 하나를 넣는 경우까지 고려를 합니다. 그다음에 아무것도 받지 못하면 안 되기 때문에 하얀색을 넣어 놓고
<SYNC Start=1685281><P Class=KRCC>
그다음에 남는 하얀색들로 배열을 하면 되는 건데 그 하얀색 개수가 여기 4개짜리와 똑같아지면 안 되기 때문에 그것에 대한 고려가 필요하다, 그래서 -1을 해 주는 거지요. 돼요?
<SYNC Start=1700709><P Class=KRCC>
그래서 그런 식으로 해서 이것하고 이것 같은 경우에는 어차피 그 하나를 넣게 되면 흰색 같은 경우는 하나도 안 들어가기 때문에 이 하나에 대한 케이스로만 딱딱 분리하면 쉽게 끝납니다.
<SYNC Start=1711843><P Class=KRCC>
얘도 마찬가지로 여기에 4개 온전히 들어가는 것, 그것 빼 줘야 되는 거니까 그것 고려해 주시고요. 괜찮지요?
<SYNC Start=1718520><P Class=KRCC>
그리고 이게 단계적으로 조금 어렵기는 한데 여러분들이 논리적으로 오류 없게, 빠짐없이. 그래서 그것을 좀 머릿속에 염두에 두셔야 돼요.
<SYNC Start=1729837><P Class=KRCC>
항상 곱의 법칙과 합의 법칙이 중요한 겁니다, 케이스 나누는 것. 그래서 2번도 만만치 않은 문제였고요. 그다음 3번. 3번이랑 4번을 제가 가져올 때 조금 고려했던 게, 이것을 진짜 넣을까, 말까?
<SYNC Start=1746293><P Class=KRCC>
약간 단순 계산 같기는 한데. 그리고 평가원에서 출제한 것은 아니고요. 학평, 교육청에서 출제한 거라 고민을 좀 했는데 그래도 여러분들이 이런 세는 것, 정말 좀 뭐라고 해야 될까요?
<SYNC Start=1759365><P Class=KRCC>
귀찮아 보이는 건데 이것을 연습을 해 봐야 될 것 같아요. 이게 막상 시험에 나왔을 때 ‘이것 귀찮은데. 이것 모르겠다.’ 포기해 버리면 끝나니까. 수능에 안 나온다는 보장이 없거든요.
<SYNC Start=1771005><P Class=KRCC>
하나하나 다 해 봐야 되는 것들, 이런 것 연습 한번 해봐야 될 것 같습니다. 그래서 이것, X가 {1, 2, 3, 4}이고요.
<SYNC Start=1777951><P Class=KRCC>
그다음에 Y가 {1, 2, 3, 4, 5}로 가는 건데 1, 2, 3을 더하고, 이것에 대한 함숫값, f(4)를 빼요. 그랬더니 3의 배수이더라.
<SYNC Start=1788691><P Class=KRCC>
그런데 여기에서 주의해야 될 것은 m이 정수이기 때문에 0도 가능한 거예요. 괜찮지요? 그러면 어쨌든 이것을 만족시키는 함수 f의 개수를 구하시오.
<SYNC Start=1799647><P Class=KRCC>
그리고 m이라고 하는 게 음수도 가능하기 때문에 이것 자체도 음수가 되긴 되는데 이따가 보면 알겠지만요.
<SYNC Start=1805578><P Class=KRCC>
이것에 대한 순서쌍을 제가 고려할 때 얘가 음수가 나오는 것들은 사실 체크를 안 해도 괜찮습니다. 어쨌든 다 볼 거예요. 이것을 분류할 때 가장 기준이 되는 것은 이겁니다. 왜냐?
<SYNC Start=1818795><P Class=KRCC>
이 앞에 있는 것은 3개를 더하는 거고요. 그다음에 뒤에 있는 것은 이 f(4)를 빼 버리는 건데 이 f(4)라고 하는 것만 하나로 딱 떨어져 있는 거지요.
<SYNC Start=1827126><P Class=KRCC>
그래서 저 친구만 체크를 잘해 주면 나머지 f(1)과 f(2)과 f(3) 같은 경우는 더하기 순서쌍으로 체크하면 되겠구나. 따라서 이렇게 나눌 겁니다.
<SYNC Start=1836122><P Class=KRCC>
f(4)라고 하는 것을 기준으로 해서 얘가 1이 되는 경우와 2가 되는 경우, 3이 되는 경우, 4가 되는 경우, 5가 되는 경우를 체크해 보지요. 됐나요?
<SYNC Start=1848709><P Class=KRCC>
그러면 f(1)과 f(2)와 f(3)을 더한다는 것은 결국 1, 2, 3, 4, 5 중에 3개를 선택해서 더한 것과 마찬가지잖아요. 그럼 최솟값은 3이 될 거고요. 최댓값은 얼마가 되지요? 15가 될 겁니다.
<SYNC Start=1866115><P Class=KRCC>
그럼 3과 15 사이에 있는 값들로 앞의 형태를 구성하면 되겠지요. 그래서 순서는 고려하지 않고 일단 더하기부터 체크할 겁니다. 첫 번째, 얘가 1이 되더라.
<SYNC Start=1876222><P Class=KRCC>
그러면 3의 배수가 되는 것을 고려해 보면, 0이 돼도 되고 음수가 돼도 되지만, 1보다 작은 값들은 안 나옵니다. 그렇지요? 0도 안 돼요. 따라서 얘가 가능한 것은, 여기 다른 색으로 써 볼까?
<SYNC Start=1889069><P Class=KRCC>
4, 그렇지요? 그럼 3 나오니까, 4-1 하면 3 나오니까. 그다음에 7, 그렇지요? 그다음 10, 그다음 13, 여기까지 될 겁니다. 2가 되는 것 체크해 볼까요? 5, 가능하지요? 그다음 8, 돼요?
<SYNC Start=1904892><P Class=KRCC>
그다음 11, 그다음 14. 3이 되는 것은요? 여기에서 나오는 게 0이 되어도 되는 건데 3 이상이라고 했지요, 어쨌든 최소. 그러니까 안 되고, 6. 3은 되지요.
<SYNC Start=1920104><P Class=KRCC>
3, 그다음에 6, 그다음 9, 12, 15가 될 겁니다. 돼요? 4가 되는 것은, 이 친구에서 뭔가를 빼 줘서 체크를 해 봐야 되는 건데 얘는 7이 될 겁니다. 돼요? 그다음에 다시. 4부터 해야 되겠지요.
<SYNC Start=1939233><P Class=KRCC>
4, 그다음 7이 될 거고요. 그다음 10이 될 거고요. 그다음 13이 될 겁니다, 어차피 4-4 하면 0이 될 거니까. 5에 대한 것도 보면 5보다 작은 것은 당연히 안 되고요.
<SYNC Start=1950086><P Class=KRCC>
이 친구도 5가 될 거고 그다음 8이 될 거고 그다음 11이 될 거고 14가 될 겁니다. 돼요? 가만 보니까 얘하고 얘하고는 똑같은 경우가 나올 거고. 그다음 얘하고 얘하고는 똑같은 경우가 나오겠구나.
<SYNC Start=1968856><P Class=KRCC>
그리고 이것만 별도로 해 주면 되겠구나. 결국은 여러분들이 3가지만 체크하면 됩니다. 첫 번째, 이게 나오는 것 순서쌍을 체크해 보지요. 하나하나씩 작은 것부터 해 볼 겁니다.
<SYNC Start=1983698><P Class=KRCC>
4에 해당하는 것, 순서쌍 순서 없이 그냥 고려해서 쭉 써 볼 거예요. (1, 1, 2)가 있겠지요, 제일 작게는. (1, 1, 2)보다 더 큰 것, 하나씩 늘려 가면서 하면 되는 건데 이다음에는 없습니다.
<SYNC Start=1996043><P Class=KRCC>
그다음 7이 되는 것 찾아보면 (1, 1, 5)가 될 거고요. 또 (1, 2, 4)가 될 거고요. 그다음 (1, 3, 3)이 될 겁니다. 두 번째까지 키우면서 다 봤지요? 더 이상은 없고요. 2, 2, 그다음 얼마가 오면 돼요?
<SYNC Start=2011854><P Class=KRCC>
3이 오면 돼요. 더 이상은 없겠지, 그렇지요? 그다음에 10이 되는 것 보면 1부터 하면 (1, 1, 8). 안 돼요, 8이라고 하는 게 없기 때문에. 그러면 어쨌든 5라고 하는 게 최댓값이니까요.
<SYNC Start=2023438><P Class=KRCC>
1하고 5를 더했을 때 얼마가 나와요? 6이 나오지요. 그럼 이 친구는 (1, 4, 5)를 해 보면 얘가 제일 작은 값이겠구나.
<SYNC Start=2031379><P Class=KRCC>
두 번째와 세 번째 바꿔 가면서 케이스 분류하면 되는 건데 더 이상은 없을 거고요. 그다음은 2, 2, 그다음은 여기가 4가 되니까 6이 와야 되는데 안 되지요.
<SYNC Start=2040707><P Class=KRCC>
그러니까 이것 하나 늘려서 3에 5, 이렇게 하시면 됩니다. 그다음은 (2, 4, 4)가 될 거고요. 더 이상은 안 돼요. 3으로 바꿉니다. (3, 3, 4). 더 이상은 없지요. 돼요? 그다음 이제 13으로 갈 겁니다.
<SYNC Start=2059937><P Class=KRCC>
13으로 가게 되면 1부터 하는 것은 쉽지 않아요. (1, 5, 5) 하더라도 11이거든요. 그러니까 2부터 할건데 2에 5를 하게 되면 이 친구는 9가 나옵니다. 그러니까 안 돼요.
<SYNC Start=2070935><P Class=KRCC>
13이 되게끔 하려면 어쨌든 2를 13에서 빼 버리면 11이 나오지요. 그럼 11이 되는 것을 (3, 4, 5), 저것들 중에 2개를 선택하면 되는 건데 그것도 쉽지 않습니다. 그래서 이 친구는 2가 없고요.
<SYNC Start=2083177><P Class=KRCC>
3으로 건너뜁니다. 3, 3, 그다음 얼마 오면 돼요? 6에 5니까 이것도 안 되네. 그럼 3 빼게 되면 12가 될 거니까 13에서 3를 빼 버리면 10이 나오겠지요. 그래서 얘는 (3, 5, 5) 이렇게 될 겁니다.
<SYNC Start=2100762><P Class=KRCC>
그다음 4로 늘려서 한번 해 볼까요? 그러면 (4, 4, 4)라고 하는 게 제일 작은 건데 걔가 12가 될 거니까요. 여기가 5로 바뀌면 되겠다. 그럼 전체 나오는 것 몇 가지예요, 총?
<SYNC Start=2111400><P Class=KRCC>
이것은 11가지가 되겠지요. 그런데 이 11가지가 중요한 것은 아니고요. 이따가 이제 이 안에서 f(1)과 f(2)와 f(3)을 배열시키면 되는 건데 그게 조금 시간이 걸립니다.
<SYNC Start=2125981><P Class=KRCC>
좀 정리가 돼요, 몇 가지로 요약이 되니까 걱정할 필요 없고요. 지금 이렇게 찾는 과정 자체가 어려운 겁니다. 5라고 하는 것부터 찾아볼게요. 얘는 (1, 1, 3)을 하면 되겠다.
<SYNC Start=2138966><P Class=KRCC>
그다음 (1, 2, 2)가 되겠지요. 그렇지요? 그다음에 제일 작은 것은 (2, 2, 2)가 될 건데 그 친구는 6으로 넘어가니까 더 이상은 안 될 거고요.
<SYNC Start=2147569><P Class=KRCC>
그다음 8이 되는 것 찾아보면 1을 빼게 되면, 1부터 시작할 거니까, 그럼 7이 될 거거든요. 그럼 얘는 1, 2.
<SYNC Start=2159787><P Class=KRCC>
이렇게 될 겁니다. 그렇지요? 그다음 (1, 3, 4), 이렇게 올 거고요. 더 이상은 커질 수가 없으니까 2로 넘어가면 되는 건데 2에 2에 4, 이렇게 바뀔 거고요. 그다음에 2에 3, 3, 이렇게 되겠지요.
<SYNC Start=2175488><P Class=KRCC>
그다음 것 넘어가면 (3, 3, 3)이 되는데 그 친구 9가 될 거니까 안 될 거고요. 이제 11로 넘어갑니다. 1부터 시작해서 11이 되는 것을 찾아보면 1에 5에 5에, 이것 가능해요.
<SYNC Start=2187083><P Class=KRCC>
그다음 2에, 11에서 2를 빼면 9가 될 거니까 그게 되는 것은 4하고 5가 될 겁니다. 큰 것부터 이렇게 딱딱딱 맞게끔 조합하면 되니까. 그다음은 2로 시작하는 것은 더 이상은 없을 거고요.
<SYNC Start=2198870><P Class=KRCC>
3으로 하게 되면 3, 3. 6이지요? 그럼 얘는 3, 3에 5가 되겠다. 그럼 11이 되겠지요. 그다음 얘는 또 돼요. (3, 4, 4)가 되겠구나. 돼요?
<SYNC Start=2210072><P Class=KRCC>
그다음에 (4, 4, 4) 하게 되면 얘는 12가 되니까 더 이상 안 되고. 이 밑에 있는 것 14, 한번 해 보면요. 1 그다음에 5, 5, 이렇게 해도 11이니까 안될 거고. 2를 빼 볼까요? 그럼 2 빼면 12거든요.
<SYNC Start=2222866><P Class=KRCC>
그럼 12도 안 돼요. 왜? 제일 큰 것 2개 조합해 봤자 10밖에 안되니까. 3으로 해 볼까? 그럼 11입니다. 그럼 3으로 했을 때는 돼요. 3, 3, 이게 6이거든요. 3, 3말고 뭐로 해 볼까? 4로 해 볼까요?
<SYNC Start=2236690><P Class=KRCC>
그럼 7이 될 거고, 3, 5, 이것도 안 되네. 14보다 안되지요. 그럼 여기 4. 4를 하게 되면 10이 될 거니까 4하고 5하고 하고, 이렇게 할 겁니다. 더 이상은 없습니다.
<SYNC Start=2248779><P Class=KRCC>
그래서 이것도 총 몇 개가 나오냐면 얘도 11개가 나오지요, 11가지. 마지막 세 번째 것 가 보지요. 세 번째 것은 이쪽에. 3, 6, 9, 12, 15예요. 3, 6, 9, 12, 15가 되는 것 찾아보자.
<SYNC Start=2266869><P Class=KRCC>
3이 되는 것은 일단 (1, 1, 1), 이렇게 하면 끝날 거고요. 그다음에 6이 되는 것 찾아보면 (1, 1, 4)가 될 거고요. 그다음 (1, 2, 3)이 될 거고, 그다음에 2로 넘어가야 되겠지요? (2, 2, 2)가 되겠다.
<SYNC Start=2282043><P Class=KRCC>
그다음에 이 밑에 쓸게요, 공간이 좀 적으니까. 9가 되는 것도 찾아보지요. 그럼 얘가 1, 그다음에 1이 오면 얘가 8이 되어야 되는 거니까 더 이상 5로 안됩니다. 그러니까 1 뺐을 때는 8이지요?
<SYNC Start=2293956><P Class=KRCC>
그럼 그게 되는 최솟값은 3하고 5가 될 거예요. 됐지요? 그다음에 또 (1, 4, 4)가 될 겁니다. 2로 넘어가요. 그럼 2를 빼게 되면 7이 되겠지요.
<SYNC Start=2304252><P Class=KRCC>
그럼 2에 얼마? 2에 5, 이렇게 하면 9가 또 될 겁니다. 그다음에 2에 3에 4, 이렇게 될 거고요. 또 하나 (3, 3, 3). 2에 대한 것 다 했고 3으로 넘어가야 되는데 그때 딱 (3, 3, 3)이 9가 되겠지요.
<SYNC Start=2319509><P Class=KRCC>
그다음 또 12가 되는 것 찾아보면 아까 좀 했으니까 눈치를 챘겠지만 (2, 5, 5), 이렇게 해서 12를 찾는 게 제일 작은 겁니다. 그렇지요? 1로는 더 이상은 안 되고. 3으로 하게 되면 여기가 3이지요.
<SYNC Start=2332307><P Class=KRCC>
9가 되려면 4에 5가 될 거고요. 그다음에 4로 넘어갈까요? (4, 4, 4), 이렇게 하면 되겠네. 그다음 15가 되는 것 찾아야 되는데 얘는 (5, 5, 5)밖에 안 될 겁니다. 이것 세어 볼까요?
<SYNC Start=2348225><P Class=KRCC>
하나, 둘, 셋, 넷, 4개에 하나, 둘, 셋, 넷, 5개, 그다음에 이것 4개, 맞지요? 하나, 둘, 셋, 넷, 그다음에 5개에 4개, 9, 13.
<SYNC Start=2364891><P Class=KRCC>
총 13개가 되겠지요. 그러니까 이 케이스를 나누는 게 생각보다 실수할 확률도 크고요. 여러분들 시험장에서는 물론 연필로 해 나가면서 하나씩 하면 되는데 답이 안 나오는 경우들이 생기겠지요.
<SYNC Start=2378247><P Class=KRCC>
그것만 좀 주의하시면 되고. 이제는 이렇게 나눴으면 그다음 단계가 뭐냐? 얘들을 f(1)과 f(2)와 f(3)한테 줘야 되는 거지요. 그러니까 형태를 좀 나눠서 하면 편합니다. 이것 같은 것 2개 있고요.
<SYNC Start=2392677><P Class=KRCC>
다른 것 하나 있는 상태, 이것도 같은 상태이고요. 이것도 같은 형태, 얘도 같은 형태, 얘도 같은 형태, 얘도 같은 형태다. 그렇지요? 이것도 같은 형태다. 이것도 같은 형태다.
<SYNC Start=2407755><P Class=KRCC>
결국 저것을 배열하는 것은 3!을 2!로 이렇게 나눠 주시면 되고, 그럼 이게 몇 가지가 있는 거예요? 하나, 둘, 셋, 넷, 다섯, 여섯, 일곱, 8가지가 있는 겁니다, 이렇게. 됐지요?
<SYNC Start=2420848><P Class=KRCC>
그다음에 나머지는 다 어떤 거예요? 다른 것들이지요. 그러니까 얘는 3!짜리가 될 거고 이 친구가 몇 개가 있다? 3개가 있더라. 이게 경우의 수가 될 겁니다.
<SYNC Start=2432944><P Class=KRCC>
계산하면 여기 있는 것 3 나올 거니까요. 24가 될 거고 6×3=18이니까 이렇게 될 거야. 이게 42개가 되겠지요.
<SYNC Start=2441562><P Class=KRCC>
그다음 두 번째 것도 마찬가지인데 얘하고 얘하고 그다음에 얘하고 얘하고 얘하고 얘하고 얘하고 얘하고, 이렇게 가져오면 되겠지요. 몇 개예요? 하나, 둘, 셋, 넷, 다섯, 여섯, 일곱, 8개가 되겠다.
<SYNC Start=2457891><P Class=KRCC>
같은 형태가 되겠구나. 3!을 2!로 나누고 이거 8개가 될 거고요. 그다음에 (1, 2, 5), (1, 3, 4), (2, 4, 5)가 다 다른 거지요. 그러니까 3!에 ×3이 되겠다. 따라서 여기에 있는 것도 계산하면 얼마?
<SYNC Start=2472978><P Class=KRCC>
42가지가 나올 겁니다. 맞지요? 그다음 여기 뒤에 있는 것도 보게 되면, 이것은 그냥 1가지예요. 그런데 이것만, (1, 1, 4), 그다음에 (1, 4, 4), 그다음 (2, 2, 5), 그다음 (2, 5, 5),
<SYNC Start=2488615><P Class=KRCC>
이렇게만 한번 체크해 보지요. 이것하고 이것하고 이것하고 이것하고 같은 형태니까. 3!을 2!로 나누고요. 이게 총 몇 가지? 4가지가 있겠다.
<SYNC Start=2498364><P Class=KRCC>
그다음에 아예 다 같은 것 하나, 그다음 2개, 그다음 3개, 4개, 5개. 5개짜리 있고요. 그다음 체크 안 한 것, 이것. (1, 3, 5), (1, 2, 3), (3, 4, 5), (2, 3, 4), 몇 개예요?
<SYNC Start=2514538><P Class=KRCC>
하나, 둘, 셋, 4개가 있겠지요. 그러니까 3!짜리가 4개가 있겠다. 계산하게 되면 이것은 3에 4니까요. 12가 될 거고 5가 될 거고 24가 되니까 17에 24 더하면 얼마지요? 41이 될 겁니다. 되요?
<SYNC Start=2532413><P Class=KRCC>
그런데 여기에서 주의해야 될 게 우리 앞에서 처음에 f(4)가 되는 게 1, 2, 3, 4, 5를 나눠서 쭉 전개를 한 거잖아요. 그런데 얘는 뭐하고 똑같냐면 f(1)짜리였지만, 얘는 f(4)하고 똑같은 경우입니다.
<SYNC Start=2545632><P Class=KRCC>
그다음에 이 친구는 f(5)하고 똑같은 경우거든요. 이렇게 하면 안 되겠구나. 얘가 4가 되는 거라고 할게요, 그냥. 얘가 4가 되는 거랑 똑같은 거고요. 얘도 5가 되는 거랑 똑같은 거다.
<SYNC Start=2559865><P Class=KRCC>
즉, 이런 경우가 몇 가지가 나온다는 것? 2가지가 나온다는 거지요. 얘도 2가지가 나온다. 그런데 이 가운데에 있는 것은 딱 하나밖에 없는 겁니다. 따라서 84짜리 2개가 존재하고요.
<SYNC Start=2573026><P Class=KRCC>
그다음에 마지막 것 몇 개? 41개가 있겠다. 그래서 168이라고 하는 것에 41을 이렇게 더하니까요. 내가 원하는 총 경우의 수는 209개가 되는 거지요. 되시지요?
<SYNC Start=2587763><P Class=KRCC>
그래서 케이스 나누는 게 생각보다 어려운 그런 문제였습니다. 마지막. 마지막 것은 문제의 그런 길이나 아니면 조건에 비하면 생각보다 쉬운 문제예요.
<SYNC Start=2606213><P Class=KRCC>
보시면 자연수 n에 대하여 0부터 n까지 정수가 하나씩 적혀 있는 (n+1)개의 공이 들어 있는 상자가 있습니다.
<SYNC Start=2615227><P Class=KRCC>
이 상자에서 1개의 공을 꺼내어 공에 적힌 수를 확인하는 다시 넣는 과정을 5번을 반복을 하더라. 확인한 5개의 수가 다음 조건을 만족시키는 경우의 수를 an이라고 하자.
<SYNC Start=2625524><P Class=KRCC>
꺼낸 공에 적힌 수는 먼저 꺼낸 공에 적힌 수보다 작지 않다는 것은 크거나 같다는 얘기입니다. 그럼 예를 들어 제가 5개를 이렇게 해 볼게요.
<SYNC Start=2634064><P Class=KRCC>
a, b, c, d, e, 이렇게 하면 이런 식의 조건이 들어간다는 얘기입니다. 순서대로 a, b, c, d, e, 이렇게 뽑는다 치면. 세 번째 것은 공에 적힌 수는요. 첫 번째 공에 적힌 수보다 1이 더 크대요.
<SYNC Start=2650828><P Class=KRCC>
그럼 이 c라고 하는 것은 결국은 뭐야? a+1이라고 하는 것과 마찬가지가 되겠지요. 그러면 a, b, a+1, d, e라고 하는 것으로 이렇게 배열이 될 건데
<SYNC Start=2665202><P Class=KRCC>
이때 이 조건을 만족시키는 경우의 수를 an이라고 한답니다. 그럼 문제 자체가 좀 이해하기가 어려울 수 있는데 하나만 체크해 보면 얘하고 얘하고는요. 차이가 얼마예요? 1이에요.
<SYNC Start=2683532><P Class=KRCC>
1, 그러면 뭐가 됐든 b라고 하는 친구는 얘가 될 수도 있고요. 아니면 얘가 될 수도 있겠지요. 총 몇 가지가 나오는 거예요? 2가지가 나오는 겁니다. 이게 첫 번째 단계. 그렇지요?
<SYNC Start=2701295><P Class=KRCC>
그다음에 얘가 총 몇 개냐면 (n+1)개예요. 그런데 얼마부터 시작하냐면 0부터 시작해서 n까지가 딱 되는 건데 만약에 이 a+1이라고 하는 게 0이라고 한번 해 보자고요.
<SYNC Start=2714906><P Class=KRCC>
그럼 이게 0이면 이 바로 직전에 있는 것은 0-1이니까 -1이 되어야 되겠지요. 그럼 말이 안 돼요. 따라서 얘는 최솟값이 얼마가 되어야 되냐면 1이 되어야 되는 겁니다. 0 그다음 1, 이런 식으로.
<SYNC Start=2729526><P Class=KRCC>
그러면 결국 이 d하고 e를 배열하는 데 있어서는 이 친구가 가능한 게 1부터 가능한 거지요. 그리고 얘는 얘들과 함께 선택을 하면 이 앞에 있는 a는 이것보다 1 작은 거니까
<SYNC Start=2742530><P Class=KRCC>
저절로 배열이 되는 거예요. 따라서 서로 다른 몇 개중에서? n개 중에서. 왜 n개? 0을 빼 버린 것. 즉, 1부터 n까지밖에 없는 상태에서, 이 n개 중에서 중복을 허용해 몇 개 뽑으면 되는 거다?
<SYNC Start=2761953><P Class=KRCC>
3개를 뽑으면 a+1과 d와 e가 선택이 된다는 거지요. 따라서 2에 nH3을 해 버리면 우리가 원하는 답입니다. 얘가 an이에요. 문제의 길이에 비해는 그렇게 어렵지 않습니다.
<SYNC Start=2779368><P Class=KRCC>
따라서 이것 하게 되면 an=2×nH3이 될 거고요. 2×, n+2에 C에 3이 이렇게 될 겁니다. 맞지요? 그럼 2에, 3×2×1에 (n+2)×(n+1)×n, 이렇게 될 거고요.
<SYNC Start=2799570><P Class=KRCC>
이런 식으로 계산하게 되면 얘는 3분의{(n+2)(n+1)n}, 이렇게 될 거예요. 그런데 이 an이 어디에 들어가냐? 저기 밑의 Σ에 들어가지요.
<SYNC Start=2811271><P Class=KRCC>
Σ n=1부터 18까지 (n+2)분의, 그다음에 이것 들어가니까 3분의{(n+2)(n+1)n}, 이렇게 될 겁니다. 맞아요?
<SYNC Start=2825502><P Class=KRCC>
그럼 이것하고 이것 약분되니까 이것 정리하게 되면 Σ n=1부터 18까지 3분의{n(n+1)}, 이런 식으로 올 거라는 거지요. 그럼 결국 ⅓을 빼고요. n=1부터 18까지 결국 (n²+n)이 되겠더라. 맞지요?
<SYNC Start=2845584><P Class=KRCC>
그럼 결국 이것은 6분의18×19×, 그다음에 이것 2배 한 다음에 더하는 거니까 37이 될 거고요. 그다음 +2분의(18×19), 이렇게 되고 여기에 ⅓이 곱해지더라. 쭉쭉, 이렇게 할 거고요.
<SYNC Start=2868049><P Class=KRCC>
이것 이렇게 하게 되면 19×37이고 이것도 이렇게 약분한 다음에 이 ⅓이 여기에도 곱해져야 돼요. 따라서 이것도 3으로 약분될 거고 19×3이 될 겁니다. 그럼 이것 이제 인수분해해서 곱할까요?
<SYNC Start=2883249><P Class=KRCC>
19에 37+3이 될 거니까 19×40, 이렇게 하면 되겠지요. 결국 여기에 40을 이렇게 곱하게 되면 0이 될 거고요. 36이고 4×1=4, 760, 이런 식으로 나오겠다.
<SYNC Start=2899052><P Class=KRCC>
결국은 이 문제에서 제일 중요한 것은 이 조건입니다. a, b, c, d, e라고 하는 것으로 임의로 일단 잡아 놓은 다음에 이 a와 c에 대한 관계에 따라서 b의 선택지가 달라지고요.
<SYNC Start=2911236><P Class=KRCC>
이 b의 선택지에 a+1이라고 하는 것과 a라고 하는 게 시작점 자체가 0부터 무조건 출발해야 되기 때문에 얘가 선택할 수 있는 것은 1부터가 되겠다.
<SYNC Start=2921053><P Class=KRCC>
그래서 1부터 이 3개에 대한 것을 선택하면 저절로 a가 나올 거니까요. 그것에 대한 고민 없이 이렇게 쭉 해 주시면 됩니다. 고생 많이 하셨고요.
<SYNC Start=2929322><P Class=KRCC>
다음 시간에는 완벽하게 새로운 단원 확률로 여러분들 찾아뵙도록 할게요. 수고하셨습니다.
<SYNC Start=2934313><P Class=KRCC>
&nbsp;
</BODY>
</SAMI>