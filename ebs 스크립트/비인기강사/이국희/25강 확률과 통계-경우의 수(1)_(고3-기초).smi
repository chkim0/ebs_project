<SAMI>
<HEAD>
<TITLE>Time Tools (C) CCNSOFT 2005</TITLE>
<STYLE TYPE="text/css">
<!--
P { margin-left:8pt; margin-right:8pt; margin-bottom:2pt;
    margin-top:2pt; font-size:12pt; text-align:left;
    font-family:굴림, Arial; font-weight:normal; color:white;
    background-color:#405A8D; }
.KRCC { Name:한국어; lang:ko-KR; SAMIType:CC; }
#STDPrn { Name:Standard Print; }
#LargePrn { Name:Large Print; font-size:20pt; }
#SmallPrn { Name:Small Print; font-size:10pt; }
-->
</STYLE>
</HEAD>
<BODY>

<SYNC Start=22466><P Class=KRCC>
반갑습니다. 몰입하는 수능완성 25강에 오신 여러분을 환영합니다. 저는 이국희이고요. 오늘부터 이제 확률과 통계 시작입니다. 원순열부터 시작해서 여러분이 배웠던 여러 가지 기술들 있지요, 테크닉. 

<SYNC Start=34879><P Class=KRCC>
그런 것들을 활용해서 문제를 풀어볼 것인데 기본적으로 고등학교 1학년 때 배웠던 순열과 조합에 대한 것은 당연히 알고 계셔야 하고 그리고 수능개념, 수능특강 때 공부하셨던 그런 공식이나 

<SYNC Start=47179><P Class=KRCC>
아니면 문제 유형들 이런 것들 같이 기억하면서 푸시면 도움 많이 받으실 것입니다. 그리고 확률과 통계는 제가 여러 번 말씀을 드리지만 문제 유형을 어느 정도 기억을 해놓는 것이 되게 좋고요. 

<SYNC Start=59898><P Class=KRCC>
그리고 신 유형이 나왔을 때 그것을 내가 알고 있는 공식으로 바꿔보는 그런 연습들이 충분히 되셔야 합니다. 그래서 확률과 통계는 아무래도 문제를 많이 풀면 풀수록 실력이 향상되거든요. 

<SYNC Start=72263><P Class=KRCC>
사실 수학이라고 하는 것이 문제 푼다고 해서 실력이 계속 꾸준하게 오르지는 않는데 확률과 통계 교과목만큼은 어느 정도 무엇이랄까요? 양치기라고 할까요? 문제를 많이 풀면 풀수록 도움이 되니까 

<SYNC Start=85773><P Class=KRCC>
혹시나 조금 아직까지도 어려운 것들은 같이 문제 푸시는 것이 좋을 것 같습니다. 내가 갖고 있는 문제집 다 풀지는 않았을 것 아니에요. 보통 문제집 사시면 한 권 사더라도 일부는 안 풀고 

<SYNC Start=98820><P Class=KRCC>
그다음에 또 새로운 문제집 사고 이런 식으로 하시니까 분명히 집 어딘가에 확률과 통계 안 푼 문제집이 있을 것입니다. 그것을 가지고 같이 풀어나가는 연습 하시면 될 것 같아요. 오늘 푸는 문제는 이제 7문항 정도 됩니다. 

<SYNC Start=111978><P Class=KRCC>
사실은 앞에서 수1, 수2 할 때는 문제수를 많이 못 풀었는데 물론 확률과 통계도 뒷부분에 가면 많은 문제는 못 풀어요. 그런데 계산이 간단한 것들이 많아서 제가 문항수를 조금 늘려봤습니다. 

<SYNC Start=126535><P Class=KRCC>
그리고 기본적인 공식들이나 이런 것들을 증명할 필요는 없을 것 같아서 여러분이 어떤 유형에서 어떻게 접근하면 좋겠다, 이 정도의 언급만 하면서 문제 같이 풀도록 하겠습니다. 1번이에요. 

<SYNC Start=138670><P Class=KRCC>
첫 번째 유형 원순열인데 우리가 고등학교 1학년 때에 직순열이라고 하지요, 흔히. 직순열과 조합을 배웠고 이제 확률과 통계의 교과목에서 원순열을 처음으로 배우는데 여기서는 그것을 생각하셔야 하지요. 

<SYNC Start=150886><P Class=KRCC>
고정되어 있는 자리가 되냐, 안 되냐. 그러니까 회전에서 똑같은 자리는 같은 것으로 치기 때문에 만약에 누군가를 먼저 안 친 뒤에는 그것은 더 이상 원순열으로서의 기능을 잃어버립니다. 그다음은 직순열로 가야 하겠지요. 

<SYNC Start=163049><P Class=KRCC>
이 아이디어만 기억하시면 될 것 같습니다. 한번 풀어볼게요, 1번. 원 모양의 케이크 위를 서로 다른 3가지의 초콜릿과 서로 다른 3가지의 과일을 간격이 일정하게 원형으로 모두 배열하려고 한대요. 

<SYNC Start=175630><P Class=KRCC>
3가지의 초콜릿끼리는 서로 이웃하지 않도록 배열하는 경우의 수를 구하시오. 그러니까 어쨌든 초콜릿끼리 이웃하지 않아야 하기 때문에 교대로 배열을 해야 하겠다. 

<SYNC Start=187720><P Class=KRCC>
그러니까 하나는 케이크, 하나는 초콜릿, 하나는 케이크, 하나는 초콜릿 이런 식으로. 그렇지요? 그러면 이런 방법이 있겠지요. 여기는 자릿수가 6개는 간단하게 보이지만 초콜릿이라고 하는 것을 먼저 배열을 하고요. 

<SYNC Start=201723><P Class=KRCC>
그다음에 케이크를 배열하는 경우가 있고 케이크를 배열한 다음에 케이크를 사이, 사이 빈곳에 초콜릿을 집어넣는 방법이 있을 것입니다. 그러면 첫 번째, 케이크를 먼저 배열해볼게요. 

<SYNC Start=213378><P Class=KRCC>
케이크는 비어있는 테이블에 채우는 것이기 때문에 그냥 원순열로서 3-1!에서 얼마? 2!이 이렇게 될 것입니다. 됐지요? 그러면 예를 들어서 여기는 지금 자리가 정해져 있으니까 이렇게 한번 해볼까요? 

<SYNC Start=230110><P Class=KRCC>
A라는 케이크가 여기에 있고 B라고 하는 케이크가 여기에 있고 C라고 하는 케이크가 여기에 있는 것이에요. 그런데 초콜릿끼리는 겹치면 안 되기 때문에 초콜릿들이 들어가야 할 자리는 결국 여기, 여기, 여기가 되겠다. 

<SYNC Start=241556><P Class=KRCC>
그런데 이미 A, B, C라고 하는 친구들이 자리를 잡고 있기 때문에 초콜릿을 채우는 것은 더 이상의 원순열로서의 기능을 잃어버린 상태의 직순열이 되겠다, 이렇게 되겠지요. 그래서 결국은 2×6이 될 것이니까 얼마예요? 

<SYNC Start=258280><P Class=KRCC>
12, 이렇게 떨어집니다. 됐나요? 두 번째 문제도 가보지요, 2번. 원형 탁자에 5개의 의자가 일정한 간격으로 놓여 있는데요. 남학생 2명과 여학생 3명이 모두 5개의 의자에 앉으려고 한대요. 의자 5개, 5명. 

<SYNC Start=272699><P Class=KRCC>
남학생 2명이 서로 이웃하여 앉지 않는 경우의 수를 구하여라. 그러면 이렇게 할 수 있지 않을까요? 일단 여학생을 먼저 배열을 해도 되겠지요. 그렇지요? 여학생을 배열해보면 여기에 자리가 정해져 있지 않은 상태로 

<SYNC Start=288012><P Class=KRCC>
만약에 A학생, B학생, C학생 이렇게 앉았다고 해봐요. 그러면 남학생끼리는 이웃하여서 앉으면 안 되니까 무조건 빈자리가 이렇게 3개가 있을 것입니다. 그렇지요? 선생님, 의자는 5개라고 했는데요? 이렇게 생각하는 것이에요. 

<SYNC Start=306324><P Class=KRCC>
여학생이 그냥, 빈 테이블에 여학생이 가서 앉아요, 3명이. 그러면 이렇게 A, B, C 앉아있고 나머지 의자 2개가 있을 것 아니에요. 그런데 그 의자는 밖으로 뺀 다음에 남학생 2명이 그 의자를 집고 가는 것입니다. 

<SYNC Start=322367><P Class=KRCC>
그런데 그것들이 들어갈 수 있는 자리는 3개인 것이에요. 괜찮지요? 그러면 그 3개 중에서 두 자리에 앉으면 끝나는 것입니다. 그러면 만약에 여기에 앉고 여기에 앉아요. 

<SYNC Start=333204><P Class=KRCC>
그러면 여기에 있는 것은 그냥 의자 자체가 없는 것입니다, 애초에. 들어갈 수 있는 그냥 자리만 선정한 것이니까. 그러면 여학생부터 먼저 배열하라고 했기 때문에 이것은 2!이 될 것이고요. 됐나요? 

<SYNC Start=344564><P Class=KRCC>
그다음에 원순열로서의 2!은 끝났고 빈자리가 3개인데 여기, 여기, 여기였지요. 그런데 남학생 2명이 가서 앉는 것이에요. 그런데 여학생들이 이미 자리를 잡고 앉아있네. 

<SYNC Start=356862><P Class=KRCC>
그러면 이것은 더 이상 원순열으로서의 기능을 잃어버리지요. 그러면 3개 중에 2개를 정해서 줄 세우는 방법. 즉 ₃P₂가 될 것입니다. 돼요? 2 곱하기 얼마? 6. 따라서 이것도 얼마 나와요? 12, 이렇게 나오겠지요. 괜찮아요? 

<SYNC Start=374703><P Class=KRCC>
아이디어가 꼭 이것만 있는 것은 아닙니다. 여러분이 나름대로 생각한 것도 논리적으로 맞다면 괜찮고요. 선생님이 설명하는 것은 조금 직관적으로 이해하는 것도 있고 실제 내가 의자에 앉을 때, 그러니까 테이블에 앉을 때 

<SYNC Start=387757><P Class=KRCC>
어떻게 앉을까. 학생의 입장에서, 내가 남학생의 입장에서, 여학생의 입장에서 생각을 해보는 것이지요. 됐나요? 원순열에 있어서는 가장 기본적인 것이 처음에 원순열으로 세우더라도 그다음부터는 무엇이 된다? 직순열이 된다. 

<SYNC Start=402365><P Class=KRCC>
이것을 꼭 주의하시면 됩니다. 마지막 하나만 더 풀어볼까요? 그림과 같이 크기가 같은 두 정사각형을 겹쳐서 합동인 8개의 직각이등변삼각형이 생기도록 만든 도형이 있다. 다 여기가 똑같은 것이에요, 지금. 

<SYNC Start=414727><P Class=KRCC>
똑같은 자리입니다. 그러니까 결국은 여기에 원탁이 있고 여기에 의자 하나, 둘, 셋, 넷, 다섯, 여섯, 일곱, 여덟 개가 있는 꼴이지요. 이때 8가지의 색을 모두 사용하여 빨간색, 파란색을 포함해서요. 

<SYNC Start=428368><P Class=KRCC>
색깔 자체가 8개가 있는 것이에요. 그래서 8개의 직각이등변삼각형 각각에 한 가지 색만을 칠하려고 한다. 파란색과 빨간색을 서로 맞은편의 직각이등변삼각형에 칠하는 경우의 수를 구하여라. 

<SYNC Start=441622><P Class=KRCC>
그러면 이것은 아이디어가 어떻게 접근하느냐에 따라서 달라질 수 있는데. 저는 이렇게 생각합니다. 어차피 지금 상태는 원순열이기 때문에 파란색이 여기에 있으면 빨간색은 여기에 있겠지요, 무조건. 

<SYNC Start=456574><P Class=KRCC>
그러면 파란색이 여기에 있고 빨간색이 여기에 있는 것은 어차피 지금 아까 했던 것과 똑같은 경우예요. 돼요? 빨간색이 여기에 있고 파란색이 여기에 있는 것도 결국은 같은 것이라는 것이지요. 왜? 

<SYNC Start=467395><P Class=KRCC>
중국집에 갔는데 원형테이블에 나하고 어떤 친구하고 마주보면서 앉아야 해요. 그러면 어디에 앉든 그냥 마주보기만 하면 되는 것이잖아요. 그러니까 애초에 그냥 결정을 해버립니다. 여기 파란색, 여기 빨간색. 이해돼요? 

<SYNC Start=483291><P Class=KRCC>
어디에 앉든 상관없이 그냥 앉으면 되는 것이에요. 이것은 경우의 수 자체를 따질 필요가 없는 것입니다. 그러면 이렇게 앉혀놓은 다음은 이제 달라지지요, 왜? 이것으로 인해서 이 자리, 이 자리, 이 자리, 이 자리, 이 자리, 

<SYNC Start=496064><P Class=KRCC>
이 자리, 이 자리가 직순열의 자리가 돼요. 원순열로서 기능을 잃어버립니다. 괜찮지요? 따라서 그냥 6!이에요. 선생님, 파란색, 빨간색 경우의 수 나눠야 할 것 같은데요? 아니라니까요. 

<SYNC Start=511790><P Class=KRCC>
어차피 여기에 앉나, 여기에 앉나, 여기에 앉나, 여기에 앉나 똑같은 경우예요. 그 상태에서 그냥 줄만 세우면 되는 것이라고요. 괜찮지요? 그래서 이것은 6×5×4×3×2×1이더라. 그러면 이것을 하게 되면 120에 6 곱하니까 

<SYNC Start=530313><P Class=KRCC>
몇 가지? 720가지가 되는 것입니다, 이런 식으로? 괜찮지요? 원순열이라고 하는 것을 떠올렸을 때 내가 원순열의 공식을 사용해야겠다가 아니라 원순열의 의미. 기본 공식이 나오게 된 것도 

<SYNC Start=543899><P Class=KRCC>
원래는 회전을 해서 같은 자리이기 때문에 나온 것이거든요. 이해되시지요? 그렇게 해서 이 세 문제 푸시면 될 것 같습니다. 두 번째 유형은 중복순열이에요. 중복순열은 제가 강의 앞에서 오늘의 3점에서 설명을 해드렸지만 

<SYNC Start=559206><P Class=KRCC>
이것은 수형도로 이해를 하셔도 괜찮습니다. 여러분, 지금까지 헷갈리지는 않겠지요. 중복조합과 중복순열은 완전히 다른 것이잖아요. 그런데 중복조합에서 기출문제가 꽤 많이 나오고 있고 

<SYNC Start=569177><P Class=KRCC>
중복순열은 그렇게까지 어렵게 안 나옵니다. 그리고 충분히 함수나 집합의 관계로 이해할 수 있고 우리가 초등학교 때 배웠던 수형도라고 하는 것을 이용해서도 계산할 수 있기 때문에 원리만 딱 지켜주시면 되는 것이에요. 

<SYNC Start=582863><P Class=KRCC>
어쨌든 서로 다른 n개에서 중복을 허락하여 r개를 택하는 중복순열의 수를 구하는 문제가 출제가 되더라. 그러면 이것을 공식으로 하게 되면 당연히 nπr이 될 것이고요. 이것은 n의 r제곱이 되겠다. 그렇지요? 

<SYNC Start=594270><P Class=KRCC>
문제 풀면서 적용해보겠습니다. X가 ｛1, 2, 3, 4, 5｝에 대하여 다음 조건을 만족시키는 함수 X→로 가는 함수의 개수를 구하시오. (가), 집합 X의 원소 x에 대하여, 여기가 X, 여기가 X가 있고요. 1, 2, 3, 4, 5. 

<SYNC Start=610365><P Class=KRCC>
그다음에 여기도 1, 2, 3, 4, 5가 있습니다. 첫 번째 x가 짝수이면, 즉 여기에 있는 x가 짝수이면, 그래요? 이것, 이것이 되겠네. f(x)는 소수이다. 그러면 소수가 되는 것은 체크하면 될 것 아니에요. 2, 3, 5가 되겠지. 

<SYNC Start=630082><P Class=KRCC>
이해돼요? 그러면 이것 그냥 함수의 개수 세는 것이잖아요. 그러면 2의 입장에서 보면 내가 갈 수 있는 것은 몇 개냐? 3개지요. 그렇지요? 3개예요. 4가 갈 수 있는 것은 몇 개냐? 3개예요. 

<SYNC Start=646170><P Class=KRCC>
즉 서로 다른 3개 중에 중복을 허락해서 2개를 뽑고 나열하는 것이다. 괜찮지요? 그러면 이것은 ₃π₂가 될 것이니까 9가 될 것입니다. 됐나요? 두 번째 것, 이것이 (가)에 대한 것이고요. 

<SYNC Start=663777><P Class=KRCC>
(나)에 대한 것도 여기에 별도로 써볼까요? 여기 X, 여기 X 이렇게 (나)에 대한 것으로 보겠습니다. X의 원소가 홀수이면 여기 1, 2, 3, 4, 5가 있고 1, 2, 3, 4, 5가 있다. 그러면 홀수라고 하는 것은 1, 3, 5가 있을 것인데 

<SYNC Start=683240><P Class=KRCC>
이것이 대응되는 것은 어디에 대응이 돼야 해요? 짝수에. 그러면 이 입장에서 보면 이것이 갈 수 있는 것은 몇 개? 2개. 이것이 갈 수 있는 것은 몇 개? 2개. 이것이 갈 수 있는 것은 몇 개? 2개. 

<SYNC Start=696760><P Class=KRCC>
그러면 예를 들어 이런 식이지요, 이렇게. 그러면 이것은 우리가 확률과 통계로 해석을 하면 서로 다른 2개. 즉 2하고 4 중에서 중복을 허락해서 몇 개를 뽑는 것이에요? 3개를 뽑는 것이다. 3개를 뽑고 나열을 하는 것이다. 

<SYNC Start=713171><P Class=KRCC>
그렇지요? 그래서 이것은 2³이 되는 것입니다. 물론 ₂π₃이렇게 써도 괜찮고요. 결국 얼마? 8이 될 것이지요. 그런데 그냥 이렇게 생각해도 되잖아요. 이것이 갈 것 2가지 종류. 이것이 갈 것 2가지, 이것이 갈 것 2가지. 

<SYNC Start=726881><P Class=KRCC>
이렇게 해서 2×2×2. 가장 기본이 되는 것, 경우의 수는 수 세기잖아요, 세기. 그러니까 세는 것이다. 그렇게 해서 해결하면 내가 굳이 중복순열이라고 하는 공식을 이용하지 않아도. 

<SYNC Start=740043><P Class=KRCC>
이것이 공식일 것까지도 없고 기호를 제대로 모르더라도 풀 수 있다는 것이지요. 6번, 이것은 조금 달라요. 서로 다른 종류의 연필 6자루를 4명의 학생 A, B, C, D에게 남김없이 나누어 주려고 한대요. 

<SYNC Start=754566><P Class=KRCC>
어쨌든 6자루를 4명한테 다 배분을 해야 하는 것입니다. 학생 A에게는 2자루, 그다음에 B에게는 1자루만 나누어 주는 경우의 수를 구하래요. 그러면 이것들이 일단 전제 조건이 돼야 하고 

<SYNC Start=767282><P Class=KRCC>
나머지들은 어떻게 나눠주든지 상관이 없는 것입니다. 왜? 연필을 하나도 받지 못하는 학생이 있을 수 있다, 라고 하는 것은 A가 1등이고 B가 2등이었나 봐요. 그래서 1등한테는 2자루 주고 B한테는 1자루 두고 

<SYNC Start=781535><P Class=KRCC>
나머지 학생들은 너희 추첨, 이런 식인 것이지요. 뽑기 해서 나오는 개수 가져가, 이 느낌입니다. 슬픈 세상. 그러면 이것은 일단 6개 중에서 몇 개를 뽑아요? 2개를 뽑고요. 그러면 6개 서로 다른 것 중에 2개 뽑았으니까 

<SYNC Start=796390><P Class=KRCC>
A한테 그냥 주면 끝나요. 남아있는 것이 4자루가 될 것인데 4자루 중에서 B한테 줘야 할 것 몇 개? 1개, ₄C₁이 될 것입니다. 그러면 이것이 기본적으로 A, B한테 나눠주는 경우의 수니까 15 곱하기 얼마가 되겠냐. 

<SYNC Start=810888><P Class=KRCC>
4가 되겠지요. 됐나요? 그러면 몇 가지예요? 60가지가 될 것입니다. 그런데 C, D한테 나눠주는 것이라도 경우의 수가 다 나눠질 것 아니에요. 그러면 보세요. 연필을 아까 전에 나눠준 것이 6자루라고 했으니까 

<SYNC Start=825437><P Class=KRCC>
이미 3자루는 줬지요. 그러면 나머지 연필을 a, b, c라고 한번 해볼까요? 그리고 못 받은 친구 C, D 이렇게 한번 해볼게요. 괜찮아요? 그러면 a라고 하는 연필이 갈 수 있는 장소는 어디예요? 

<SYNC Start=841505><P Class=KRCC>
C 아니면 D가 될 것이고, 그렇지요? b라고 하는 연필이 갈 수 있는 장소는 C 아니면 D가 될 것이고 c라고 하는 연필이 갈 수 있는 장소는 C 아니면 D가 되겠지. 그렇지요? 그러면 결국 이것은 무엇이에요? 2×2×2가 되겠구나. 

<SYNC Start=861094><P Class=KRCC>
그러면 이것은 전체 몇 가지 경우? 8가지 경우의 수가 생긴다는 것이지요. 그리고 이 형태를 보면 알겠지만 바로 앞에서 풀었던 것하고 똑같잖아요, 원리는. 60×8이 될 것이니까 얼마? 480가지가 이 문제의 답입니다. 

<SYNC Start=877180><P Class=KRCC>
못 받는 경우도 있어도 된다고 했기 때문에 이렇게 하는 것이에요. 만약에 못 받는 경우는 없다, 이런 식으로 하면 무조건 한 자루씩 배부하는 것이 있기 때문에 그것은 문제가 또 달라지겠지요. 괜찮나요? 

<SYNC Start=889742><P Class=KRCC>
이렇게 해서 중복순열에 대한 문제까지 풀어봤고요. 나머지 하나가 있는데 오늘 할 것, 같은 것이 있는 순열입니다. 같은 것이 있는 순열은 기본적인 것을 한번 정리를 하고 해볼까요? 

<SYNC Start=904468><P Class=KRCC>
2개 이상 있는 숫자 또는 문자들을 일렬로 나열하는 순열의 수를 구하는 문제가 출제된다. 이것이 다음 시간에 유형이 또 하나가 있는데 지금 하는 것은 이제 같은 문자가 있을 때에 이것들을 배열하면 

<SYNC Start=916288><P Class=KRCC>
어떤 경우의 수가 나오겠냐, 이것이고요. 다음 시간에 하는 것은 조금 더 차원이 높은 형태가 될 것입니다. 그래서 어쨌든 만약에 예를 들어서 aabbb 이렇게 한번 해볼까요? 

<SYNC Start=929597><P Class=KRCC>
이것들을 나열하는 것은 결국 전체를 그냥 서로 다른 것이라고 생각을 하고 5!이라고 해주고요. 그러고 나서 2!과 3!으로 나눠주는 것이겠지요. 이것은 어떤 원리냐. a를 1, 2. b를 1, 2, 3으로 이름을 붙입니다, 가상으로. 

<SYNC Start=946212><P Class=KRCC>
그러면 서로 다른 5개가 될 것이니까 이 서로 다른 5개를 배열해요. 그러면 예를 들어서 a₁b₂b₁a₂b₃이런 것이 있을 것이고 a₁b₁b₂a₂b₃이런 것들이 있겠지요. 이해돼요? 그러면 이런 식으로 쭉 나열이 될 것인데 

<SYNC Start=966191><P Class=KRCC>
이것들의 배열을 보세요. b₂b₁b₃, b₁b₂b₃. 그런데 결국은 내가 이 숫자 붙인 것은 임의로 붙인 것이잖아요. 실제로는 이것하고 이것은 같은 것이다. 그런데 이렇게 같이 생기는 것들은 1, 2, 3이라고 하는 것 안에서 

<SYNC Start=983130><P Class=KRCC>
배열되는 것들의 경우의 수가 나오겠구나. 그러니까 그것들은 딱 하나인 것이에요. 똑같은 것이에요. 그러니까 그 개수만큼을 나눠주면 되겠지요. 그것이 무엇? 3!이지. 그리고 a 같은 경우도 마찬가지예요. 

<SYNC Start=995385><P Class=KRCC>
만약에 이렇게 나왔다. 여기는 똑같은데 a₂b₂b₁a₁b₃이더라. 그러면 이것과 이것을 보면 나머지 것들은 다 똑같은데 a₁과 a₂가 바뀌었기 때문에 다른 경우로 치는 것이잖아요. 

<SYNC Start=1012807><P Class=KRCC>
그런데 이런 것은 같은 것이라니까요, 실제로는. 그러니까 이것을 나눠주는 것 2!이 되겠지요. 결국 계산하게 되면 5×4, 20을 2로 나누니까 10가지의 경우의 수가 나오겠다. 이런 식으로 푸는 것이 같은 것이 있는 순열입니다. 

<SYNC Start=1027857><P Class=KRCC>
됐나요? 그리고 다음 시간에 하겠지만 경로 찾아가는 것들. 그러니까 우리가 경로를 찾을 때 내가 오른쪽으로 가냐, 위로 가냐. 이것이 단계별로 딱 정해져 있잖아요. 

<SYNC Start=1039253><P Class=KRCC>
오른쪽으로 몇 칸 가는 것, 위로 가는 것 몇 칸 가는 것 이런 것들을 어떤 문자로 표현해서 내가 식을 전개하는 방법들이 있습니다. 됐지요? 그런 것들을 풀어볼 것입니다. 문제 직접 풀어볼까요? 10개의 문자가 있대요. 

<SYNC Start=1056891><P Class=KRCC>
bookkeeper, 이것을 모두 일렬로 나열할 때 5개의 문자가 모두 이웃하여 나열되는 경우의 수를 구하여라. 일단 이것이 다 그냥 이웃을 해야 한다는 이야기이니까 이것을 그냥 한 덩어리로 생각을 하셔도 괜찮습니다. 

<SYNC Start=1072972><P Class=KRCC>
이해돼요? 이것을 그냥 무엇이라고 표현할까? 이것을 그냥 α라고 이렇게 표현을 한번 해볼까요? 그러면 이것은 b, k, k, 이것, 이것, 이것, 이것, 이것이 사용이 됐고 그다음에 p, r, α라고 하는 것. 

<SYNC Start=1090597><P Class=KRCC>
이것들이 배열되는 것입니다, 지금 이 상태가. 됐지요? 문자 몇 개예요? 하나, 둘, 셋, 넷, 다섯, 여섯 개가 되겠다. 그러면 이것도 결국은 서로 다른 것으로 인식을 해서 6!으로 해주고요. 그 안에서 똑같은 문자가 또 있지요. 

<SYNC Start=1103955><P Class=KRCC>
2!입니다, 이렇게. 계산을 해볼까요? 그러면 이것은 6×5×4×3이겠구나. 그러면 이것을 계산하면 30×12가 될 것이니까 360이 나올 것인데 이 밑에 있는 것을 보면 α라고 하는 것은 

<SYNC Start=1125429><P Class=KRCC>
이 안에 지금 이렇게 묶여있는 것이 있잖아요. o, o, e, e, e, 이렇게 묶여 있잖아요. 이것들도 어쨌든 줄 세우는 것이라고요. 그러면 이것 줄 세우는 것은 이 안에서도 돌아가는 것이니까 5!이라고 하는 것을 무엇? 

<SYNC Start=1140476><P Class=KRCC>
2!과 무엇으로 나눠주면 되겠다? 3!으로 나눠주면 되겠다. 그러면 결국은 이것은 아까 했지만 몇 개? 10개가 되지 않냐. 그렇지요? 그러면 전체적으로 큰 것을 배열하고 그다음에 이웃하는 것들, 

<SYNC Start=1153725><P Class=KRCC>
안에 있는 것들을 배열해주면 이것 2개가 당연히 연관성이 있기 때문에 곱해주셔야 합니다. 따라서 360 곱하기 몇 개예요? 10개 해서 답은 3600가지가 나오겠다, 이렇게 정리가 되겠지요. 돼요? 기억하세요. 

<SYNC Start=1171572><P Class=KRCC>
같은 것이 있는 순열이나 내가 순열의 값을 구하기 위해서는 큰 덩어리들을 체크하는 것이 먼저입니다. 큰 덩어리하고 그다음에 작은 덩어리, 더 작은 덩어리 이런 식으로. 마지막 문제예요, 오늘. 

<SYNC Start=1187103><P Class=KRCC>
어려워 보이는데 이런 문제 풀 때 여러분이 갖고 가야 하는 아이디어는 보세요. f(1), f(2), f(3), f(4), f(5)라고 하는 값은 내가 전혀 모릅니다. 하나의 힌트도 없어요. 그런데 X→X로 가는 함수래요. 

<SYNC Start=1206096><P Class=KRCC>
그러면 결국은 치역조차 X 안에서 벌어지지 않겠냐. 여기 X가 있고요. 여기에 X가 있겠지요. 그러면 이 안에 1, 2, 3, 4, 5. 1, 2, 3, 4, 5예요. 그러면 내가 f(1), f(2), f(3), f(4), f(5)를 모르고 있지만 

<SYNC Start=1225286><P Class=KRCC>
만약에 극단적으로 이렇게 가는 경우도 있겠지요. 돼요? 이럴 수 있잖아요. 이렇게 갈 수도 있는 것이고 다양한 사례가 나올 것인데 보세요. 이것들 4개를 더한 값이 f(5)에 17을 곱한 것과 같대요. 

<SYNC Start=1246523><P Class=KRCC>
그러면 f(1), f(2), f(3), f(4)가 극단적으로 제일 큰 값을 계산해보자고요. 그리고 이것들을 5라고 했을 때 얼마가 나와요? 20이 나와야 해요. 그러면 f(5)라고 하는 것은 17×f(5)가 돼야 하는 것인데 당연히 이 f(5)는 없지요. 

<SYNC Start=1265226><P Class=KRCC>
이것을 만족하는 것은. 그런데 여기에서 여러분이 파악할 것은 무엇이냐. 1, 2, 3, 4에 대한 함숫값이 제일 커서 더한 것이 20이니 f(5)가 만약에 2가 돼버리면 17×2니까 이것은 34가 되거든요. 

<SYNC Start=1280028><P Class=KRCC>
이것은 절대 나올 수 없다는 이야기입니다. 그러면 여기에서 나오는 결론, 무엇? f(5)는 무엇이구나? 1이구나. 이것이 첫 번째 시작입니다. 이것이 시작, 이것이 나와야 그다음 문제가 해결이 돼요. 알겠지요? 

<SYNC Start=1293272><P Class=KRCC>
이것은 같다는 것이 아닙니다, 어쨌든. 그러면 f(5)가 1이 된다는 것은 결국은 이 전체 네 개를 합한 것이 얼마가 돼야 하냐면 이것이 17이 돼야 한다는 이야기예요. 그런데 아까 말했지요. 

<SYNC Start=1310163><P Class=KRCC>
네 개가 극단적으로 커버리면 5, 5, 5, 5가 될 것인데 최대 20이에요. 그러면 거기에서 3을 깎아버리면 17이 된다는 이야기지요. 이렇게 되지 않을까? 5, 5, 5, 하나가 무엇? 2가 되면 되겠구나. 돼요? 

<SYNC Start=1328794><P Class=KRCC>
또 선생님, 그러면 f(1)이 5이고 f(2)가 2여도 되잖아요. 그것은 나중에, 나중 문제. 경우를 나누는 것이니까, 지금. 제일 중요한 것은 가장 큰 케이스부터 나눈 다음에 차근차근히 들어가는 것이거든요. 이것이 되고요. 

<SYNC Start=1341959><P Class=KRCC>
그다음에 여기에서는 하나씩 더하거나 빼거나 하면 될 것 아니에요. 이것을 더해줘요, 3을. 그러면 그다음은 5가 무엇으로 줄어들겠다. 4로, 그러면 이것이 이렇게 돼서 17이 나오겠구나. 되시지요? 

<SYNC Start=1357458><P Class=KRCC>
그다음에 하나 더하고 하나 빼고 이렇게 하면 될 것 같은데 이것을 하나 더하고 이것을 빼버린다는 것은 이것과 똑같지요. 그러면 하나를 나중에 다른 데서 빼는 것이에요. 결국 4, 4, 4에 무엇? 5가 되면 되지 않겠냐. 

<SYNC Start=1372323><P Class=KRCC>
그러면 12에 무엇이 되는 것이에요? 5를 더하니까 17이 되겠지. 결국은 이 이상은 안 됩니다. 그렇지요? 17이 나오는 경우는 총 몇 가지가 되는 것이에요? 3가지가 되는 것입니다. 

<SYNC Start=1383520><P Class=KRCC>
그런데 이것들이 지금 1, 2, 3, 4에 딱 정해져 있는 것이 아니기 때문에 이것들을 f(1)과 f(2), f(3), f(4)에 배열을 해야 하지요. 그러면 첫 번째 케이스, 서로 다른 4가지로 보고 똑같은 것이 몇 개 있어요? 3개 있습니다. 

<SYNC Start=1399728><P Class=KRCC>
이것은 몇 개? 4가지입니다. 그냥 딱 봐도 알겠지요. 이것이 2가 되는 것 하나, f(2)가 되는 것 하나, f(3)이 2가 되는 것 하나, f(4)가 2가 되는 것 하나. 총 네 가지 경우. 두 번째, 4!을 2!으로 나눠요. 

<SYNC Start=1415959><P Class=KRCC>
그러면 여기에 있는 것은 다르고 이것 두 개는 같은 것이니까 이렇게 한 것인데 이것을 계산하면 얼마 나와요? 이것을 계산하면 12가 나와요. 그러니까 즉 3이 나오게끔 하는 것을 여기, 여기, 여기, 여기에 배열하고 

<SYNC Start=1428363><P Class=KRCC>
그다음에 4 배열하는 것 이렇게 해보면 총 12가지의 경우의 수가 나온다는 것이지요. 그다음 마지막 것. 이것은 똑같겠지요. 4!을 3!으로 나눠요. 그러면 이것은 얼마? 4가지가 나오겠구나. 이것도 마찬가지지요. 

<SYNC Start=1441422><P Class=KRCC>
5라고 하는 것은 함숫값이 이것이 될 수 있고 이것이 될 수 있고 이것이 될 수 있고 이것이 될 수 있고 나머지는 다 4. 그러니까 경우의 수는 4가지, 이렇게. 결국은 12+4+4를 더하니까 얼마? 

<SYNC Start=1453479><P Class=KRCC>
20가지의 경우의 수가 나오는 것입니다. 되세요? 이 문제, 여러분이 보면 어려워 보일 것입니다. 가장 먼저 해야 할 것은 무엇이다? 극단적인 함숫값들의 배열부터 생각을 해야 한다. 

<SYNC Start=1465937><P Class=KRCC>
1, 2, 3, 4라고 하는 것이 모두 다 5에 갔을 때 최댓값. 즉 이것의 최댓값이 맥시멈이 20이라는 것이지요. 미니멈은 얼마일까? 미니멈도 따져주면 좋아요, 비슷한 문제의 유형 나올 수 있으니까. 4가 된다는 이야기입니다. 

<SYNC Start=1481829><P Class=KRCC>
그러면 4하고 20 사이에 17×f(5)가 돼야 하는데 이 f(5)는 가능성이 있는 것이 1, 2, 3, 4, 5예요, 함숫값이. 2, 3, 4, 5는 다 안 되지. 그러니까 f(5)는 무엇밖에 안 되는 것이다. 1밖에 안 되는 것이다. 

<SYNC Start=1495738><P Class=KRCC>
그러니까 f(5)를 결정해주고 그다음에 이것들이 합쳐져서 17이 나오는 경우를 그냥 나누기만 하면 되는 것입니다. 괜찮으시지요? 그래서 처음 시작이 조금 어려웠겠지만 하나, 하나 차근차근히 규칙대로만 하면 

<SYNC Start=1510472><P Class=KRCC>
어렵지 않게 구할 수 있는 그런 문제였습니다. 7문제 풀어봤고요. 우리가 경우의 수는 웬만하면 조금 많이 푸려고 하니까 미리 모든 문제를 풀어보시고 그다음에 강의 들으시기를 바랍니다. 고생 많이 하셨고요. 

<SYNC Start=1523321><P Class=KRCC>
다음 시간에 저는 더 알찬 내용으로 여러분을 찾아뵙도록 할게요. 수고하셨습니다. 
<SYNC Start=1527428><P Class=KRCC>&nbsp;




</BODY>
</SAMI>
