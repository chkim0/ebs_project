<SAMI>
<HEAD>
<TITLE>(주)기록법인상생 자막 2022</TITLE>
<STYLE TYPE="text/css">
<!--
P { margin-left:8pt; margin-right:8pt; margin-bottom:2pt;
    margin-top:2pt; font-size:12pt; text-align:left;
    font-family:굴림, Arial; font-weight:normal; color:white;
    background-color:#405A8D; }
.KRCC { Name:한국어; lang:ko-KR; SAMIType:CC; }
#STDPrn { Name:Standard Print; }
#LargePrn { Name:Large Print; font-size:20pt; }
#SmallPrn { Name:Small Print; font-size:10pt; }
-->
</STYLE>
</HEAD>
<BODY>
<SYNC Start=11004><P Class=KRCC>
만점의 기쁨을 함께하겠습니다. 2023 수능특강 확률과 통계에 오신 여러분 환영합니다. 전 이국희고요.
<SYNC Start=17455><P Class=KRCC>
제가 최근에 읽은 책 중에 좀 인상적인 책이 있어서 하나 소개를 해 드리려고 하는데. 「꿈 백화점」이라고 하는 제목의 책입니다.
<SYNC Start=25833><P Class=KRCC>
그 내용도 좀 신선해서 제가 기억을 하는데, 그리고 또 베스트셀러에도 올라와서 제가 한번 읽어본 거긴 하거든요.
<SYNC Start=32859><P Class=KRCC>
사실 그 책보다 더 저한테 와닿았던 거는 그 책을 쓴 작가예요. 제가 이제 책을 읽고 나서 그냥 잊고 지냈는데, 어느 날 이제 기사가 떴더라고요.
<SYNC Start=44528><P Class=KRCC>
그래서 기사를 보니까 이제 그 책의 저자에 대한 내용이 나오는 기사였는데. 인터뷰 기사였어요.
<SYNC Start=50464><P Class=KRCC>
그 저자가 원래 우리나라의 최고 대기업, 여러분들 그냥 상상하시는 그 대기업 거기를 다니던 분이었는데. 거기를 이제 그만둔 겁니다. ‘왜 그만뒀냐?’ 했더니,
<SYNC Start=63423><P Class=KRCC>
일을 하다 보면, 회사 일 하다 보면 스트레스를 받기 마련이잖아요. 그럼 이제 그 스트레스를 풀려고 TV 드라마를 보거나 소설을 보거나 그러면서 이제 시간을 많이 보냈대요.
<SYNC Start=73383><P Class=KRCC>
근데 그런 것들을 할 때마다 자기는 그 공상하는 게 너무너무 좋았다고 합니다. 그러니까 드라마를 보고 상상하는 일, 책을 보고 상상하는 일,
<SYNC Start=81593><P Class=KRCC>
거기에 나와 있는 그런 여러 가지 상황들을 넘어서는 나만의 상상을 하는 그런 공상들이 자기한테는 되게 스트레스 해소하는 큰 즐거움이었다고 해요.
<SYNC Start=92361><P Class=KRCC>
근데 그거를 하다 보니까 ‘어? 내가 좀 더 나의 인생에 있어서 이런 걸 더 하면 좋지 않을까?’라는 꿈이 생겼다고 합니다.
<SYNC Start=100783><P Class=KRCC>
그래서 다니던 정말 좋은, 남들이 좋다고 하는 그 좋은 직장을 그만두고 소설을 썼다고 해요. 근데 그 소설을 쓴 게 어쨌든 대박이 나 가지고 지금 인터뷰도 하고 이런 거긴 하겠지만.
<SYNC Start=114277><P Class=KRCC>
여러분들이 나중에, 정말 나중에 시간이 지나서 젊음이 다 이제 끝났을 때, 본인들이 이제 하고 싶은 게 있어도 하기 쉽지 않은 나이, 무언가를 선택을 했을 때.
<SYNC Start=128246><P Class=KRCC>
그 나이대쯤 되면 여러분들이 가장 후회하는 거는 아마 ‘내가 조금 더 젊었을 때 뭔가를 할걸.’이라는 생각일 거예요.
<SYNC Start=136544><P Class=KRCC>
선생님도 나름대로 여러분 나이일 때 조금 더 꿈꿨던 게 있고, 그다음에 또 시간이 지나면서 새로운 꿈도 꿔보고.
<SYNC Start=144631><P Class=KRCC>
그러다 보니까 시간이 지나서 현실적인 부분을 고려하게 되더라고요. 그러다 보니까 그냥 그 꿈을 잊어버리고 살게 됐는데. 물론 제가 지금 이룬 이 EBS 강의도 저의 꿈의 일부였고요.
<SYNC Start=157633><P Class=KRCC>
여러분도 어떤 꿈을 꿀 텐데 그게 단순하게 지금 ‘확률과 통계 100점 맞아야지.’ 아니면 ‘내가 원하는 대학 가야지.’ 이 수준이 아닙니다.
<SYNC Start=166392><P Class=KRCC>
‘내가 어떻게 살 거냐? 내가 어떤 가치 있는 일을 하며 살 거냐?’
<SYNC Start=172179><P Class=KRCC>
그렇잖아요. 대학교를 갔더니. 내가 지금 수준에서는 그냥 ‘난 좋은 대학만 가면 될 것 같아.’, ‘내가 확률과 통계 만점 맞으면 될 것 같아.’, ‘다른 과목 좋게 나오면 뭐 어쨌든 잘되겠지.’
<SYNC Start=183335><P Class=KRCC>
이런 추상적인 생각을 갖고서 대학을 진학을 했어요. 대학을 진학했더니 그 시기에 내가 무언가 꿈이 딱 생긴 거예요.
<SYNC Start=190645><P Class=KRCC>
근데 그 꿈이 지금 하고 있는 전공이랑은 전혀 연관성이 떨어지는 거예요. 그러면 그 대학 다니는 일이 가치로울까요?
<SYNC Start=198777><P Class=KRCC>
아니면 지금 그 목표 없이 단순하게 내가 ‘성적만 잘 나와야지.’ 하고서 대학을 갔더니 그게 현실적인 부분과 여러분들이 생각하는 꿈과 되게 많이 달라요.
<SYNC Start=208514><P Class=KRCC>
그럼 지금 하고 있는 이 공부도 가치롭게 느껴질까요? 아니라고 생각해요.
<SYNC Start=213672><P Class=KRCC>
그래서 물론 지금 고3 시기에 내가 정해져 있지 않은 꿈을 막상 딱 한 번에 정하기는 쉽지 않겠지만요,
<SYNC Start=220657><P Class=KRCC>
여러 번 생각을 하면서, 여러 번 되뇌면서 내가 뭘 하며 살 건지, 그리고 내가 어떤 사람이 될 건지를 좀 생각해 보셨으면 해요.
<SYNC Start=227310><P Class=KRCC>
이런 1차원적인 성적, 시험, 이런 걸 잘 봐야지라는 꿈 말고. 그걸 넘어서는 어떤 꿈.
<SYNC Start=234148><P Class=KRCC>
그런 꿈을 꾸다 보면 언젠가는 여러분들이 그 꿈을 이루는 모습을 보일 테니까 그렇게 좀 뭔가 위대한 꿈을 한 번쯤 꿔 보시기 바랍니다.
<SYNC Start=245597><P Class=KRCC>
힘들 거예요. 근데 그 힘든 길도 여러분들이 밟아 나가면 행복하지 않을까 생각을 합니다. 내가 하고 싶은 일이기 때문에. 알겠죠?
<SYNC Start=254743><P Class=KRCC>
오늘은 이제 레벨 2 풀어볼 건데, 레벨 1과는 다르게 난이도가 있습니다. 당연히. 근데 레벨 2부터는 조금 더 깊이 있게 분석을 할 거고요.
<SYNC Start=262573><P Class=KRCC>
그리고 문항이 의미하고 있는 게 어떤 표현법과 유사하다, 이런 것까지도 제가 조금씩 설명을 해 드릴 테니까, 여러분이 생각하지도 못했던 내용들이 있으면 꼭 필기를 해 두시고 복습하시기 바라요.
<SYNC Start=275640><P Class=KRCC>
그래서 오늘 하는 문제들은 4문항에다가 작년 연계 교재 좀 가져와 봤는데. 풀면서 ‘아, 이렇게 공부를 하는구나. 이렇게 연계 교재 문제를 분석하는구나.’를 느끼시면 좋을 것 같아요.
<SYNC Start=286708><P Class=KRCC>
1번입니다. 한 변의 길이가 5cm인 정삼각형 모양의 색종이 4장이 있다. 역시나 제가 지난번에 말씀드렸다시피 색칠하는 문제가 나왔죠.
<SYNC Start=295417><P Class=KRCC>
이 색종이들의 한 면은 모두 흰색이고요. 다른 면은 각각 노란색, 빨간색, 파란색, 초록색이다. 일단 색의 개수부터 생각을 해 보자고요. 이렇게. 몇 개? 4개.
<SYNC Start=311067><P Class=KRCC>
이 4장의 색종이를 그림과 같이 이어 붙여 한 변의 길이가 10cm인 정삼각형 모양을 만든다.
<SYNC Start=316790><P Class=KRCC>
정삼각형 모양이라는 것도 되게 중요한데, 이게 결국은 ‘정다각형’ 정다각형이기 때문에 원순열과 유사한 형태가 되는 겁니다.
<SYNC Start=326185><P Class=KRCC>
4장의 색종이 중에서 흰 면이 보이는 색종이가 오직 1개만 나타나는 경우의 수를 구하여라.
<SYNC Start=331634><P Class=KRCC>
이 문제가 그래도 신유형처럼 보이는 이유는 이 문장 때문에 그래요. 기존에 나왔던 원순열과 좀 차이점이 있죠. 어떤 거예요?
<SYNC Start=342745><P Class=KRCC>
예전에는 그냥 4장의 색종이가 있어요. 그럼 이걸 갖다가 그냥 배열하면 끝나는 거였어. 근데 이 뒷면까지 고려를 하는 거죠. 이 뒷면이 지금 흰색으로 똑같다고 합니다.
<SYNC Start=360767><P Class=KRCC>
제가 여기에서 조금 더 한 발짝 나가 보면, 이 문제를 출제자 입장에서 고려해서 내가 조금 더 어려운 문제를 만들어야겠다. 그러면 뒷면의 색이 다른 것들을
<SYNC Start=376357><P Class=KRCC>
&nbsp;
<SYNC Start=379969><P Class=KRCC>
문제에다가 추가해 볼 수 있을 것 같아요.
<SYNC Start=382476><P Class=KRCC>
그러니까 얘는 지금 색이 4개가 나왔는데, 이거의 뒷면이 다 하얀색이죠. 근데 이 4개의 뒷면이 어떤 건 하얀색이고, 어떤 건 심지어 뒤집었더니 빨간색이고, 어떤 거는 파란색이고.
<SYNC Start=394304><P Class=KRCC>
‘이런 식으로 색이 다른 것도 출제할 수 있겠구나.’라는 생각이 들더라고요. 이런 것까지도 좀 고려해 보면 좋을 것 같고.
<SYNC Start=400827><P Class=KRCC>
어쨌든 이 문제를 푸는 핵심은 이겁니다. 4장이 다 다른 색이에요. 근데 이 4장의 다른 색 중에
<SYNC Start=407340><P Class=KRCC>
&nbsp;
<SYNC Start=410435><P Class=KRCC>
흰 면을 무조건 하나는 만들어야 되거든요. 그러니까 이게 만약에 그냥 1번 색상, 2번 색상, 3번 색상, 4번 색상이 있는데 이것 중에 하나는 뒤집어야 되겠다.
<SYNC Start=419603><P Class=KRCC>
그러니까 첫 번째 고려해야 될 건, 첫 번째로 여러분들이 고려해야 될 거는 흰 면이 되는 색을 선정하는 거죠. 4가지의 색이 있는데 이 중에 뒤집어 놓을 걸 선정하겠다, 이 얘기입니다.
<SYNC Start=436337><P Class=KRCC>
근데 이게 몇 가지가 나올까요? 4가지가 나오겠죠. 다 뒤집으면 1개가 나올 거니까. 이해돼요?
<SYNC Start=441978><P Class=KRCC>
그래서 여기의 가운데에다가 하얀색을 깔거나 아니면 다른 색을 깔 수 있겠지만, 하얀색이 되는 것 자체의 경우의 수가 몇 가지가 된다? 4가지가 될 거다. 됐죠?
<SYNC Start=452905><P Class=KRCC>
그다음에, 그다음에 두 번째. 지난번에도 언급을 했지만 색을 칠할 때 가장 먼저 칠해야 되는 거, 가장 먼저 염두 해야 될 거는 인접한 영역이 많은 거예요. 그렇죠? 인접한 영역이 많은 거.
<SYNC Start=467956><P Class=KRCC>
그러니까 이 인접한 영역이 가장 많은 거는 여기예요. 가운데.
<SYNC Start=473537><P Class=KRCC>
그럼 이 가운데에 칠할 수 있는 거는 몇 가지가 될 거냐?
<SYNC Start=476499><P Class=KRCC>
흰 면을 포함해서 나머지 3개의 색깔이 남아 있죠. 그럼 그 4가지가 될 거라고요. 가운데 칠하는 건. 그렇죠? 이게 가운데.
<SYNC Start=487510><P Class=KRCC>
그다음 마지막 단계는 뭐예요? 원순열이죠. 주위를 이렇게 돌리는 거. 그러니까 결국은 여기에 있는 거 4에다가 원순열 마지막에 돌리면 2! 이렇게 될 거라고요.
<SYNC Start=501849><P Class=KRCC>
그럼 내가 원하는 건 4에다가, 4에다가 2!이 될 겁니다. 됐죠?
<SYNC Start=508634><P Class=KRCC>
첫 번째 건 뭐? 흰색 면이 되는 걸 고르는 거다. 빨간색 면의 흰 면과 파란색 면의 흰 면은 다른 거예요, 엄연히. 왜? 남아 있는 색이 달라지니까.
<SYNC Start=518836><P Class=KRCC>
예를 들어 노란색을 갖다가 흰 면으로 만들었어요. 그럼 남아 있는 색은 빨간색, 파란색, 초록색이 될 거예요.
<SYNC Start=525942><P Class=KRCC>
근데 내가 노란색이 아니라 빨간색에 있는 거를 뒤집어서 흰색으로 만들었어요. 그럼 남아 있는 건 노란색, 파란색, 초록색이 된다고요.
<SYNC Start=536877><P Class=KRCC>
남아 있는 색이 달라지기 때문에 흰색을 만드는 종류조차 고려해야 된다. 그래서 4×4×2! 이렇게 하면 되고요. 결국 원하는 건 얼마다? 32가지가 될 거다. 괜찮죠?
<SYNC Start=548666><P Class=KRCC>
그래서 이 문제 같은 경우는 약간 신선해 보일 수 있는데 그게 뭐냐? 뒷면을 고려하기 때문에. 이런 것도 체크해 놓으면 좋겠다.
<SYNC Start=557703><P Class=KRCC>
2번. 함수의 개수가 또 나오죠.
<SYNC Start=561695><P Class=KRCC>
&nbsp;
<SYNC Start=564993><P Class=KRCC>
함수의 개수에 조건 추가되는 거 어렵습니다. 제가 여러 번 말씀드리지만.
<SYNC Start=568882><P Class=KRCC>
X={5, 6, 7, 8, 9}에 대하여 다음 조건을 만족시키는 함수 X에서 X로 가는 개수를 구하여라. 이런 것도 체크해 놓고요. X에서 X로 간다.
<SYNC Start=577573><P Class=KRCC>
집합 X의 임의의 원소 a에 대하여 a가 3의 배수이면. 일단 ‘a가 3의 배수이면’이라고 했죠. 만약에 3의 배수이면.
<SYNC Start=586960><P Class=KRCC>
두 번째, ‘a가 3의 배수가 아니면’이라고 했습니다. 만약에 3의 배수가 아니라면. 그러면 f(a)는 f(6)보다 작다. 아까 ‘3의 배수이면 f(a)도 3의 배수이다.’라고 했죠.
<SYNC Start=598003><P Class=KRCC>
그러니까 얘를 나눠요. 케이스를 나눌 겁니다. 첫 번째 케이스.
<SYNC Start=604979><P Class=KRCC>
a가 3의 배수이다. 그러면 일단 X에서 X로 갈 거기 때문에
<SYNC Start=608835><P Class=KRCC>
&nbsp;
<SYNC Start=611927><P Class=KRCC>
여기가 5, 6, 7, 8, 9가 될 거고요. 여기가 5, 6, 7, 8, 9가 될 거예요. 3의 배수라고 하는 건 이거죠. 6. 그다음 9. 이렇게 되는 거.
<SYNC Start=624448><P Class=KRCC>
첫 번째, f(a)라고 하는 게 6이 되는 경우가 있을 거고요. 그다음 여기에 달려서 또 f(a)가 뭐가 되는 거? 9가 되는 경우가 있을 겁니다.
<SYNC Start=635433><P Class=KRCC>
그러면 f(a)라고 하는 거, 즉 함숫값 자체도 3의 배수여야 된다는 거예요. 다시. 여기 있는 거 다시 쓰면.
<SYNC Start=646368><P Class=KRCC>
f(6)이라고 하는 것. a가 이제 3의 배수라고 했기 때문에 f(6)이라고 하는 것도 3의 배수가 돼야 된대요. 그러면 6이 될 수도 있고. 그렇죠?
<SYNC Start=655496><P Class=KRCC>
또 f(9)라고 하는 것도 뭐가 될 수 있는 거다? 얘도 6이 될 수도 있고, 9가 될 수도 있는 거다. 얘도 마찬가지로 6이 될 수도 있고, 9가 될 수도 있는 거겠죠. 이해됐죠?
<SYNC Start=667113><P Class=KRCC>
여기까지만 일단 나눠 주면 될 것 같고. 두 번째, ‘a가 3의 배수가 아니면’이라고 해 보죠.
<SYNC Start=675728><P Class=KRCC>
얘도 마찬가지예요. 3의 배수가 아닌 거는 일단 5하고 7하고 8이 될 거예요. 그러면 얘들은 예를 들어 f(5)라고 한번 해 볼게요.
<SYNC Start=686313><P Class=KRCC>
그러면 f(5)가 f(6)보다는 작아야 된다는 거죠. 그럼 앞에 있는 f(6)에 따라 얘들이 결정 난다는 겁니다.
<SYNC Start=694772><P Class=KRCC>
얘도 마찬가지예요. f(7)이라고 하는 것도 앞에 있는 f(6)이 뭐냐에 따라 이 앞에 있는 f(a)가 결정 난다는 거예요. 그러니까 우리는 순서에 맞게끔 이걸 나눠 줘야 되는 겁니다. 알겠죠?
<SYNC Start=707255><P Class=KRCC>
첫 번째, f(6)이라고 하는 거를 6이라고 한번 해 볼게요. 되세요? 그러고 나서 그다음 스텝으로 넘어갑니다.
<SYNC Start=716907><P Class=KRCC>
‘a가 3의 배수가 아니면’이라고 했죠. 그럼 여기에 해당하는 거는 한 번에 쓸 거예요. f(5, 7, 8). 이렇게 한번 써보겠습니다.
<SYNC Start=726732><P Class=KRCC>
그럼 얘들은 f(a)라고 하는 값이 f(6)보다는 작아야 된다고 했죠. 그럼 여기에 있는 게 6이야. 돼요? 6이에요.
<SYNC Start=736839><P Class=KRCC>
그럼 얘보다는 작아야 된다고 했기 때문에 6보다 작은 거는 얼마밖에 안 와요? 5밖에 안 온다고요. 됐나요? 됐죠?
<SYNC Start=746898><P Class=KRCC>
또, f(6)이라고 하는 게 9예요. 만약에. 그러면 f(5, 7, 8)이에요. 그러면 f(6)이라고 하는 게 9기 때문에 5, 7, 8이라고 하는 거는 f(6)보다는 작아야 된다는 얘기입니다.
<SYNC Start=766411><P Class=KRCC>
그럼 9보다 작은 건 뭐가 올 수 있겠죠? 5, 6, 7, 8이 이렇게 올 수 있다는 얘기예요. 그러면 이제 6에 대한 것과 그다음에 5, 7, 8에 대한 건 했는데, 남아 있는 게 뭐죠?
<SYNC Start=778251><P Class=KRCC>
그렇죠. 9에 대한 게 남아 있죠. 근데 이 9에 대한 거는 사실 f(9)라고 하는 것은 크게 제약을 안 받는 거라 3의 배수이기 때문에 그냥 f(a) 값 자체도 3의 배수이기만 하면 되는 겁니다.
<SYNC Start=789160><P Class=KRCC>
여기에 6이 될 수 있고, f(9)라고 하는 거는 9 이렇게 올 수 있는 거예요. 그렇죠?
<SYNC Start=794763><P Class=KRCC>
또 여기에 있는 것도 f(9)라고 하는 거는 6이 될 수 있고요. 그다음 또 f(9)라고 하는 거는 9가 될 수 있겠다. 이런 경우가 생기겠죠.
<SYNC Start=803946><P Class=KRCC>
그러니까 결국은 이 2가지로부터 출발을 해 가지고요. 각각의 케이스에 맞게끔 쭉 전개가 되는 거예요.
<SYNC Start=812610><P Class=KRCC>
그래서 일단 3의 배수가 되는 게 중요한데, 그 3의 배수인 것 중에서도 특히나 이 뒤에 있는 조건에 대하여 f(6)의 값이 기준이 되니까 f(6) 값이 첫 번째 출발점이 되는 겁니다.
<SYNC Start=826254><P Class=KRCC>
여기가 시작점이 돼야 돼요. 따라서 f(6)의 값이 2개로 나눠질 거고, 이 2개에 따라 뒤에 있는 것들이 전개가 되겠다. 맞나요?
<SYNC Start=835065><P Class=KRCC>
각각 한 번씩 해 보도록 할게요. 얘는 함수를 한 번만 딱 그려보고, 그다음은 이제 계산을 직접 할 겁니다.
<SYNC Start=841282><P Class=KRCC>
첫 번째 거 한번 볼까요? 여기에 5, 6, 7, 8, 9가 있고 5, 6, 7, 8, 9가 있습니다. 여기에 6이라고 하는 거 어디로 가야 돼요? 6으로 가야 돼요. 이렇게. 됐죠?
<SYNC Start=859569><P Class=KRCC>
5, 7, 8이라고 하는 거. 여기에 있는 거 5, 그다음에 7, 그다음에 8. 얘들 다 어디로 간다? 5로 간다. 이렇게.
<SYNC Start=869525><P Class=KRCC>
그다음에 이제 9에 대한 거는 뭘로 가야 되는 거예요? 얘는 6 아니면 또 뭐? 9로 이렇게 갈 수 있겠다. 얘는 또는. 둘 중 하나가 된다는 얘기죠. 맞죠.
<SYNC Start=879303><P Class=KRCC>
그럼 이거에 대한 경우의 수를 체크를 해 보면 얘와 얘는 이미 결정이 난 상태고요. 여기에 있는 f(9)는 6이고, 여기에 있는 f(9)는 9라고 하는 거. 딱 몇 가지 경우가 있겠다?
<SYNC Start=889829><P Class=KRCC>
2가지 경우가 있겠다. 이렇게 체크해 두시면 됩니다. 알겠죠?
<SYNC Start=894515><P Class=KRCC>
그다음에 밑에 있는 경우 같은 경우는 f(6)=9고, f(5, 7, 8)=5, 6, 7, 8이에요. 그럼 얘들이 케이스가 나눠지는 겁니다. 맞죠?
<SYNC Start=903385><P Class=KRCC>
하나만 또 예를 들어볼까? 여기 있는 거 X, 그다음에 여기 있는 거 X. 5, 6, 7, 8, 9. 5, 6, 7, 8, 9예요.
<SYNC Start=914092><P Class=KRCC>
첫 번째, 6이라고 하는 게 9로 가야 돼. 이렇게. 그다음에 5라고 하는 거는 5, 6, 7, 8 중에 하나로 가면 되는 거예요.
<SYNC Start=923171><P Class=KRCC>
그러니까 이 5라고 하는 게 갈 수 있는 건 총 몇 개다? 하나, 둘, 셋, 넷. 4가지가 되는 거다. 그다음에 이 7 같은 경우도 몇 가지로 갈 수 있다? 4가지로 갈 수 있다.
<SYNC Start=932332><P Class=KRCC>
따라서 여기에서 여러분들이 배웠던 뭐가 나오는 거예요? ‘중복순열’이 나오는 거죠.
<SYNC Start=939584><P Class=KRCC>
그러니까 이거는 총 몇 가지가 나오는 거예요? 4³이 나오는 겁니다. 5와 7과 8이 선택이 될 거니까. 됐나요?
<SYNC Start=947691><P Class=KRCC>
그리고 이거에 따라서, 이거에 따라서 f(9)의 값이 결정이 나는 거죠. 근데 얘가 몇 개가 있는 거예요 또? 2가지가 이렇게 나는 거죠.
<SYNC Start=957428><P Class=KRCC>
그럼 이거 얼마예요? 64에다가 이제 2 곱하니까 얘는 128가지가 될 겁니다. 그럼 128가지에다가 이제 위에 있는 거 2가지까지 더해야 되니까 얼마예요, 답은?
<SYNC Start=967845><P Class=KRCC>
130가지가 나오겠죠. 이렇게. 맞아요?
<SYNC Start=973567><P Class=KRCC>
이 문제를 해결할 때 가장 중요한 포인트는 뭐냐면, 아무리 생각해도 이거예요, 이거. ‘f(6)이 기준이 돼야 된다.’
<SYNC Start=982313><P Class=KRCC>
‘그리고 3의 배수가 2개이기 때문에 9라고 하는 거는 영향을 안 받는구나.’라는 걸 체크해서 나머지에 대한 케이스를 쭉 전개하면 풀릴 겁니다.
<SYNC Start=990504><P Class=KRCC>
이거 중요한 문제입니다. 함수의 개수. 점점 어려워지죠. 함수의 종류의 개수 구하는 게 분명히 어렵게 출제될 거라고요. 만약에 나온다면. 안 나오고 건너뛰면 어쩔 수 없지만.
<SYNC Start=1001497><P Class=KRCC>
그래도 준비를 철저하게 해 놔야 됩니다. 3번으로 가 볼게요.
<SYNC Start=1006366><P Class=KRCC>
3번도 만만치 않아요. 2번과 3번, 4번. 오늘 하는 거 이 3개 중요합니다. 그리고 심지어 제가 플러스 문제 갖고 온 것도 중요한 게 있거든요. 이것들은 복습을 철저히 해야 된다.
<SYNC Start=1017749><P Class=KRCC>
문제 해석부터 한번 해 볼게요. 차근차근히.
<SYNC Start=1020616><P Class=KRCC>
그림과 같이 정사각형 모양으로 연결된 도로망을 따라. 일단 별표부터 치고 갈까요? 이렇게.
<SYNC Start=1028244><P Class=KRCC>
이 3번 문제가 중요한 이유는 우리가 보통 생각하는 최단 거리 문제를 약간 신선하게 바꿨다. 어떻게 바꿨냐면 2개의 출발점이 존재하도록.
<SYNC Start=1043566><P Class=KRCC>
보통은 1개의 점에서 출발을 해 가지고요. 어떤 점까지 거쳐가거나 아니면 어떤 점을 거쳐가지 않거나 해서 도착하는 경우의 수를 구하는 문제들이었는데.
<SYNC Start=1051076><P Class=KRCC>
이 문제는 점이 2개가 있다는 게 중요한 겁니다. 그래서 두 점에서 출발을 각각 하는데, 어딘가로 향해요. C로.
<SYNC Start=1059073><P Class=KRCC>
근데 이 중에 얘들이 중간에 만날 수도 있겠죠. 근데 만나지 않는 것. 즉 C라고 하는 점에서 최초로 만나고 최종적으로 만나는 이걸 구하라는 겁니다. 이해가 돼요?
<SYNC Start=1074344><P Class=KRCC>
그러면 이 문제를 2가지로 풀 겁니다, 저는.
<SYNC Start=1077195><P Class=KRCC>
일단 이 문제 틀을 이해하기 위해서는 칸을 봐야 돼요. 여기 있는 거 이렇게 3칸이고요. 여기도 3칸. 여기 있는 거 4칸. 돼요?
<SYNC Start=1089915><P Class=KRCC>
결국은 A부터 C로 가는 거나 B부터 C로 가는 거. 기본적으로 그냥 가는 것 자체는 경로의 수가 똑같겠다.
<SYNC Start=1096603><P Class=KRCC>
그리고 속도가 똑같아요. 여기에 있는 거 지금 쭉 가 가지고 같은 속력으로 이동한다고 했죠.
<SYNC Start=1102601><P Class=KRCC>
그러니까 속도가 같다는 건 무슨 얘기냐면, 얘가 만약에 4칸을 가요. 그럼 얘가 4칸을 가서 이렇게 가. 여기에 와요.
<SYNC Start=1110688><P Class=KRCC>
그러면 A라고 하는 점에서 출발을 해서 4칸을 갈 때, 같은 시간이 걸리기 때문에 이렇게 만날 수 있다는 겁니다. 근데 문제에선 이거를 원하는 게 아니야. 왜?
<SYNC Start=1121995><P Class=KRCC>
이렇게 만나버리면 C라는 데에서 처음으로 만나야 되는데 그 조건을 어기는 게 되거든요. 그러니까 결국은 이 가운데에 있는 이 라인. 이 라인에서는 절대 만나면 안 됩니다. 알겠죠?
<SYNC Start=1134061><P Class=KRCC>
그래서 그냥 직관적으로 해결하는 거 첫 번째 풀이 한번 보도록 할게요. 어떻게 하냐? 직관적으로. 조금 어렵게 느낄 수는 있겠지만 접근하는 거는 쉬울 수 있다.
<SYNC Start=1143305><P Class=KRCC>
첫 번째. 여기에서 만나는 경우와 여기에서 만나는 경우, 여기에서 만나는 경우, 여기에서 만나는 경우들을 나눠요. 이해가 돼요?
<SYNC Start=1154831><P Class=KRCC>
무슨 말이냐면, A가 만약에 이리로 와요. A가 여기로 온다면 B는 여기로 절대 올라가면 안 돼요. 그렇게 따진다는 거야.
<SYNC Start=1165595><P Class=KRCC>
또, A가 이리로 와요. 그러면 B는 여기에 절대 못 오게끔. 그거를 체크한다는 얘기죠. 근데 여기에서 주의할 거는, 생각을 해 보면. 이거 체크해 볼까?
<SYNC Start=1177646><P Class=KRCC>
여기로 와요. 여기로 오는 걸 체크를 했어. 그럼 그다음에 B가 오는 거는 여길 오면 안 돼요. 근데 여기에 오면 안 된다고 해 가지고 얘가 이렇게 거쳐가지고 여기를 가게끔 해도 되냐? 안 돼요.
<SYNC Start=1192168><P Class=KRCC>
왜냐? 얘가 여기까지 오는 데 4칸이 걸렸죠. 그럼 이 밑에 있는 것도 여기까지 오는데 4칸이에요, 4칸. 속도가 똑같으니까.
<SYNC Start=1202660><P Class=KRCC>
4칸, 4칸일 때 여기에 왔어. 그럼 그다음에 1칸을 더 가야 되는데 얘가 1칸으로 여길 왔어요. 그럼 얘가 1칸으로 여기를 올라간다면 둘이 여기서 만나겠죠.
<SYNC Start=1213240><P Class=KRCC>
그러니까 여기서 주의해야 될 점은 뭐냐?
<SYNC Start=1215461><P Class=KRCC>
이 점에서 안 만나면, 그러니까 이 점에서 안 만나려면, A라고 하는 점이 여기에 왔을 때, A에서 출발한 친구가 여기에 왔을 때
<SYNC Start=1224326><P Class=KRCC>
나머지는 아예 애초에 이 위에 줄은 건드리지 않아야 된다는 거예요. 이해가 됐죠? 왜? 여기 자체를 아예 다 빼 버려야 이 위에서 더 이상 만날 경우가 안 생기거든요.
<SYNC Start=1238527><P Class=KRCC>
어려울 수 있어요. 아마 풀면 좀 이해가 될 겁니다. 계산을 해 볼 거예요, 이제.
<SYNC Start=1243832><P Class=KRCC>
첫 번째. 여기다 번호를 매겨서. ①번, ②번, ③번, ④번. 이렇게 할 겁니다. ①번이라고 하는 점에 A를 기준으로 해서, A가 저 점에 도착했다고 한번 해 보죠. 돼요?
<SYNC Start=1259672><P Class=KRCC>
A가 여기에 도착을 했어. 그러고 나서 이 C로 가는 거야. 근데 B라고 하는 애. 그냥 여기서 출발한 건데 그냥 B라고 할게요.
<SYNC Start=1267469><P Class=KRCC>
얘는 여기로 올라가면 안 돼요, 절대. 그리고 이 위로도 절대 가면 안 돼. 그럼 B가 갈 수 있는 건 뭐냐면 이렇게예요.
<SYNC Start=1277509><P Class=KRCC>
이 윗줄 전체를 건드리면 안 된다니까요. 따라서 결국 B라고 하는 애는 이렇게 갈 수밖에 없겠다. 이 점에서 안 만나려면.
<SYNC Start=1285614><P Class=KRCC>
그게 얼마예요? 6!을 2!에다가 4!로 나눈 겁니다. 그럼 이게 얼마냐면 15가 나와요.
<SYNC Start=1295667><P Class=KRCC>
근데 얘가 A라고 하는 애가 이렇게 간 거고 B라고 하는 애가 이렇게 간 거였죠. 근데 A, B가 둘이 바꿀 수도 있잖아. B가 여기로 오고 A가 이렇게 갈 수도 있잖아요.
<SYNC Start=1304442><P Class=KRCC>
그러니까 이 안에서만 맴돌 수 있잖아요. 그 경우까지 고려를 하게 된다면 이 15에다가 나중에 최종적으로 2를 곱해 주면 돼요. 그건 좀 이따가 계산하는 거니까 놔두고. ②번.
<SYNC Start=1313699><P Class=KRCC>
②번에서 이렇게 만난다. 그럼 A라고 하는 애가 이리로 와요, 이리로. 근데 여기에 오는 거는 이미 계산을 했기 때문에 A에 계산할 때에는 이렇게 합니다, 이렇게. 이렇게 와서 여기 오는 거.
<SYNC Start=1324740><P Class=KRCC>
여기만 오면 무조건 최단 거리니까 C로 이리로 가야 되겠지. 그럼 이쪽으로 오는 거는 3!을 2!로 이렇게 나눈 겁니다. 돼요?
<SYNC Start=1334205><P Class=KRCC>
그럼 마찬가지로 A라고 하는 애가 이리로 왔어요. 그럼 B라고 하는 애도 마찬가지로 여기 이렇게 가야 되는 거예요. 그렇죠? 더 이상은 만나면 안 되는 거니까.
<SYNC Start=1343556><P Class=KRCC>
그럼 이 뒤에 있는 것도 똑같다고요. 6!을 2!을 이렇게 4!로 바꾸는 것. 그럼 이 친구는 3× 얼마가 되는 거야? 15가 될 거라고요. 됐죠?
<SYNC Start=1355176><P Class=KRCC>
그다음에 세 번째 경우.
<SYNC Start=1356701><P Class=KRCC>
&nbsp;
<SYNC Start=1359813><P Class=KRCC>
세 번째의 경우 여기로 와요, 여기로. 이렇게 오겠죠. A가 올 수 있는 건 이거야. 그럼 얘는 4!을 2!2!로 이렇게 할 거고요.
<SYNC Start=1370029><P Class=KRCC>
여기에 걸맞은 얘가 갈 수 있는 거는 이 밑에서 이렇게 움직이는 겁니다. 그렇죠? 그럼 얘도 마찬가지예요. 여기 있는 거 그냥 15라고 할까요, 이렇게?
<SYNC Start=1379523><P Class=KRCC>
그럼 이거 얼마예요? 4 하게 되면 6이니까 6×5=30. 90이야, 90. 이렇게. 되세요?
<SYNC Start=1389632><P Class=KRCC>
거기다가 마지막 네 번째 거. ④번. 여기에서 만나요, 여기에서. 그럼 얘는 이렇게 와야 돼.
<SYNC Start=1396518><P Class=KRCC>
&nbsp;
<SYNC Start=1399581><P Class=KRCC>
이렇게. 그럼 저 친구는 어떻게 돼요? 전체가 5개니까 5!에다가 3!2!이 될 거고. 그다음에 얘가 이쪽 밑에서 이렇게 와야 되겠죠. 그러니까 결국은 이 친구는 15가지가 되겠다. 돼요?
<SYNC Start=1412669><P Class=KRCC>
그럼 15가지에다가 이거 3! 5×4=20에다가 2로 나누니까 10이니까 얘는 150가지. 이렇게 될 겁니다. 가능하겠죠?
<SYNC Start=1421247><P Class=KRCC>
그다음에 여기 C에서 이제 만나는 거는 당연히 여기까지 온 다음에 이렇게 가는 거고, 얘도 여기까지 와서 만나는 거니까 더 이상 C에서 만나는 건 따로 구할 필요는 없죠. 그렇죠?
<SYNC Start=1431386><P Class=KRCC>
근데 얘가 이렇게 가는 건 있잖아요. 이렇게. 이렇게 갈 수 있는 거. 그렇죠? 저건 뭐예요, 그럼?
<SYNC Start=1438025><P Class=KRCC>
마지막 다섯 번째 이거는 이제 C에서 직접 만나는 거예요. 쟤는 6!. 4!에다가 2!. 곱하기. 6!에다가 4!에다가 2! 이렇게 가는 거죠.
<SYNC Start=1450575><P Class=KRCC>
그러니까 둘 다, 둘 다 여기까지 온 다음에 이렇게 가는 거예요. 여기까지 온 다음에 이렇게 가는 거. 이거 계산하게 되면 얘는 15에다가 15. 이렇게 될 거라고요. 돼요?
<SYNC Start=1464872><P Class=KRCC>
그럼 이거 개수 구해 볼까요? 이거 2배 해야 되니까 30. A와 B가 바뀌는 경우. 이거 2배 하니까 얘가 90이 될 거고, 얘 2배 하니까 180이 될 거고, 얘 2배 하니까 300이에요.
<SYNC Start=1474663><P Class=KRCC>
이것까지는 A와 B가 바꾼 경우들이 다 다른 경우니까 2배를 해 주는 거고요. 이거 하게 되면 120에다가 이거 하게 되면 300이니까, 300하니까 600이야. 돼요?
<SYNC Start=1487606><P Class=KRCC>
그다음에 이거 15×15 하게 되면 얼마? 얘가 225가 될 거거든요. 그래서 225. 이렇게 될 거라고요. 됐죠?
<SYNC Start=1496140><P Class=KRCC>
그러면 이거 2개 더하면 얼마? 825. 이렇게 나온다고요. 이거의 정답은 825입니다.
<SYNC Start=1504000><P Class=KRCC>
근데 이 과정이 생각보다 까다로워요. 그리고 이거를 정확하게 파악을 못 하면 중간에 틀릴 수 있겠죠. 빠뜨리는 경우가 생길 거고.
<SYNC Start=1512779><P Class=KRCC>
얘는 직관적으로 접근하되, 생각보다 조금 길기 때문에 이걸 추천하진 않고요. 그래도 ‘이런 방법이 있겠다.’라는 거 생각하면 좋을 것 같고.
<SYNC Start=1520658><P Class=KRCC>
만약에 다른 출제 형태로, 이게 다른 유형으로 나온다면, 2개의 점에서 출발해서 이런 식으로 문제가 출제가 됐을 때 이런 것도 아이디어적으로 기억을 해 놓으면 좋겠다.
<SYNC Start=1531074><P Class=KRCC>
만날 수 있는 건 어쩔 수 없이 가운데밖에 없어요. 왜? 속도가 같기 때문에. 됐죠?
<SYNC Start=1537920><P Class=KRCC>
그럼 두 번째 방법. 이게 첫 번째예요. 필기 잘 해 놓으시고. 두 번째 방법은 이런 겁니다.
<SYNC Start=1545439><P Class=KRCC>
어차피, 어차피 지금 가만히 보면 ①에서 만나는 경우, 그러니까 만나지 않게끔 얘가 이리로 올라오는 경우들을 체크를 했을 때,
<SYNC Start=1554153><P Class=KRCC>
이렇게 가게 되면 여기를 지나고요. ②에서 만약에 이걸 한다. 그럼 이렇게 갔을 때 여기에서도 만나고, 여기에서도 여기를 지날 수밖에 없겠죠. 무슨 얘기인지 이해가 돼요?
<SYNC Start=1569737><P Class=KRCC>
그래서 이렇게 하는 겁니다. 무조건 여기, 여기, 여기에서 만나면, 만약에 만나면, 이 점을 통과할 수밖에 없기 때문에
<SYNC Start=1581630><P Class=KRCC>
애초에 이 점을 못 만나게끔, 이 점을 통과하지 않게끔 하는 거를 빼 버리면 얘는 안 만나는 거예요.
<SYNC Start=1589319><P Class=KRCC>
근데 전체적인 개수가 중요하겠죠. 얘는 몇 개? 7개. 4!3!이 될 겁니다. 그리고 밑에서 올라오는 경우의 수도 총 이렇게 될 거예요. 4!에다가 3!. 맞아요?
<SYNC Start=1607072><P Class=KRCC>
그럼 얘는 7, 6, 5에다가 밑에 있는 거 6이 될 거고, 그다음 똑같이 7, 6, 5가 될 거니까 이렇게, 이렇게, 이렇게, 이렇게 약분해서 35²이 될 거예요. 맞나요?
<SYNC Start=1621372><P Class=KRCC>
근데 아까도 말했지만 이 점에서 만나는 거를 갖다가 제외해 버리면 결국은, 결국은 내가 여기 앞에 있는 것들도 다 안 만나는 거나 마찬가지가 되는 거다.
<SYNC Start=1633977><P Class=KRCC>
그래서 이 점까지 오는 걸 목표로 한 거를 빼 버리면 됩니다. 이 점까지 오는 걸 목표로 한 건 이거죠, 이거.
<SYNC Start=1639793><P Class=KRCC>
&nbsp;
<SYNC Start=1644140><P Class=KRCC>
이 점, 이 점, 이 점. 이 점. 이 점을 목표로 해 가지고 이동하는 걸 체크를 했을 때, 얘가 만난다는 거는 결국 이 앞에서도 언젠가 만났을 거니까 얘네들 다 빼 버리면
<SYNC Start=1655056><P Class=KRCC>
결국 이 점, 이 점, 이 점, 이 점 다 안 만나는 게 되는 거라고요.
<SYNC Start=1658804><P Class=KRCC>
따라서 저 친구의 계산법은 6개가 될 건데 6!, 3!3!이 될 거고요. 밑에 있는 것도 6!에 3!3!이 될 겁니다. 맞죠?
<SYNC Start=1671107><P Class=KRCC>
그럼 3, 2, 1이니까 6, 5, 4가 될 거고 얘는 20×20이 될 거니까 얘는 20²이 될 거예요.
<SYNC Start=1677627><P Class=KRCC>
내가 원하는 거는 35²이라고 하는 거에서 20²을 빼는 건데, (35-20)에다가 (35+20)을 하면 훨씬 더 계산하기가 수월하겠죠. 따라서 이 친구는 15가 될 거고요. 그다음에 이거 하게 되면 55가 되겠다.
<SYNC Start=1693351><P Class=KRCC>
그럼 55×15 해 봐요. 25에다가 5×5=25, 27. 5, 그다음에 5가 될 거니까. 이거 하게 되면 825라고 하는 값이 똑같이 나올 겁니다. 돼요?
<SYNC Start=1709786><P Class=KRCC>
첫 번째는, 만나지 않게끔 아예 경로를 설정을 해 버리는 거다.
<SYNC Start=1714150><P Class=KRCC>
그래서 A가 여기로 갔을 때, 여기로 갔을 때, 여기로 갔을 때, 여기로 갔을 때. 최종적으로 여기로 가는 것까지. 안 만나고 그냥 딱 C에서 만나는 거.
<SYNC Start=1722187><P Class=KRCC>
그렇게 한 거고 A와 B가 당연히 B가 여기로 오고 A가 이 위에서 노는 거. B가 여기로 오고 A가 이 위에서 노는 거. 이렇게 따져도 되는 거잖아요. 그러니까 ×2를 다 해 주고.
<SYNC Start=1732107><P Class=KRCC>
다만 C에 도착하는 거는 여기로 처음 오는 거기 때문에 얘하고 얘를 바꿔 줄 필요가 전혀 없습니다. 어차피 같이 여기로 와야 되니까. 그렇죠?
<SYNC Start=1740634><P Class=KRCC>
그렇게 해서 세부적으로 만나지 않게끔 경로를 쪼개 가지고 다 더해 준 게 앞에 있던 풀이고요. 두 번째 거는, 우리가 전체를 구한 다음에 그중에 만나는 것들을 그냥 빼 버리는 거다.
<SYNC Start=1753782><P Class=KRCC>
사실은 두 번째 게 수학적으로 훨씬 더 의미가 있죠. 왜? 이게 뒤에 나올 뭐니까? ‘여사건’의 개념이랑 같기 때문에. 알겠죠?
<SYNC Start=1764010><P Class=KRCC>
뒤에 나오는 4번이나 이런 것도 여사건에 대한 게 많은데, 좀 잘 체크해 주시면 좋을 것 같아요. 그래서 이 문제는 신유형이기도 하고 복잡하게 생각하면 복잡할 수 있다. 됐나요?
<SYNC Start=1778659><P Class=KRCC>
3번이었고요. 4번으로 가 보죠.
<SYNC Start=1782725><P Class=KRCC>
4번도 새로운 표현법. 신유형이라고 할 순 없고요. 새로운 표현법이 있는데, 집합이나 이런 수열이나 이런 표현법이 나오면 좀 어려워하는 친구들이 있는데, 두려워할 필요가 없습니다.
<SYNC Start=1794739><P Class=KRCC>
이것도 좀 체크를 잘 해 놓자.
<SYNC Start=1797309><P Class=KRCC>
{1, 2, 3, 4, 5, 6}에서 집합 {1, 2, 3}으로의 함수 중에서 다음 조건을 만족시키는 f의 개수를 구하라고 합니다.
<SYNC Start=1804630><P Class=KRCC>
3 이하의 자연수 n에 대하여. 그럼 여기다 써요. n이라고 하는 거는 3 이하의 자연수야. 1, 2, 3이구나. 됐죠.
<SYNC Start=1811297><P Class=KRCC>
두 번째, 집합 {x|f(x)=n일 때, 그러면 x라고 하는 게 이제 집합 안에 들어가 있는 원소다. 그럼 이게 뭐예요? ‘이거를 만족하는 x값이 이거야.’라는 거죠. 이 표현법이 어려워요. 이게.
<SYNC Start=1830074><P Class=KRCC>
이거의 원소의 개수를 an이라고 하자. 그러면 이런 거를 풀 때 가장 좋은 거는요, 예를 들어서 하는 겁니다. 예를 들어서.
<SYNC Start=1839186><P Class=KRCC>
n이라고 하는 게 미지수인데 n이 1부터 시작을 하죠. 1부터 시작해 볼게요. 그럼 이걸 그대로 씁니다. x|f(x)=1이고요. x는 이렇게 되어 있는 거야.
<SYNC Start=1851536><P Class=KRCC>
근데 이거를 만족하는 원소의 개수 a₁이 얼마다? a₁이 얼마다? a₁=4-1이다. 즉 3이라는 겁니다.
<SYNC Start=1867101><P Class=KRCC>
또 예를 들어요. n=2라고 한번 해 볼게요. 그럼 이거는 x|에다가 f(x)=2가 되는 거고 x가 X 안에 들어가 있는 거다, 당연히.
<SYNC Start=1876867><P Class=KRCC>
그럼 이거에 대한 원소의 개수, a₂라고 하는 거는 얼마다? a₂=4-2다. 2개다. 돼요?
<SYNC Start=1887570><P Class=KRCC>
n=3이에요. 그럼 x|에다가 f(x)=3이 돼야 되고요. x가 X 안에 들어가 있는 거고. 이때 원소의 개수는 a₃이 될 건데. 원소의 개수 얼마다? 1이라는 거야.
<SYNC Start=1902372><P Class=KRCC>
근데 이 원소 개수가 뭘까? 이게 의미하는 게 뭐예요? 이게 의미하는 게 뭐야?
<SYNC Start=1909521><P Class=KRCC>
함숫값이 1이 되도록 하는 x의 개수가 3개라는 거예요. 다시. f(x)가 1이 되도록 하는 x가 3개 있다.
<SYNC Start=1924417><P Class=KRCC>
즉, 우리가 여기가 1, 2, 3, 4, 5, 6이 있고요. X라고 하는 데에서. 이 Y로 가야 되는데 얘가 1, 2, 3이야. 근데 이 1로 가는 게, 1로 가는 게 몇 개 있다는 얘기예요? 하나, 둘, 세 개가 있단 얘기야.
<SYNC Start=1946509><P Class=KRCC>
또 얘는 뭐예요? f(x)가 2가 되도록 하는 x값이 몇 개 있다? 2개 있다. 2로 가는 x값이 몇 개 있다? 2개가 있다.
<SYNC Start=1958934><P Class=KRCC>
마지막. 그럼 뭐 다 나왔죠. 3으로 가는 x값은 몇 개가 있다? 1개가 있다. 이렇게 되는 거잖아요. 결국은 이건 뭐야?
<SYNC Start=1968976><P Class=KRCC>
함숫값이 1, 1, 1, 2, 2, 3이라고 하는 게 나와야 되고 얘가 총 개수가 몇 개냐면 6개예요. 근데 이때 원소의 개수, 정의역의 개수가 몇 개야? 6개예요.
<SYNC Start=1979316><P Class=KRCC>
그러니까 결국 얘들을 갖다가 함숫값을 배열해야 되는 건데. 1, 1, 1, 2, 2, 3이라고 하는 거를 뭐 하는 거다? 순서가 있게끔 나열하는 거다.
<SYNC Start=1990225><P Class=KRCC>
그러니까 얘는 무슨 문제랑 같다? 같은 것이 있는 순열과 같다는 거죠. 따라서 6!, 3!2!1!. 이렇게 하는 겁니다. 돼요?
<SYNC Start=2009101><P Class=KRCC>
결국 6ㆍ5ㆍ4가 될 거고요. 이거 2로 하게 되면 이렇게 될 거니까 5×2=10에 60. 이렇게 돼서 이 문제의 답은 몇 개가 되는 거다? 60개가 되는 거다. 괜찮죠?
<SYNC Start=2022550><P Class=KRCC>
다시. 함수의 표현이 약간 새로워 가지고 이건 좀 기억을 해 둬야 되고요. 그런 게 처음 나와서 어려울 때에는 이렇게 직접 예시를 드는 게 중요하다.
<SYNC Start=2031630><P Class=KRCC>
그리고 이 예시를 통해서 이걸 해석을 해야 되는데. 우리 원소 나열법보다는 당연히 조건 제시법이 어렵죠. 근데 그 조건 제시법 해석하는 건 이 뒤에 있는 조건을 만족하는 x잖아요.
<SYNC Start=2041162><P Class=KRCC>
근데 이 만족하는 x의 원소의 개수가 3개라는 거는 함숫값이 1로 가는 게 총 3개가 된다 이 얘기예요. 그러니까 결국은 이거를 1, 1, 1, 2, 2, 3으로 배열하면 되는 거다. 됐나요?
<SYNC Start=2057274><P Class=KRCC>
레벨 2이라 확실히 좀 여러 가지가 나오죠. 개념적으로 중요한 것도 나오고, 문제 풀이할 때 아이디어적인 것도 좀 새롭고. 이렇게 공부를 해야 됩니다.
<SYNC Start=2066218><P Class=KRCC>
여기까지 하면 이제 우리가 2023 연계는 다 했고요. 2022 연계 한번 보도록 하겠습니다.
<SYNC Start=2075045><P Class=KRCC>
1학년 학생 2명, 2학년 학생 4명, 3학년 학생 2명이 일정한 간격을 두고 원형의 탁자에 둘러앉는다. 3학년 학생 2명 사이에 각각 3명의 학생이 앉는다.
<SYNC Start=2084371><P Class=KRCC>
여기다가 밑줄 좀 칠까요? 이게 오늘 이 문제 풀 때 가장 큰 포인트가 될 건데. 다른 표현으로도 될 수 있습니다. 이따 볼 거예요. 1학년 학생 2명은 서로 이웃하게 앉는 경우의 수더라.
<SYNC Start=2096613><P Class=KRCC>
일단 사람들의 구성이 어떻게 되는지 한번 보자고요. 1학년 2명이니까 1학년, 1학년. 그다음에 2학년 4명. 3학년 2명. 총 몇 명이에요, 이거? 8명이죠, 8명.
<SYNC Start=2112664><P Class=KRCC>
여러분들 이제 그림이 나와 있을 건데, 제가 한번 그림 그려볼게요. 여기에 이렇게 돼 있고. 그다음에 여기 하나, 둘, 셋, 넷, 다섯, 여섯, 일곱, 여덟. 이렇게 그려보겠습니다.
<SYNC Start=2126555><P Class=KRCC>
8명이 이렇게 앉아 있을 건데요. 문제에서 뭐라고 했냐면 3학년 학생 2명 사이에는 각각 3명의 학생이 앉는대.
<SYNC Start=2133385><P Class=KRCC>
그러면 여기에 만약에 3학년 학생이 앉아요. 그럼 3명이 앉으려면 하나, 둘, 셋, 하나, 둘, 셋 가고 여기에 3학년이 앉아야 되겠지.
<SYNC Start=2141749><P Class=KRCC>
그래서 이 문제하고 같은 표현법이 우리가 기존에 봤던 문제가 뭐가 있냐? 마주 보고 앉는다.
<SYNC Start=2148755><P Class=KRCC>
&nbsp;
<SYNC Start=2153104><P Class=KRCC>
이거를 이렇게도 표현을 했다고요. 작년에는. 그래서 ‘마주 보고 앉는 것’과 ‘누구와 누구 사이에 몇 명이 앉더라.’라고 하는 거하고는 같은 의미가 될 수 있습니다. 이 문제 같은 경우에. 알겠죠?
<SYNC Start=2164364><P Class=KRCC>
그럼 여기서 여러분들이 생각해야 될 게 이거예요. 3학년이 일단 마주 보고 앉아야 되니까 3학년부터 배열을 해야 되겠구나.
<SYNC Start=2170461><P Class=KRCC>
그럼 제가 지난번에 말했죠. A라고 하는 친구가 있고 B라고 하는 친구가 있을 건데, 이미 어차피 원탁은 빈자리야.
<SYNC Start=2177851><P Class=KRCC>
하얀색으로 둘러싸여져 있는 그냥 아무 위치가 없는 의자와 책상이라고요. 그럼 그냥 가서 앉으면 돼요.
<SYNC Start=2185389><P Class=KRCC>
그럼 얘를 그냥 A가 여기 앉고 B가 여기 앉아버리면 끝나요. 이걸 갖다가 A, B 앉는 경우, B, A 앉는 경우 할 필요가 있다, 없다?
<SYNC Start=2193171><P Class=KRCC>
없다. 그 시작점을 잘못하면 원순열을 아예 다 틀려요. A, B 앉히는 거 그냥 1입니다, 1. 알겠죠? 굳이 경우의 수 쓰자면 1이에요.
<SYNC Start=2202286><P Class=KRCC>
그다음에. 이게 이제 첫 번째가 될 거고. 3학년 친구들을 배열하는 거고요.
<SYNC Start=2207726><P Class=KRCC>
1학년 친구들끼리는 이웃을 해야 된대요. 그럼 이게 이제 조금 어려울 수 있는데. 1학년을 이렇게 묶어버려. 그럼 얘는 덩어리로 만드는 거죠.
<SYNC Start=2217152><P Class=KRCC>
원래대로라면 덩어리를 만들고 그다음에 그 덩어리하고 나머지 친구들을 배열하면 되는 건데, 이 덩어리가 이웃한다고 했기 때문에 여기, 여기 앉으면 안 돼요. 그렇죠?
<SYNC Start=2227327><P Class=KRCC>
그래서 이 덩어리가 올 수 있는 거를 위치를 선정을 합니다. 하나, 둘, 셋, 넷. 이렇게 올 수 있겠죠. 그렇죠?
<SYNC Start=2237507><P Class=KRCC>
그래서 여기다가 ×4를 합니다. 얘가 두 번째 단계가 되는데 얘는 뭐냐면 덩어리를 위치시키는 거다. 즉, 1학년 친구들을 위치시키는 거다.
<SYNC Start=2248758><P Class=KRCC>
그럼 예를 들어 여기에 위치했다고 한번 해 볼게요. 여기에. 남아 있는 이제 2학년 학생들 배열하면 되는데 어차피 남아 있는 거 몇 자리예요?
<SYNC Start=2256174><P Class=KRCC>
네 자리. 그럼 다 네 자리가 다른 거니까 4! 이렇게 해 주면 된다고요. 그러고 나서, 끝나지 않았죠. 이게 이제 세 번째 단계가 될 건데. 얘가 2학년.
<SYNC Start=2268658><P Class=KRCC>
덩어리라고 하는 거는 무조건 그 덩어리 내부에서 자리 바꾸는 거 꼭 놓치지 말고 곱해 줘야 되겠죠. 그리고 2!. 얘가 뭐냐면 덩어리 내부. 이렇게 될 거라고요.
<SYNC Start=2279806><P Class=KRCC>
따라서 4×, 4×3×2=24가 될 거니까 48에다가 4. 이렇게 될 거니까 이 친구 하게 되면 192가 될 겁니다. 이게 이 문제의 답이 되겠죠. 맞아요?
<SYNC Start=2294630><P Class=KRCC>
그래서 어쨌든 여러분들이 이제 이런 문제 같은 경우에도 ‘마주 보는 거를 다르게 표현할 수 있구나.’라는 걸 한 번쯤 기억해 두면
<SYNC Start=2300781><P Class=KRCC>
이것과 유사한 문제가 나왔을 때 좀 다양하게 생각해 볼 수 있겠죠. 그다음 두 번째 문제.
<SYNC Start=2309253><P Class=KRCC>
얘는 제가 가져온 이유가 여러분들이 어렵게 느끼는 게 생각보다 어렵지 않을 거라는 거, 그리고 표현법이, 그 문제의 풀이 과정이 다양하다는 걸 좀 한번 보여드리고 싶어서 갖고 왔습니다.
<SYNC Start=2319993><P Class=KRCC>
이 문제 풀 때, 어렵진 않아요. 근데 풀이 방법이 조금 새롭게 느껴지는 게 있을 겁니다. 한번 볼게요.
<SYNC Start=2326787><P Class=KRCC>
0, 1, 2 중에서 중복을 허락하여 6개를 택해 일렬로 나열하여 여섯 자리의 자연수를 만들더라. 그러니까 첫째 자리에는 0이 오면 안 되는구나. 뭐 당연한 얘기고요.
<SYNC Start=2334829><P Class=KRCC>
각 자리의 수 중에 0의 개수가 1 이하인 자연수의 개수를 구하라고 합니다. 그럼 일단 첫 번째, 케이스를 나누는데.
<SYNC Start=2341900><P Class=KRCC>
1. 케이스 첫 번째 거는 0이 1개. 그렇죠? 두 번째 케이스는 0이 없다. 1 이하라고 했기 때문에.
<SYNC Start=2356161><P Class=KRCC>
그러면 0이 1개인 경우 체크를 해 보면 일단 하나, 둘, 셋, 넷, 다섯, 여섯 자리가 있습니다. 그러면 첫 번째. 1과 2밖에 못 와요, 여기는. 이렇게밖에 못 옵니다. 그렇죠?
<SYNC Start=2371815><P Class=KRCC>
그러고 나서 0이라고 하는 게 1개가 무조건 와야 돼요. 그러면 0이 올 수 있는 건 몇 자리? 하나, 둘, 셋, 넷, 다섯 개가 있습니다. 5개.
<SYNC Start=2380162><P Class=KRCC>
그래서 여기에 있는 거 5를 이렇게 곱하는데. 얘가 뭐냐면 0의 위치. 이렇게 오는 거예요. 그리고 만약에 0이 여기에 왔어요. 이거 곱하기로 하면 좀 헷갈리니까 이렇게 할까?
<SYNC Start=2396656><P Class=KRCC>
처음에는 2고요. 그다음 거는 0이 왔대요. 나머지 이제 네 자리가 남았을 텐데, 이 네 자리에는 0이 오면 안 되죠. 그럼 1과 2가 와야 돼.
<SYNC Start=2404896><P Class=KRCC>
그럼 결국은 2라고 하는 게 4개가 이렇게 와야 되겠구나. 결국은 5× 얼마예요? 2의 5제곱. 이렇게 될 거고요. 얘가 하게 되면 이게 16이고 10이니까 160이 되겠다. 됐죠?
<SYNC Start=2422133><P Class=KRCC>
그다음에 0이 없는 거 한번 체크해 볼게요. 하나, 둘, 셋, 넷, 다섯 개, 여섯 개. 이렇게 와야 돼요. 그럼 올 수 있는 건 당연히 1, 2. 1, 2. 1, 2. 이렇게 쭉 올 거 아니에요.
<SYNC Start=2439219><P Class=KRCC>
그러니까 이건 얼마 그냥? 2의 6제곱이 되겠다. 그러니까 얘는 64가 된다는 얘기죠. 그러니까 64에다가 160 더하면 얼마? 64 이렇게 하게 되면 224가지가 되는 겁니다.
<SYNC Start=2455152><P Class=KRCC>
근데 이 문제가 이렇게도 접근할 수 있어요. 이거 두 번째 거는 의미 없으니까 빼 버리고. 이거를 0이 한 번 들어가는 거잖아요.
<SYNC Start=2463886><P Class=KRCC>
그래서 어차피 여섯 자리 중에서 한 자리는 0이겠죠. 근데 그 위치가 중요한 거잖아요. 이렇게 봅니다.
<SYNC Start=2470899><P Class=KRCC>
하나, 둘, 셋, 넷, 다섯 개를 일단 선정을 해요. 근데 이 5개는 무조건 뭐일 거야? 1, 2 중에 하나일 거야. 그러니까 얘는 2의 5제곱을 먼저 합니다. 1, 2, 1, 2, 1, 2, 1, 2, 1, 2.
<SYNC Start=2484320><P Class=KRCC>
그러고 나서 첫째 자리에는 당연히 0이 못 올 거고 둘째 자리부터 가능하니까 이 빈자리들이 있죠. 하나, 둘, 셋, 넷, 다섯 개. 이 5개 중에 하나로 0이 끼어들어가면 되는 거겠다.
<SYNC Start=2496388><P Class=KRCC>
그 경우가 몇 가지예요? 5가지 경우가 되겠죠. 이것도 얼마? 160. 이렇게. 그래서 160에다가 이거는 뭐 64가 될 거니까 224. 이렇게 할 수 있겠죠.
<SYNC Start=2506422><P Class=KRCC>
그래서 이 풀이법 자체도 조금 기억해 둘 필요가 있습니다. 이 풀이법.
<SYNC Start=2511675><P Class=KRCC>
그러니까 0이라고 하는 게 1개 들어갈 때, 아니면 2개 들어갈 때 이런 경우에 무작정 그냥 이렇게 나눠 가지고 하는 것보다는
<SYNC Start=2518880><P Class=KRCC>
그걸 제외한 나머지를 먼저 줄 세운 다음에 사이사이에 껴 들어가게끔 하는 것도 방법일 수 있다.
<SYNC Start=2524245><P Class=KRCC>
대신 2개 이상이 될 때는 0끼리 이웃하지 않고 이런 추가적인 조건이 있거나 없을 수도 있고 하니까 그런 것들을 조금 더 고려하면 되겠죠. 됐나요? 마지막.
<SYNC Start=2535682><P Class=KRCC>
8개의 숫자가 있는데요. 1, 1, 2, 2, 3, 4, 5, 6을 모두 일렬로 나열할 때 홀수 번째의 모든 자리에 3 이상의 숫자가 나열되는 경우가 몇 개냐?
<SYNC Start=2546975><P Class=KRCC>
그러면 일단 첫 번째 자리, 두 번째 자리, 세 번째 자리, 네 번째 자리, 다섯 번째 자리, 여섯 번째 자리, 일곱 번째 자리, 여덟 번째 자리 이렇게 해 볼게요.
<SYNC Start=2554971><P Class=KRCC>
이 중에 ‘홀수 번째’라고 했기 때문에 얘는 첫 번째하고, 세 번째하고, 다섯 번째 하고, 일곱 번째에 대한 얘기입니다.
<SYNC Start=2563462><P Class=KRCC>
여기에 3 이상의 숫자가 나열돼야 된대요. 그러면 3 이상은 3, 4, 5, 6. 심지어 서로 다른 숫자야.
<SYNC Start=2575286><P Class=KRCC>
그러면 여기 4개에다가 이 서로 다른 4개를 갖다가 그냥 배열하면 되는 거 아니에요? 이건 그냥 가장 기본이 되는 거 뭐? 순열. 4!이 되겠죠. 이게 첫 번째. 홀수 자리에다가 배열하는 경우. 그렇죠?
<SYNC Start=2591544><P Class=KRCC>
그다음에 나머지에다가는 이제 이것들을 넣어야 되는 건데. 두 번째, 네 번째, 여섯 번째, 여덟 번째다. 근데 여기에 남아 있는 건 뭐밖에 없어요? 1, 1, 2, 2밖에 없더라.
<SYNC Start=2602257><P Class=KRCC>
그리고 얘들은 이미 어차피 순서가 정해져 있는 거잖아요. 그러니까 순서가 딱, 딱, 딱 구분되어 있잖아요. 그러니까 그냥 얘들을 네 자리로 배열하는 거구나. 그러니까 뭐?
<SYNC Start=2616249><P Class=KRCC>
그렇죠. 같은 것이 있는 순열. 같은 것이 있는 순열이구나. 그러면 이 친구는 4!이라고 하는 거를 2!과 2!로 이렇게 나눠 주면 되는 거고. 결국은 6가지가 되는 거겠다.
<SYNC Start=2632518><P Class=KRCC>
그러면 결국 4!에다가 6가지를 곱하는 건데 이게 두 번째 게 뭐예요? 1, 1, 2, 2라고 하는 거를 배열하는 겁니다. 다른 말로 하면 뭐?
<SYNC Start=2644738><P Class=KRCC>
그렇죠. 짝수 번째. 짝수 번째 자리를 배열하는 거. 괜찮죠?
<SYNC Start=2652505><P Class=KRCC>
그래서 결국은 얼마예요? 24에다가 ×6을 하는 거니까 6×4=24, 6×2=12. 결국 계산하면 144라고 하는 값이 나오겠네요.
<SYNC Start=2662650><P Class=KRCC>
이것도 이제 작년에 레벨 2에 나왔던 문제들인데, 이 3개 중에서 가장 어떻게 보면 풀이법이나 이런 게 조금 신선했던 거는 두 번째 겁니다.
<SYNC Start=2672120><P Class=KRCC>
그 두 번째 거에 대한 아이디어를 꼭 기억을 해 두시면 좋을 것 같아요.
<SYNC Start=2676617><P Class=KRCC>
그래서 오늘 했던 것들이 지금 레벨 2라서 확실히 레벨 1보다는 좀 어렵죠. 특히나 앞에 제가 2023 연계 교재에서 2번, 3번, 4번 이 3개는 꼭 다시 한번 좀 풀어보셔야 돼요.
<SYNC Start=2689818><P Class=KRCC>
그리고 3번과 4번 같은 경우에는 우리가 이제 나중에 배우겠지만, 여사건에 대한 얘기가 조금씩 이렇게.
<SYNC Start=2697128><P Class=KRCC>
아, 4번은 아니죠. 4번 아니고 이제 3번. 이거에 대한 게 이제 여사건. 뒤에 나오겠지만 그거에 대한 내용이랑, 우리가 어떤 확률과 통계의 경우의 수 구할 때에는 효율성이 매우, 매우 중요한 거다.
<SYNC Start=2707304><P Class=KRCC>
그래서 이 개수 세는 것에 대해서 내가 물론 하나하나 다 나눠 가지고 할 수는 있겠지만, 그거를 못 할 때에는 이제 여사건이라고 하는 걸 이용해서 풀어야 된다는 거 꼭 기억하시기 바랍니다.
<SYNC Start=2717491><P Class=KRCC>
특히나 만나는 거. 오늘 봤던 것 중에서 만약에 출제자가 이거를 조금 더 확장해서 새로운 유형으로 만들겠다고 하면 최단 거리 문제는 워낙 많이 나왔거든요.
<SYNC Start=2730444><P Class=KRCC>
근데 이 워낙 많이 나온 것 중에 두 점에서 출발하거나 세 점에서 출발해서 어딘가에 공통적으로 만나고 하는 것들이 낯설어요. 여러분들 당황할 수 있어요. 충분히.
<SYNC Start=2741396><P Class=KRCC>
그리고 이게 심지어 시험장에서 이걸 출제를 했다. 그러면 사실은 앞에 배치가 되더라도 이게 어렵게 느껴지는 문제일 수 있거든요, 충분히.
<SYNC Start=2749366><P Class=KRCC>
그러니까 그거에 대한 연습이 좀 숙달되면 좋을 것 같고요.
<SYNC Start=2753787><P Class=KRCC>
내가 이 단계별로 써주는 것에 대해서 꼼꼼하게 여러분들이 복습하면서 이것들을 내 것으로, 완벽히 내 것으로 만들었으면 합니다. 알겠죠?
<SYNC Start=2764267><P Class=KRCC>
그래서 여러분들이 지금 이 7개였죠. 오늘 7개였는데. 레벨 2에 대한 거, 그다음에 다음 시간에 풀게 되는 게 이제 5개 정도 될 거예요.
<SYNC Start=2774595><P Class=KRCC>
레벨 3에서는 이제 3문항인데. 그 3문항조차 시간이 좀 걸려서 제가 추가적으로 갖고 온 게 레벨 3하고 비슷한 수준인데 2문항 정도만 좀 가져와 봤습니다.
<SYNC Start=2784729><P Class=KRCC>
그래서 점차적으로 레벨 1단계에 대한 난이도, 레벨 2단계에 대한 거 쭉 풀어보고, 그다음에 마지막 다음 시간에 레벨 3단계에 대한 거 쭉 풀어보면,
<SYNC Start=2793900><P Class=KRCC>
‘아, 개념이 이런 식으로 확장이 되는구나. 그리고 이 개념이 확장될 때 문제가 이런 식으로 또 출제가 되고 표현법이 달라지는구나.’라는 거를 느낄 겁니다.
<SYNC Start=2803195><P Class=KRCC>
이 1, 2, 3단계라고 하는 게 별거 아니지만요, 여러분들의 머리, 뇌를 깨우는 역할을 하거든요. 처음부터 레벨 3에 대한 거를 풀기 시작하면 머리가 닫혀 있는 상태예요.
<SYNC Start=2815962><P Class=KRCC>
그리고 뭐 그거 풀면 당연히 공부한 것 같겠죠. 새로운 내용이고 내가 어려운 문제 풀었으니까. 근데 이걸 단계적으로 밟아 나가면 훨씬 더 짜임새 있게 머릿속이 굴러가는 겁니다. 머리가.
<SYNC Start=2828232><P Class=KRCC>
그러다 보니까 단계적으로 이렇게 나눠 놓는 게 좋은 거거든요. 여러분들이 그거에 맞게끔 충분히 좀 연습을 하면 좋을 것 같고.
<SYNC Start=2836617><P Class=KRCC>
선생님이 이제 서브노트로 자료실에다가 올려놨잖아요. 그러면 그 자료를 가지고 공부할 때, 당연히 여러분들이 푼 것과 제가 푼 게 다를 수 있습니다.
<SYNC Start=2846852><P Class=KRCC>
그걸 인정하고선 공부를 해야지, 만약에 여러분들 풀이법대로 풀었어요. 근데 그 풀이법이 다르지만 답은 맞아.
<SYNC Start=2855034><P Class=KRCC>
그러면 그게 답이 맞은 게 우연히 맞은 건지, 아니면 이게 정확하게 논리적으로 맞은 건지에 따라 논리적으로 맞았으면 내가 그 풀이법에 대한 것도 확실하게 기억을 해 두면 공부가 더 된 겁니다.
<SYNC Start=2867399><P Class=KRCC>
그러니까 무작정 ‘선생님 풀이를 따라 해야지.’가 아니라 새로운 풀이법이면 새로운 거대로 익히고, 그다음에 그거 나름대로 논리적인 근거만 명확하게 갖고 가시면 될 것 같아요.
<SYNC Start=2877044><P Class=KRCC>
그래서 어쨌든 오늘 1시간도 고생 많이 하셨고요. 뒤에 역시나 퀴즈 나가는데, 제가 거의 단계적으로 이렇게 넣어놨습니다. 그래서 오늘 거 잘 푸신 다음에 다음 시간 문제 풀어오시면 될 것 같아요.
<SYNC Start=2888789><P Class=KRCC>
고생 많이 하셨고요. 다음 시간에 더 알찬 내용으로 찾아오도록 할게요.
<SYNC Start=2893167><P Class=KRCC>
(오늘의 퀴즈)
<SYNC Start=2897155><P Class=KRCC>
두 집합 X={1, 2, 3, 4, 5}, Y={2, 4, 6, 8, 10, 12}에 대하여 X에서 Y로의 함수 f 중에서 다음 조건을 만족시키는 함수의 개수는?
<SYNC Start=2909006><P Class=KRCC>
(가) f(2)＜f(3)＜f(4) / (나) f(1)＞f(3)＞f(5)
<SYNC Start=2914041><P Class=KRCC>
①100, ②102, ③104, ④106, ⑤108
<SYNC Start=2919856><P Class=KRCC>
&nbsp;
</BODY>
</SAMI>