<SAMI>
<HEAD>
<TITLE>Time Tools (C) CCNSOFT 2005</TITLE>
<STYLE TYPE="text/css">
<!--
P { margin-left:8pt; margin-right:8pt; margin-bottom:2pt;
    margin-top:2pt; font-size:12pt; text-align:left;
    font-family:굴림, Arial; font-weight:normal; color:white;
    background-color:#405A8D; }
.KRCC { Name:한국어; lang:ko-KR; SAMIType:CC; }
#STDPrn { Name:Standard Print; }
#LargePrn { Name:Large Print; font-size:20pt; }
#SmallPrn { Name:Small Print; font-size:10pt; }
-->
</STYLE>
</HEAD>
<BODY>
<SYNC Start=9289><P Class=KRCC>
반갑습니다. 2022 수능 특강 최은진의 확률과 통계 강의에 오셨습니다. 저는 여러분의 든든한 조력자, 체인지 수학 최은진입니다.
<SYNC Start=16964><P Class=KRCC>
오늘은 확률과 통계 12번째 시간이에요. 중복 조합과 이항 정리를 한창 공부하는 중이었고요, 이제 좀 어려운 부분을 하고 있죠. 연계 교재 문제 풀이를 하는 중입니다.
<SYNC Start=27083><P Class=KRCC>
오늘 제가 여러분하고 같이 얘기하고 싶은 감성 코드는 인내입니다. 선생님은 항상 공부를 할 때 학교 다닐 때부터 제가 옳다고 믿고 또 그렇게 공부하던 저만의 방식 중에 하나가 있는데요,
<SYNC Start=49895><P Class=KRCC>
그게 뭐냐 하면 공부를 예를 들어 '여기까지 하고 쉬어야겠다.' 하는 순간이 있잖아요. 그러면 그 순간부터 5분씩 더 했어요.
<SYNC Start=64139><P Class=KRCC>
'오늘 여기까지 하고 쉬어야지.' 거기에 딱 왔어요. 그러면 5분씩, 혹은 뭐 가능하면 10분씩, 조금씩 조금씩 더 했어요.
<SYNC Start=73500><P Class=KRCC>
그러고 나면 목표량 보다 조금조금 더 하는 게 모여서 하루 공부치가 모이면 엄청나게 많은 양을 공부하고 끝내게 돼요.
<SYNC Start=83953><P Class=KRCC>
그래서 항상 내 목표보다 조금 더 많이 하게 되고 목표를 조금 더 많이 잡아도 좀 덜 스트레스를 받게 되더라고요.
<SYNC Start=92397><P Class=KRCC>
뭔가 성취감을 느끼기 위해서는 목표를 세우고 그것에 맞고 공부하고 딱 끝내고 쉬어 주고 하는 게 당연히 필요해요. 휴식이 정말 필요한 것은 사실인데요.
<SYNC Start=101510><P Class=KRCC>
그때 내가 뭔가를 하고자 할 때 목표한 것보다 조금씩만 더 한다고 생각하면 그 순간에는 진짜 5분 더 하는 건데 그게 모이면 엄청난 결과를 가져오거든요.
<SYNC Start=111750><P Class=KRCC>
그 인내심이 여러분에게 필요해요. 그렇게 해서 모인 결과가 아마 나중에는 엄청나게 큰 결과물로 여러분한테 다가올 겁니다.
<SYNC Start=121095><P Class=KRCC>
오늘 하는 내용은 함수의 개수를 세는 걸 중점적으로 할 생각이에요. 물론 레벨 3에 있는 문제를 풀면서 함수의 개수를 연결시키겠지만,
<SYNC Start=130102><P Class=KRCC>
이 과정에서 함수의 개수를 구하는 기본적인 공식이나 내용들이 있어요. 그런데 거기에다가 플러스, 함수의 개수는 제가 조금 있다가 코드로도 말하겠지만
<SYNC Start=140968><P Class=KRCC>
일일이 세는 수작업이 사실은 먹히는, 수작업이 먹힌다고 얘기하는데요, 보통, 수작업이 통하는 그런 주제 중에 하나예요. 수작업이 도리어 쉬운 경우도 많아요.
<SYNC Start=153053><P Class=KRCC>
그래서 인내심을 가지고 좀 경우를 꼼꼼하게 따져 보는 습관이 굉장히 중요한 주제이기도 합니다. 그래서 오늘은 한 시간에 걸쳐서 여러분 인내심을 가지고,
<SYNC Start=163920><P Class=KRCC>
인내라는 주제로 얘기를 시작해 봤습니다. 오늘 수업 어떤 내용을 할지 먼저 확인하고 가도록 하시죠. 전면 보시죠.
<SYNC Start=175805><P Class=KRCC>
네, 오늘은 연계 교재 문제 풀이를 하도록 하겠습니다. 만랩 특강 그리고 함수의 개수 연결시켜서, 만랩 특강은 제가 말씀드렸죠?
<SYNC Start=183898><P Class=KRCC>
심화 주제에 대해서 공부하는 시간이라고. 그래서 이 두 가지 좀 생각해 보시면 되겠고요. 오늘 코드 확인하도록 하겠습니다.
<SYNC Start=190257><P Class=KRCC>
오늘 코드는 단순해요. 함수의 개수 구하는 것. 이거 추가 코드인데요, 지난 시간에 했던 것에 추가해서, 중복 순열에서 했던 것에 추가해서 코드 정리해 보도록 하겠습니다.
<SYNC Start=200018><P Class=KRCC>
네, 좋습니다. 그러면 지금부터 레벨 3 문제 시작해 보도록 할 건데요. 본격적으로 연계 교재 문제 풀이를 하는 시간이 됐고요.
<SYNC Start=208829><P Class=KRCC>
레벨 3의 1번은 함수의 개수는 아니고요, 그냥 중복 조합에서 방정식의 해의 개수 구하는 부분으로 연결되었습니다.
<SYNC Start=217325><P Class=KRCC>
이 부분 한번 문제 풀어 보면서 또 감을 잡아 보도록 할게요. 이 문제는 이차 방정식의 두 근에 관한 얘기가 기초로 깔리네요. 이거 고1 때 배웠던 내용인데 잠깐만 정리하고 갈까요?
<SYNC Start=230069><P Class=KRCC>
두 근을 a, b라고 줬는데 계수를 주지 않았기 때문에 두 근에 대한 정보를 얻는 방법이 정확하게 근을 구해 내기가 좀 어렵다는 거죠.
<SYNC Start=237271><P Class=KRCC>
그래서 이럴 때 많이 쓰는 방법은 근과 계수의 관계죠. 이차 방정식의, 이거 사실 대부분 친구들이 기억은 할 것 같은데.
<SYNC Start=248394><P Class=KRCC>
왜냐하면 너무 자주 나오고 꼭 지금 확통이 아니더라도 수Ⅰ, 수Ⅱ나 다른 부분에서도 많이 나왔을 법한 얘기라서. 그래도 혹시나 하는 마음으로 확인은 한번 할게요.
<SYNC Start=262557><P Class=KRCC>
이차 방정식인데 두 근을 α, β라고 합시다. 그러면 두 근의 합은요? 또 두 근의 곱은요? 이걸 계수의 비로 계산할 수 있다는 거죠. -a분의 b. 그리고 a분의 c. 곱은 이렇게 된다.
<SYNC Start=281238><P Class=KRCC>
두 가지가 굉장히 중요해요. 정말 많이 나오는 부분이고요. 됐죠? 그러면 이걸 확인하고 나서 먼저 (나) 조건을 확인하면 두 근이 a, b이니까 a+b는 1분의 -c 하니까 c가 되고요.
<SYNC Start=295185><P Class=KRCC>
또 하나는 a 곱하기 b는 1분의 4 해서 4가 되는 거죠. 이 두 가지 조건 확인하실 수 있나요? 이 문제의 가장 포인트는 이게 확통 아닙니까?
<SYNC Start=305731><P Class=KRCC>
그러니까 a, b, c, d, e, f는 음 아닌 정수해입니다. 그러다 보니 ab도 음 아닌 정수가 되기 때문에 곱해서 4가 되는 a, b의 값을 여러분이 추측해서 미루어 짐작할 수 있어요.
<SYNC Start=321416><P Class=KRCC>
해를 구할 수 있다는 거죠. 미지수가 a, b, c 3개이지만 여러분 충분히 해를 구할 수 있는 상황인 겁니다. 그래서 이때 해를 맞혀 보는 거예요.
<SYNC Start=330382><P Class=KRCC>
(a, b) 순서쌍이 될 수 있는 건 (1, 4) 아니면 (2, 2) 아니면 (4, 1) 이렇게 세 가지가 되겠다는 생각을 하실 수 있고요.
<SYNC Start=340245><P Class=KRCC>
그에 따라서 c의 값은 a, b를 더해서 만드는 것이기 때문에 5가 될 수 있고요, 더하면 4가 될 수 있고요, 더하면 5가 될 수 있다. 이렇게 정리하실 수 있습니다.
<SYNC Start=352221><P Class=KRCC>
여기까지 되셨죠? 그래서 이제부터는 이 세 가지를 케이스를 나눠서 각각을 (가) 조건을 적용해서 a, b, c, d, e, f까지 해를 구하는 경우로 가게 되는 겁니다, 해의 개수를 구하는 경우로.
<SYNC Start=368786><P Class=KRCC>
연결시켜 볼게요. 첫 번째입니다. a, b, c, d, e, f를 더한 게 20이에요. 그러면 이거 다시 안 쓰고요, 여기 바로 갈게요. 1, 4에 5가 됐잖아요.
<SYNC Start=380206><P Class=KRCC>
a, b, c가 1, 4에 5이니까 더하면 얼마가 되니? 10이 되잖아. 그렇지? 그러면 10 넘겨주면 d, e, f를 더한 게 10이 된다는 얘기네.
<SYNC Start=391793><P Class=KRCC>
d, e, f는 뭐예요? 음 아닌 정수 순서쌍. 그렇죠? 이걸 만족하는 해의 개수를 구하는 게 문제죠. 됐나요? 그러면 이거 얼마예요?
<SYNC Start=402911><P Class=KRCC>
3H10이죠. 바로 연결시킬 수 있어요, 중복 조합으로. 따라서 66이네요. 됐어요. 그다음 두 번째입니다. 이번에는 a, b는 2, 2가 나오고 그다음에 더한 게 4가 나오는 경우죠, c의 값이.
<SYNC Start=424909><P Class=KRCC>
이 경우도 마찬가지로 정리해서 넣어 주면 2, 2 더하면 4이고 c까지 더하면 8이 되죠. 그걸 다시 넘겨주면 12가 됩니다. 맞습니다. 그래서 d, e, f를 더하면 12이다.
<SYNC Start=442118><P Class=KRCC>
d, e, f에 대한 조건은 더 이상 없기 때문에 0 이상의 정수해이다, 이렇게 가시면 되고요. 역시 3H12 이렇게 가시면 되죠. 그래서 계산만 해 주시면 되죠.
<SYNC Start=454897><P Class=KRCC>
이렇게 되니까 91이네요. 됐죠? 그다음 마지막입니다. 이번에는 a, b가 4, 1이에요. 그리고 더한 c값은 5가 되죠.
<SYNC Start=470361><P Class=KRCC>
마찬가지로 여기가 4, 1, 5가 되니까 더하면 10이 되고 넘어가면 10이 되겠죠. 그래서 d, e, f를 더하면 역시 마찬가지로 똑같이 10이 되겠죠. 이렇게.
<SYNC Start=488306><P Class=KRCC>
역시 0 이상의 정수해가 되겠죠. 3H10이니까 이 경우도 역시 마찬가지죠. 66이 되겠네요. 그래서 66, 91, 66인데요.
<SYNC Start=498770><P Class=KRCC>
이 경우는 (나) 조건에 따라서 a, b가 될 수 있는 순서쌍을 여러분이 정해서 케이스를 나눈 다음에 그 케이스에 해당되는 d, e, f를 가지고 음 아닌 정수 순서쌍의 개수를 구해 낸 것이거든요.
<SYNC Start=512491><P Class=KRCC>
그러니까 이렇게 나온 3개를, 그렇죠, 더해 주셔야죠. 따라서 66+91+66 이렇게 되니까 얘가 132에다가 223이 되나요? 맞죠?
<SYNC Start=530493><P Class=KRCC>
그래서 이 문제의 정답은 223이라고 정리하실 수 있습니다. 됐죠? 문제는 (나) 조건이 붙으면서 약간 특이하게, 좀 어렵게 느껴질 수는 있었지만
<SYNC Start=541931><P Class=KRCC>
그 뒷부분은 굉장히 평이한 중복 조합의 해의 개수 문제로 넘어갔기 때문에 (나)만 해결해서 이렇게 정수 순서쌍만 찾을 수 있다면 충분히 가능한 문제라고 생각이 드네요.
<SYNC Start=554973><P Class=KRCC>
그래서 연계 교재 3-1번 문제 풀어 봤고요. 요즘에 나오는 정수 순서쌍의 문제 같은 경우는 (가) 조건을 이렇게 방정식을 주되, (나) 조건에서 뭔가 조건을 걸어 줘요.
<SYNC Start=566715><P Class=KRCC>
그래서 (나) 조건을 좀 해결을 잘할 수 있게 주기 때문에 이런 기출이 생각보다 굉장히 많았었죠. 우리 많이 풀었었고요.
<SYNC Start=572514><P Class=KRCC>
그런 것이랑 비교해 가면서 연습을 좀 더 해 주시면 되겠습니다. 그러면 다음 문제 가 보도록 할게요. 이제 18번째 코드 함수의 개수인데요, 여기 제가 추가 코드로 말씀드리거든요.
<SYNC Start=584898><P Class=KRCC>
왜냐하면 지난번에 제가 여기까지 했어요. 왜냐하면 그때는 중복 순열을 배우면서 함수의 개수를 하면서 정리해 봤는데요, 제가 전에도 말씀드렸죠?
<SYNC Start=598198><P Class=KRCC>
함수의 개수가 요즘에 교육 과정 바뀌면서, 2015 개정 교육 과정이 되면서 평가원에서도 굉장히 자주 출제하고 있고요, 밀고 있는 주제 중에 하나예요.
<SYNC Start=608532><P Class=KRCC>
그래서 작년 수능에서도, 사실 어렵게 나오지는 않았어요. 어렵지는 않아서 다행이긴 했습니다만, 나형에서 조금 있다가 풀어 보겠지만 13번 문제인가로 나왔거든요.
<SYNC Start=618583><P Class=KRCC>
그러니까 3점 문을 닫는 문제로 나와서 그렇게 어렵지는 않았지만 어쨌든 모평에서는 좀 어려운 난이도로 문제가 나왔었기 때문에
<SYNC Start=631597><P Class=KRCC>
이게 사실 우리 시험에서도 나올 수 있다는 생각을 하고 공부하셔야 돼요. 교육 과정 바뀐 이후로는 모평에서 매번 한 번씩은 꼭 출제되었어요.
<SYNC Start=643493><P Class=KRCC>
여러분 때도 다르지 않을 것 같고요. 수능 예시 문항에서도 당연히 한 문제 나왔었고요. 그래서 그런 것들을 잘 분석해서 함수의 개수 풀어 볼 수 있도록 하셔야 됩니다.
<SYNC Start=655585><P Class=KRCC>
우선 그냥 함수의 개수라고 하면 7π4라고 해서 중복 순열을 이용했었고요. 이게 선택권을 가지고 생각하면 좀 편하다고 얘기했었는데,
<SYNC Start=664792><P Class=KRCC>
다시 복습 차원에서 한 번만 더 건드려 보면 함수의 개수는 얘가 어디로 가든 상관없으니까 7개의 선택권을 가지고 얘도 7개, 7개, 7개죠.
<SYNC Start=673967><P Class=KRCC>
그러니까 Y 입장에서 7개를 얘가 다 가져갈 수 있다는 생각을 가지고 7 곱하기 7 곱하기 7 곱하기 7 해서 7π4가 됐던 거죠.
<SYNC Start=684723><P Class=KRCC>
그다음에 일대일 함수 같은 경우는 서로 겹치게는 갈 수 없기 때문에 7개 중에 4개를 선택해서 나열만 해 주면 되는 것이었고요.
<SYNC Start=692381><P Class=KRCC>
증가나 감소함수라는 건 이런 거죠. x1하고 x2가 이런 순서를 보이면 x1하고 x2가 역시 선택한 Y값에 대해서, 함숫값에 대해서도 순서를 유지한다거나 아니면 반대의 순서로 간다거나,
<SYNC Start=704803><P Class=KRCC>
증가함수나 감소함수가 된다는 것인데요. 이때의 포인트는 뭐냐 하면 중복은 안 해서 선택해 주는데 선택만 해 주면 자기들끼리 순서는 정해진다는 뜻이에요.
<SYNC Start=714450><P Class=KRCC>
왜냐하면 큰 게 큰 걸 가져간다는 뜻이니까. 그래서 7개 중에 4개를 선택만 해 주면 돼요. 이 모든 것에서 공통점은 선택권을 Y가 가지고 있다는 것을 생각해 보셔야 돼요.
<SYNC Start=725472><P Class=KRCC>
Y 중에서 X가 가져가는 것들을 한번 생각해서 선택권을 준다고 생각하면 훨씬 더 함수의 개수 문제는 공부하시기 수월합니다.
<SYNC Start=735148><P Class=KRCC>
지금 나오는 건 뭐냐 하면 단조 증가나 단조 감소라고 표현했는데요, 이 말 자체는 교육 과정에서 중요하게 나오는 말이 아니에요. 이 말이 아니라 표현을 아셔야 돼요.
<SYNC Start=744320><P Class=KRCC>
제가 말로 쓰기 때문에 이렇게 표현했지, 실제로 표현은 등호가 들어간 거예요. x1, x2가 이렇게 크기 차이가 난다면 선택한 Y값들에 대해서도 크기 차이가 나되 같아도 된다는 거죠.
<SYNC Start=759796><P Class=KRCC>
아니면 크기 차이가 반대로 나되 같아야 된다. 이게 단조 증가이고 단조 감소인데요. 사실 단조라는 말이 어려우면 그 말 대신에 이렇게 수식으로 기억하시는 게 훨씬 더 좋기는 합니다.
<SYNC Start=770854><P Class=KRCC>
어쨌든 이 경우는 선택만 하면 자기들끼리 순서는 정해진다는 건 분명해요. 크기순으로 정렬이 되니까 키 큰 순서대로 나열이에요.
<SYNC Start=778838><P Class=KRCC>
그러니까 조합의 아이디어를 쓰는 건 맞는데, '같다'가 들어갔기 때문에 중복을 허락해서 선택해도 된다는 거예요.
<SYNC Start=784746><P Class=KRCC>
예를 들어서 이 Y에 있는 것들 중에 1을 다 선택하는 거죠. 그러면 1로 다 가는 거죠. 이것도 괜찮은 거예요. 아니면 1, 2, 3, 3 이렇게 선택하면 1, 2, 3, 3 이렇게 가면 돼요.
<SYNC Start=795684><P Class=KRCC>
무슨 말인지 아시죠? 큰 게 큰 것으로 가는 건 맞지만 중복을 허락해도 상관없다는 의미를 담고 있기 때문에 중복을 허락해서 선택만 해 주면 되는 것이고요,
<SYNC Start=807109><P Class=KRCC>
그 선택권은, 그렇죠, Y에서 가져간다는 의미로 7H4를 하시면 돼요. 이거 연결시켜서 쭉 여러분 기억하셔야 되는데,
<SYNC Start=817820><P Class=KRCC>
사실 실제 문제는 이 공식을 적용해서 바로 답이 툭 튀어나오게 하는 그런 문제는 잘 내지 않아요. 여기에서 응용해서, 활용해서 문제를 내기 때문에 이건 기본으로 까시고요,
<SYNC Start=828411><P Class=KRCC>
그 내용을 가지고 여러분이 응용하고 활용하는 연습을 좀 하셔야 돼요. 일단 그래도 기본은 알고 계셔야 되기 때문에 이 내용 기억하시고요.
<SYNC Start=836835><P Class=KRCC>
기본적으로 '선택권은 Y가 갖는다. Y 입장에서 생각한다.'라고 기억하시는 게 함수의 개수 문제는 실수가 없습니다. 생각하기도 수월하고요.
<SYNC Start=844730><P Class=KRCC>
함수의 개수 문제는 그런데요, 조금 있다가 문제에서도 보면 알겠지만 문제를 풀다 보면 수작업이 통하는 경우가 굉장히 많아요.
<SYNC Start=851416><P Class=KRCC>
그래서 웬만하면, 어지간하면 공부를 잘한다 하는 친구들도 수작업이 오히려 수월하게 느껴져서 수작업으로 많이 푸는 경우를 저도 많이 봤고요, 실제로 저도 그렇게 많이 합니다.
<SYNC Start=861564><P Class=KRCC>
그래서 제가 봤을 때 주관식으로 만약에 나온다면 수작업으로도 한번 해 보고 공식 이런 거 활용해서도 한번 해 보고 하면서
<SYNC Start=870949><P Class=KRCC>
확인을 해 보시는 게 조금 더 실수를 줄일 수 있는 방법이 될 수도 있을 것 같아요. 어쨌든 수작업이 되게 쉬울 때도 많다는 것도 좀 기억하셔야 됩니다.
<SYNC Start=879894><P Class=KRCC>
그래서 오늘은 인내심을 가지고 함수의 개수를 잘 구하는 시간이 되겠습니다. 그러면 지금부터 문제를 한번 보면서 확인해 보도록 하겠습니다. 보시죠.
<SYNC Start=891884><P Class=KRCC>
이 기출 문제는 작년 수능에 나왔던 문제인데요, 굉장히 수월하게 나왔어요. 수능 치고는 굉장히 수월했고요, 함수의 개수가 나올 거라고 다들 예상은 했지만
<SYNC Start=901422><P Class=KRCC>
그동안 뒤 번호에 많이 나왔었는데 이번 수능에서는 이렇게 어렵지 않은 난이도로 나왔죠. {1, 2, 3, 4}, X 집합을 가지고 X에서 X로 가는 함수의 개수를 구하라고 했는데요.
<SYNC Start=912685><P Class=KRCC>
f(1)에 대한 정보가 없어요. f(1)은 어디로 가든 상관이 없다는 얘기죠. 그러나 f(2), f(3), f(4) 같은 경우는 2, 3, 4가 이런 순서인데
<SYNC Start=923531><P Class=KRCC>
그때 선택한 함숫값에 있어서 순서가 유지되면서 같아도 된다는 얘기죠. 좋습니다. 방금 했던 중복 조합 바로 적용할 수 있는 문제죠.
<SYNC Start=931426><P Class=KRCC>
따라서 일단 1 같은 경우는 선택권이 다 있어요. 지금 1에 대한 제약은 없거든요. 그러니까 1을 어디로 보내는지는 4개 중에 하나를 선택해서 아무 데나 보내시면 돼요.
<SYNC Start=946821><P Class=KRCC>
그래서 아무 데나 하나 선택하시고요. 나머지 이제 2, 3, 4가 선택하는 것들은 어디로 가면 되냐 하면 1, 2, 3, 4 네 개 중에 2, 3, 4가 가져가는 세 개를 선택해서
<SYNC Start=960180><P Class=KRCC>
중복을 허락해서 선택만 해 주시면 키 큰 순서대로 나열은 된다고 얘기했죠. 그래서 이렇게. 그때마다 일어나니까 곱하기로 처리해 주시면 되겠죠. 이렇게.
<SYNC Start=974741><P Class=KRCC>
6·5·4를 3·2·1로 나누자. 20에다가 4이니까 80이 되겠죠. 그래서 이 문제의 정답은 80개야, 이렇게 정리하시면 되는 문제입니다.
<SYNC Start=984055><P Class=KRCC>
문제 자체가 굉장히 수월하게 나온 문제인데요, 개념에 충실해서 그냥 보실 수 있는 부분이긴 합니다. 그래서 이 문제 확인하면서 가셨으면 좋겠고요.
<SYNC Start=993482><P Class=KRCC>
이거 리뷰죠. 제가 개념에서 한번 해 드렸던 건데요, 그래도 한 번 더. 개념에서 워낙 기출 문제를 많이 해 드려서 웬만한 기출 문제 가져오면 거의 다 걸리긴 할 거예요.
<SYNC Start=1002143><P Class=KRCC>
그래도 중요한 기출이나 개념하고 연관된 것은 다시 한번 보실 필요는 있으니까 한 번 더 보시면 좋겠습니다. 그다음 이제 레벨 3의 2번 문제를 보면서 또 다음 문제 보도록 하겠습니다.
<SYNC Start=1014675><P Class=KRCC>
X라는 집합 {0, 1, 2, 3, 4}이고요. 이것, 중복 조합으로 뽑아만 주면 순서가 정해진다는 얘기를 하고 있는 것이고요. f의 치역의 모든 원소의 합이 6이라고 주어졌어요.
<SYNC Start=1031160><P Class=KRCC>
이게 이 문제를 어렵게 만드는 요인이네요. 합이 6이 되려면 치역을 그러면 어떻게 선택해야 돼요? 예를 들어, 감을 좀 잡아야 돼요. 이렇게 갔단 말이죠, 만약에.
<SYNC Start=1064641><P Class=KRCC>
이러면 어때요? 순서 유지했죠. 0, 1, 2가 '같다' 들어가 있으니까 2로 다 갔다면 3, 4는 얘보다는 크거나 같은 걸로 가야 되는데 4로 갔으니까 상관없죠.
<SYNC Start=1080901><P Class=KRCC>
치역의 모든 원소의 합. 이때 치역이 누구예요? 2하고 4죠. 그러면 이때 원소의 합은 뭐예요? 6 맞죠. 이런 경우 되는 거예요. 그런데 이런 케이스의 함수들이 모두 몇 개냐는 거죠.
<SYNC Start=1091699><P Class=KRCC>
여기에서 조심할 건 '선생님, 0은 2로 갔고 1도 2로 갔고 2도 2로 갔으니까 혹시 치역을 이렇게 써서 다 더하면 14 이렇게 하는 거 맞아요?' 안 되죠.
<SYNC Start=1113564><P Class=KRCC>
무슨 말이냐 하면 치역이라는 건 어쨌든 집합이기 때문에 중복해서 선택을 받으면 그거 1개로 쳐야 되는 거죠. 이해되세요?
<SYNC Start=1127406><P Class=KRCC>
그래서 이제 2, 4가 선택됐다고 한다면 이렇게 아이디어가 가는 거예요. 더해서 6이 되는 구조를 만들어 보자. 일단 숫자 구성을 중복하지 않고.
<SYNC Start=1140333><P Class=KRCC>
이해됐어요? 중복하지 않고. 왜냐하면 예를 들어 내가 6이 되는 구조를 이렇게 만들었어요. 이거 더하면 6이거든요.
<SYNC Start=1153002><P Class=KRCC>
그런데 얘는 아무 쓸모가 없어요, 여기 문제에서는. 이거 의미가 없어요. 왜냐하면 이거 치역으로 구성하면 {1, 2}이거든요.
<SYNC Start=1159268><P Class=KRCC>
그러면 이때 원소의 합은 3이에요, 치역의 원소의 합은. 그러니까 이거 해당 안 된다고요, 이렇게 구성했어도. 그러니까 이렇게 중복해서 구성하면 안 된다는 거예요.
<SYNC Start=1168004><P Class=KRCC>
대신에 이렇게 구성한 다음에 누가 1로 가고 누가 2로 가는지를 여러분이 생각해 줘야 되는 문제인 거예요, 거꾸로. 치역을 먼저 구성하고. 알겠어요?
<SYNC Start=1176947><P Class=KRCC>
그래서 얘는 어떻게 해야 되느냐. 아, 이제 아이디어를 그렇게 짜야겠구나. 합해서 6이 되는 구성을 먼저 정해 주자. 더해서 6이 되는 구성을.
<SYNC Start=1186299><P Class=KRCC>
그래서 일단 큰 수부터 가면 4+2. 그다음에, 중복은 허락하시면 안 되는 거죠. 여기는 0이 있죠. 그게 또 이 문제의 난도를 높여 주는 하나의 요인이 아닐까 싶어요.
<SYNC Start=1207163><P Class=KRCC>
이것도 된다는 거죠. 치역의 원소의 합에는 영향이 없으니까 0은 끼워 줘도 되는 거니까. 그렇죠? 그다음 4 되는 건 없으니까 이제 3으로 내려갈까요?
<SYNC Start=1219683><P Class=KRCC>
{3, 3} 하면 되지만 겹치는 안 된다고 했죠. 이렇게 되면 되겠다. 그렇지? 그리고는 없어요. 그러면 {3, 2, 1, 0}까지 끼워 주면 되겠죠.
<SYNC Start=1229850><P Class=KRCC>
이렇게 네 가지 구성하시면 되겠네요. 됐나요? 그래서 먼저 구성을 정해 주시는 거예요, 가장 먼저 할 일은. 그러고 나서 구성을 정했다면 이제 이렇게 가는 거죠.
<SYNC Start=1248784><P Class=KRCC>
이렇게 구성을 정해 놓고 여기에 적당히 가는 거예요. 다 이렇게 가도 되고요. 2하고 4에 적당히 나눠서 가도록 하는 거죠.
<SYNC Start=1260435><P Class=KRCC>
생각하는 방법은 여러 가지예요. 수작업도 돼요, 사실. 이런 거 수작업 하셔도 돼요. 이해되세요? 2 한 번, 나머지 4, 4, 4, 4.
<SYNC Start=1272458><P Class=KRCC>
왜냐하면 한 번도 안 들어가게 4로 다 몰릴 수는 없어요. 왜냐하면 그렇게 되면 치역이 1개가 되니까 안 되죠. 그러니까 2랑 4 중에 하나씩은 꼭 가야 돼요.
<SYNC Start=1281208><P Class=KRCC>
그런데 여러 번 가도 상관없는 거니까. 2 두 번에 4, 2 세 번에 4 둘, 2 네 번에 4 하나. 뭐 이렇게 해서 사실은 네 가지밖에 없다는 걸 수작업으로 해도 알아요.
<SYNC Start=1297767><P Class=KRCC>
그래서 이 문제 수작업 하셔도 돼요. 함수의 개수는 그래요, 원래. 수작업으로 해도 웬만하면 답이 나올 수 있게 문제가 거의 나와요.
<SYNC Start=1305698><P Class=KRCC>
그래서 되긴 되는데, 이것보다 경우가 많은 경우가 사실 더 많죠. 이건 굉장히 수작업으로 해도 수월하게 되는 경우인데, 3개짜리는 약간, 혹은 4개짜리는 조금….
<SYNC Start=1314401><P Class=KRCC>
4개짜리는 오히려 쉽겠네요. 3개짜리는 이것보다 경우가 많겠죠. 어쨌든 그러면 수작업 말고 그냥 계산해서 하는 것 좀 생각해 볼까? 그러면 어떻게 하면 될까?
<SYNC Start=1324224><P Class=KRCC>
이렇게 하면 어때요? 이것을 여러분 중복 조합으로 생각하는 거예요. 그래서 2하고 4로 선택하는 것에, 그러니까 무슨 말이냐 하면 2개, 2하고 4죠.
<SYNC Start=1339234><P Class=KRCC>
2하고 4 두 개를 가지고 다섯 개를 선택하는 경우를 생각하는 거예요. 대신에 선택만 하면 키 큰 순서대로 나열되기 때문에 순열이 아니라 조합으로 선택만 하시면 돼요.
<SYNC Start=1356881><P Class=KRCC>
무슨 말인지 아시겠어요? 2하고 4 중에. 그리고 중복을 허락해도 되고요. 대신에 적어도 하나는 선택을 꼭 하셔야죠. 반드시 선택은 해야 되죠, 적어도 하나는.
<SYNC Start=1373432><P Class=KRCC>
그러면 이렇게 가는 거죠. a+b를 가지고 5개를 만드는데 2가 선택되는 개수, 4가 선택되는 개수를 생각하는 거죠. 무슨 말인지 아시겠어요?
<SYNC Start=1383313><P Class=KRCC>
그런 다음에 a, b가 1 이상인 거예요. 1개 이상은 반드시 선택되게. 그러면 만약에 1, 4가 선택됐다. 그러면 a가 2이고 b가 4이거든요.
<SYNC Start=1395283><P Class=KRCC>
그러면 2 하나에 4, 4, 4, 4 갔다는 얘기를 이렇게 생각하는 거죠. 이해되시죠? 이렇게 중복 조합으로 바꿔서 생각하시면 수월하게 세실 수 있을 거예요.
<SYNC Start=1405547><P Class=KRCC>
그리고 여기 1, 1 들어가서 a'+b'=3이 되겠죠. 그러니까 2H3이죠. 그러면 4C3 해서 4가 되겠죠. 이해되나요? 그래서 4개라고 똑같이 나오는 거예요.
<SYNC Start=1422061><P Class=KRCC>
좋아요. 그러면 그다음 것도 해 볼까요? {4, 2, 0}이면요? 얘도 수작업 말고 저처럼 해 볼까요? 지금 제가 하는 것처럼? 마찬가지로 이번에는 어떻게 가시면 돼요?
<SYNC Start=1433323><P Class=KRCC>
{4, 2, 0}이니까 이런 형상은 안 되죠. 어쨌든 0, 2, 4로 하나씩은 가야 되는 거예요. 뭐 이렇게 가고 이렇게 가고 이렇게 가고 이렇게 가도 되죠. 뭐 어쨌든.
<SYNC Start=1446615><P Class=KRCC>
그러면 이번에는 뭐예요? 0, 2, 4를 가지고 5개를 선택하는데 무조건 1개 이상은 선택해야 돼요. 중복 허락해서 선택해서 좋고요. 수작업도 괜찮아요.
<SYNC Start=1458680><P Class=KRCC>
저는 시작했으니까 중복 조합으로 가 볼게요. 더해서 5개를 만드는 거예요. 순서쌍을 찾는다고 생각하고. 대신에 1 이상이 되는 거죠.
<SYNC Start=1468750><P Class=KRCC>
그러면 하나씩 넣어 놓고 시작하면 2가 되겠죠. 그래서 3H2입니다. 그래서 여섯 가지가 되는 거죠. 수작업 하셔도 되긴 돼요, 이걸 가지고.
<SYNC Start=1488521><P Class=KRCC>
기본적으로 하나씩은 다 들어가야 되는 거니까 하나씩 다 0, 2, 4가 들어갔다고 생각하고 2개씩 들어가는 게 0인 것, 2인 것, 4인 것으로 나누면 쭉 나오죠. 그렇죠?
<SYNC Start=1499320><P Class=KRCC>
어찌 됐든 그래서 이거 여섯 가지 나오고요. 그러면 {3, 2, 1}로 가는 건 어떨까요? 사실 이것도 해 보면 똑같은 거 아시겠죠? 여섯 가지겠죠.
<SYNC Start=1509621><P Class=KRCC>
왜냐하면 이게 3, 2, 1을 가지고 똑같은 걸 구성하는 거니까 또 여섯 가지인 거예요. 얘도 여섯 가지. 그다음에 {3, 2, 1, 0}을 가지고 해 보자. 이번에는 {3, 2, 1, 0}.
<SYNC Start=1526681><P Class=KRCC>
그러면 어딘가로 하나씩은 무조건 가야 돼요. 뭐 하나로는 2개 가야 되고요. 이런 식으로. 이해되시죠? 그러면 0, 1, 2, 3 네 개를 가지고 다섯 개를 선택하는 거죠, 중복을 허락해서.
<SYNC Start=1544077><P Class=KRCC>
이건 수작업이 나을 수도 있겠는데. 뭐 어쨌든 시작했으니까 중복 조합으로 할게요. 그러면 하나씩 넣어 놓고 시작하면 되죠.
<SYNC Start=1550100><P Class=KRCC>
0이 가져가는 개수, 각각의 개수를 생각한 거예요. 그러면 여기가 1이 되니까 4H1이죠. 그래서 4C1 하니까 네 가지가 되겠죠. 됐나요?
<SYNC Start=1561481><P Class=KRCC>
그래서 이들을 다 더해 주시면 되는 겁니다. 그러면 20개가 되는 거죠. 다 세도 몇 개 되지도 않고요, 사실. 20개 하시면 되는 문제입니다.
<SYNC Start=1572723><P Class=KRCC>
문제 중요해요. 좋은 문제이고요. 그래서 이렇게 잘 보시면 좋겠고요. 이게 매년 수능 특강에서도 그런 경향을 반영해서 문제를 출제하기 때문에,
<SYNC Start=1580295><P Class=KRCC>
수능 특강도 책을 쓸 때 그렇게 하기 때문에, 이 문제 같은 경우도 사실 작년에 이런 함수의 개수 문제가 좀 나올 것이라는 걸 직감하고,
<SYNC Start=1589839><P Class=KRCC>
또 평가원에서 역으로 수능 특강이나 완성을 보고 문제를 내기도 하잖아요. 그러니까 수능 특강하고 서로 연동되는 건데,
<SYNC Start=1597039><P Class=KRCC>
작년에도 사실 함수의 개수 구하는 문제가 매 단원마다 한두 문제씩은 꼭 나왔어요, 수능 특강에서도. 이게 7월 문제인데 이것은 여러분이 한번 풀어 보시고요.
<SYNC Start=1607669><P Class=KRCC>
이거 작년 7월인데요, 제가 이거 사실 리뷰라고 써 놨는데 개념에서도 제가 풀어 드렸어요. 그래서 이건 여러분이 좀 풀어 보셨으면 좋겠고요.
<SYNC Start=1617688><P Class=KRCC>
풀이 제가 손글씨로 또 다 적어 놨으니까 여러분이 해 주시면 좋겠고, 저는 이걸 한번 해 보려고요, 작년 6월 기출.
<SYNC Start=1626181><P Class=KRCC>
제가 변형을 했다고 써 놨는데 그 이유는 그때는 이게 확률로 출제되어서 변형했다고 쓴 것이고요, 내용은 다 똑같아요.
<SYNC Start=1633841><P Class=KRCC>
이 문제가 사실 연계 교재에서 작년에 연계되었던 문제예요. 수능 특강에 있던 문제예요. 아까랑 되게 비슷하죠? 조건을 2개 줬는데요, 치역의 원소의 개수를 3개라고 줬어요.
<SYNC Start=1644840><P Class=KRCC>
아까는 치역의 원소의 합이라고 줬죠. 작년에 제가 수능 특강 변형해서 여러분한테 문제를 드릴 때 원소의 합을 가지고 문제 변형해서 되게 많이 드렸었는데,
<SYNC Start=1656727><P Class=KRCC>
내신 만점 수능 특강 이런 거 할 때 이걸 변형해서 저는 냈던 것이었는데요, 어쨌든 올해는 좀 다른 각도로 문제를 실제로 이렇게 냈네요.
<SYNC Start=1668927><P Class=KRCC>
어쨌든 이것은 작년에 수능 특강 교재에서 연계된 문제였는데, 엄밀하게 말하면 이 문제가 아니었고요, 이 조건 대신에 뭐였냐 하면 작년에는 이런 것이었어요.
<SYNC Start=1679033><P Class=KRCC>
'2개의 함숫값의 합이 뭐다.' 이런 식으로. 그리고 '원소의 개수가 3이다.' 이런 문제였거든요, 작년에 수능 특강에서 나왔던 문제는.
<SYNC Start=1688578><P Class=KRCC>
그런데 연계를 하다 보면 평가원에서도 똑같이 연계를 하기가 어려워요. 왜냐하면 너무 똑같이 연계하잖아요. 그러면 기존에 수능 특강 교재에 있던 문제를
<SYNC Start=1699693><P Class=KRCC>
학원이나 다른 문제집에서 변형해서 이미 많이 쏟아 내요. 그러니까 잘못하다가는 이미 나온 기존의 다른 문제집하고 겹칠 수 있어요.
<SYNC Start=1710715><P Class=KRCC>
그렇기 때문에 수학 같은 경우는 연계 교재에서 그대로 내고 싶어도 그러기 어려운 것도 사실 많아요. 그러니까 그런 관점을 이해한다면 여기에서 약간 변형이 되더라도
<SYNC Start=1722261><P Class=KRCC>
모양새만, 모습만 다를 뿐이지, 아이디어는 똑같이 유지하려고 노력한단 말이죠, 평가원에서. 그러니까 그걸 기억하고 문제의 겉모습, 껍데기는 좀 달라 보여도
<SYNC Start=1734413><P Class=KRCC>
내면의 본질이 똑같다는 걸 여러분이 읽어 내는 연습을 하셔야 돼요. 그래서 이 문제는 엄밀히 말하면 수능 특강 고유의 문제는 이것이었고요,
<SYNC Start=1743072><P Class=KRCC>
그런데 그것을 평가원에서는 이 조건을 이렇게 변형해서 낸 거예요. '선생님, 너무 다른데요.' 안 달라요. 왜냐하면 이것도 어차피 함숫값의 합이 4가 되는 걸 수작업으로 골라서 하는 문제였고요.
<SYNC Start=1756929><P Class=KRCC>
뭐 (1, 3), (2, 2), (3, 1) 이런 식으로. 이것도 함숫값의 곱이 9 이상이 되는 걸 수작업으로 골라서 하는 아이디어예요.
<SYNC Start=1765972><P Class=KRCC>
그러니까 f(1)고 f(2)가 될 수 있는 걸 따져 보면, 큰 것부터 갈게요. (4, 4), (4, 3), 4 곱하기 3은 12 되죠? 3 곱하기 4는 12 되죠? 3 곱하기 3은 9도 되죠.
<SYNC Start=1778749><P Class=KRCC>
더 이상 안 되죠. 4 곱하기 2는 8 가면 9보다 작아지니까. 그래서 이 네 가지 수작업으로 골라내죠. 그래서 이거 케이스 나눠서 각각에 해당되는 걸
<SYNC Start=1788861><P Class=KRCC>
치역의 원소의 개수가 3인 걸로 각각을 구해내는 식으로 가는 겁니다. 그러니까 아이디어가 완전히 똑같은 문제였어요, 사실은. 그런데 껍데기를 좀 다르게 낸 거죠.
<SYNC Start=1801050><P Class=KRCC>
그래서 그런 걸 보는 눈을 좀 기르시면 '아, 수능 특강에서 어떻게 연계가 되는구나.'라는 것을 여러분이 조금 더 보실 수 있는 겁니다. 이해되시죠?
<SYNC Start=1810616><P Class=KRCC>
어쨌든 이것은 기출 문제였습니다. 해 볼까, 그러면? 이걸 가지고 이제 (나) 조건을 적용해서 치역의 원소의 개수가 3개인 것을 찾아가는 문제가 되겠습니다.
<SYNC Start=1823397><P Class=KRCC>
제가 케이스를 나눴는데요, 아무래도 이 (4, 4)나 (3, 3) 같은 경우는 똑같이 케이스를 세어도 될 것 같고요, (4, 3)이나 (3, 4) 같은 경우는 앞뒤만 바뀐 거니까
<SYNC Start=1835162><P Class=KRCC>
똑같이 케이스를 잡아서 문제 구성해서 세어도 될 것 같아요. 그래서 (f(1), f(2))가 (4, 4)가 되거나 (3, 3)이 되는 경우를 한번 해 볼게요.
<SYNC Start=1847694><P Class=KRCC>
하나만 해서 2배를 하면 될 것 같거든, (f(1), f(2))가 (4, 4)나 (3, 3)으로 가는 것. 상황이 어떤 상황이냐 하면 {1, 2, 3, 4}, {1, 2, 3, 4}. 됐지?
<SYNC Start=1863790><P Class=KRCC>
그리고 1, 2가 4, 4로 갔다고 해 보자. 그러면 이제 3, 4가 어디로 가는지를 봐야 되는 거죠. 그러면 치역의 원소의 개수가 3개라는 건 지금은 치역으로 구성된 건 4 하나밖에 없죠.
<SYNC Start=1877702><P Class=KRCC>
그러니까 무조건 이 나머지 중에 치역으로 원소를 2개 더 구성해야 돼요. 그러고 나서 그 2개가 무조건 3, 4랑 연결되어야 돼요.
<SYNC Start=1886630><P Class=KRCC>
왜냐하면 치역은 선택을 받았을 때 가치가 생기는 것이거든요. 1, 2, 3 중에 선택을 받은 게 1, 2라는 얘기잖아요, 1, 2가 치역이 된다는 건.
<SYNC Start=1894586><P Class=KRCC>
그래서 3, 4가 이렇게 선택하든 크로스로 선택하든 무조건 선택을 해야 되는 거죠. 무슨 얘기인지 아시죠? 그래서 1, 2, 3 중에 치역으로 선택하는 둘을 먼저 골라 주시고요.
<SYNC Start=1910436><P Class=KRCC>
그런 다음에 그들을 3, 4가 선택하는 방법이 2!이죠. 사실 저는 강의 노트에 3P2라고 그냥 바로 쓰긴 했어요. 어쨌든 이렇게 해 주면 3, 4가 충분히 함수를 구성할 수 있게 되는 거죠.
<SYNC Start=1928259><P Class=KRCC>
그러면 이게 6가지거든요. 그런데 문제에서는 (4, 4)와 (3, 3)으로 가는 게 역할만 바뀔 뿐이지, 똑같은 거죠. 따라서 6 곱하기 2 해서 이 경우가 12가지가 되는 겁니다.
<SYNC Start=1940806><P Class=KRCC>
여기까지 하실 수 있겠죠? 좋습니다. 이제 두 번째로 가 보도록 할게요. 두 번째는 (4, 3)이나 (3, 4)로 가는 경우를 한번 따져 보도록 하겠습니다.
<SYNC Start=1953198><P Class=KRCC>
f(1)하고 f(2)가 (3, 4)나 (4, 3)으로 가는 거예요. 이것도 역시 하나를 따진 다음에 같이 2배를 해 주시면 될 거예요. 그래서 한번 보도록 할게요.
<SYNC Start=1965854><P Class=KRCC>
그러면 이 경우는 어떻게 되는 거냐 하면, 왜 이렇게 조그맣게 그렸지? 다시 그려 드릴게요. 이렇게 되죠. 그러면 f(1)하고 f(2)가 만약에 (3, 4)로 갔다.
<SYNC Start=1984200><P Class=KRCC>
얘가 3이고 얘가 4로 갔다. 이 경우를 생각해 볼게요. 그러면 치역의 원소의 개수가 3개이니까 나머지 남은 것 중에 하나만 더 넣으면 돼요. 그렇죠?
<SYNC Start=1994075><P Class=KRCC>
그러면 치역이 3개로 구성되는 거죠. 맞습니까? 사실 이거 수작업 해도 금방 하거든요. 저 아직도 기억이 나요.
<SYNC Start=2001963><P Class=KRCC>
이 문제 풀 때 선생님들 중에도 수작업으로 푼 선생님들이 훨씬 많았어요, 사실. 왜냐하면 수작업이 굉장히 수월하거든요. 금방 하거든요.
<SYNC Start=2010818><P Class=KRCC>
그래서 수작업으로 해도 상관없어요. 아니면 공식을 활용한다는 생각으로 이렇게 하셔도 괜찮긴 하고요. 그런데 어쨌든 수작업으로 해 보시면 어렵지 않아요.
<SYNC Start=2020258><P Class=KRCC>
왜냐하면 1하고…. 아, 이거 선생님이 잘못 선택했구나. 1, 2가 가는 게 3, 4인데. 그렇지? 미안. 이거 표시를 잘못했네. 1, 2가 가는 게 3, 4잖아. 이렇게.
<SYNC Start=2032519><P Class=KRCC>
그다음에 나머지 이 둘을 선택해 줘야 되는데 3하고 4가 1, 3, 4로 가는 거지. 치역을 1, 3, 4로 구성한 거니까. 맞아요?
<SYNC Start=2041406><P Class=KRCC>
그래서 1이나 2 중에 치역을 먼저 선택하는 경우가 2C1이에요. 치역을 선택했고요. 그러고 나서 이제 가는 거죠. 3하고 4가 무조건 1한테는 가야 돼요.
<SYNC Start=2054791><P Class=KRCC>
3, 4로는 가도 그만, 안 가도 그만이거든요. 그렇지만 1한테 무조건 하나는 가야 돼요. 그래서 f(3)이 1로 가는 거예요, 무조건. 일단, 우선.
<SYNC Start=2065153><P Class=KRCC>
그러면 f(4)는 어디로 갈 수 있어요? 수작업으로 바로 가셔도 돼요. f(4)는 1로 가도 되고요, 3으로 가도 되고요, 4로 가도 돼요, 사실. 무슨 말인지 아세요?
<SYNC Start=2075509><P Class=KRCC>
1로 가도 되고요, 3으로 가도 되고요, 4로 가도 돼요, 3이 1로 갔다면. 그렇죠? 이해되시나요? 그다음에 이번에는 3이 아니라 4가 1이라는 원소로 갔을 수도 있는 거잖아요, 사실 이렇게. 그렇죠?
<SYNC Start=2094877><P Class=KRCC>
그래서 그 경우를 한번 생각해 보자고요. 그렇다면 f(4)가 1로 갔다. 그러면 그때 f(3)은 어디로 가든 상관없어요. 1, 3, 4, 세 가지 선택권을 모두 가진다는 거죠.
<SYNC Start=2105142><P Class=KRCC>
그렇게 되면 여기 3개, 여기 3개 해서 결국 6개거든요. 그렇죠? 3개, 3개. 그런데 보시면 f(3), f(4)가 둘 다 1로 간 경우는 2번 세었잖아요. 그래서 이제 하나를 빼 주시는 거죠.
<SYNC Start=2118594><P Class=KRCC>
그래서 5개. 수작업으로 이렇게 구하셔도 돼요, 하나씩 세어서. 그런데 어쨌든 그게 1, 2 중에서 1을 선택하는 경우와 2를 선택하는 경우 두 가지가 나온다고 했죠?
<SYNC Start=2130234><P Class=KRCC>
그래서 2C1을 한 것이고요, 그때마다 다섯 가지가 수작업으로 나온 것이고요. 그런데 그것은 (3, 4) 하나일 때였고요,
<SYNC Start=2136911><P Class=KRCC>
(4, 3)으로 갈 때, f(1), f(2)가 반대로 갈 때 그때도 있으니까 여기 2배를 또 해 주셔야죠. 그래서 20가지야, 이렇게 하시면 됩니다. 이해되시죠?
<SYNC Start=2145788><P Class=KRCC>
어렵지 않게 20가지 세실 수 있고요. 아니면 뭐 제가 거기에 써 놓은 대로 수작업이 아니라 약간의 공식을 활용한다는 느낌으로 가셔도 되는데 그게 결국에는 사실 이 느낌이거든요.
<SYNC Start=2157633><P Class=KRCC>
비슷한 느낌이기는 해요. 그래서 제가 거기에 써 드린 대로 가셔도 돼요. 뭐 예를 들어 20을 구하는 방법이 아까처럼 치역 둘 중에 하나를 선택하는 거죠.
<SYNC Start=2166660><P Class=KRCC>
그래서 만약에 1을 선택했다고 한다면 그때 2C1을 하시고요, 그리고 이 안에서 어떻게 생각하시면 되냐 하면 이제 생각을 하는 거죠. 1하고 3하고 4가 치역이란 말이죠.
<SYNC Start=2178445><P Class=KRCC>
그러면 그중에서 2개를 선택해서 3, 4가 선택을 하게 되는 거잖아요. 그래서 1, 3, 4 중에서 2개를 선택해서 나눠 갖는 거예요. 그다음에 이제 다 되는 게 아니죠.
<SYNC Start=2190693><P Class=KRCC>
왜냐하면 1은 무조건 누구 중에 하나는 선택해 줘야 되거든요. 그래서 1로 안 가고 3, 4로만 선택해서 가는 경우는 빼 줘야 돼요, 여기에서. 무슨 얘기인지 아세요?
<SYNC Start=2201384><P Class=KRCC>
왜냐하면 3, 4가 1로 무조건 하나는 가야 얘가 치역으로서 자격이 생기는 거니까. 3, 4가 3, 4로 가는 경우가 두 가지잖아요.
<SYNC Start=2208603><P Class=KRCC>
그래서 그 두 가지는 빼 주셔야 되고요. 그리고 이 안에서는 뭘 더해 주셔야 되냐 하면 이때는 하나로만 가는 건 사실 여기에 안 들어가 있어요.
<SYNC Start=2218187><P Class=KRCC>
왜냐하면 1, 3, 4를 가지고 2개를 다르게 구성해서 가는 것들만 지금 여기에다가 센 것이거든요. 그런데 사실 1로만 가도 상관이 없죠.
<SYNC Start=2226379><P Class=KRCC>
3, 4는 이미 선택을 받은 애들이니까. 그래서 1로만 가는 경우 하나는 또 더해 주셔도 되죠. 그래서 이런 식으로 세는 방법도 있고요. 세는 방법은 되게 다양해요.
<SYNC Start=2236447><P Class=KRCC>
그래서 여러분이 어떤 방식으로 세시든 역시 5가 나오고요, 2C1에 5이니까 10인데 여기 두 가지 케이스가 나오니까 20. 이런 식으로 또 똑같이 세어 주실 수 있습니다.
<SYNC Start=2250266><P Class=KRCC>
여러분만의 방법으로 좀 인내심을 가지고 세어 보실 필요가 있죠. 어쨌든 그렇게 되면 12가지 앞에서 구한 것에 20가지를 더해서 정답은 32가지가 되는 것이거든요.
<SYNC Start=2260220><P Class=KRCC>
그래서 이 문제의 정답을 이렇게 구해 주시면 되겠습니다. 하실 수 있겠죠? 그래서 작년 연계 교재 문제에서 변형해서 냈던 수능 특강 문제를 보면서 또 한번 우리가 얘기를 해 봤고요.
<SYNC Start=2274654><P Class=KRCC>
마지막은 이거 리뷰인데요. 지금 계속 리뷰 문제가 나오고 있는데요, 개념에서 한번 했던 문제들이에요. 왜냐하면 제가 워낙 만랩 확통 개념에서 기출을 많이 다루어 드렸어요.
<SYNC Start=2285905><P Class=KRCC>
그래서 어지간한 기출은 거의 겹칠 겁니다. 그렇지만 여러분 제가 수능 특강에서 문제 연결해서 해 드릴 때 그 타이밍이라는 게 있잖아요.
<SYNC Start=2294209><P Class=KRCC>
'이런 아이디어와 연결해서 이 기출을 보면 좋겠어.'라고 제시하는 게 또 의미가 있기 때문에 다시 넣어서 여러분에게 또 제시하고 있는 거예요.
<SYNC Start=2303027><P Class=KRCC>
그러니까 나름대로 의미가 있으니까 같이 또 풀어 보시면 좋겠습니다, 엮어서. 이것은 대수능 예시 문항에 나왔던 평가원 문항입니다.
<SYNC Start=2311027><P Class=KRCC>
수작업을 통해서 이 문제는 이 부등식을 먼저 해결해 주셔야 될 거예요. 무슨 말이냐 하면 {1, 2, 3, 4}에서 {1, 2, 3, 4}로 가는 함수의 개수를 구하는 문제거든요.
<SYNC Start=2320938><P Class=KRCC>
그렇다면 f(4)가 열쇠, 키를 쥐고 있어요. 그래서 f(4)가 가지는 값에 따라서 모든 게 다 달라질 겁니다. f(4)가 4로 갈 때, f(4)가 3으로 갈 때 이렇게 결과들을 다 정리해 보시는 거예요.
<SYNC Start=2335542><P Class=KRCC>
f(4)가 2로 갈 때, 그다음 마지막으로 f(4)가 1로 갈 때. 이렇게 경우들을 잘 나눠 보도록 할게요. 그러면 f(4)가 4로 간다고 한다면 f(1)+f(2)+f(3)은 어떻게 가는 거냐 하면
<SYNC Start=2352870><P Class=KRCC>
여기가 4이면 4 곱하기 3은 12가 되거든요. 그렇죠? 그래서 12보다 크거나 같아지는 상황이에요. 그런데 여기에서 또 전제 조건이 뭐냐 하면
<SYNC Start=2361506><P Class=KRCC>
k=1, 2, 3일 때 f(1), f(2), f(3)을 얘기하는데 f(4)랑은 달라야 된다는 얘기죠. 그러니까 1, 2, 3의 값은 누구는 아니라고 하는 거냐 하면 4는 아니라는 거예요, 전부 다.
<SYNC Start=2373331><P Class=KRCC>
그러면 4가 아닌 값이니까 1, 2, 3 중에 얘네들은 선택권을 가지겠죠. 1, 2, 3을 가지고 구성하는데 12 이상이 되도록 구성해야 돼요.
<SYNC Start=2384159><P Class=KRCC>
그러면 아무리 수치가 커져도 이 구성이거든요. 그런데 3, 3, 3은 아무리 더해도 9밖에 안 되니까 12 이상이 될 수가 없어요. 그래서 얘는 안 돼요.
<SYNC Start=2395748><P Class=KRCC>
이걸 만족하는 함수의 개수를 구할 수 없는 거죠. 두 번째로 갈게요. 이번에는 f(1)+f(2)+f(3)이 3 곱하기 3은 9 이상이 되면 돼요.
<SYNC Start=2411204><P Class=KRCC>
그렇게 되면 결과적으로 f(1), f(2), f(3)은 역시 3은 아니라는 거예요. 지금 3이랑 같지는 않아야 되는 거니까. 그렇죠? f(4)의 값이랑 달라야 되니까.
<SYNC Start=2422467><P Class=KRCC>
그러면 9 이상이 되도록 순서쌍을 지금 구성해야 돼요. 그러면 나올 수 있는 것 한번 생각해 볼까요? 일단 4는 다 되거든요.
<SYNC Start=2430172><P Class=KRCC>
그러면 4, 4, 4 일단 될 것이고요, 4, 4, 3 될 것이고요, 그다음에 4 하나 들어가고 3, 3은 어때요? 이거 되지. 아, 3 안 된다, 참. 미안해. 3 안 되는데.
<SYNC Start=2447079><P Class=KRCC>
'뭐 하는 거야?' 약간 이랬겠죠, 속으로? 미안합니다. 2는 되죠. 4, 4, 2. 그렇죠? 그리고 4, 2, 2는 되나요? 여기에서부터 안 되네. 몇 개 없네. 경우 딱 이것밖에 없는데.
<SYNC Start=2461714><P Class=KRCC>
아, 4, 4, 1 뺐다. 쏘리. (4, 4, 2), (4, 4, 1). 여기 낮춰야지, 먼저. 그러면 딱 9잖아. 그다음에 이것부터 낮아지면 4, 2로 가는데 아무리 커도 이것이니까 안 되죠.
<SYNC Start=2472085><P Class=KRCC>
그래서 이게 다네요. 이렇게. 그러면 이때 4, 4, 4로 가는 건 어차피 한 가지이고요. 이때 4, 4, 2로 가는 건 누가 2를 가져가느냐. 같은 것이 있는 순열로 생각하셔도 되고.
<SYNC Start=2489586><P Class=KRCC>
3!, 2!. 세 가지죠. 그다음에 이때는 누가 1을 가져가느냐. 마찬가지죠. 세 가지. 그래서 이거 다 더하면 일곱 가지가 되겠죠. 이렇게 수작업으로 가 주시면 되는 겁니다.
<SYNC Start=2503382><P Class=KRCC>
이제 세 번째 볼게요. f(4)=2이다. 그러면 f(1), f(2), f(3)이라고 하면 이때는 2 곱하기 3은 6, 6 이상이 되어야 되네요. 경우가 많을 것 같다. 얘는 2만 아니면 되거든.
<SYNC Start=2519243><P Class=KRCC>
아, 너무 많은데. 왜냐하면 4나 3이 들어가는 건 어지간하면 다 될 것 같거든요, 6 이상이 되는 것이면. 그러면 차라리 전체에서 빼는 게 낫겠는데요, 이때는.
<SYNC Start=2529977><P Class=KRCC>
전체에서 누구만 빼면 되냐 하면 여기 2는 어차피 안 되니까, 최대한 1로 구성하면 얘가 숫자가 작아지니까 1, 1, 1은 당연히 안 될 것이고요,
<SYNC Start=2542824><P Class=KRCC>
그다음에 1 두 개 들어가고 여기 2는 안 되니까 3이 들어가는 거 어때요? 안 되죠. 이것도 빼면 되고요. 뺄 거예요, 전체에서.
<SYNC Start=2551044><P Class=KRCC>
그다음에 1 두 개 들어가고 4 들어가는 것 얘는 되죠, 6 이상이니까. 이것은 뺄 필요가 없어요. 그러면 1 하나 들어가고 그다음부터는 안 되네요.
<SYNC Start=2561120><P Class=KRCC>
그러면 이 2개밖에 뺄 게 없네, 두 가지 케이스밖에. 그렇지? 전체에서. 이게 훨씬 수월할 거예요. 일일이 세는 것보다, 이 경우는. 그렇지?
<SYNC Start=2572704><P Class=KRCC>
그런데 이게 몇 개예요, 그러면? 이거랑 이게? 1, 1, 1은 어차피 1개예요. 그다음에 1, 1, 3은 역시 같은 것이 있는 순열,
<SYNC Start=2578960><P Class=KRCC>
얘가 누구 선택하느냐에 따라 달라지는 거니까 3!을 2!로 나누니까 이렇게 세 가지죠. 그래서 네 가지예요. 그러니까 전체에서 네 가지만 뺀다고 생각하시면 되겠네요.
<SYNC Start=2589338><P Class=KRCC>
전체는 뭘까요? f(4)는 고정되었고요, f(1), f(2), f(3)을 2만 빼고 다른 걸로 다 보낼 수 있는 상황이에요. 얘는 고정됐지만 얘네 셋은 2 빼고 나머지 3개로 다 갈 수 있어요.
<SYNC Start=2609202><P Class=KRCC>
그러니까 Y의 선택권을 생각하면 세 가지를 여기에서 선택할 수 있죠. 그다음에 여기 세 가지, 여기도 세 가지. 3의 3제곱, 27이 되겠죠. 그래서 얘가 27입니다.
<SYNC Start=2620793><P Class=KRCC>
그래서 27에서 4를 빼니까 23가지. 하실 수 있겠죠? 그다음 이제 f(1)+f(2)+f(3)이 어떻게 되나요? 이번에는 3 이상이네요. 다 되겠는데.
<SYNC Start=2640082><P Class=KRCC>
아무리 작아도 1, 1, 1이잖아. 그런데 1은 또 안 된다며. 그러면 아무리 작아도 2, 2, 2이거든. 그렇지? 그러면 당연히 3 이상이죠.
<SYNC Start=2648659><P Class=KRCC>
그래서 이때는 3의 세제곱이 다 되는 거죠. 27가지. 1 빼고 나머지로 구성하는 함수가 다 된다는 거니까. 그러면 이제 정리해 주면 7가지, 23가지, 27가지 하니까 57가지가 되겠네요.
<SYNC Start=2664013><P Class=KRCC>
그래서 이 문제의 정답은 57이라고 쓰시면 되겠습니다. 하실 수 있겠죠? 아마 여러분 제가 봤을 때 개념부터 따라오신 분들이나 기출 문제를 많이 풀었던 분들은
<SYNC Start=2679280><P Class=KRCC>
이 문제가 너무 익숙하실 수도 있어요, 사실. 그런데 그렇더라도 잊어버릴 만하면 풀어 볼 만한, 경우를 세면서 좀 꼼꼼하게 따져 볼 만한 얘기이고요.
<SYNC Start=2688884><P Class=KRCC>
그리고 중복 순열을 이용하는 기본적인 함수의 개수 구하는 아이디어가 많이 들어가 있어요. 그래서 꼭 여러 번 풀어 보실 만한 좋은 문제 중에 하나입니다.
<SYNC Start=2699773><P Class=KRCC>
여기까지 해서 오늘은 마무리하도록 하겠습니다. 함수의 개수에 관해서 제가 드렸던 코드 있죠? 그 코드 확인을 다시 좀 더 해 보셨으면 좋겠습니다.
<SYNC Start=2712351><P Class=KRCC>
함수의 개수를 구하는 방법에 있어서는 가장 기본적인 공식들도 중요하지만, 그 안에서는 뭐다? 수작업이 생각보다 많이 쓰인다.
<SYNC Start=2721808><P Class=KRCC>
Y를 기준으로 생각하면서 수작업을 해 보시면 함수의 개수를 푸는 것을 조금은 융통성 있게 하실 수 있을 겁니다.
<SYNC Start=2731351><P Class=KRCC>
오늘도 고생 많으셨고요, 오늘 코드 정리해서 마지막에 올려 주시고 복습도 잘하시기 바랍니다. 우리는 다음 시간에 뵙도록 할게요.
<SYNC Start=2739176><P Class=KRCC>
 
</BODY>
</SAMI>
