<SAMI>
<HEAD>
<TITLE>(주)기록법인상생 자막 2019</TITLE>
<STYLE TYPE="text/css">
<!--
P { margin-left:8pt; margin-right:8pt; margin-bottom:2pt;
    margin-top:2pt; font-size:12pt; text-align:left;
    font-family:굴림, Arial; font-weight:normal; color:white;
    background-color:#405A8D; }
.KRCC { Name:한국어; lang:ko-KR; SAMIType:CC; }
#STDPrn { Name:Standard Print; }
#LargePrn { Name:Large Print; font-size:20pt; }
#SmallPrn { Name:Small Print; font-size:10pt; }
-->
</STYLE>
</HEAD>
<BODY>
<SYNC Start=10145><P Class=KRCC>
반갑습니다. 내신만점 수능특강 확률과 통계 강의에 오셨고요. 저는 체인지 수학 최은진입니다. 오늘 이 두 번째 시간입니다.
<SYNC Start=19346><P Class=KRCC>
이렇게 한번 시작을 하면 어떻게든 하게 되어 있다. 제가 항상 하는 지론이거든요. 강의 올라가면서 아마 지금 아직은 아니겠죠. 수강후기도 아직은 아닐 겁니다.
<SYNC Start=33554><P Class=KRCC>
제가 외로운 강의녹화를 하고 있는데요. 왜냐하면 이번 강의는 PD님하고 잘 얘기를 해서 완강을 한 다음에 올려보자.
<SYNC Start=42063><P Class=KRCC>
그래서 여러분들이 내신 대비를 압축적으로 할 수 있게 도와주자. 혹은 수능특강을 좀 압축적으로 빠른 시간 내에 학습할 수 있게 좀 빨리 완강을 해서 올려주자.
<SYNC Start=54356><P Class=KRCC>
이렇게 계획을 세워서 아마 완강한 상태의 강의를 여러분이 보게 될 겁니다. 그래서 제가 지금 찍고 있는 이 순간에는 여러분이 수강후기를 전혀 달지 않는 그런 상황입니다.
<SYNC Start=68344><P Class=KRCC>
그래서 이제 제가 필요에 따라서는 작년 수강후기나 이런 것들을 참고해서 여러분께 좀 안내를 드리거나 해드릴 말씀이 있으면 그런 것을 소개하는 시간을 가질 거예요.
<SYNC Start=79962><P Class=KRCC>
그렇게 참고로 알아두시면 될 거예요. 그래서 아마 장단점이 있을 겁니다. 완강을 한 다음에 올리는 것과 하면서 올라가는 거랑은 좀 다를 텐데요.
<SYNC Start=91403><P Class=KRCC>
제 개인적인 생각은 이렇게 강의가 짧으면 아마 여러분이 완강을 한 상태로 올라갔을 때 훨씬 좀 빨리 끝내야지 하는 생각이 들더라고요, 든다고 하더라고요. 친구들한테 물어보면.
<SYNC Start=102289><P Class=KRCC>
그런데 반면에 강의 호흡이 좀 길면, 강의수가 많고 이러면 선생님이 이미 완강을 하고 딱 올려버리면 ‘선생님, 저것 언제 다 듣죠? 이런 생각을 하는 친구도 있다고 하더라고요.
<SYNC Start=115981><P Class=KRCC>
물론 다 완강이 된 상태의 강의만 선호하는 친구들도 있고요. 그래서 그것은 개인차가 있지만 어쨌든 그런 강의라는 것 오늘 강조를 해드리고 싶고요.
<SYNC Start=126277><P Class=KRCC>
오늘 제가 여러분에게 드리고 싶은 수강후기는 바로 이겁니다. 소개해 드릴 얘기는요. 작아서 잘 안보이죠. 조금 주요 얘기들만 보시면요.
<SYNC Start=136183><P Class=KRCC>
작년에 내신만점 수능특강 선생님이 진행했잖아요. 그때 한 친구가 올려줬던 수강후기입니다. 새벽 2시 반부터 7시까지 모르는 문제랑 약한 개념을 열심히 듣고 계속 듣고 했더니
<SYNC Start=148389><P Class=KRCC>
진짜 이해 안 가는 것도 다 이해가 갔고 시험 문제 풀 때도 엄청 도움이 많이 됐어요. 이런 후기를 올려줬어요.
<SYNC Start=154555><P Class=KRCC>
그래서 사실 내신만점 수능특강이라는 게 어쨌든 학교 시험을 대비하기 위한 강의도 맞지만요. 수능특강 확률과 통계를 단기간에 정리하고 싶은 친구들이 들어도 괜찮은 강의예요.
<SYNC Start=169935><P Class=KRCC>
그래서 이 강의는 아마 여러분이 시간 대비했을 때 내가 들이는 시간에 대비했을 때 효율을 최대로 뽑아낼 수 있는 그런 강의가 아닐까 싶습니다.
<SYNC Start=180948><P Class=KRCC>
왜냐하면 제가 1강, 4강, 7강 이렇게 각 단원을 시작하는 날에는 개념 설명을 좀 압축적으로 한판으로 해서 정리를 해드리고요.
<SYNC Start=191573><P Class=KRCC>
그리고 두 번째, 다섯 번째, 여덟 번째 이렇게 그다음 시간에는 그 단원에 해당되는 수능특강 문제들 중에서 레벨 2, 3 문제들 위주로
<SYNC Start=203296><P Class=KRCC>
여러분들이 질문할 만한, 찾아볼만한 그러나 시험에 잘 나올만한 중요한 문제들 위주로 제가 문제를 선별을 해서 풀어드리고 있거든요.
<SYNC Start=213345><P Class=KRCC>
그리고 이제 마지막 시간에, 제가 다음 시간에 얘기해 드리겠지만 3강, 6강, 9강은 변형문제나 혹은 시험 예상 문제 이런 것들을 제가 풀어드리는 상황이라
<SYNC Start=223369><P Class=KRCC>
아마 여러분이 그 강의의 특색에 맞게 잘 이용을 하시면 이 20강, 21강밖에 안 되는 강의지만 여러분한테는 엄청난 도움이 될 것이라고 제가 확신합니다.
<SYNC Start=234373><P Class=KRCC>
그래서 여러분의 선배들도 강의를 듣고 이렇게 수강후기로 올려준 것처럼 여러분도 아마 도움이 될 것이라고 생각을 해서 이렇게 가져와봤고요. 그래서 믿고 그냥 따라 오시면 됩니다.
<SYNC Start=246481><P Class=KRCC>
그럼 아마 여러분들이 내신이든 수능이든 단기간 안에 확실하게 결과가 나올 거니까요. 그냥 믿고 21강 따라 오세요.
<SYNC Start=252873><P Class=KRCC>
대신에 제가 해드리는 그 학습지를 미리 뽑아서 여러분이 한번 풀어보고 그리고 나서 강의 잘 이용해서 여러분 것으로 만들고 복습하는 연습 이런 것들이 좀 중요할 겁니다.
<SYNC Start=263503><P Class=KRCC>
그러면 오늘 수업 지금부터 시작해 보도록 하겠습니다.
<SYNC Start=267042><P Class=KRCC>
&nbsp;
<SYNC Start=268603><P Class=KRCC>
저랑은 레벨 1문제 지난 시간에 원래 하려고 했던 건데 제가 못하고 와서 이 문제까지 하고 레벨 2로 넘어갈게요.
<SYNC Start=275709><P Class=KRCC>
그림과 같이 직사각형 모양으로 연결된 도로망이 있고요. 이 도로망을 따라서 A부터 B까지 최단 거리로 가는 경우의 수는? 이런 문제에는 내신에서 정말 많이 나올 수 있다고 말씀을 드렸고요.
<SYNC Start=286623><P Class=KRCC>
A에서 B까지 가는데 일단은 여기에 장애물, 어떻게 보면 지날 수 없는 공간이 있다는 것이죠. 그러니까 A에서 B까지 갈 때 여기가 이렇게 막혀있다고 생각하고 구하실 수가 없는 거죠.
<SYNC Start=301795><P Class=KRCC>
그래서 이것은 방법을 몇 개 생각해 볼 수는 있을 것 같아요. 첫 번째 방법은 이걸 다시 막혀있다고 생각하고 전체의 경우의 수를 구한 다음에 여기 지나는 방법을 빼주면 되잖아요.
<SYNC Start=311426><P Class=KRCC>
그런 방법이 있을 것 같고요. 그래서 그게 여사건을 이용한 방법이죠. 전체의 방법의 수는 하나, 둘, 셋, 넷, 다섯, 하나, 둘, 셋 하니까 8!이잖아요.
<SYNC Start=325035><P Class=KRCC>
이렇게 가는 방법을 x라고 하고 위로 하는 방법을 y라고 하면 x 5개, y 3개니까 8!이고 그들을 나열하는 거니까 같은 것이 있는 순열로 생각해서 이렇게 하시면 되죠.
<SYNC Start=337173><P Class=KRCC>
그런데 여기 지나는 방법 있죠. 그럼 이렇게 가는 방법이 3!, 2! 그다음에 여기서부터 여기까지 가는 방법이 5!에 3!, 2!이죠.
<SYNC Start=347624><P Class=KRCC>
&nbsp;
<SYNC Start=350431><P Class=KRCC>
이렇게 가면서 동시에 이 점을 거쳐서 여기까지 가는 방법 그것을 빼줘야 되는 거죠. 그러니까 여기는 곱해야 되요. 그렇겠죠. 이렇게 가는 방법이 여사건으로 이 문제를 접근하는 방법입니다.
<SYNC Start=363037><P Class=KRCC>
&nbsp;
<SYNC Start=365860><P Class=KRCC>
다시 한번 말하지만 장애물이 있거나 지나면 안 되는 점이 있다면 이점을 지나는 경우를 전체에서 빼는 여사건의 방법으로 푸시는 방법이 있고요. 아니면 또 다른 방법입니다.
<SYNC Start=378749><P Class=KRCC>
길잡이 점을 만들어주자. 길잡이 점을 잡아주자. A에서 B까지 갈 때 반드시 안 거치고는 안 되는, 못 가는 점. 보통은 AB의 대각선을 잡거든요.
<SYNC Start=394114><P Class=KRCC>
&nbsp;
<SYNC Start=396172><P Class=KRCC>
그럼 이제 여기는 어차피 이제 없애면 되시고 3개의 점을 지나지 않고는 A에서 B로 넘어갈 수가 없죠. 이런 경우에 가는 방법이 이 경우에는 한 가지 방법.
<SYNC Start=406938><P Class=KRCC>
이게 길잡이 점을 잡는 방법이에요. 길잡이 점 잡기. 그다음에 A에서 이 점 지나는 것 여기를 p, q, r이라고 하면 p 지나는 방법 그다음에 q 지나는 방법 그다음에 r 지나는 방법 이렇게 구하자고요.
<SYNC Start=425083><P Class=KRCC>
그럼 q 지나는 방법은 이렇게 가는 거니까 3!, 2!이죠. 그러면서 동시에 q에서 B까지 가는 거니까 5!, 4!이죠.
<SYNC Start=433746><P Class=KRCC>
&nbsp;
<SYNC Start=436599><P Class=KRCC>
그다음에 r 지나는 방법은 여기 한 가지 방법으로 왔다가 r에서 B까지 가니까 5!, 3!, 2!이죠. 그리고 얘들끼리를 또 더하고 해서 이 세 가지로 나눠서 경우의 수를 구한 다음에
<SYNC Start=457234><P Class=KRCC>
그걸 다 더해 주면 또 여사건으로 구한 방법이나 이것이나 똑같은 개수가 나올 겁니다. 마지막으로 이런 방법이 있죠. 일일이 센다.
<SYNC Start=472549><P Class=KRCC>
&nbsp;
<SYNC Start=475970><P Class=KRCC>
‘일일이 센다.’의 법칙을 따른다면 A에서 시작을 하는 거죠. 한 가지, 한 가지. 이렇게 오는 것 두 가지죠. 이렇게 올라가면 한 가지고요. 여기 오는 방법이 이렇게 오니까  세 가지예요.
<SYNC Start=487229><P Class=KRCC>
여기 오는 게 한 가지 이렇게 오는 게 네 가지. 이렇게 오는 건 세 가지니까 여기서 같이 만나는 건 일곱 가지죠.
<SYNC Start=496953><P Class=KRCC>
여기 오는 건 역시 한 가지, 이렇게 오는 것 한 가지, 여기 오는 것 다시 한 가지 이렇게 오는 것 두 가지. 여기 오는 것 다시 세 가지고요.
<SYNC Start=506299><P Class=KRCC>
그런데 여기서 한 가지가 왔으니까 합치면 네 가지겠네요. 그럼 이렇게 오는 것 이렇게 이렇게 모여드니까 11 가지죠.
<SYNC Start=512547><P Class=KRCC>
그다음에 여기는 다시 한 가지고요. 이렇게 모여드는 것 세 가지죠. 그리고 이렇게 모여드는 것 여섯 가지고요.
<SYNC Start=519128><P Class=KRCC>
그다음에 이렇게 모여드는 것 아홉 가지고요. 이제 집중하세요. 끝났어요. 이렇게 이렇게 모여드는 것 17 가지고요. 맞습니까?
<SYNC Start=528182><P Class=KRCC>
여기랑 여기랑 모여드는 방법은 26 가지. 그래서 이 문제의 정답은 26 가지라고 하셔도 됩니다. 계산해 보시면 모두 다 26 가지가 나올 것이고요.
<SYNC Start=540395><P Class=KRCC>
그래서 세 가지 방법을 제가 해드렸는데요. 이 한 문제만으로도 최단 거리 길 찾기 문제는 사실 끝이에요.
<SYNC Start=549840><P Class=KRCC>
이정도만 하면 어지간한 문제에 나오는 아이디어를 제가 다 설명한 것이고요. 문제 수준이 아주 높지는 않지만 문제가 매우 연습하기에 좋은 문제입니다.
<SYNC Start=558156><P Class=KRCC>
그래서 이 문제를 가지고 다시 한 번 제가 드렸던 내용으로 3가지 방법으로 연습을 해보시면서 이런 문제가 나왔다 하면 나랑 제일 잘 맞는 방법을 선택해서 쓰시면 되고요.
<SYNC Start=569061><P Class=KRCC>
풀이 과정을 물어보는 문제가 아니라면 대부분은 제가 마지막에 했던 방법이 ‘일일이 센다.’의 법칙으로 가시는 게 시간 대비 가장 정확하게 구해낼 수 있는 방법이 사실은 맞긴 맞아요.
<SYNC Start=582376><P Class=KRCC>
그래서 과정을 요구하는 문제다 그럼 제가 얘기했던 첫 번째, 두 번째 풀이를 이용을 하시고요. 결과만 필요하다 그러면 일일이 세면서 가시고요.
<SYNC Start=592192><P Class=KRCC>
시간이 좀 있다 그러면 한 가지 방법으로 먼저 풀어보시고 첫 번째, 두 번째 방법으로 뭐든 마지막에 ‘일일이 센다.’로 점검하시고 검토하시고 맞는지 그렇게 가시면 되겠습니다.
<SYNC Start=603620><P Class=KRCC>
그러면 다음 문제로 넘어가도록 하겠습니다. 레벨 2로 넘어가시고요. 이제 레벨 2의 1번 문제로 가겠습니다. 12쪽입니다.
<SYNC Start=613417><P Class=KRCC>
&nbsp;
<SYNC Start=614620><P Class=KRCC>
그림과 같이 1부터 8까지의 자연수가 하나씩 적혀있는 8개의 공이 있습니다. 그런데 이 공을 일정한 간격을 두고 원형에다 나열을 하고 싶대요.
<SYNC Start=623078><P Class=KRCC>
대신에 마주보는 두 공에 적힌 수가 서로소여야 된대요. 보시면요. 지금 8개의 공을 여기 다가 배열을 하는 거거든요. 원형이니까 이제 이런 모양이 되겠죠.
<SYNC Start=636770><P Class=KRCC>
이 상황에서 제가 하고 싶은 게 뭐냐 하면 마주보는 공에 적힌 수는 모두 서로소가 돼야 된대요. 그러면 서로소라는 것은 서로 공통된 약수가 1밖에 없는 것이잖아요.
<SYNC Start=648631><P Class=KRCC>
예를 들어서 2하고 5다. 이런 건 괜찮은데 2하고 4 이러면 공통된 약수 1 아니고도 2가 또 생기니까 안 되죠.
<SYNC Start=655718><P Class=KRCC>
그러니까 서로 공통된 약수가 1밖에 없는 두 수의 관계가 서로소인 거거든요. 그럼 이중에 약수를 제일 다양하게 다각도로 가지고 있는,
<SYNC Start=667093><P Class=KRCC>
그러니까 서로소가 아닌 수들이 제일 많이 있는 수가 누굴까요? 6이죠. 제일 주의해야 되는 수예요. 그래서 저는 6을 먼저 해결하려고요.
<SYNC Start=678414><P Class=KRCC>
&nbsp;
<SYNC Start=680723><P Class=KRCC>
왜냐하면 6은 누구랑만 서로소냐 하면 1, 5 ,7 하고만 서로소예요. 그러니까 6하고 마주볼 수 있는 것은 이 셋밖에 안 되거든요. 무슨 말인지 이해되시죠?
<SYNC Start=694664><P Class=KRCC>
8보다도 6이 좀 더 문제가 있어요. 왜냐하면 6은 3까지도 같이 서로소가 안 되는 상황이잖아요. 3으로 나눠지니까.
<SYNC Start=702129><P Class=KRCC>
그래서 8보다도 6이 조금 더 어려운 상황이라서 6을 먼저 제가 배열을 할 거예요. 그러면 6을 먼저 고정시키세요.
<SYNC Start=710467><P Class=KRCC>
6을 고정시키면 사실은 원순열이니까 고정시키는 데는 경우의 수가 들지는 않죠. 그런 다음에 6이 고정이 되고 나면 마주보는 위치에는 이 셋 중의 하나가 오는 거니까
<SYNC Start=723781><P Class=KRCC>
3C1이라고 해서 계산하시면 이 안에 여기 1 이런 것 아무거나 하나 썼다고 생각을 해봅시다. 그러면 일단 6하고 마주보는 것은 고정을 시켜 놨어요. 여기까지 됐죠.
<SYNC Start=736272><P Class=KRCC>
그리고 이제부터는 누군가의 자리가 고정됐기 때문에 더 이상 원순열은 아닙니다. 좋습니다. 그러면 시작해 볼게요.
<SYNC Start=744536><P Class=KRCC>
두 번째 이제 서로서로 약수 배수 관계에 있는 2,4,6,8 이 3개를 좀 생각해 볼게요. 얘네끼리는 서로 마주볼 수가 없죠. 그래요? 안 그래요?
<SYNC Start=759786><P Class=KRCC>
그다음에 요주의 인물들인 거죠. 2, 4, 8은 서로서로 마주볼 수가 없는 거죠. 그러니까 이들은 어떻게 와야 되냐면 남은 자리가 6자리인데 만약에 여기 2가 오면 4는 여기 못 오고요.
<SYNC Start=770403><P Class=KRCC>
그렇다면 만약에 여기 4가 오면 8은 여기 못 오고요. 그렇다면 8은 여기나 여기 중에 하나 오고요. 이런 원리인 거예요.
<SYNC Start=777080><P Class=KRCC>
그러니까 2, 4, 8 중에 하나가 올 수 있는 자리를 6개 중에 선택을 먼저 해 주면 남은 자리는 몇 개가 돼요? 자동으로 이 앞자리는 못 오니까 남은 자리가 4개가 되거든요. 4가 올 수 있는 자리가.
<SYNC Start=793419><P Class=KRCC>
그럼 그중에 또 1개를 선택하면 남은 자리는 또 2개가 되는 거죠. 앞자리 못 오니까. 또 2개 중의 하나에 8를 앉히는 거죠. 이렇게 해서 2, 4, 8까지 앉혀요.
<SYNC Start=803760><P Class=KRCC>
뭐 8이 꼭 여기가 아닐 수도 있어요. 이 앞자리 일수도 있고요. 어쨌든 그러면 서로소인 것들끼리만 마주볼 수 있는 세팅이 된 거예요. 이제. 그럼 이제 어떻게 하면 돼요? 그렇죠.
<SYNC Start=817203><P Class=KRCC>
이 자리랑 이 자리랑 이 자리가 비었거든요. 이 자리에 남은 것들을 배치를 시키면 되죠. 지금 남은 것들이 누구냐면 3, 5, 7 이렇게 빠졌죠.
<SYNC Start=832413><P Class=KRCC>
3, 5, 7은 어떻게 오든 상관이 없죠. 그런데다가 이미 누군가의 자리가 고정이 되어 있기 때문에 이때는 직순열로 3!로 하셔야죠.
<SYNC Start=841668><P Class=KRCC>
그래서 3C1, 그다음에 여기 있는 이 식, 그다음에 3!을 모조리 곱해주시면 답이에요. 1, 2, 3번에 나온 것들을 다 곱하시면 되죠.
<SYNC Start=850370><P Class=KRCC>
&nbsp;
<SYNC Start=852788><P Class=KRCC>
이렇게 해서 답을 구해주시면 제가 계산까지는 안 할 게요. 864예요. 제가 학습지를 다 올려드렸거든요. 손글씨까지 그러니까 계산은 여러분이 하십니다. 알겠죠.
<SYNC Start=862385><P Class=KRCC>
그래서 이렇게 계산해서 정답처리 하실 수 있고요. 이 문제가 1번 문제였습니다. 문제 괜찮습니다. 다음 문제로 가볼게요. 비슷한 내용의 원순열 문제인데요.
<SYNC Start=872876><P Class=KRCC>
그림과 같이 정육각형에서 가장 긴 대각선을 3개를 그리고 정육각형의 각 꼭짓점과 긴 대각선의 중점에, 가운데 점에 각각 중심이 있고 반지름의 길이가 같은 7개의 원을 그리더라.
<SYNC Start=886299><P Class=KRCC>
&nbsp;
<SYNC Start=888816><P Class=KRCC>
1부터 7까지의 자연수를 원에다가 하나씩 적을 때 적은 수의 합이, 이게 포인트네요. 모두 다 10 이하가 되고 싶대요.
<SYNC Start=898890><P Class=KRCC>
1부터 7까지 중에 적은 두 수의 합이 10 이하가 된다는 것은 되게 많거든요. 그러니까 두 수의 합이 10보다 커지는 것들을 한번 생각해 볼까?
<SYNC Start=913434><P Class=KRCC>
왜냐하면 그들끼리는 두 원에 적은 수의 합이 모두 10 이하가 된다는 거니까. 이웃한 것이. 10 보다 큰 경우가 누구인지를 따져보면 그들끼리는 이웃으로 하면 안 된다는 거죠.
<SYNC Start=927254><P Class=KRCC>
그러니까 4 하고 누구일까요? 7이 되겠죠. 이것은 이상이 아니라 초과라고 생각하셔야 돼요. 저것의 반대니까.
<SYNC Start=936097><P Class=KRCC>
&nbsp;
<SYNC Start=938014><P Class=KRCC>
그다음에 5하고 6. 그다음에 5하고 7. 그렇죠. 그다음에 6하고 7 그렇죠. 서로 다른 게 와야 되니까 이렇게 4가지 종류밖에 없네요.
<SYNC Start=949436><P Class=KRCC>
그래서 이렇게 4가지 종류가 오게 되면 이때는 10을 넘어가게 되니까 이들끼리는 서로 이웃을 하면 안 되는 거예요.
<SYNC Start=957155><P Class=KRCC>
그럼 당연히 가운데 들어가면 그 누구와도 다 이웃하게 되니까 4,5,6,7은 가운데는 절대로 못 들어가는 거죠.
<SYNC Start=967227><P Class=KRCC>
그러니까 가운데 들어갈 수 있는 것은 4,5,6,7을 뺀 누구? 1, 2, 3 중에 한 가지가 오겠죠. 따라서 이제 첫 번째부터 갑니다.
<SYNC Start=975289><P Class=KRCC>
&nbsp;
<SYNC Start=976849><P Class=KRCC>
가운데 1, 2, 3중의 하나니까 3C1이더라. 일단 이것부터 고정하시고요. 여기다가 1 이렇게 하나 넣어주세요.
<SYNC Start=984385><P Class=KRCC>
그다음 두 번째 가만히 보면 5는 6, 7하고 이웃하면 안 되고 6은 5, 7하고 이웃하면 안 되고 7도 5, 6하고 이웃하면 안 돼요.
<SYNC Start=1000549><P Class=KRCC>
그러니까 마지막 5, 6, 7은 서로 이웃하면 안 돼요. 5, 6, 7은 서로 떨어져 있어야 돼요. 무슨 말인지 알겠어요?
<SYNC Start=1008141><P Class=KRCC>
&nbsp;
<SYNC Start=1009797><P Class=KRCC>
그러니까 예를 들어 5, 6, 7은 이런 식으로 되어 있어야 돼요. 서로 서로 이웃하면 안 돼요. 절대로 그 누구끼리도.
<SYNC Start=1016837><P Class=KRCC>
또 하나는 여기서는 4, 7도 이웃하면 안 되는 것이고요. 어찌됐든 그래서 5, 6, 7이 이웃하지 않도록 배치를 먼저 해야 되는 것이죠. 그렇죠.
<SYNC Start=1027016><P Class=KRCC>
그러면 5, 6, 7을 이렇게 배치하든 아니면 하나 엇갈려서 배치하든 간에 배치하는 방법은 어쨌든 5, 6, 7 자체가 원순열이죠.
<SYNC Start=1038734><P Class=KRCC>
지금 가운데만 고정했지 나머지는 고정한 게 없잖아요. 그러니까 일단 원순열이거든요. 가운데 고정하는 것 원순열에서, 제가 그런 얘기는 했어요.
<SYNC Start=1048223><P Class=KRCC>
원순열에서 누군가의 자리가 고정되면 더 이상 원순열은 아니라는 얘기했는데요. 그중에 가운데 자리가 고정되는 것은 상관이 없죠.
<SYNC Start=1055136><P Class=KRCC>
왜냐하면 가운데 자리에는 누가 오더라도 돌리면 다 똑같으니까. 그래서 아무 것도 고정된 게 없다고 생각하고 접근하시는 게 맞고요.
<SYNC Start=1062768><P Class=KRCC>
가운데 누굴 쓰더라도 그러면 일단 지금 상태에서는 원순열인 거예요. 그럼 5, 6, 7을 가지고 여기에다 배열하는 방법은?
<SYNC Start=1069937><P Class=KRCC>
3개를 가지고 원에다 배열하는 거니까 2!이죠. 맞아요. 그래서 2!이에요. 이게 5, 6, 7을 배열하는 거죠.
<SYNC Start=1076469><P Class=KRCC>
&nbsp;
<SYNC Start=1078086><P Class=KRCC>
자리가 이렇게 많은데요? 예, 그렇지만 이웃하지 않게 배열해야 되니까 하나의 자리가 오면 그다음은 하나 띄우고, 띄우고 가는 거라서 배열하는 방법은 2!로 끝날 수 있어요.
<SYNC Start=1088375><P Class=KRCC>
그리고 나서 4랑 7은 서로 이웃하면 안 되니까 이렇게 하나가 결정이 되면 4의 자리가 명확하게 나와요.
<SYNC Start=1098009><P Class=KRCC>
7하고 이웃하지 않으려면 여기밖에 올 수가 없거든요. 그래서 4의 자리는요. 한 가지 방법이에요. 이게 4의 자리예요.
<SYNC Start=1106148><P Class=KRCC>
&nbsp;
<SYNC Start=1109635><P Class=KRCC>
그럼 이제 남은 두 자리에다가만 누구누구를 배열하면 되냐 하면 남은 것이 누구누구인가요? 3이 남았죠.
<SYNC Start=1117492><P Class=KRCC>
그러니까 2, 3을 남은 두 자리에 배열하면 2!이죠. 이게 이제 2, 3을 배열하는 거죠. 그럼 배열이 끝납니다.
<SYNC Start=1124328><P Class=KRCC>
&nbsp;
<SYNC Start=1125783><P Class=KRCC>
그래서 결국은 이것에다가 이 2번에 있는 이 식을 곱하게 되는 것이 정답이고요. 그러면 3×2×2니까 정답은 12가지가 되겠죠. 정답은 12이야. 이렇게 해 주시면 돼요.
<SYNC Start=1138552><P Class=KRCC>
문제는 어렵지는 않죠. 그런데 체감 난이도는 좀 있어요. 왜냐하면 이런 말들이 생각보다 좀 까다롭거든요.
<SYNC Start=1149833><P Class=KRCC>
합해서 10 이하가 된다. 이웃하는 경우는, 이런 말들이 생각보다 되게 까다로운 조건이라서 요리조리 생각을 해보면서 하셔야 되고요.
<SYNC Start=1158354><P Class=KRCC>
그런데 막상해보면 그렇게 난이도가 높은 문제는 아닙니다만 그래도 여러분이 좀 신경을 써야 되는 부분은 맞습니다.
<SYNC Start=1163832><P Class=KRCC>
그다음에 이제 12쪽으로 가서 3번 문항으로 가보도록 하겠습니다. 이 문제는 정사각형 모양의 탁자에 배열된 8개의 의자가 있는데요. A,B,C,D를 포함한 8명의 학생이 여기에 앉고 싶대요.
<SYNC Start=1177298><P Class=KRCC>
조건은 이렇습니다. A와 B는 서로 탁자의 반대 면에 배열된 의자에 앉는다고 그랬거든요. 그러면 A가 여기에 앉잖아요. 그렇죠.
<SYNC Start=1186920><P Class=KRCC>
&nbsp;
<SYNC Start=1188563><P Class=KRCC>
그럼 B는요. 반대 면에 배열된 의자에 앉으니까 B는 여기 아니면 여기에 앉겠죠. A가 결정이 되면 B도 그것에 따라 결정이 되는 건데 그럼 A를 결정하는 방법은 몇 가지예요?
<SYNC Start=1200736><P Class=KRCC>
A를 결정하는 방법은, 만약에 이게 그냥 원이잖아요. 그럼 A를 결정하는 방법은 한 가지예요. A를 고정시키는 방법이. 그런데 지금은 변형된 원이거든요.
<SYNC Start=1212792><P Class=KRCC>
돌렸을 때 같은 게 나오긴 나오지만, 예를 들어 만약에 자리가 이래요. 8자리예요. 그런데 여기에 A를 고정시키는 방법 몇 가지예요? 이때는 8가지예요.
<SYNC Start=1224826><P Class=KRCC>
원이면 이때는 한 가지예요. 그런데 이런 정사각형 모양이면 A를 고정시키는 방법은? 두 가지예요. 맞아요. 여기랑 여기에 올 때만 다르죠. 서로 구분되는 자리. 이제 아시겠죠.
<SYNC Start=1237393><P Class=KRCC>
그래서 2가 되고요. A를 고정시키는 방법이고요. 그다음은 A가 아무튼 한 자리에 고정이 되면 그것이랑 마주보는 탁자 그 면에 B가 앉아야 되는 거죠.
<SYNC Start=1250270><P Class=KRCC>
그럼 B가 앉는 방법은 두 가지죠. 왜냐하면 양쪽 사이사이에 어디 앉을지 모르니까. 왼쪽, 오른쪽 다 상관없으니까.
<SYNC Start=1256940><P Class=KRCC>
&nbsp;
<SYNC Start=1258722><P Class=KRCC>
그리고 나서 조건이요. C와 D는 탁자의 서로 이웃한 면에 배열된 의자에 각각 한 명씩 앉는대요. 이게 무슨 말일까요? C와 D는 이런 식이죠. 그러니까 서로 이웃한 면이죠.
<SYNC Start=1269394><P Class=KRCC>
이웃한 면이 이런 거잖아요. 여기랑 여기는 이웃해 있잖아요. 그러면 거기에 이런 식으로 앉고 싶다는 거예요. 무슨 말인지 알겠죠?
<SYNC Start=1277312><P Class=KRCC>
&nbsp;
<SYNC Start=1279659><P Class=KRCC>
그러니까 이웃한 면을 선택하셔야죠. 이웃한 면을 이렇게 선택할지 아니면 이렇게 선택할지 아니면 여기로 선택할지 여기로 선택할지 4종류죠.
<SYNC Start=1290851><P Class=KRCC>
&nbsp;
<SYNC Start=1292872><P Class=KRCC>
이웃한 면을 선택한다. C와 D가 앉은. 그럼 예를 들어 이렇게 선택을 했다면 그럼 그때 C와 D를 앉혀야 되는데 일단 어느 면에?
<SYNC Start=1305451><P Class=KRCC>
한 자리가 남아있는 면에 C를 앉힐지, 두 가지가 남아있는 면에 C를 앉힐지를 결정하시고 그럼 만약에 C가 여기 앉았다면 나머지 D도 두 가지 중에서도 둘 중에 어떤 자리에 앉힐지를 결정하시고.
<SYNC Start=1319068><P Class=KRCC>
&nbsp;
<SYNC Start=1320829><P Class=KRCC>
이게 결국은 C와 D를 배열하는 방법이죠. 그럼 나머지도 배열하셔야죠. 왜? 다른 친구들도 나머지 자리에 배열은 해야죠. 네 자리, 그러니까 4!을 추가로 곱하시면 되죠. 됐나요?
<SYNC Start=1336631><P Class=KRCC>
&nbsp;
<SYNC Start=1338573><P Class=KRCC>
이것을 계산해 주시면 정답이 1536이 나와요. 즉 계산은 안 할게요. 여러분 충분히 하실 수 있으니까. 2의 몇 제곱 모아가지고 하셔도 되고요.
<SYNC Start=1347518><P Class=KRCC>
제가 어차피 빈칸 학습지랑 채움 학습지 다 올려드리니까 그것 보시고 하시면 됩니다. 그래서 이렇게 정리하시면 되고요. 3번 문제도 괜찮아요.
<SYNC Start=1356777><P Class=KRCC>
원순열인데 약간 변형된 원순열의 느낌으로 공부하시고요. 이 정도 문제만 하시면 제가 봤을 때 원순열에서 틀릴 일이 별로 없다고 생각은 들어요.
<SYNC Start=1364701><P Class=KRCC>
그다음에 이제 넘어가서 레벨 2의 6번 문제로 가보도록 하겠습니다. 이 문제는 집합 A에 대하여 A에서 A로의 함수 중에서 치역의 모든 원소의 합이 6인 함수의 개수를 구하래요.
<SYNC Start=1379071><P Class=KRCC>
이게 우리가 이미 했던 문제거든요. 제가 수능 개념에서도 함수의 개수 부분은 좀 다뤄주기는 했는데 중복순열을 쓰는 함수 개수의 문제의 대표적인 유형이라고 생각하시면 되는데
<SYNC Start=1392565><P Class=KRCC>
그것의 좀 업그레이드 버전이에요. 한번 보실래요. A가 이렇고 A에서 A로의 함수 중에서 치역의 모든 원소의 합이 6이 되고 싶대요.
<SYNC Start=1401686><P Class=KRCC>
그럼 이런 옵션이 걸렸기 때문에 6이 되는 원소를 더해서 6이 되는 것을 찾아보자고요. 그러면 일단 4+e 가능하죠. 큰 것부터 따지면.
<SYNC Start=1415234><P Class=KRCC>
사실은 4+1+1 이런 것도 가능하거든요. 그런데 이런 것은 쓸 필요가 없어요. 왜요? 두 번 쓰는 것은 의미가 없어요.
<SYNC Start=1424845><P Class=KRCC>
왜냐하면 어차피 4+e라고 한 것도 사실은 어떻게 되냐면 치역이니까 예를 들어서 여기가 1,2,3,4고 여기가 2, 4로 갔잖아요. 그러면 어쨌든 이런 식으로 가야 될 것 아니에요.
<SYNC Start=1438139><P Class=KRCC>
2, 4가 이런 경우는 2, 2, 4, 4인 거예요. 결국은. 그러니까 더할 때는 겹치는 것 빼고 나온 숫자만 더해서 치역의 원소의 합이라고 얘기하잖아요.
<SYNC Start=1451071><P Class=KRCC>
실제로 치역으로 쓰이는 게 2하고 4인데 2 두 번, 4 두 번이 쓰였더라도 치역의 원소의 합을 구해라. 그러면 2+4 하나잖아요. 2 둘, 4 둘 더하는 게 아니고. 무슨 말인지 알죠?
<SYNC Start=1461339><P Class=KRCC>
집합의 개념이 그렇잖아요. 겹치는 것은 한 번씩만 쓰는 거니까 집합이. 집합 자체가 1, 1, 2 이렇게는 안 쓰죠. 1, 2라고 쓰죠. 1이 두 번 들어가면.
<SYNC Start=1470485><P Class=KRCC>
그러니까 치역은 집합의 개념이기 때문에 치역에는 모든 원소의 합을 구하라 그러면 겹치는 것은 한 번씩만 더하는 거죠. 아무리 2, 2, 4. 4가 선택을 받았더라도.
<SYNC Start=1481579><P Class=KRCC>
무슨 얘기인지 알겠죠? 그래서 이런 것은 의미가 없다는 거죠. 이런 것은 안 셀 거예요. 같은 것이 반복적으로 나오는 것
<SYNC Start=1489981><P Class=KRCC>
&nbsp;
<SYNC Start=1491775><P Class=KRCC>
그럼 또 어떤 경우가 있을까요? 서로 다른 것으로만 이루어진 쌍이니까 이렇게 되겠죠. 그리고는 없네요. 그렇죠. 그래서 이 두 가지로 경우를 나눌 겁니다.
<SYNC Start=1502695><P Class=KRCC>
&nbsp;
<SYNC Start=1504006><P Class=KRCC>
첫 번째 4, 2인 경우, 쉽게 말하면 치역이 2, 4인 경우죠. 두 번째는요. 치역이 아까 말했듯이 1, 2, 3인 경우죠. 더해서 6이 되면서 치역에 서로 같은 원소가 존재하지는 않도록 구성을 한 겁니다.
<SYNC Start=1521301><P Class=KRCC>
그리고 나서는 이제는 함수의 개수를 구하는 방법으로 가셔야 돼요. 1,2,3,4에서 이중에 이제 2,4로만 가고 싶은 거죠.
<SYNC Start=1531690><P Class=KRCC>
치역이 이것이니까 쓰임이 있는 게 2, 4라는 거니까. 물론 여기 1하고 3이 있어요. 그렇지만 이것은 이제 의미가 없으니까.
<SYNC Start=1540006><P Class=KRCC>
그러면 서로 다른 4개의 원소를 가진 집합에서 서로 다른 2개로 긋는 거잖아요. 가는 함수의 개수죠. 이것 대표적으로 함수의 개수 어떻게 구했었죠?
<SYNC Start=1553630><P Class=KRCC>
얘의 선택권 2개, 얘의 선택권 2개, 2개, 2개 2,2,2,2 곱해서 2⁴ 이렇게 했다는 말이죠. 그래서 2⁴의 즉 2Π4였다는 말이에요. 여기까지 되나요?
<SYNC Start=1564026><P Class=KRCC>
&nbsp;
<SYNC Start=1566390><P Class=KRCC>
조심할 게 있죠. 뭐죠? 예를 들어 2로 다 갔어요. 이렇게 돼도 함수는 되거든요. 그런데 우리가 원하는 함수가 아니에요.
<SYNC Start=1574505><P Class=KRCC>
얘는 치역이 2하고 4가 나와야 되기 때문에 우리가 원하는 함수가 아니라고요. 무조건 하나는 그래도 4를 선택해줘야 치역이 2, 4로 꾸려지니까
<SYNC Start=1586142><P Class=KRCC>
뭘 빼줘야 되냐면 모조리 2로 가거나, 모조리 4로 가는 경우는 빼주셔야 돼요. 모조리 2, 모조리 4 무슨 말인지 알겠죠. 그래서 16-2해서 14가 돼요. 납득이 가시죠.
<SYNC Start=1603519><P Class=KRCC>
함수의 개수로 중복순열을 응용한 겁니다. 그다음 볼게요. 치역이 1, 2, 3이다. 그러면 이때도 이번에 이제 이렇게 가는 거예요. 물론 4가 있지만 4는 어차피 선택을 안 할 거니까, 또 가보자고요.
<SYNC Start=1618188><P Class=KRCC>
그러면 이제 이렇게 되죠. 서로 다른 4개 원소로 이루어져 있는 정의역에서 서로 다른 3개에다가 함수를 만들어주는 상황인데 이것도 마찬가지죠. 어떻게 되는 거예요?
<SYNC Start=1631463><P Class=KRCC>
선택권 3개, 선택권 3개, 3개, 3개니까 그렇죠. 3⁴이죠. 이게 함수의 개수를 구하는 가장 기본 문제였고요. 이 경우도 조심하셔야죠.
<SYNC Start=1644686><P Class=KRCC>
&nbsp;
<SYNC Start=1647070><P Class=KRCC>
예를 들어 3으로는 안 가고 1, 2로만 다 가요. 그럼 안 되는 거잖아요. 그럼 3은 치역이 안 되니까. 맞죠. 그래서 2개 이하로 치역이 결정되는 경우.
<SYNC Start=1662997><P Class=KRCC>
즉 2개 중에 선택하는 거죠. 2Π4가 되겠죠. 그것은 빼주셔야 돼요. 그런데 2개 이하로 결정이 될 때 1, 2 두 개로 결정이 될지 아니면 2, 3 두 개로 결정이 될지
<SYNC Start=1679647><P Class=KRCC>
아니면 1, 3 두 개로 결정을 해서 보낼지에 따라서 세 가지 종류가 나오죠. 3C2, 3C1 다 괜찮아요. 그렇게 나오죠. 결국 세 가지죠.
<SYNC Start=1689140><P Class=KRCC>
&nbsp;
<SYNC Start=1690910><P Class=KRCC>
그렇게 해서 그걸 빼줘요. 그런데 이때 치명적인 문제가 있어요. 무슨 문제가 있냐면 예를 들어 이렇게 2개로 가고 이렇게 2개로 갔다고 하면,
<SYNC Start=1700332><P Class=KRCC>
사실 여기는 뭐가 들어가 있는 거냐 하면 모조리 1로 갔거나, 모조리 1로 가는 것이 포함이 되어 있는 거죠.
<SYNC Start=1705123><P Class=KRCC>
왜냐하면 이 Π의 개념은 중복이니까 1로 다 빠지고 1로 다 빠져도 상관없죠. 그러니까 결국은 1 하나로만 다 가는 경우 있죠.
<SYNC Start=1715203><P Class=KRCC>
그것을 여기서도 셌고 여기서도 1 하나로만 다 가는 것을 역시 또 셌죠. 그러니까 1로 가는 것, 2로 가는 것, 3으로만 가는 것은 다 두 번씩 센 거예요. 그것을 두 번씩 빼줬다고요. 뺐으니까,
<SYNC Start=1731549><P Class=KRCC>
그래서 그 3개는 더해주셔야 돼요. 1로만 가는 것, 2로만 가는 것, 3으로만 가는 것. 두 번씩 뺐으니까 이렇게 뺐고, 이렇게 뺐고, 이렇게 뺐고 그래서 이렇게 계산해 주시면 돼요.
<SYNC Start=1741915><P Class=KRCC>
그래서 이 문제 계산하시면요. 81에서 48를 빼고 3를 더하니까 36이거든요. 얘들을 더하면 정답은 50개입니다. 문제 괜찮아요.
<SYNC Start=1757665><P Class=KRCC>
이게 어떤 문제랑 유사하냐면 제가 정확히 몇 강에서 했냐면 수능개념 13강에서 함수의 개수에 대한 문제가 있어요.
<SYNC Start=1771464><P Class=KRCC>
거기서 어떤 문제가 있었냐면 공역과 치역이 같은 함수의 개수 구하는 문제가 있었거든요. 이것을 집합의 분할로도 풀 수가 있었는데요. 이런 식으로 중복순열의 아이디어로도 풀 수가 있어요.
<SYNC Start=1785470><P Class=KRCC>
이 아이디어로 푸는 게 여기 공치가 같은 함수 구할 때 그때 문제에 있었어요. 이 부분이 완전히 그 이해랑 똑같습니다. 이 부분 주의해서 보셔야 되고요.
<SYNC Start=1796913><P Class=KRCC>
시험에서 되게 좋아하는 문제 중의 하나입니다. 중복순열에서 제일 어려워하는 유형이기도 하고요. 전반적으로 지금 앞부분의 순열과 조합의 순수한 부분들이 다 빠졌기 때문에
<SYNC Start=1806585><P Class=KRCC>
중복순열에서 까다로운 부분들을 건드릴 가능성도 충분히 있어요. 그래서 이렇게까지 공부를 좀해야겠다는 마음으로 하시는 게 좋겠습니다.
<SYNC Start=1815291><P Class=KRCC>
그렇다면 이제 레벨 2의 다음 문제, 이 문제는 몇 번 문제인가요? 아, 이것 풀었네요. 죄송합니다. 이 문제는 8번 문제입니다.
<SYNC Start=1828632><P Class=KRCC>
다음 문제는 8번 문제로 가보도록 하겠습니다. 13페이지입니다. 세 문자 a, b, c 중에서 중복을 허락해서 4개를 선택해서 일렬로 나열을 하고 싶어요.
<SYNC Start=1838741><P Class=KRCC>
그런데 이웃하는 a와 b가 존재하도록 하고 싶다는 거죠. 그러면 이런 생각을 하는 거죠. 일단 a, b, c 중에 4개를 선택해서 나열을 하는 데 이웃하는 a와 b가 존재한다면
<SYNC Start=1852296><P Class=KRCC>
사실 c는 들어가도 되고 안 들어가도 되겠네. 그걸 선택하자고요. 무슨 말이냐면 제가 전에 같은 것이 있는 순열의 개념에서 전 시간에 말했는데
<SYNC Start=1861796><P Class=KRCC>
일부를 선택하는 경우는 숫자나 문자나 구성을 해 주고 생각하는 게 편하다. 이런 얘기했거든요. 같은 것이 있는 순열에서. 중복순열도 사실은 상황이 비슷해요.
<SYNC Start=1872646><P Class=KRCC>
그래서 중복순열에서도 대강 구성을 생각하고 접근하면 조금 더 세기가 수월해져요. 그래서 어떻게 제가 접근할 거냐면 c를 포함한다와 c 없이 가자. 이렇게 둘로 가볼까 합니다.
<SYNC Start=1891340><P Class=KRCC>
만약에 c 없이 간다. 그러면 이제 a랑 b만 갖고 가거든요. a랑 b만 가지고 4개를 선택하는 건데요. 단, 조건은 이웃하는 a와 b가 존재해야 되니까
<SYNC Start=1903047><P Class=KRCC>
&nbsp;
<SYNC Start=1904544><P Class=KRCC>
이 경우는 a가 3개 나오고 b가 하나 나와도 어쨌든 a, b는 이웃할 수밖에 없죠. c가 없으니까 방해꾼이 없으니까 어쨌든 어느 순간에는 a, b가 이웃해서 나오잖아요.
<SYNC Start=1914639><P Class=KRCC>
그러니까 뭐만 아니면 돼요. 4개다 a로만 이루어져있거나, 4개 다 b로만 이루어져있거나 그것만 아니면 되죠.
<SYNC Start=1922149><P Class=KRCC>
&nbsp;
<SYNC Start=1924273><P Class=KRCC>
그렇기 때문에 전체에서 a로만, b로만 결국 몇 개예요? 1개, 1개죠. 이것만 빼주시면 되죠. 전체는요. a, b 서로 다른 두 개를 가지고, 모스부호랑 똑같아요.
<SYNC Start=1941242><P Class=KRCC>
4개를 선택해서 중복을 허락해서 나열하는 경우죠. 나열까지 한다고 했으니까 그래서 2Π4고요. 거기서 2개를 빼는 거죠. 16이죠. 14가 되겠죠.
<SYNC Start=1952378><P Class=KRCC>
다시 앞으로 c를 포함하고 싶다. 그럼 이때는 경우를 나눠보자고요. 우선 c를 포함했다. c를 1개 포함하는 경우. 그러면 aab 이렇게.
<SYNC Start=1964234><P Class=KRCC>
c를 1개 포함하는 데 a 대신에 b가 2개 들어오는 경우가 있을 수 있고요. aaa, bbb는 안 돼요. a, b가 이웃하려면 어쨌든 하나씩은 들어와야 되니까.
<SYNC Start=1974824><P Class=KRCC>
&nbsp;
<SYNC Start=1976263><P Class=KRCC>
아니면 이제 c가 2개가 들어오고 a, b가 들어오는 경우죠. c가 3개가 들어오면 a, b 중의 하나만 더 들어오니까 그것도 안 돼요.
<SYNC Start=1984111><P Class=KRCC>
a, b가 무조건 1개씩은 들어와야 서로 이웃을 한다. 무엇을 한다고 얘기할 수 있거든요. 그러면 이쪽은 지울 게요.
<SYNC Start=1990485><P Class=KRCC>
여기가 지금 14개였어요. 이것 계산해 볼게요. 그러면 caab잖아요. 그럼 이때 a, b가 서로 이웃을 해야 되거든요.
<SYNC Start=2001260><P Class=KRCC>
그럼 이것은 a, b가 이웃하는 경우를 생각해 보시면 a, b가 만약에 이웃을, 얘는 몇 개안 되는 데, a, b가 이웃을 못하는 경우가 지금 뭐밖에 안보이죠?
<SYNC Start=2017580><P Class=KRCC>
a, b가 이웃을 a가 2개나 있기 때문에 a, b가 이웃을 못하려면 c를 기준으로 c가 a랑 b를 분리시켜야 돼요.
<SYNC Start=2027862><P Class=KRCC>
그러니까 c를 중간에 끼고 b가 여기오고 a가 오든지 c를 중간에 끼고 a가 여기오고 b가 오든지 여기 말고는 없다는 것이죠. 얘가.
<SYNC Start=2038659><P Class=KRCC>
a, b가 이웃을 못하는 건 중간에 방해꾼이 있어야 된다는 거거든요. 여기밖에 없죠. 그래서 얘는 전체에서 이 두 가지를 빼주면 되겠는데요.
<SYNC Start=2047134><P Class=KRCC>
그럼 이 4개가 나열되는 방법은 이미 숫자 구성이 정해졌으니까 같은 것이 있는 순열으로 해도 되거든요.
<SYNC Start=2053485><P Class=KRCC>
그래서 4!, 2! 한 다음에 2개를 빼는 거죠. 그래서 12에서 2 빼니까 10개죠. 얘는 똑같아요. b 대신에 a가 들어가는 것뿐이니까 그래서 얘도 10개.
<SYNC Start=2067330><P Class=KRCC>
&nbsp;
<SYNC Start=2070053><P Class=KRCC>
마지막 것은 좀 주의해주셔야 되죠. 그럼 이번에는 a, b가 서로 이웃하는 안 된다는, 그러니까 a, b가 서로 이웃한다는 것은 a, b가 서로 이웃하지 않는 경우가 이제 어떻게 되는지를 보면 되죠.
<SYNC Start=2082364><P Class=KRCC>
그럼 어떻게 될까요? c가 방해하면 되잖아요. 그럼 어떻게 되는데요? a, b를 기준으로 c가 가운데 들어오면 되는 거잖아요.
<SYNC Start=2091387><P Class=KRCC>
&nbsp;
<SYNC Start=2092802><P Class=KRCC>
c가 얘를 뜯어놓으면 되니까. 그렇죠. 그럼 c가 여기 올 수도 있고, 여기 올 수도 있고, 여기 올 수도 있고 남은 c 하나가. 그렇겠죠.
<SYNC Start=2109128><P Class=KRCC>
그런데 a, b가 자리를 바꿀 수도 있고, a, b 자리 바꾸는 방법과 2!이죠. 하나, 둘, 세 가지 케이스 6개죠. 되겠어요? 이해가 되시죠?
<SYNC Start=2129467><P Class=KRCC>
그래서 이렇게 되면 a, b가 또 이웃을 안 하겠죠. 떨어뜨려서 자리 배치가 되겠죠. 그럼 얘도 전체에서 빼야죠. 전체의 경우의 수는 4!을 2!으로 나눈 거거든요. 이쪽에다 할까요?
<SYNC Start=2147589><P Class=KRCC>
4!을 2!으로 나눈 거거든요. 그러면 거기서 6를 빼는 거죠. 그럼 역시 12에서 6을 빼니까 6이 되겠죠.
<SYNC Start=2157662><P Class=KRCC>
따라서 10개, 10개, 6개, 처음에 14개 해서 이들끼리 다 더하면 되죠. 20개 30, 40개 그래서 이 문제 정답은 40개라고 정리하시면 되겠습니다. 하실 수 있겠죠.
<SYNC Start=2175027><P Class=KRCC>
&nbsp;
<SYNC Start=2176837><P Class=KRCC>
문제가 좀 까다롭기는 합니다. 이게 경우들을 나눠야 되고 이것저것 여러분이 고민을 해서 풀어야 되기 때문에 생각보다 까다로운 문제는 맞습니다만 그래도 해볼 만하고요.
<SYNC Start=2187463><P Class=KRCC>
마지막 것 같은 경우는 사실 직접적으로 계산을 해도 되기는 될 것 같아요. a, b가 이웃하고 싶다고 했으니까 이때 a, b가 단출하게 하나가 나왔으니까 두 개가 나왔으니까
<SYNC Start=2197974><P Class=KRCC>
이것 묶어서 이웃한다고 한다면 3!로 가시고요. 그러니까 이것을 cc 하나로 본다면 같은 것이 2개니까 2!으로 나누시고요.
<SYNC Start=2208072><P Class=KRCC>
그리고 그 안에를 들여다봐서 a, b가 자리 바꾸는 것 2! 곱해서 3, 2, 6해도 이것이랑 답은 똑같아요.
<SYNC Start=2215922><P Class=KRCC>
그러니까 세 번째 것을 구할 때는 a, b가 이웃하는 경우를 구할 때 이웃하는 것은 묶어주고 전체를 배열하고 안을 들여다봐라. 이 얘기 기억하시죠. 그렇게 직접 하셔도 된다고요.
<SYNC Start=2226362><P Class=KRCC>
그런데 얘는 어차피 2개니까 수작업으로 따로 계산해서 전체에서 그것 이웃하지 않는 경우를 빼주는 방향으로 가도 상관은 없지 않겠냐? 이렇게 간 거죠. 됐어요.
<SYNC Start=2239940><P Class=KRCC>
어떤 경우든 상관은 없고요. 레벨 2의 8번이 생각보다 그래도 좀 경우들이 나와서 좀 꼼꼼하게 보셔야 되는 부분은 맞습니다.
<SYNC Start=2247912><P Class=KRCC>
&nbsp;
<SYNC Start=2250662><P Class=KRCC>
그러면 이제 레벨 3으로 넘어가서요. 2번 문제로 가보도록 하겠습니다. 14쪽입니다. 레벨 3의 2번 문제는요. 함수의 개수 문제인데요.
<SYNC Start=2263061><P Class=KRCC>
이 부분에서 유난히 함수의 개수 문제가 생각보다 많이 나와서 이 문제도 이제 비슷한 함수의 개수인데요.
<SYNC Start=2268158><P Class=KRCC>
이게 아까 풀었던 문제랑 똑같지는 않은데 되게 비슷한 구석이 있어요. 아까 풀었던 함수의 개수랑 그것을 떠올리면서 보시면 좋겠습니다.
<SYNC Start=2275788><P Class=KRCC>
더해서 4가 나온다는 뜻이거든요. f(1)과 f(3)이. 그럼 이것은 우리가 수작업으로 무엇 무엇인지 구해낼 수 있죠.
<SYNC Start=2283315><P Class=KRCC>
이것 생각해 보시면 1, 3 이중에 선택해야 되니까 아니면 누구죠? 2, 2 그렇죠. 이렇게밖에 되지가 않죠.
<SYNC Start=2292787><P Class=KRCC>
그럼 이제 경우를 어떻게 나눌 거냐면 첫 번째 단서가 되는 f(1)과 f(3)이 1, 3이 되든지 아니면 3, 1도 돼요. 바꿀 수도 있으니까.
<SYNC Start=2305285><P Class=KRCC>
두 번째 f(1)과 f(3)이 2, 2가 되는 경우 이렇게 둘로 나눠서 생각을 좀 해보자고요. 그럼 다시 첫 번째로 와서 f(1)과 f(3)이 1, 3이나 3, 1이 된다는 것은 이런 얘기거든요.
<SYNC Start=2326561><P Class=KRCC>
1,2,3,4,5,6,7이랑 B가 1,2,3,4,5거든요. 그런데 지금 1하고 3으로만 갔다는 거죠. 예를 들어 그냥 이렇게만 먼저 생각을 해볼게요. 1하고 3으로 갔다.
<SYNC Start=2341506><P Class=KRCC>
그러면 (나)조건이 뭐냐면 함수 f의 치역의 원소의 개수가 3개라 그랬거든요. 그런데 벌써 지금 2개가 결정이 됐잖아요. 그러니까 하나만 더 나오면 되죠.
<SYNC Start=2356108><P Class=KRCC>
그 하나를 선택을 해 주세요. 그러면 1, 2, 3개 2, 4, 5 남았잖아요. 그래서 치역 하나를 선택을 하세요. 그게 31이죠. 맞아요.
<SYNC Start=2369932><P Class=KRCC>
그런 다음에 두 번째로 이제는 그러면 만약에 4를 선택했다. 예를 들어서 그러면 1, 3, 4가 치역이 되거든요. 그럼 이제 나머지 2, 4, 5, 6, 7을 여기로 나눠서 줘야 되는 거예요. 맞나요?
<SYNC Start=2385101><P Class=KRCC>
그러면 5개 2,4,5,6,7이라는 5개를 가지는 정의역에서 치역을 1, 3, 4로 구성했으니까 거기로 대응이 돼야 되는 거니까
<SYNC Start=2400126><P Class=KRCC>
그렇게 가면 함수의 개수는 선택권 3개, 여기도 3개, 3개, 3개해서 3&#8309;, 3Π5란 말이죠. 전체는 3&#8309;이에요. 그렇죠. 3Π5.
<SYNC Start=2411727><P Class=KRCC>
그런데 문제는 뭐가 문제죠? 이게 문제잖아요. 만약에 모조리 4를 선택을 안 하고 다 1, 3 중에 선택하면 어떻게 돼요?
<SYNC Start=2424587><P Class=KRCC>
1, 3 두 개 섞어도 되고 아니면 1이든 3이든 하나만가든 어쨌든 4을 선택을 안 하는 경우, 안 되죠. 그러면 치역에 4가 빠지잖아요.
<SYNC Start=2433886><P Class=KRCC>
걔는 여기서 빼주셔야죠. 그래서 4를 아무도 선택 안 하고 이 위의 2개만 갖고 선택하는 경우, 즉 2개만 갖고 선택했을 경우는 둘, 둘, 둘, 둘, 둘해서 선택권을 가진다. 2&#8309;이겠죠.
<SYNC Start=2446701><P Class=KRCC>
그것을 빼라는 거죠. 납득이 가세요? 좋아요. 3&#8309;에서 2&#8309;을 빼주시면요. 이것이랑 또 곱해주셔야 되죠. 그래서 계산해 주시면 633이 나와요. 이것 여러분이 계산하세요. 계산 정도는.
<SYNC Start=2460848><P Class=KRCC>
아, 이게 그런 게 아니라 이것에다가 둘을 곱하는 거죠. 그럼 이제 633이 나와요. 됐죠. 그다음 이게 이제 211이 나오기 때문에 그렇고요.
<SYNC Start=2475677><P Class=KRCC>
그다음 두 번째, 아, 그런데 이게 1, 3으로 가는 거니까 3, 1로 가는 경우도 있잖아요. 그래서 이것에다가 어떻게 해줘야 돼요? 2배 해줘야죠.
<SYNC Start=2483784><P Class=KRCC>
&nbsp;
<SYNC Start=2485597><P Class=KRCC>
그래서 1266이다. 일단 여기까지는 1266개고요. 그다음에 이쪽으로 오세요. 두 번째 f(1), f(3)이 이번에는 2, 2로 갔어요.
<SYNC Start=2495225><P Class=KRCC>
여기도 한번 볼까요. A 1,2,3,4,5,6,7 B 1,2,3,4,5라고 갔다고 해볼까요? 그렇다면 전부 다 2, 2로 간 거니까 이렇게 간 거죠.
<SYNC Start=2508833><P Class=KRCC>
&nbsp;
<SYNC Start=2510241><P Class=KRCC>
그럼 이 경우는 치역이 3개가 역시 나와야 되는데 지금 치역이 1개밖에 결정이 안 됐죠. 그럼 치역을 2개를 선택을 먼저 해줘야겠네요. 얘처럼.
<SYNC Start=2521088><P Class=KRCC>
그래서 치역을 2개를 선택한다. 그 방법이 일단은 4개 중에 2개를 선택하시면 돼요. 맞아요. 그래서 제 마음대로 이것 선택했다고 합시다.
<SYNC Start=2532932><P Class=KRCC>
이것은 원래 있었고 그럼 이제 나머지 애들이 4, 5 혹은 2까지 해서 3개로 가는 거죠. 그래서 이제 함수의 개수를 구해주면 역시 5개를 가지고 3개로 보내는 함수예요.
<SYNC Start=2547284><P Class=KRCC>
정의역이 5개 1, 3은 이미 갔으니까 나머지 치역 3개니까 후보가. 거기로 가는 방법의 개수거든요. 얘가 3&#8309;은 또 똑같아요. 그런데 이제 여기서 주의하셔야 돼요. 조심하셔야 돼요.
<SYNC Start=2565388><P Class=KRCC>
&nbsp;
<SYNC Start=2568568><P Class=KRCC>
뭐가 안 될까요? 이때는 뭐가 안 될까요? 뭐가 안 되냐면 2, 4로만 가든지 즉 5을 배제하고 가든지 아니면 2, 5로만 가든지 그 둘은 안 되죠.
<SYNC Start=2589662><P Class=KRCC>
4, 5로만 가는 건? 그건 괜찮아요. 그러면 치역이 3개가 구성이 되니까. 그래서 2, 4로 여기서 빼주셔야 되는 데요.
<SYNC Start=2600277><P Class=KRCC>
여기가 뭐냐 하면 2, 4로만 가든지 아니면 2, 5로만 가든지 이런 경우는 안 된다는 거죠. 되겠습니까? 그러면 2, 4로만 가는 경우가 어떻게 될까요?
<SYNC Start=2620215><P Class=KRCC>
&nbsp;
<SYNC Start=2622253><P Class=KRCC>
둘, 둘, 둘, 둘, 둘의 선택권이니까 2&#8309;이죠. 2, 5로만 가는 것 역시 둘, 둘, 둘, 둘, 둘. 그렇죠. 2&#8309;이죠. 일단 여기까지는 됐어요.
<SYNC Start=2634874><P Class=KRCC>
그러니까 결국에는 2×2&#8309;예요. 쉽게 말하면 2개니까. 그걸 빼야 돼요. 끝일까요? 아니죠. 2, 4랑 2, 5로만 가는 경우에는 사실 이 안에 2로만 간 경우랑 2로만 간 경우는 2번을 뺀 거죠.
<SYNC Start=2653204><P Class=KRCC>
그건 하나 더해 줘야죠. 어쨌든 2번 빼면 안 되니까. 빼고 싶어도. 그래서 1개를 더해요. 그래서 3&#8309;에서는 얘를 빼고 1을 더하더라. 이렇게 가는 거예요.
<SYNC Start=2666175><P Class=KRCC>
&nbsp;
<SYNC Start=2668316><P Class=KRCC>
됐나요? 그러면 얘는 32에 2를 곱하니까 96이 되고요. 아, 32가 아니라 32에 2를 곱하니까 64가 되고요. 여기 마찬가지죠. 3&#8309;에서 1을 더하고 한 거예요.
<SYNC Start=2684331><P Class=KRCC>
그러면 여기는 3&#8309;의 243이거든요. 계산 여러분이 하실 수 있죠? 더하기 1까지 하니까 244에서 64를 빼게 되죠. 네, 좋아요.
<SYNC Start=2694669><P Class=KRCC>
244에서 64를 빼게 되면 그럼 180이 나오나요. 180. 그런데 180이 나오는데 이 위에 있는 4C2죠. 얘랑 곱해주셔야죠. 이렇게. 그렇죠.
<SYNC Start=2713419><P Class=KRCC>
따라서 6에다가 180을 곱하게 되고요. 그래서 1080이 되네요. 그리고 나서 첫 번째 했던 1266이랑 이것과 더해 주시면요.
<SYNC Start=2729260><P Class=KRCC>
왜냐하면 치역을 저렇게 잡는 경우와 치역을 이렇게 잡는 게 두 가지 경우가 생기니까 1080까지 두 개를 더해 주시면 2346인가요.
<SYNC Start=2739177><P Class=KRCC>
그래서 답이 아닐 것 같지만 이런 복잡한 수가 바로 정답이 되겠습니다. 2346. 그래서 이 문제의 정답은 4번 2346이다. 라고 정리해 주시면 되겠습니다.
<SYNC Start=2750397><P Class=KRCC>
그래서 이 문제가 함수의 개수에서 어떤 부분이 쓰인 거냐 하면 공역과 치역이 같은 함수. 그것 아이디어 쓸 때 제가 중복순열을 분명히 썼거든요.
<SYNC Start=2764423><P Class=KRCC>
그 아이디어를 여러분이 지금 만약에 함수의 개수 오늘 한 문제에서 전부 다 내가 모르겠다. 그러면 공통적으로 그 부분이 걸리는 거예요.
<SYNC Start=2773637><P Class=KRCC>
제가 아까 풀어드렸던 레벨 2의 6번 문제도 비슷한 유형이었고요. 지금 푼 레벨 3의 2번 문제도 비슷한 유형이에요.
<SYNC Start=2785165><P Class=KRCC>
이렇게 되면 학교 시험 문제를 낼 때, 저도 학교에서 시험문제를 내는 선생님 입장이잖아요. 그러면 어떤 생각이 드냐 하면
<SYNC Start=2791217><P Class=KRCC>
이게 수특에 2개나 이렇게 나왔으면 내가 이런 설명을 2번이나 한 건데, 내고 싶겠어요? 안 내고 싶겠어요? 당연히 내고 싶죠.
<SYNC Start=2799860><P Class=KRCC>
그래서 이 문제는 시험에 나올 가능성이 굉장히 높다고 보시는 게 맞아요. 그런데 이것을 서술형으로 만약에 문제를 내게 되면 얘를 분할의 아이디어로도 풀 수가 있거든요.
<SYNC Start=2811239><P Class=KRCC>
집합의 분할 그런데 이것은 시험 범위에서 빠졌기 때문에 여러분이 배우지도 않고 굳이 할 필요가 없어요.
<SYNC Start=2816794><P Class=KRCC>
물론 저는 해드리기는 했습니다만 수능개념에서. 서술형으로 나왔을 때는 이렇게 중복순열 이용하라고 명시할 가능성도 굉장히 높고요.
<SYNC Start=2825124><P Class=KRCC>
그래서 그런 생각을 가지고 여러분이 좀 문제를 보실 때 반복적으로 나오는 아이디어라고 하면 시험에 나올 가능성이 더욱 높겠구나.
<SYNC Start=2835735><P Class=KRCC>
게다가 그게 좀 더 어려운 문제더라. 그러면 조금 더 나올 가능성이 높겠구나. 약간 이런 생각을 가지고 보시면 될 겁니다.
<SYNC Start=2842892><P Class=KRCC>
그래서 오늘은 여기까지 문제 풀이를 할 건데요. 여러분께 제가 부탁하고 싶은 얘기는요. 제가 연계교재 문제 풀이를 할 때 전 문항 풀이를 하지는 않습니다.
<SYNC Start=2852152><P Class=KRCC>
그런데요. 웬만하면 다음 강의에서 하게 되는 그 변형문제랑은 겹치지 않게 잡으려고 그래서 노력을 해요.
<SYNC Start=2860056><P Class=KRCC>
왜냐하면 정해진 시간 안에 최대한 여러분이 다양한 문제를 접하게 하는 것이 더 중요하고 좋다고 생각이 들기 때문에
<SYNC Start=2867335><P Class=KRCC>
그 대신에 여러분이 해야 될 것은 뭐냐 하면 오늘 강의가 끝나면 제가 수능특강에 대해서 문제 풀이를 하는 것은 이제 끝이에요.
<SYNC Start=2875008><P Class=KRCC>
그리고 다음 시간에는 변형문제를 푸는 거기 때문에 오늘 강의가 끝나고 시간이 걸려도 괜찮으니까 여러분이 첫 번째 단원에 대해서 혼자 복습을 하면서
<SYNC Start=2885230><P Class=KRCC>
수능특강에 있는 문제 풀이를 한번 해보셔야 돼요. 물론 모르는 것이 있을 수 있습니다. 그러면 손글씨 노트 참고해서 해설지 참고 해서
<SYNC Start=2894753><P Class=KRCC>
선생님이 풀어드리지 않은 문제까지도 다 풀어보셔야 돼요. 일단은. 그리고 나서 다음 시간이 되면 그 안에서 변형문제가 보이죠. 그걸 실어놓거든요.
<SYNC Start=2906781><P Class=KRCC>
그걸 여러분이 한번 변형된 문제를 풀었을 때 효과가 완전히 터져요. 그런데 혹시라도 제가 풀어드리지 않은 문제는 못 풀겠다. 그러면 다음 시간 변형문제 강의를 먼저 보셔도 상관은 없어요.
<SYNC Start=2920239><P Class=KRCC>
그러면 다시 수능특강 문제가 제가 드린 문제의 변형문제가 되겠죠. 그러면 그걸 또 응용할 수 힘이 생길 수도 있거든요.
<SYNC Start=2928467><P Class=KRCC>
그래서 그 부분에 있어서는 약간 융통성 있게 하셔도 되지만 제가 풀어드린 문제에 대해서는 어쨌든 오늘까지 해서 복습을 하는 것으로 하고 넘어오시는 게 맞습니다.
<SYNC Start=2938743><P Class=KRCC>
그렇게 해서 좀 효율적으로 수능특강을 보자. 이런 얘기로 오늘 수업 마무리하고요. 여러분 오늘도 고생 많으셨습니다.
<SYNC Start=2946030><P Class=KRCC>
저는 다음 시간에 변형문제로 올 것이고요. 오늘로 퀴즈 정답 올려주시기 바랍니다. 다음 시간에 뵐게요.
<SYNC Start=2951537><P Class=KRCC>
&nbsp;
</BODY>
</SAMI>