<SAMI>
<HEAD>
<TITLE>Time Tools (C) CCNSOFT 2005</TITLE>
<STYLE TYPE="text/css">
<!--
P { margin-left:8pt; margin-right:8pt; margin-bottom:2pt;
    margin-top:2pt; font-size:12pt; text-align:left;
    font-family:굴림, Arial; font-weight:normal; color:white;
    background-color:#405A8D; }
.KRCC { Name:한국어; lang:ko-KR; SAMIType:CC; }
#STDPrn { Name:Standard Print; }
#LargePrn { Name:Large Print; font-size:20pt; }
#SmallPrn { Name:Small Print; font-size:10pt; }
-->
</STYLE>
</HEAD>
<BODY>
<SYNC Start=9661><P Class=KRCC>
네, 반갑습니다. 여러분의 든든한 조력자가 되겠습니다. 저는 체인지 수학 최은진이고요, 2022 수능 특강 확률과 통계 강의에 오셨습니다.
<SYNC Start=17922><P Class=KRCC>
오늘은 다섯 번째 시간이 되겠습니다. 오늘 제가 여러분과 공유하고 싶은 감성 코드는 몰입입니다. 어떤 일에 집중한다는 뜻을 가지고 있죠.
<SYNC Start=35382><P Class=KRCC>
오늘은 여러분 수능 특강의 본격적인 연계 교재 문제 풀이를 뒷부분에 있는 것들을 몰아서 다음 시간까지 할 생각이고요,
<SYNC Start=44918><P Class=KRCC>
그동안 배우고 다루었던 코드들을 가지고 이용해서 한 번씩 확인하면서, 그 코드가 어떻게 쓰이는지를 보면서 문제 풀이에 직접 적용해 보는 시간을 가질 건데요.
<SYNC Start=56458><P Class=KRCC>
그 과정에서 여러분이 집중해서 문제에 몰입하실 필요가 있습니다. 연계 교재의 문제가 수능에 직접적으로 똑같이 나오지는 않더라도
<SYNC Start=64944><P Class=KRCC>
간접적으로 연계되어서 출제하고자 하는 상황이기 때문에 이 문제 상황이 시험장에 갔을 때 똑같은 문구가 보이진 않을 거예요.
<SYNC Start=74607><P Class=KRCC>
그렇지만 문제 상황이 시험장에서 떠오른다면 성공이거든요. 왜냐하면 어차피 수학은 사고력의 학문이기 때문에 생각이 그때 똑같이 그 구조가 떠오른다면 그것으로 푸는 거예요.
<SYNC Start=87058><P Class=KRCC>
그것으로 손이 움직이는 것이고. 그러려면 여러분 문제에 몰입하셔야 됩니다. 그래서 오늘은 충분히 문제에 몰입해야 되는 시간이기 때문에 미리 고민도 한번 해 오시고,
<SYNC Start=97632><P Class=KRCC>
제가 풀이하는 것들을 이 풀이 저 풀이, 내 풀이까지 비교하면서 같이 보는 그런 시간을 가졌으면 좋겠습니다. 오늘 수업 전면으로 확인하면서 가시죠.
<SYNC Start=110361><P Class=KRCC>
오늘은 연계 교재 문제 풀이를 본격적으로 해 보는 시간이라고 말씀드렸고요. 그동안 수업 시간에 풀이하지 않았던 문제들을 모조리 다음 시간까지 걸쳐서 풀어 보겠습니다.
<SYNC Start=121486><P Class=KRCC>
함께 확인할 코드는 여섯 번째 강조 코드 특별한 조건이 있는 순열, 열일곱 번째 같은 것 중에 일부를 뽑아서 나열하는 경우 역시 강조 코드입니다.
<SYNC Start=132405><P Class=KRCC>
그리고 세 번째 코드는 추가로 나열의 의미 이 코드까지 같이 확인해 보도록 하겠습니다. 그러면 이제 지금부터 저랑 함께 문제 풀이 본격적으로 한번 보도록 하고요.
<SYNC Start=143896><P Class=KRCC>
여섯 번째 코드 다시 한번 확인할까요? 특별한 조건이 있는 순열입니다. 이거 지난 시간에도 했기 때문에 간단하게만 할게요.
<SYNC Start=150975><P Class=KRCC>
고정되어 있다, 그 자리에 먼저 고정시켜 놓고 시작해라. 이웃한다, 묶어라. 전체를 나열한다, 안을 들여다봐라.
<SYNC Start=158440><P Class=KRCC>
이웃하지 않는다, 두 명이라면 전체에서 이웃하는 걸 빼도 되지만 일반적인 경우라면 이웃해도 좋은 걸 먼저 배치하고 사이사이에 끼워 넣는다.
<SYNC Start=169950><P Class=KRCC>
마지막으로 교대로 선다, 그렇다면 하나의 성을 먼저 배치하고 사이사이에 교대로 설 수 있게 나머지 성을 끼워 넣는다. 그런 얘기 다시 한번 확인하시고요.
<SYNC Start=179286><P Class=KRCC>
연계 교재 레벨 1의 1번부터 풀어 보도록 하겠습니다. 10페이지. 고등학생 2명, 대학생 4명이 일정한 간격을 두고 원형의 탁자에 둘러앉고 싶다.
<SYNC Start=191406><P Class=KRCC>
2명의 고등학생이 서로 이웃하지 않게 앉는 경우의 수는 어떻게 되냐고 했습니다. 2명의 고등학생이 이웃하지 않고 싶다면 이웃해도 좋은 걸 먼저 배치한다는 것 제가 말씀드렸었죠.
<SYNC Start=203397><P Class=KRCC>
그러니까 이웃해도 좋은 건 대학생이에요. 그들을 X라고 표현하시면 대학생을 먼저 배치하는 거죠. 아, 여기에다가 배치하면 자리가 그러니까.
<SYNC Start=216171><P Class=KRCC>
대학생을 먼저 배치하는 거죠, 이렇게. 나열 코드 뭐였죠? 원순열에 배치하는 것. 3!이죠, 하나 줄어서. 4명을 배치하니까.
<SYNC Start=226591><P Class=KRCC>
그러고 나서 여기 빈자리가 사이사이에 네 자리 나오거든요. 그 네 자리 중에 고등학생이 들어갈 자리 두 자리를 선택하고 그들끼리 자리 바꿔 주는 것까지 해 주면,
<SYNC Start=240264><P Class=KRCC>
고등학생이 이렇게 사이사이에 끼어 들어가면서 자리 바꾸는 것까지 해 주면 이웃하지 않게 앉히는 방법이 되겠죠.
<SYNC Start=247238><P Class=KRCC>
따라서 이 4개의 자리 중에 고등학생이 들어갈 자리 2개를 선택하고요, 그들끼리 자리 바꾸는 방법인 2!을 곱하시면 되는 겁니다.
<SYNC Start=256853><P Class=KRCC>
그렇게 하든지 아니면 여기에서 처음부터 4C2를 하지 말고 4P2를 하셔도 되죠. 왜냐하면 그들끼리 2명을 뽑아서 나열까지 하는 거니까 이걸 합쳐서 이렇게 하셔도 되고.
<SYNC Start=268158><P Class=KRCC>
이해되시죠? 72가지. 이렇게 해서 정리해 주시면 되겠습니다. 하실 수 있겠죠? 이게 10페이지의 1번 문제가 되겠습니다. 어렵지 않게 원순열 풀어 봤는데요.
<SYNC Start=286807><P Class=KRCC>
실제로 시험에서도 그래요. 사실 원순열은 '내가 원순열로 이 친구들이 잘했는지를 한번 확인해야지.' 하고 엄청 어렵게 꼬아서 내거나 그런 종류의 단원이 아니에요.
<SYNC Start=299302><P Class=KRCC>
매 시험마다 사실은, 모평에서 작년에 3번에 걸쳐서 매번 다 나왔어요. 물론 수능에서 약간 난도 있게 나오긴 했지만 그래도 그게 3점과 4점의 경계 정도에 있었던 문제이지,
<SYNC Start=311153><P Class=KRCC>
엄청 어려운 문제는 또 아니었거든요. 그러니까 제가 말하고 싶은 건 원순열은 꼭 나온다. 그러나 이웃한다, 이웃하지 않는다, 이런 조건을 적당히 섞어서 나오고 있는데 어렵진 않다.
<SYNC Start=325089><P Class=KRCC>
그러니까 꼭 맞히자. 그렇게 생각하시면 됩니다. 우리 연계 교재 수능 특강에서도 원순열 문제가 정말 끝도 없이 나와요, 지금. 계속 공부하실 겁니다.
<SYNC Start=335082><P Class=KRCC>
몰입해서 보셔야 돼요. 1부터 7까지 하나씩 적혀 있는 7개의 공을 일정한 간격을 두고 원형의 탁자 위에 원형으로 배열하고 싶다.
<SYNC Start=346446><P Class=KRCC>
짝수가 적혀 있는 공은 이웃하지 않고 싶다고 했어요. 마찬가지죠. 짝수가 2, 4, 6이고요, 그러면 이웃해도 좋은 걸 먼저 배치하라고 했으니까 이웃해도 오케이, 뭐라고요?
<SYNC Start=360818><P Class=KRCC>
1, 3, 5, 7이겠죠. 그러면 이웃해도 좋은 걸 먼저 배치하고 그렇지 않은 것들을 사이사이에 배치하는 약간 그런 경우, 똑같은 문제예요.
<SYNC Start=371550><P Class=KRCC>
차이가 있다면 위에는 이웃하지 않게 앉히고 싶은 게 2명이었고요, 지금은 이웃하지 않게 앉히고 싶은 게 3명이에요, 2, 4, 6.
<SYNC Start=381258><P Class=KRCC>
그런데 2명이든 3명이든 이웃해도 좋은 걸 먼저 배치하고 사이사이에 끼워 넣으면 사실 모조리 통하는 방법이라고 했죠. 그렇게 푸시면 돼요.
<SYNC Start=392898><P Class=KRCC>
그래서 먼저 나열 코드, 4명을 나열하는 방법, 원탁에. 3!이죠. 거기에다가 사이사이에 빈자리가 지금 4개 나왔잖아요.
<SYNC Start=403761><P Class=KRCC>
그 자리에 2, 4, 6이 들어가는 3개의 자리를 선택해 주시면 되죠. 그래서 네 자리 중에 3개를 선택하고 그들끼리 나열하는 거니까 역시 여기도 마찬가지로 4P3으로 가시면 되죠.
<SYNC Start=420250><P Class=KRCC>
4 곱하기 5는 20에 60이 되니까 360이 되겠죠. 어, 선생님 계산 잘못했네요. 죄송해요. 4, 3, 2인데. 24. 이런 계산 실수를 했지? 144죠.
<SYNC Start=432966><P Class=KRCC>
그래서 정답 계산하시면 되겠습니다. 두 번째 문제는 첫 번째랑 다른 점은 이웃하지 않게 배열하는 게 2개냐 3개냐인데, 이 경우는 이게 훨씬 편하고요.
<SYNC Start=443245><P Class=KRCC>
사실은 첫 번째 문제는 여사건 이용하셔도 돼요, 앞에서 풀었던 이 2명은. 그런데 여사건보다는 즐겨 쓰는 방법을 이렇게 가져가시는 게,
<SYNC Start=452066><P Class=KRCC>
사이사이에 끼워 넣는 것으로 조금 더 통용될 수 있는 풀이이기 때문에 더 좋지 않을까 싶어서 2개 다 그렇게 풀어 드려 봤습니다.
<SYNC Start=461164><P Class=KRCC>
또 원순열이에요. 3번 문제거든요. 그림과 같이 원탁에 6개의 의자가 일정한 간격으로 놓여 있는데, 할머니, 아버지, 어머니, 자녀 3명.
<SYNC Start=472965><P Class=KRCC>
여기 조건 붙었네요. 엄마와 아빠는 서로 이웃해야 되고요, 자녀 3명도 이웃해야 된대요. 묶어야 되네요. 이웃한다, 그러면 묶으라고 했죠.
<SYNC Start=482657><P Class=KRCC>
어머니와 아버지를 묶으시고요, 자녀 3명을 묶으시고요. 할머니는 혼자 그냥 두시고. 그렇게 해서 결국 몇 명이 움직여요? 결국 3명이 움직이는 거죠.
<SYNC Start=499763><P Class=KRCC>
원탁에 3명이 앉는 방법, 나열 코드 원순열 하나 빼서 2!까지 됐죠. 원탁에 앉히든 어쨌든 이웃한다고 하면 묶었기 때문에 그 안을 들여다보라고 했죠.
<SYNC Start=511729><P Class=KRCC>
엄마, 아빠가 자리 바꾸는 방법과 그때마다 자녀 3명이 자리 바꾸는 방법을 곱해 주셔야 되니까 이렇게 정리해 주시면 정답이 되겠습니다. 어렵지 않으시죠?
<SYNC Start=524932><P Class=KRCC>
그래서 여기까지 문제 풀어 봤고요. 그다음 레벨 2의 1번 문제 제가 끌어왔습니다. 제가 보시면 알겠지만 연계 교재에 있는 문제를 모조리 결과적으로는 다 풀 겁니다.
<SYNC Start=536648><P Class=KRCC>
그런데 절대 순서대로는 안 풀 거예요. 그 문제들을 제가 주제별로 혹은 코드에 맞춰서 재구성을 해서 비슷한 것들끼리 모아서 엮어서 풀어야
<SYNC Start=550155><P Class=KRCC>
여러분이 조금 더 몰입도가 높아져요, 쉽게 말하면. 그래서 기억이 조금 더 잘 나고요, 연계가 됐을 때도 기억하기 조금 더 쉽고요.
<SYNC Start=560117><P Class=KRCC>
그래서 제가 웬만하면 순서대로보다는 비슷한 소재나 주제, 그리고 코드가 맞는 것끼리 좀 엮어서 풀어 드리려고는 하는데요,
<SYNC Start=569265><P Class=KRCC>
여러분은 학습지를 그래서 미리 뽑아서 먼저 이 순서대로 풀어 보시고요, 그리고 어차피 복습하셔야 되잖아요. 그러고 나서 연계 교재를 순서대로 본인이
<SYNC Start=580707><P Class=KRCC>
다시 한번 풀어 보는 것도 굉장히 좋은 방법이에요. 왜냐하면 이게 문제가 굉장히 신기한 게 어느 페이지에 뭐가 있는 게 기억나면 그 풀이가 같이 기억나는 경우가 사실 좀 있어요.
<SYNC Start=592298><P Class=KRCC>
그래서 저랑은 이렇게 주제별로 공부하다가 스스로 복습할 때는 순서대로 있는 교재를 보고 복습하면 또 새로운 느낌이 들거든요. 그런데 그런 연습을 많이 해야 돼요.
<SYNC Start=604132><P Class=KRCC>
특히 이 연계 교재가 비슷하게 나온다고 치면 이런 느낌으로도 보고 이쪽 느낌으로도 보고 이래야 이 문제 하나에 익숙해질 수 있어서 저랑은 이렇게 보시고,
<SYNC Start=615701><P Class=KRCC>
여러분이 각자 순서대로 교재가 새것일 테니까 그것을 가지고 다시 풀어보는 식으로 복습하시면 좋을 겁니다. 아시겠죠?
<SYNC Start=623941><P Class=KRCC>
어쨌든 일정한 간격을 두고, 3학년 학생 2명 사이에는 각각 3명의 학생이 앉고 1학년 학생 2명은 서로 이웃하게 앉는다. 이거 좀 복잡한 조건이 있네요.
<SYNC Start=637009><P Class=KRCC>
3학년 학생 2명이 딱 있잖아요. 여기 3학년하고 3학년이 있다고 치면, 보이시죠, 글자? 여기 3학년. 이렇게 크게 써 드릴게요.
<SYNC Start=649592><P Class=KRCC>
있으면 그들 사이에는 각각 3명이 앉는 거니까 이 사이에 3명 앉고 이 사이에 3명 앉고 이렇게 하겠다는 얘기예요, 쉽게 말하면.
<SYNC Start=659525><P Class=KRCC>
그러고 나서 1학년 학생 2명은 서로 이웃하게 앉고 싶대요. 그러면 1학년은 묶어야 되겠죠. 그래서 1학년을 묶으세요, 뭐 이런 식으로.
<SYNC Start=671512><P Class=KRCC>
상황은 이거예요. 이 조건을 만족시키도록 1학년 2명, 2학년 4명, 나머지는 2학년이 들어오는 거네요. 그리고 3학년 2명이 이렇게 앉고 싶다는 거죠.
<SYNC Start=682603><P Class=KRCC>
그러면 이제 이렇게 해야 될 것 같아. 맨 먼저 3학년을 원탁에 둘을 딱 앉혀. 3학년을 원탁에 앉히는 방법은 몇 가지 방법일까? 몰입을 해서 생각을 해 보셔야 돼요.
<SYNC Start=705710><P Class=KRCC>
이렇게 있는데 3학년을 앉히고 싶은데 무조건 둘 사이에는 세 자리, 세 자리가 비어야 돼요. 이렇게 앉힐 수도 있고, 아니면 한 명 여기에 앉히면 세 자리 돌아서 세 자리. 그렇죠?
<SYNC Start=726016><P Class=KRCC>
사이에 세 자리, 세 자리 비우려면 한 사람의 자리가 고정되면 다른 한 사람의 자리는 자동으로 따라오죠, 대각선으로.
<SYNC Start=735532><P Class=KRCC>
그래서 3학년 학생을 일단 앉히는 방법의 수는 한 가지예요. 방법의 수가 들지 않아요. 되세요? 이게 일단 첫 번째로 여러분이 가장 시작할 때 주의하셔야 될 점이고요.
<SYNC Start=750921><P Class=KRCC>
그리고 어떻게 할 생각이냐 하면 어쨌든 1학년이 이웃해서 앉아야 되니까 1학년을 묶어 준다면 3명이 앉을 때 하나는 어쨌든 1학년 2명이 앉으니까
<SYNC Start=762542><P Class=KRCC>
1학년하고 붙어 앉을 수 있는 2학년 하나가 누구인지를 선택해 주셔야 되죠. 그래서 이것은 1학년과 같은 쪽에 앉을 2학년을 선택하는 거예요. 이해되시죠?
<SYNC Start=780232><P Class=KRCC>
그러면 그들을 묶어요, 3명을 같이. 그렇죠? 그러면 그 안을 좀 들여다볼까요? 그러면 1학년은 묶었으니까 1명, 2학년 1명 하니까 결국 2명이 움직이는 거네요. 맞아요?
<SYNC Start=792506><P Class=KRCC>
그런데 이미 3학년 자리가 고정되었기 때문에 이 둘이 움직이는 건 그냥 2! 자체를 곱하셔야 돼요. 원순열이 아니에요, 이제.
<SYNC Start=800222><P Class=KRCC>
누군가의 자리가 고정되는 순간 더 이상 원순열이 아니라고 했죠. 따라서 2!을 여기에다가 곱하셔야 돼요. 얘는, 이걸 1팀이라고 할까요?
<SYNC Start=810205><P Class=KRCC>
2팀이라고 하면 1팀에서 자리 바꾸는 거예요. 그리고 이웃한다고 했을 때 묶어 놨으니까 1학년들끼리 자리 바꾸는 방법 생길 수 있겠죠. 안을 들여다봐야죠.
<SYNC Start=826380><P Class=KRCC>
됐어요? 1학년 안을. 나머지 3명의 2학년은 나머지 자리에 오면 되는데 그들은 자리 배치만 해 주시면 되겠죠. 3학년의 자리가 이미 정해졌기 때문에
<SYNC Start=838376><P Class=KRCC>
2학년 3명도 자리 배치하는 방법은 더 이상 원순열이 아니에요. 그렇기 때문에 또 3!을 하셔야죠. 누군가의 자리가 고정되면 더 이상 원순열이 아니라고 했어요.
<SYNC Start=851311><P Class=KRCC>
마지막으로 3학년 이 학생의 오른쪽에 1팀 얘네가 올 수도 있지만, 1학년 애들이, 이 학생의 왼쪽 자리에 이 1학년 애들이 올 수도 있는 거죠. 이해되세요?
<SYNC Start=866462><P Class=KRCC>
그래서 1팀과 2팀이 자리 바꿀 수도 있죠. 이것까지 해 주셔야 완벽하겠죠. 여덟 가지, 6 곱하기 4는 24, 8 곱하기 4는 32. 192인가요? 이렇게 되는 겁니다.
<SYNC Start=884111><P Class=KRCC>
하실 수 있겠죠? 이 문제는 완전히 어려운 건 아니거든요. 그런데 실수할 가능성이 너무 높아요. 왜냐하면 중간중간에 요소가 너무 많아요.
<SYNC Start=894433><P Class=KRCC>
생각해야 되는 요소가 너무 많아서 실수의 여지가 너무 많아요. 그래서 이런 건 진짜 몰입하셔야 돼요. 그래서 꼼꼼하게 보셔야 실수 없이 가실 수 있고요.
<SYNC Start=904170><P Class=KRCC>
사실 배운 것들이 다 들어가 있어요. 거의 종합 선물 세트 같은 느낌이죠, 문제 자체는. 어렵지는 않은데요, 그래도 꼼꼼하게 보셔야 되는 문제 중에 하나다,
<SYNC Start=913274><P Class=KRCC>
이렇게 생각해 주시면 좋겠습니다. 원순열은 여기까지이고, 이제 같은 것이 있는 순열이랑 중복 순열로 가서 문제 풀이 좀 자잘하게 해 보도록 하겠습니다.
<SYNC Start=924287><P Class=KRCC>
역시 아까 강조해 드렸던 여섯 번째 코드, '이웃한다' 이런 조건이 있는 거 있잖아요. 혹은 뭐 '누가 누구 자리보다는 앞에 온다.' 이렇게 자리가 고정되었다든지
<SYNC Start=933264><P Class=KRCC>
이런 것들 가지고 두 문제 연달아 풀어 보도록 하려고요. 레벨 1의 7번 문제인데요. 같순 문제예요, 딱 봐도. a, a, a, b, b, c, d 이렇게 오고 싶은 건데
<SYNC Start=944157><P Class=KRCC>
a끼리는 이웃하지 않고 싶다고 했어요. 이웃하지 않는다, 이웃해도 좋은 걸 먼저 배치한다. 그렇다면 a 빼고 나머지 b, b, c, d를 먼저 배치하니까 나열 코드 4!, 2! 하시면 되죠.
<SYNC Start=957376><P Class=KRCC>
그런 다음에 사이사이에 a를 끼워 넣으면 되겠죠. a가 들어갈 수 있는 자리는 5개 자리 중에 3개의 자리가 되고요,
<SYNC Start=969683><P Class=KRCC>
a끼리는 서로 구분하지 않기 때문에 자리만 뽑아 주면 그들끼리 자리 바꾸는 건 생각하지 않습니다. 그러니까 P가 아니라 C가 들어가겠죠.
<SYNC Start=982436><P Class=KRCC>
이렇게. 하실 수 있겠죠? 그래서 120가지. 어렵지 않게 문제 풀어 봤고요. 다음 문제 넘어갈게요. 레벨 1의 4번 문제이고요.
<SYNC Start=992368><P Class=KRCC>
2, 3, 4, 6 중에서 중복을 허락해서 4개를 택하고. 중복 허락했다, 4개를 택하고 나열도 했다. 여기까지 눈에 들어오셔야 되고요.
<SYNC Start=1005705><P Class=KRCC>
네 자리의 자연수 중에서 천의 자리의 숫자가 일의 자리의 수의 약수가 된대요. 여기 엄청난 조건이 들어가 있네요.
<SYNC Start=1016752><P Class=KRCC>
또 천의 자리의 수는 일의 자리의 수보다 작은 자연수이다. 그러면 이렇게 된다는 뜻이네. 일의 자리의 약수가 여기에 들어온다는 얘기이니까 일의 자리가 만약에 6이 됐다.
<SYNC Start=1030637><P Class=KRCC>
6은 약수가 제일 많은 수이니까 이거 먼저 생각해 보려고. 그러면 원래 1, 2, 3, 6이거든. 그런데 1은 여기에 없고.
<SYNC Start=1038487><P Class=KRCC>
6이 들어오면 일의 자리랑 천의 자리 비교했을 때 천의 자리가 작아야 되니까 6은 아니죠. 같은 수는 못 온다는 뜻이죠. 그러니까 2하고 3만 오겠죠. 이거 가능하고.
<SYNC Start=1053886><P Class=KRCC>
그다음에 여기 4가 오면 2만 올 수 있죠. 원래 1, 2, 4인데 4는 못 오니까, 같은 수는 못 오니까. 3이 오면 1, 3인데 같은 수 못 오고 1도 없으니까 안 되고. 2도 못 오고.
<SYNC Start=1068078><P Class=KRCC>
그러면 이게 끝이네요. 그래서 케이스는 이렇게 세 가지로 분류할 수 있겠다. 그렇지? 그러면 이제 이 안의 배열을 마치면 되는 거네요.
<SYNC Start=1082101><P Class=KRCC>
중복을 허락해서 나열까지 하는 것이니까 첫자리와 끝자리가 결정됐는데 그들의 영향을 받을까요? 안 받겠죠. 중복을 허락하니까 첫자리, 끝자리가 누가 오든지 간에
<SYNC Start=1095378><P Class=KRCC>
안에는 누가 오든 상관없는 거죠, 중복을 허락하니까. 그러면 중복 순열 가시면 돼요. 아니면 생각대로 중복 순열. 안에 몇 개? 4개. 여기도 몇 개? 4개.
<SYNC Start=1108241><P Class=KRCC>
그런 케이스가 몇 개? 하나, 둘, 세 가지. 이거예요. 어렵지 않으시죠? 그래서 레벨 1 문제답게 크게 어렵지 않게 경우만 잘 나눠 주시면 되겠다는 얘기입니다.
<SYNC Start=1124062><P Class=KRCC>
여기까지 다소 수월한 문제들을 풀어 봤고요. 그다음에 문제가 어렵진 않은데요, 이제 코드를 붙여서 뭔가 엮어서 문제를 조금 더 풀어 보려고 해요.
<SYNC Start=1135306><P Class=KRCC>
이제 코드 열일곱 번째입니다. 같은 것 중에서 일부만을 뽑아서 나열하는 경우를 좀 공부해 보려고요. 무슨 말이냐.
<SYNC Start=1146414><P Class=KRCC>
같은 것 중에 일부 혹은 중복을 뽑아서 나열하는 경우 공식을 바로 적용하기가 어려워요. 그래서 우리가 이런 경우는 특히 나열하고 싶은 것들을 수작업으로 먼저 뽑아 놓은 다음에
<SYNC Start=1157922><P Class=KRCC>
같은 것이 있는 순열 공식을 적용하거든요. 이런 것들은 제가 지난 시간에 같은 것이 있는 순열을 공부했지만 따로 이런 문제들을 해 드리지는 않았어요.
<SYNC Start=1167050><P Class=KRCC>
제가 여기 문제 풀이를 할 때 하려고 남겨 놓은 코드거든요. 그러니까 같은 것 중에서 아까처럼 예를 들어 a, a, a, b, b, c 이걸 다 나열한다.
<SYNC Start=1175661><P Class=KRCC>
그러면 그냥 다 나열하시면 되는데, 일부만 나열한다든지 아니면 특정한 수는 중복해서 뽑아서 나열하고 싶다든지 이런 식으로 되어 버리면
<SYNC Start=1186432><P Class=KRCC>
공식을 그대로 담백하게 적용하기가 조금 어렵고 숫자 구성을 먼저 하시는 거예요. 그런 다음에 같은 것이 있는 순열을 하는 경우가 시험에도 많이 나오고 서술형으로 보기도 좋아서,
<SYNC Start=1198034><P Class=KRCC>
아니면 실제 수능에서도 좋아하는 유형이거든요. 그런 것들을 비슷한 유형 여러 개가 있어서 제가 같이 비교하면서 좀 보려고 합니다. 중요한 주제이자 코드입니다.
<SYNC Start=1210321><P Class=KRCC>
또 하나는 나열 코드 기억나시죠? 나열의 의미는, 이거 추가 아니고요, 이번 시간에는 이거 강조라고 보시면 되겠네요. 이미 지난 시간에 추가는 했으니까. 그렇죠?
<SYNC Start=1222503><P Class=KRCC>
오늘은 추가할 내용은 없고요. 3영을 일렬로 나열한다. 3! 맞죠. 여러분 이제 보지 말고 입으로 한번 해 보셔야 돼요. 자동 배열은 뭐다? 조합이에요.
<SYNC Start=1231547><P Class=KRCC>
세지 않아요, 나열하는 것. 3명을 원탁에 나열한다, 하나 빼고 2!이다. a, a, b, b를 일렬로 나열한다, 같순으로 4!, 2!2! 나눈다.
<SYNC Start=1240609><P Class=KRCC>
혹은 이건 조합으로도 가능했었죠. 4C2 이런 식으로. 좋습니다. 이걸 살려서 이제 연계 교재 1의 8번 문제를 풀어 보도록 할게요.
<SYNC Start=1252556><P Class=KRCC>
그리고 연달아서 유사한 문제들을 몇 개 다루어 볼 겁니다. 차분하게 한번 보세요. 4의 약수. 누구누구지? 이 중에서 중복을 허락해서 4개를 뽑고 일렬로 나열할 거예요.
<SYNC Start=1270472><P Class=KRCC>
이게 눈에 걸려야 돼요. 중복 허락할 것이고 일렬로 나열할 것이고. 네 자리 자연수 중에서 각 자리의 모든 수의 합이 8인 자연수의 개수래요. 네 자리.
<SYNC Start=1281792><P Class=KRCC>
이것까지 눈에 걸려야 돼요. 그러면 1, 2, 4를 가지고 이 자릿수를 더해서, 각자 숫자를 더해서 8이 되고 싶은 거죠. 그러면 들어가는 숫자를 a, b, c, d라고 해 보세요.
<SYNC Start=1298512><P Class=KRCC>
a, b, c, d, 똑같은 게 들어갈 수도 있고요, 어쨌든 더해서 8이 되면 되죠. a, b, c, d 구성은요? 1, 2, 4 중에 중복을 허락해서 들어갈 수 있는 거예요.
<SYNC Start=1315510><P Class=KRCC>
우리가 다다음 시간쯤에 중복 조합을 시작할 건데요, 이런 방정식을 보면 중복 조합의 느낌이 스멀스멀 나거든요, 사실. 그런데 얘는 중복 조합이 아니에요.
<SYNC Start=1328636><P Class=KRCC>
이 방정식을 보고 중복 조합 느낌이 스멀스멀 나려면 다다음 시간에 할 것이지만 제약이 없어야 돼요. 그냥 0 이상의 정수 이런 식으로 제약이 없이 줘야 되는데 제약이 너무 많아요.
<SYNC Start=1340860><P Class=KRCC>
이렇게 되면 중복 조합으로 흘러가지 않고요, 여러분 생각대로 수작업을 하시면 돼요. 1, 2, 4를 가지고 8을 만들 수 있는 걸 구성하시는 거죠, 쉽게 말하면.
<SYNC Start=1356049><P Class=KRCC>
그런데 0이 없네. 그러면 4400 이런 게 안 된다는 거네. 무조건 최소한 1은 들어가야 되는 거니까. 그렇지? 그러면 이런 건 괜찮지 않아? 4211.
<SYNC Start=1370352><P Class=KRCC>
4가 끼는 건 얘밖에 안 되겠다. 그렇지? 2가 끼는 건 이렇게 괜찮죠. 두 가지밖에 없네요. 그러면 사실 2222는 자리를 바꿀 수가 없잖아요. 그래서 이건 한 가지예요.
<SYNC Start=1394550><P Class=KRCC>
4211의 조합으로 오면 누가 첫 번째 자리에 올지 몰라요. 예를 들어서 1421도 괜찮고 4112도 괜찮고 막 자리 바꿀 수 있죠. 그러니까 얘를 어떻게 해야 돼요?
<SYNC Start=1407100><P Class=KRCC>
그렇죠. 나열 코드를 이용해서 나열하셔야죠. 지금 원탁에 앉혀요? 아니죠. 조합이에요? 순서가 정해져 있어요? 키 큰 순서 나열이에요? 큰 수가 먼저 와요? 아니잖아요.
<SYNC Start=1418779><P Class=KRCC>
조합도 아니에요. 뭐예요? 그냥 일렬로 나열해요? 맞는데 같은 것이 끼어 있죠. 같순으로 나열하시면 돼요. 그리고 이런 케이스나 이런 케이스가 있으니까 더해서 13개 이렇게 하시는 겁니다.
<SYNC Start=1434440><P Class=KRCC>
아시겠죠? 어려운 부분은 아닙니다. 그런데 문제를 어떤 식으로 보셔야 되냐 하면 아직 우리는 여러 가지 순열만 배우는 중이지만
<SYNC Start=1444867><P Class=KRCC>
여러분이 나중에 문제가 섞이고 나면 이게 중복 조합을 이용해야 되는 건지 여러 가지 순열에서 같은 것이 있는 순열을 이용해야 되는 건지를 헷갈려 하고
<SYNC Start=1453221><P Class=KRCC>
고민하게 되는 순간이 분명히 올 겁니다. 그것에 대비해서 제가 이제 문제를 좀 비교해서 몇 가지 드리려고 이것을 가져온 건데요. 그다음 문제 한번 또 볼게요.
<SYNC Start=1464560><P Class=KRCC>
레벨 1의 8번 문제 방금 풀었던 것이랑 유사한 기출 문제, 유사한 생각을 할 수 있어요. 그래서 연계 레벨 1의 8번에서 몰입해서 조금 더 보도록 하겠습니다.
<SYNC Start=1477093><P Class=KRCC>
1개의 주사위를 3번 던져서, 이거 18년 7월 기출인데요, a, b, c라고 할 때 이걸 더해서 14가 되고 싶다는 거예요. 이런 방정식을 보면,
<SYNC Start=1487348><P Class=KRCC>
우리 아직 중복 조합 안 했으니까 제가 자꾸 중복 조합 얘기하는 게 불편하실 수도 있는데요, 이해 못 하셔도 괜찮아요, 중복 조합 얘기는.
<SYNC Start=1494651><P Class=KRCC>
그런데 어쨌든 이 식을 보면서 뭘 떠올려야 되느냐, 이제 이걸 보는 거죠. a, b, c는 주사위를 던져서 나오는 눈의 수이기 때문에 1에서 6까지예요.
<SYNC Start=1512563><P Class=KRCC>
그러니까 이 경우도 수작업이 더 나아요. 중복 조합이라는 걸 물론 배우지도 않았지만 하더라도 너무 경우가 탈락되는 게 많아서 어려워져요.
<SYNC Start=1523701><P Class=KRCC>
그래서 이것도 수작업을 하시는 게 맞아요, 이렇게 제약이 많이 붙으면. 그래서 순서쌍을 정하는 거죠. 6, 6, 같은 거 해도 되잖아요.
<SYNC Start=1534687><P Class=KRCC>
왜냐하면 3번 던지니까 6, 6, 6 나올 수도 있는 거니까. 그래서 큰 수부터 먼저 가려고요. 그러면 6, 6, 2 갈 수 있나요? 6, 5, 3 갈 수 있나요? 6, 4, 4 갈 수 있죠?
<SYNC Start=1552930><P Class=KRCC>
나름대로 제가 세는 규칙이 있죠. 첫 번째 자리를 가장 큰 수인 6으로 박아 놓고 두 번째 자리를 6부터 거꾸로 내림차순으로 내리고 있는 중이에요.
<SYNC Start=1563106><P Class=KRCC>
그런 식으로 뭔가 체계적으로 세셔야 겹치지 않고 빠지지 않게 셀 수 있는 겁니다. 그다음 여기에서는 안 되겠다.
<SYNC Start=1575960><P Class=KRCC>
이렇게 세는 순간 얘보다 큰 수가 들어오게 되면 앞에서 분명히 겹쳐요, 100%. 그래서 이런 건 더 이상 세지 않아요. 왜냐하면, '선생님 이거 순서 정해진 거 아니잖아요.'
<SYNC Start=1588058><P Class=KRCC>
순서는 나중에 정하려고 해서. 순서는 나중에 정할 것이라서 일단은 조합만 가지고 올 거야. 그러면 첫 번째를 낮춰. 여기에서 더 높아질 수는 없어요. 아무리 커도 5예요.
<SYNC Start=1600159><P Class=KRCC>
그러면 이렇게 갈 수 있겠지. 이것은? 안 되지. 5잖아. 끝. 그러면 여기 더 낮춰. 그러면 아무리 커 봤자 4이지. 안 되겠다. 끝인데? 더해서 14 나오는 조합은 이게 끝이에요.
<SYNC Start=1620871><P Class=KRCC>
그러면 이제 어떻게 해요? 이런 조합으로 a, b, c가 나눠 가져야 되죠. 3번 던져서 나오는 눈의 수이기 때문에 어떤 게 a이고 어떤 게 b이고 어떤 게 c인지,
<SYNC Start=1633416><P Class=KRCC>
첫 번째, 두 번째, 세 번째 언제 나올지 모르기 때문에 나열 코드, 같은 것이 있는 순열로 가셔야 돼요. 이것은 3! 하시면 되겠죠.
<SYNC Start=1652528><P Class=KRCC>
맞죠? 같은 것이 있으니까. 그렇지? 얘는 6, 얘는 3, 얘는 3. 그렇죠? 15이네요, 다 더하면. 그래서 15개가 되는 겁니다. 아시겠죠?
<SYNC Start=1666179><P Class=KRCC>
그래서 굉장히 유사한 기출이에요, 이게. 이런 아이디어가 나중에 계속 나와요. 중복 조합에서도 또 쓰일 수 있을뿐더러 이런 식으로 확률에서도 문제가 실제로 나왔어요.
<SYNC Start=1682461><P Class=KRCC>
이게 되게 비슷해요. 이건 사실 제가 개념 교재에 넣었던 문제인데요, 이게 따끈따끈한 작년 6월에 나왔던 모평 문제거든요.
<SYNC Start=1690398><P Class=KRCC>
이걸 왜 제가 변형이라고 달아 놨냐 하면 이게 원래 문제는 똑같은데 확률을 구하는 문제였어요. 그런데 이걸 경우의 수로 제가 바꾼 거예요.
<SYNC Start=1697844><P Class=KRCC>
확률 문제에서 경우의 수로 바꿨을 뿐이지, 문제는 똑같습니다. 다시 한번 보도록 할게요. 주사위 4번 던지죠. 나오는 눈의 수를 a, b, c, d라고 하고
<SYNC Start=1707329><P Class=KRCC>
a, b, c, d를 곱해서 12가 되는 것을 찾으래요. a, b, c, d는 뭔가요? 1에서 6까지 들어올 수 있죠. 가장 큰 장점은 1이 들어올 수 있다는 거죠.
<SYNC Start=1723405><P Class=KRCC>
그러니까 큰 수 잡으면 6211 가능하죠. 그렇죠? 그다음 이거 낮춰야겠네요. 4 곱하기 3은 12이니까 가능하죠. 더 낮출까요?
<SYNC Start=1744162><P Class=KRCC>
왜냐하면 12가 되려면 5는 안 돼요. 5는 12를 나눌 수 없으니까. 4는 되고. 약수만 들어올 수 있으니까. 3 가능하죠. 그러면 3, 4는 겹치니까 3, 2로 가면 되겠다. 3221.
<SYNC Start=1759419><P Class=KRCC>
그리고는 안 되죠. 이렇게 세 가지 케이스라는 걸 먼저 알아내셔야 되고요, 수작업으로. 그러고 나서는 1개의 주사위를 4번 던지니까 그 4번의 순서가 정해져 있는 건 아니잖아요.
<SYNC Start=1772804><P Class=KRCC>
그래서 그들끼리 자리 바꾸는 방법을 생각해 보셔야죠. 나열 코드, 같은 것이 있는 순열. 6211을 a, b, c, d에 나열하는 방법이니까 4!을 2!로 나누고.
<SYNC Start=1786807><P Class=KRCC>
이것은 똑같죠? 이것도. 12, 12, 12. 더하면 36. 정답은 36가지이다. 이렇게 되는 겁니다. 하실 수 있겠어요? 어려운 문제는 아니었어요.
<SYNC Start=1805346><P Class=KRCC>
그런데 이런 식의 비슷한 느낌들을 여러분이 살려서 뭔가, 이게 지금 코드 열일곱 번째였거든요. 같은 것 중에 일부를 뽑아서 나열하는 경우이다.
<SYNC Start=1816641><P Class=KRCC>
그러면 바로 공식을 적용하지 말고 나열하고 싶은 걸 수작업으로 이렇게 케이스를 나눈 다음에 그들이 나열될 때 같순이 쓰이긴 쓰이는 거죠.
<SYNC Start=1825333><P Class=KRCC>
그래서 그렇게 했던 방법이 이것 이것 이것 3개. 이렇게 제가 연달아서 비교하면서 보여 드렸습니다. 이렇게 앞으로는 여러분 연계 교재 문제 풀이를 할 때 특히 코드도 넣겠지만
<SYNC Start=1840906><P Class=KRCC>
유사한 기출이랑 비교해서 보는 시간을 몇 번 가져 보려고 해요. 그러면서 여러분이 적용력이 생기고, 어쨌든 중요한 건 시험장에서 여러분의 머릿속에서 풀이가 나오고
<SYNC Start=1852795><P Class=KRCC>
손이 움직여야 되는 것이라서 기존에 풀어 봤던 기출이나 혹은 새로운 기출이더라도 비슷한 문제 유형이나 느낌은 엮어서 같이 공부하는 그런 것들이 좀 필요한 때거든요, 지금이.
<SYNC Start=1865232><P Class=KRCC>
그래서 여러분 그런 식의 생각을 가지고 공부를 좀 해 주셨으면 좋겠습니다. 이런 일이 좀 생길 거예요, 유사 기출을 같이 엮어서 보는 일들.
<SYNC Start=1874694><P Class=KRCC>
학습 효율이 훨씬 높아질 테니까요. 그다음 이제 레벨 2의 2번 문제로 가서 우리 문제 풀이 계속해 보도록 하겠습니다.
<SYNC Start=1884598><P Class=KRCC>
이번에는 숫자 0, 1, 2 중에서 중복을 허락해서 6개를 택해서 일렬로 나열하고 싶다. 지금 다 나왔어요. 중복하고 싶고 일렬로 나열하고 싶고. 중복도 하고 나열도 하고.
<SYNC Start=1900833><P Class=KRCC>
그리고 6개이고. 그런데 제약 조건이 좀 붙었네요. 어떤 제약 조건이냐 하면 0의 개수가 1 이하인 자연수래요. 0의 개수가 1 이하이다.
<SYNC Start=1912819><P Class=KRCC>
그러면 0의 개수가 1 이하라는 건 0의 개수가 1개 아니면 0개면 되네요. 0의 개수가 없거나 1개이거나. 0이 없거나 1개이거나.
<SYNC Start=1924626><P Class=KRCC>
그러면 그 0이 1개인 경우, 없는 경우로 나눠서 생각하면 되지. 0이 1개, 0이 0개, 0이 없다는 얘기죠. 그러면 얘들아, 0이 들어갈 자리 먼저 선택해야겠네.
<SYNC Start=1941929><P Class=KRCC>
첫 번째 자리는 어차피 안 되니까 5개 중에 하나를 선택해서 0을 아무 데나 하나 박아 놓으세요. 특정한 자리에 들어갔다면 일단 고정시켜 놓으시고,
<SYNC Start=1953317><P Class=KRCC>
그러고 나서 나머지 자리를 배치해서 여섯 자리 자연수를 만드시면 되거든요. 중복을 허락해서 6개를 택했다고 했으니까 0이 첫 번째 자리는 어차피….
<SYNC Start=1964359><P Class=KRCC>
0은 그리고 1개이니까 이미 하나 들어가서 0은 이제 빼야 돼요. 아예 배제하고, 1, 2를 가지고 나머지 다섯 자리를 배열하면 되니까
<SYNC Start=1972676><P Class=KRCC>
첫 번째 자리에 올 수 있는 것 1, 2 선택권 두 가지, 두 번째 자리에 올 수 있는 것 선택권 두 가지, 여기도 두 가지, 여기도 두 가지, 여기도 두 가지.
<SYNC Start=1980451><P Class=KRCC>
어, 생각대로 중복 순열, 2의 5제곱. 이렇게 되는 거예요. 2π5 하셔도 되고. 그다음 0이 안 들어온다. 그렇다면 모든 자리에 0 없이 가는 거죠.
<SYNC Start=1995092><P Class=KRCC>
그러면 이 자리도 1, 2 두 가지, 이 자리도 그때 두 가지, 또 두 가지, 또 두 가지, 또 두 가지. 중복해서 들어가도 되니까 서로 영향 하나도 안 주죠.
<SYNC Start=2003971><P Class=KRCC>
생각대로 중복 순열. 2의 6제곱. 둘을 더하시면 돼요. 2의 5제곱으로 묶을까 봐. 그러면 5 더하기 여기 2가 되니까 32에다가 7 곱하게 되네. 224인가요?
<SYNC Start=2022665><P Class=KRCC>
이렇게 정리하시면 되겠죠. 하실 수 있겠죠? 그러니까 쉽게 말하면 특정한 숫자가 몇 번 들어가야 되는지를 기준을 나눠 준 거예요.
<SYNC Start=2039372><P Class=KRCC>
그래서 그 기준을 가지고 여러분이 케이스를 겹치지 않게 구분하신 것이라고 보시면 됩니다, 이런 경우는. 그렇죠?
<SYNC Start=2046988><P Class=KRCC>
그래서 0이 1개 들어가는 것, 안 들어가는 것으로 크게는 경우를 나누고, 그때마다 0의 위치가 1개 들어갔을 때 첫 번째 자리는 어차피 안 되니까
<SYNC Start=2056379><P Class=KRCC>
나머지 자리 중에 어디에 들어갈지를 결정한 다음에 자유롭게 0을 뺀 1, 2가 들어가는, 생각대로 중복 순열로 가시면 된다는 얘기였어요.
<SYNC Start=2064842><P Class=KRCC>
레벨 2 문제이긴 하지만 수작업이 들어가서 그렇지, 어려운 유형은 아니었다는 것 또 다시 한번 확인해 주시기 바라고요.
<SYNC Start=2072990><P Class=KRCC>
그러면 다음 문제로 가서 레벨 2의 3번 문제로 가 보도록 하겠습니다. 문자 a, b, c 중에서 중복을 허락해서 4개를 선택하고 일렬로 나열까지 한대요.
<SYNC Start=2088362><P Class=KRCC>
또 나왔죠. 중복 허락했죠, 4개이고 그다음에 나열까지 하는. 그런데 a가 나오는 횟수가 b가 나오는 횟수보다 많고 싶다고 했어요.
<SYNC Start=2100463><P Class=KRCC>
이것도 여러분 수작업으로 횟수를 정해 주셔야겠네요. 그래서 a가 나오는 횟수가, 중복을 허락해서 4개를 선택하니까 만약에 b가 나오는 횟수가 0이다.
<SYNC Start=2114803><P Class=KRCC>
그렇다면 a는 4번도 나오고 아니면 3번도 나올 수 있고 2번도 나올 수 있고 1번도 나올 수 있죠. 5번은 못 나오죠. 얘는 네 자리이니까, 아무리 커 봤자. 그렇지?
<SYNC Start=2129594><P Class=KRCC>
0, 0은 안 되고, 어차피. 그다음 b가 1번 나온다. 그러면 이때는 a가 2번 나올 수도 있고 3번 나올 수도 있고. 4번은 안 되죠.
<SYNC Start=2137477><P Class=KRCC>
왜 4번은 안 되냐 하면 이렇게 더하면 벌써 5개잖아요. 그러면 a 4개, b 하나 하면 다 더해서 네 자리를 넘어가니까 그건 아니죠. 그래서 이렇게는 가능하고요.
<SYNC Start=2147848><P Class=KRCC>
b가 2번 나왔다. 그러면 얘보다 많이 나와야 되니까 a가 3번 나와야 되는데, 혹은 4번 이렇게 올라가야 되는데 둘을 더해서 끽해야 네 자리까지 만들 수 있는 거니까 이건 말이 안 되죠.
<SYNC Start=2158778><P Class=KRCC>
이것은 3, 2 더하면 5 나오니까. 그래서 다 틀렸고. 그래서 이렇게밖에 케이스가 안 나온다는 거죠. 그래서 각각의 케이스마다 여러분이 구분해 보시면 돼요.
<SYNC Start=2168855><P Class=KRCC>
그래서 만약에 a가 4번 나오고 b가 안 나온다면 먼저 aaaa의 조합일 것이고요. a가 3번 나오고 b가 안 나온다면 그러면 여기는 누가 와요? b 대신에 c가 채워야죠.
<SYNC Start=2184630><P Class=KRCC>
a가 2번 나오고 b가 안 나온다면 나머지 c가 채워야죠. a가 1번 나오고 b가 안 나온다면 c가 다 채워야죠. 이번에는 a가 3번 나오고 b가 1번 나올 수 있고요.
<SYNC Start=2203340><P Class=KRCC>
a가 2번 나오고 b가 1번 나오면 나머지는 c가 채워야죠. 이해되세요? 케이스가 이렇게 돼요. 그리고 이들끼리 나중에 한 번에 더해 주시면 되는 거죠. 이해 가시죠?
<SYNC Start=2221294><P Class=KRCC>
그러면 이건 몇 가지예요? 한 가지. 이것은요? 네 가지. 이것은? 여섯 가지. 이것은? 그대로 네 가지죠. 이것도 네 가지죠. 2!로만 나누면 되네. 열두 가지.
<SYNC Start=2244452><P Class=KRCC>
왜냐하면 이렇게 문자를 선택한 다음에는 4개를 선택해서 일렬로 나열까지 하는 경우라서 이것을 놓고 나열 코드를 적용해야 되죠.
<SYNC Start=2256381><P Class=KRCC>
그런데 aaaa는 어차피 한 가지인데 이것은 같은 것이 3개 끼어 있으니까 같순으로 이렇게 하시면 되고. aacc라고 하면 나열 코드 해서 역시 같순으로 하시면 되고.
<SYNC Start=2265949><P Class=KRCC>
물론 이 경우 조합도 다 가능한 건 아시죠? 4개 중에 하나만 c가 온다든지 4개 중에 3개만 a가 온다든지 해서 하셔도 정답도 같고 식도 같은 의미예요.
<SYNC Start=2276573><P Class=KRCC>
어찌 됐든 그렇게 해서 나온 답들을 더해 주시면, 왜냐하면 이런 케이스, 이런 케이스 있다는 걸 다 합쳐 주는 거니까 더해 주시면 이제 정답이 나오게 되는 거죠.
<SYNC Start=2289588><P Class=KRCC>
그러면 더해 주시면 어떻게 되나요? 31가지네요. 그래서 이 문제의 정답은 31이야. 이렇게 정리하실 수 있겠습니다. 됐죠?
<SYNC Start=2305293><P Class=KRCC>
이 문제는 어쨌든 a가 나오는 횟수가 b가 나오는 횟수보다 크다는 걸 가지고 a가 나오는 횟수와 b가 나오는 횟수를 여러분이 수작업으로 먼저 정해 주시고,
<SYNC Start=2317829><P Class=KRCC>
그러고 나서 문자의 배열을 정한 다음에 여러분이 그다음에 다시 나열 코드를 적용하시는 그런 문제입니다. 확통에서 가장 기본 중의 기본은 수작업이에요, 항상 느끼겠지만.
<SYNC Start=2331231><P Class=KRCC>
그래서 수작업을 잘하셔야 된다는 걸 항상 확인하셔야 됩니다. 됐죠? 오늘 레벨 2 문제를 다 풀어 보도록 하겠습니다. 레벨 2의 4번 문제까지 연결해서 보시죠.
<SYNC Start=2345199><P Class=KRCC>
4번 문제는 지난 시간에 했던 같은 것이 있는 순열에서 도로망 문제, 최단거리 길 찾기예요. 그런데 이 문제 조금 특이해요.
<SYNC Start=2360366><P Class=KRCC>
A에서 B까지 가는데 그냥 가는 게 아니고요, 반드시 C를 거치고 싶대요. 이런 경우 약간 난도가 있어요. 이건 약간 여러분 이런 문제 중에 신유형으로 보긴 하셔야 돼요.
<SYNC Start=2375874><P Class=KRCC>
최근에 이런 문제를 많이 본 적은 없을 겁니다. 왜냐하면 C를 반드시 거친다는데 C의 위치가…. 아, 그리고 A랑 B의 위치가 보통은 B가 여기에 있거든요.
<SYNC Start=2384277><P Class=KRCC>
그런데 B가 이 아래에 있다는 건 갔다가 올라갔다가 또 와야 돼요. 최단거리를 그냥 하면, C를 생각 안 하면 그냥 이렇게 오면 최단거리거든요. 이런 식으로.
<SYNC Start=2396155><P Class=KRCC>
무슨 말인지 아시죠? 이런 식으로. 되세요? 다시 올라갈 필요도 없네요, 여기. 최단거리이면 그냥 이렇게 내려와야 되네요. 아니면 이렇게 갔다가 내려오든지.
<SYNC Start=2407355><P Class=KRCC>
그게 아니라 B가 여기에 있는 것도 특이하지만 C가 이 위에 있는데 그걸 꼭 지나야 된다는 것도 좀 특이한 문제이긴 하죠. 그래서 일단 방법은 이렇게 생각하실 수 있어요.
<SYNC Start=2425619><P Class=KRCC>
이런 문제는 C를 먼저 데려다 놓는 방법을 생각하셔야 돼요. 포인트는 그거예요. 일단 C로 가자. C로 가는 방법을 어떻게든 생각해 내야 되고요.
<SYNC Start=2448107><P Class=KRCC>
C로 간다. 그러고 나면 어렵지 않아요. 왜냐하면 C로 갔다면 B로 가는 방법은 그다음에 생각하면 되는데, 문제는 C로 갈 때 반드시 어디 어디를 거칠 수밖에 없는지를 생각할 수밖에 없죠.
<SYNC Start=2460329><P Class=KRCC>
맞아요. C로 가려면 이 점에서 오든지 이 점에서 오든지 이것밖에는 안 되죠. 맞습니다. 그래서 여기를 D, E로 설정할 거예요.
<SYNC Start=2469279><P Class=KRCC>
C로 가고 싶으면 D를 거치든지, 무슨 말인지 아시겠죠? 또는 E를 거치든지. 이 경로 말고는 C로 가는 경로는 존재하지 않아요.
<SYNC Start=2484031><P Class=KRCC>
그래서 이걸 둘로 나누겠다, 이 생각을 하실 수 있고요. 그러면 D를 거쳐서 왔다면 부담 없이 그냥 가시면 돼요. 이때는 어렵지 않아요.
<SYNC Start=2493785><P Class=KRCC>
D를 거쳐서 왔다면 부담 없이 그냥 여기까지 온 다음에 이렇게 같은 것이 있는 순열로 가면 되어서 오케이, 쉬워요.
<SYNC Start=2501516><P Class=KRCC>
그런데 E를 거쳐서 왔다면 왔던 길을 다시 갈 수는 없으니까 반드시 얘가 어디로밖에 못 가요? 이리로밖에 못 가죠. 그러니까 여기밖에 못 가요. 무슨 말인지 알겠어요?
<SYNC Start=2514851><P Class=KRCC>
C에서 움직일 때 아래로 다시 내려갈 수는 없으니까. 이해되세요? 그래서 E를 거치게 되면 반드시 이 점을 F라고 하고 여기에서 F로 갔다가 B로 가야 된다.
<SYNC Start=2526711><P Class=KRCC>
반드시. 경로가 그렇게 된다. 그 정도 생각만 하실 수 있으면 이 문제 그냥 수월하게 갈 것 같은데요. 이런 케이스 말고 이런 케이스 말고는 없잖아요.
<SYNC Start=2538616><P Class=KRCC>
C로 가는데 D 거쳐서 가거나 E 거쳐서 가는 것밖에는 없는데, D를 거치는 방법 세면 되고 E를 거쳐서 가는 것은 반드시 F를 거치지 않고는 못 내려오니까,
<SYNC Start=2547826><P Class=KRCC>
왜냐하면 여기에서 다시 밑으로 갈 수는 없으니까 여기에서는 오른쪽밖에 갈 데 없고. 그러면 F에서 B 가는 것 나중에 해주면 되니까 어렵지 않게 갈 수 있겠죠.
<SYNC Start=2556195><P Class=KRCC>
그래서 이렇게 나눠서 생각하시면 좋겠다. 그러면 A에서 D 가는 것 먼저 생각해 볼까? 여기까지 가는 것 3!을 2!로 나누니까 세 가지거든요. 이 경우.
<SYNC Start=2572456><P Class=KRCC>
D에서 C로 가는 건, 여기에서 C로 가는 건 한 가지예요. 그렇죠? 아이고, 옆에 좀 더 가서 쓸게요. D에서 C로 가는 건 한 가지예요. 됐죠?
<SYNC Start=2586917><P Class=KRCC>
그다음에 이제 C에서 결국에는 B로 다이렉트로 갈 것이거든요. 그렇죠? 그러면 C에서 B로 다이렉트로 가고 싶다고 하면 여기 6개의 정사각형이 있는 걸 가지고 생각하면 되죠.
<SYNC Start=2598634><P Class=KRCC>
그래서 5!, 3!2! 이렇게 계산하면 되고요. 그래서 이 경로의 개수는 계산했어요, 이렇게까지. 그다음 두 번째, A에서 E로 데려다 놓고 싶다.
<SYNC Start=2611727><P Class=KRCC>
마찬가지예요. 여기까지 가는 게 세 가지인데 여기에서 가는 건 한 가지이니까 3!…. 이거 밑에다가 써야겠다, 바로 눈에 보이게. 3!, 2!까지 갔고.
<SYNC Start=2624536><P Class=KRCC>
여기에서 이렇게 가는 건 한 가지이니까, 어쨌든. 그다음에 E에서 C로 가는 것 또 한 가지죠. 그러면 C로 갔어요. C에서는 무조건 F밖에 못 간다고요.
<SYNC Start=2634102><P Class=KRCC>
밑으로 다시 못 내려가니까. 그래서 F로 가는 것도 한 가지예요. F까지 왔다. 그러면 B까지 가는 건 이 사각형 4개 합친 거잖아요. 그래서 둘, 둘이죠.
<SYNC Start=2645619><P Class=KRCC>
같순으로 나열하시면 되죠. 이렇게. 그때마다 발생하니까 다 곱해 주시면 되고. 이해되시죠? 30. 그렇죠? 이게 10이니까. 6 곱하기 3은 18.
<SYNC Start=2665154><P Class=KRCC>
그리고 이런 케이스도 있고 이런 케이스도 있고. 더하게 되니까 48. 그래서 이 문제의 정답은 48이야. 이렇게 정리하실 수 있습니다. 해 보실 수 있겠죠?
<SYNC Start=2677514><P Class=KRCC>
조금 어려워요. 이 문제는 조금 생각할 여지는 있고요. 그러니까 쉽게 말하면 엄청 문제가 어렵다기보다는 뻔한 문제가 아니라는 것, 그것을 좀 염두에 두셨으면 좋겠습니다.
<SYNC Start=2686780><P Class=KRCC>
약간 신유형의 느낌이긴 한데요, 그럴 때일수록 여러분이 경로를 생각하는 연습을 하시는 게 좋아요. 좀 복잡하고 어렵다고 하면 내가 갈 수 있는 경로,
<SYNC Start=2697472><P Class=KRCC>
쉽게 말하면 저는 길잡이 점을 잡은 거나 마찬가지거든요. 그래서 최단거리 길 찾기는 이렇게 정리하시면 돼요. 수작업이 되면 수작업으로 하나하나 세면서 포인트마다 점을 잡아서 가든지,
<SYNC Start=2710043><P Class=KRCC>
아니면 저처럼 그게 좀 어렵다면 경로를 생각해서, 길잡이 점을 잡아서 좀 쪼개서 겹치지 않게 세어서 더하는 방식으로 가든지 그런 식으로 생각을 정리해 주시면 되겠습니다.
<SYNC Start=2723736><P Class=KRCC>
여기까지 내용으로 오늘은 마무리할 것이고요. 다음 시간에 조금 더 볼 거예요. 연계 교재 문제 풀이 좀 덜 끝났거든요.
<SYNC Start=2730358><P Class=KRCC>
그 내용 하시면서 우리 여섯 번째 시간 마무리하면서 여러 가지 순열 마무리할 거니까 여러분 복습하면서 문제 좀 미리 봐 두고 오면 좋겠습니다.
<SYNC Start=2738214><P Class=KRCC>
오늘도 마무리하시면서 코드 올려 주시고요, 수강 후기 게시판에. 우리는 다음 시간에 뵙도록 할게요.
<SYNC Start=2745593><P Class=KRCC>
 
</BODY>
</SAMI>
