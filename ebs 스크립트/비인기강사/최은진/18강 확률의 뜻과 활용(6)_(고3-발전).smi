<SAMI>
<HEAD>
<TITLE>Time Tools (C) CCNSOFT 2005</TITLE>
<STYLE TYPE="text/css">
<!--
P { margin-left:8pt; margin-right:8pt; margin-bottom:2pt;
    margin-top:2pt; font-size:12pt; text-align:left;
    font-family:굴림, Arial; font-weight:normal; color:white;
    background-color:#405A8D; }
.KRCC { Name:한국어; lang:ko-KR; SAMIType:CC; }
#STDPrn { Name:Standard Print; }
#LargePrn { Name:Large Print; font-size:20pt; }
#SmallPrn { Name:Small Print; font-size:10pt; }
-->
</STYLE>
</HEAD>
<BODY>
<SYNC Start=9720><P Class=KRCC>
반갑습니다. 2022 수능특강 최은진의 확률과 통계 강의에 오셨고요. 오늘 저는, 몇 번째 시간인가요? 18번째 시간으로 이렇게 또 만나게 됐습니다. 오늘은 선생님이 여러분에게 강조 드리고 싶은 제 감성 코드는
<SYNC Start=27833><P Class=KRCC>
.
<SYNC Start=30795><P Class=KRCC>
고생입니다. 고생. '고생' 왜 어른들이 그러잖아요. '젊어서 사서 고생도 하는데' 이런 얘기도 하시고요. '고생 끝에 낙이 온다.' 이런 속담도 있고요. 사실 되게 너무 좀 올드한가요, 내용이? 그렇죠. 그 표현이요.
<SYNC Start=46908><P Class=KRCC>
어쨌든 그 고생이라는 말이 우리 일상생활에서 되게 많이 쓰는 말이죠. "이거 하느라고 엄청 고생했어.", '몸이 힘들고 정신적으로 고되다.' 약간 이런 의미잖아요. 이번 강의가 약간 고생스럽게 느껴질 수도 있습니다. 
<SYNC Start=64549><P Class=KRCC>
그런데 이 고생이라는 말이 엄청 힘들기만 하면 사실 다 하기 싫거든요. 그런데 고생을 했는데 그만큼의 대가가 있다면, 고생을 했는데 그만큼의 보상이 있다면 해볼 만하지 않을까요?
<SYNC Start=84389><P Class=KRCC>
오늘 하는 고생이 그런 거예요. 오늘은 문제를 많이 풀지 않아요. 많아야 4~5 문제 정도. 레벨 3 문제고요. 제가 지금까지 여러분하고 1단원, 2단원, 3단원째 공부하잖아요. 
<SYNC Start=98567><P Class=KRCC>
지금까지 레벨 3 문제 중에서는 제가 느끼기에는 가장 여러분을 고생시켰을만한 단원이에요. 고생시켰을만한 문제들이에요. 
<SYNC Start=107428><P Class=KRCC>
문제의 느낌이 어디서 본 느낌이 많이 안 들고, 좀 새로운 느낌들의 문제들이 레벨 3에 이번 강의에는 많아요. 그리고 문제의 난이도도 조금은 있어요. 그래서 여러분이 좀 보면서 
<SYNC Start=118813><P Class=KRCC>
'좀 어렵다. 어떻게 해야 되지?' 이런 생각도 했을 법한 그런 내용이고요. 그러나 모든 수학이 그렇지만 특히 확통도 고민을 많이 하면서, 내가 고생을 해가면서 생각을 좀 많이 해보고 이렇게 하면 
<SYNC Start=134880><P Class=KRCC>
그만큼 여러분이 남는 게 생겨요. 뭐가 생기느냐 하면 그 풀이를 외우고 이런 게 아니라 생각을 하는 과정에서 내 머리가 단련이 되고요. 
<SYNC Start=143387><P Class=KRCC>
해설을 다 보지 말고 일부만 보거나, 해설지의 일부 꼭지만 보고 아이디어를 얻어서 다시 한 번 고민을 해보고 다시 고생을 해보는 작업을 하면 그 안에서 또 머릿속에 있는 것들이 서로 조직화되면서 
<SYNC Start=159628><P Class=KRCC>
내가 또 생각할 수 있는 힘이 길러져요. 그게 포인트예요. 그래서 고생만 한다고 그러면 사실 하지 말라고 하죠. 저도 말리고 싶어요. 
<SYNC Start=170388><P Class=KRCC>
그런데 고생을 하면 그만큼 뭔가 얻어질 수 있다고 한다면 그렇다면 해볼 만하지 않겠느냐? 하는 게 오늘 주제입니다. 오늘의 감성 코드 얘기하면서 오늘 어떤 내용으로 문제 공부하고 할지 목표 확인하면서 갈게요. 
<SYNC Start=186720><P Class=KRCC>
오늘은 전체적으로 연계 교재 문제 풀이를 하는 날입니다. 그래서 오늘 하게 되는 것들에 대한 코드는, 코드는 많이 없어요. 그냥 앞에 하는 내용이 여사건의 확률이라 그것만 하시면 되고요. 
<SYNC Start=198152><P Class=KRCC>
전체적으로 다른 내용들은 특별한 코드라기보다는 아이디어를 좀 떠올려야 되는 문제라서요. 오늘은 이렇게 가볍게 가시면 되겠습니다. 
<SYNC Start=205484><P Class=KRCC>
그러면 오늘 첫 번째 코드 한 번 보면서 갈게요. 이거 지난 시간에 이미 했고요. 여사건의 확률입니다. '적어도 하나~'와 같은 단서가 없더라도 직접 구하려고 시도를 하고 수작업을 하는데 이거 너무 많아. 
<SYNC Start=217957><P Class=KRCC>
그러다 보면 여사건의 확률 구하는 게 더 나을 수도 있겠다는 생각을 하게 되고요. 그래서 어떤 특별한 단서가 있지 않더라도 여사건의 확률을 구하는 게 더 쉽다. 그렇다면 여사건 확률 이용하시면 된다는 거죠. 
<SYNC Start=231948><P Class=KRCC>
여기까지 다시 한 번 코드 확인하시고, 지난 시간 17강이었거든요. 거기 마지막에서 풀었던 문제와 유사한 느낌이 드는 기출이에요. 그러나 이 기출은 우리 교재에 있습니다. 
<SYNC Start=243418><P Class=KRCC>
우리 교재 뭐죠? 대표 기출로 나와 있는 문제인데요. 그 문제를 지난 마지막에 풀었던 그 문제를 떠올리면서 같이 보시면 되겠어요. 
<SYNC Start=252644><P Class=KRCC>
방정식을 만족시키는 음이 아닌 정수의 순서쌍 중에서 임의로 한 개를 선택하는데 순서쌍 이게 0이 아닌 것을 만족시킬 확률이 q/p라고 할 때 p+q를 구해 봐라. 지금 그랬습니다. 여기까지 되셨죠?
<SYNC Start=265968><P Class=KRCC>
여러분, 볼게요. 우선 전체의 경우의 수 분의 확률을 구하려면 전체의 경우의 수 분에 이 확률 일어나는 것을 해야 되니까 전체 경우의 수부터 좀 구해볼까요? 
<SYNC Start=278256><P Class=KRCC>
그것은 이것을 만족하는 음이 아닌 정수의 순서쌍이니까 이것은 이력이 놨죠. 더해서 10이 되는 거고, x, y, z가 0 이상의 순서쌍이면 3H10이라고 해서 12C2 하고 12, 11 해서 66까지는 괜찮아요. 
<SYNC Start=294955><P Class=KRCC>
여기까지 됐죠? 네, 좋아요. 이게 전체고요. 이제 집중해서 봅시다. 우리가 지금 필요한 것은 뭐냐 하면 이게 0이 아니고 싶다는 거예요. 이게. '아니다'라는 표현이 들어가면 여러분이 굉장히 좀 껄끄러운 것은 사실이죠. 
<SYNC Start=311995><P Class=KRCC>
그래서 여사건을 보통은 생각하는 경우가 많아요. '아니다' 그러면, 아닌 것을 찾으려면 'x가 y랑 다르고, y는 z랑 다르고, z는 x랑 다르고'를 찾는 게 생각보다 번거로운 작업이라서 개수를 불문하고
<SYNC Start=325503><P Class=KRCC>
그래서 이것은 여사건을 떠올려서 어떻게 하시면 좋으냐면 1에서 이것의 여사건인 '(x-y) (y-z) (z-x)'가 0이 되는 것을 빼주자. 여사건. 
<SYNC Start=340038><P Class=KRCC>
그런데 우리 방정식에서 세 수식을 곱해서 0이 됐다면 이거랑 같은 말이 뭐냐 하면, 'x가 y랑 같거나 또는 y가 z랑 같거나 또는 z가 x랑 같거나' 이거 아니에요?
<SYNC Start=354572><P Class=KRCC>
그래서 결국 이게 되거나 이게 되거나 이게 되는 것을 빼는 거니까 이거, 이거, 이거가 되는 것을 각각의 경우의 수를 구해서 더하기로 처리하시면 되겠죠. 그리고는 겹치는 부분은 당연히 빼주셔야죠. 
<SYNC Start=370678><P Class=KRCC>
합의 법칙을 쓰되 겹치는 게 나오면 빼줘라. 이렇게 얘기했었거든요. 그래서 x가 y랑 같은 경우, y가 z랑 같은 경우, z가 x랑 같은 경우를 하나하나 구하시고
<SYNC Start=380129><P Class=KRCC>
그러고 나서 x, y랑 같고, y, z가 같은 것, 둘 다 만족하는 것은 뭐예요? 셋 다 같은 거죠, 결국. x, y, z가 다 같은 것. 그것을 빼라는 얘기죠. 일단 거기까지는 이해 돼요? 겹치는 것은 여러 번 세니까 빼줘야 되는 거죠. 
<SYNC Start=394890><P Class=KRCC>
또 y, z, x가 다 같은 것, 그것도 빼주고, 그런 식으로 빼줘야 되는데 정말 다행인 것은 x, y, z가 다 같은 경우가 여기 나올 수가 있어요? 
<SYNC Start=404067><P Class=KRCC>
.
<SYNC Start=407087><P Class=KRCC>
없죠. 왜냐하면 x, y, z가 다 같다는 얘기는 얘를 여기다 넣어주면 3x 처리할 수 있는데 더해서 10이 되는 x 정수 순서쌍을 구할 수가 없어요. 얘가 3의 배수가 아니었거든요, 10이니까.
<SYNC Start=423156><P Class=KRCC>
너무나 다행이죠. 그래서 결국은 이 팀과 이 팀과 이 팀은 서로서로 배반 사건 관계에 있어요. 서로 겹치는 게 나오지 않는다는 거죠. 
<SYNC Start=431886><P Class=KRCC>
그러니까 결국은 '1번 케이스, 2번 케이스, 3번 케이스를 구해서 더하기만 하면 되는구나!'라고 결론지으면 되죠. 
<SYNC Start=438413><P Class=KRCC>
그러면 볼게요. x가 y랑 같다고 그러면 이제 어떻게 처리하면 되느냐 하면 y 자리에 x를 넣고 '2x+z가 10이야.'라고 처리하면 되죠. 이거 이쪽으로 올라가서 쓸게요. 칸이 좀 부족하니까요. 
<SYNC Start=452297><P Class=KRCC>
.
<SYNC Start=454050><P Class=KRCC>
①번입니다. 2x+z가 10이더라. 이렇게 가시고요. 그러면 이것을 만족하는 순서쌍을 구해보시면 일단 계수가 다르기 때문에 여기다가 맥시멈 5부터 들어갈 수 있네요. 5, 4, 3, 2, 1, 0. 그렇죠? 
<SYNC Start=471965><P Class=KRCC>
0, 2, 4, 6, 8, 10까지 들어가네요. 그러다 보니 (x, z)의 순서쌍이 총 6가지가 된다는 것 느껴지시죠. 그런데 x랑 y는 같다고 놨으니까 결국에는 전체적으로 이 ①번 순서쌍은 6개인 거예요. 
<SYNC Start=490408><P Class=KRCC>
그러면 얘가 6개, 얘도 6개, 얘도 6개이겠죠. 왜? x, y가 같은 경우고, z는 신경 안 쓴 건데, 여기는 거꾸로 y, z가 같고 x를 신경 안 쓴 건데 위치만 바꿨을 뿐이죠. 
<SYNC Start=504674><P Class=KRCC>
z, x도, z, x는 같고 y는 따로 놀지만 그 역할만 바꿨을 뿐이죠. 결국은 다 6개씩이고요. 아까 얘기했듯이 겹치는 부분은 생기지 않아요. 그러니까 이 6×3=18만 빼주시면 돼요. 되시죠? 
<SYNC Start=519884><P Class=KRCC>
그래서 결과적으로는 1에서 18/66을 빼게 돼서 6×3=18, 6×1=6 해서 8/11이야. 이렇게 정리해 주시면 되는 문제입니다. 어렵지 않으시죠? 그래서 p, q를 더하시면 11하고 8을 더하게 되니까 19가 되는 겁니다. 
<SYNC Start=537482><P Class=KRCC>
이 정도 문제는 이제 여러분이 여사건을 이용해서 푼다고 생각을 하시되 지난 시간에 풀었던 것과 약간의 유사점이 있으니까 참고해서 보시면 되고요. 
<SYNC Start=546750><P Class=KRCC>
생소한 문제가 나왔을 때 여러분이 계획을 잡고 세워가는 연습을 좀 많이 하셔야 돼요. 이 문제도 이렇게 보여도 당시에 나왔을 때 좀 어렵게 느꼈던 문제 중에 하나이기는 합니다. 
<SYNC Start=556836><P Class=KRCC>
친구들이 조금 어렵게 느꼈던 문제 중에 하나였어요. 이제 본격적으로 레벨3 문제들 하나씩 풀어가도록 할게요. 첫 번째 문제입니다. 이 문제는 
<SYNC Start=567273><P Class=KRCC>
7 이하의 자연수를 x라고 할 때, 임의로 선택한 한 집합을 A라고 하자. 그럴 때 A가 다음 조건에 만족시킬 확률은 q/p이다. 그럴 때 p, q를 더해 보아라. 그랬습니다. 
<SYNC Start=580054><P Class=KRCC>
모든 부분 집합이니까 결국에는 1, 2, 3, 4, 5, 6, 7 중에서 모든 것을 다 부분 집합으로 엮을 수 있는 거죠. 모든 부분 집합이니까 공집합도 포함이에요. 그러니까 결국은 원소 7개짜리, 6개짜리, 1개짜리 전부 다 되는 거죠. 
<SYNC Start=598187><P Class=KRCC>
이해되세요? 2의 7제곱까지가 다 나오는 거예요. 됐죠? 그리고 원소 없는 것까지, 공집합까지 전부 다, 어찌 됐든.
<SYNC Start=606600><P Class=KRCC>
그런데 어쨌든 A의 원소의 개수가 2 이상이 되고 싶다는 거예요. A에 들어가는 원소의 개수는 2개 이상인 거예요, 최소. 
<SYNC Start=615151><P Class=KRCC>
그런데 B랑 서로소가 아니래요. 그러면 무슨 말이에요? A랑 {1, 2, 3, 4, 5}라는 이 B라는 집합이 겹치는 부분이 무조건 생긴다는 거죠. 서로소가 아니라는 것. 공집합이 아니라는 거예요. 
<SYNC Start=630902><P Class=KRCC>
겹치는 부분이 무조건 생긴다는 거예요, 서로소가 아니니까. 무슨 얘기인지 아시죠? 그러니까 A는 두 개 이상의 원소를 가지는, 원소가 2개에서 7개까지로 이루어져 있는 하나의 집합들인데, 저것의 부분 집합인데
<SYNC Start=647637><P Class=KRCC>
그 중에서 '1, 2, 3, 4, 5랑은 무조건 만나는 게 있는 그런 집합을 꾸려보고 싶어.'라는 얘기죠. 됐죠? 경우가 좀 많이 나올 것 같다는 예상은 하실 수는 있는데요. 그래도
<SYNC Start=661338><P Class=KRCC>
어쨌든 수작업을 조금은 해보면서 감을 잡아야 될 것 같아요. 예를 들어서 A가 원소가 7개짜리 집합이에요. 그러면 이때는 한 개밖에 없죠, 종류가. 얘는 어때요? B랑 서로소가 절대 될 수가 없죠.
<SYNC Start=677314><P Class=KRCC>
왜냐하면 여기 있는 것을 다 가져가니까, 1, 2, 3, 4, 5를. 교집합이 공집합이 아니죠. 그래서 얘는 조건을 만족해요. 맞죠? 또 6개짜리 해볼까요?
<SYNC Start=689013><P Class=KRCC>
.
<SYNC Start=692287><P Class=KRCC>
얘도 조건을 만족해요, 이거랑 겹치는 게 생기니까. 1, 2, 3, 4, 5, 6이 아니더라도 내가 3을 빼고, 예를 들어 {1, 2, 4, 5, 6, 7} 이렇게 6개를 엮어놔도 얘랑 무조건 만나는 게 생길 수밖에 없죠. 이해돼요?
<SYNC Start=709574><P Class=KRCC>
왜냐하면 만나는 게 생긴다는 것은 한 개만 만나도 되거든요. 그러니까 원소가 7개짜리 집합을 구성하나, 6개짜리 집합을 구성하나 혹은 5개짜리 집합을 구성하나 
<SYNC Start=723075><P Class=KRCC>
전부 다 B는 원소를 5개나 갖고 있기 때문에 겹치는 게 생길 수밖에 없어요. 언제까지 그러냐 하면, 3개짜리 한번 해보실래요? 3개짜리는 아무리 내가 보수적으로 집단을 잡아서
<SYNC Start=739948><P Class=KRCC>
아무리 보수적인 집단을 잡아서 B에 들어가지 않는 원소인 6, 7만 가지고 오고, 나머지 하나를 아무 것이나 껴 넣었다고 하면, 그래도 B랑 겹치는 게 생기죠. 
<SYNC Start=754264><P Class=KRCC>
무슨 말을 하고 싶은 것이냐 하면, 4개까지는 무조건 겹치는 게 생기는 건데, 4개까지만이 아니라 원소를 3개를 잡아버려도 무조건 겹치는 게 생기는 거예요. 이해되시죠? 
<SYNC Start=770144><P Class=KRCC>
왜냐하면 B랑 안 만나는 6, 7만으로 구성할 수가 없고, 나머지 하나는 누군가는 들어와야 되니까 B의 원소 중에 하나는 누군가 들어오게 되고, 그러니까 B랑 A가 겹치는 게 생길 수밖에 없는 거죠. 
<SYNC Start=780995><P Class=KRCC>
따라서, 그리하여 3개일 때도 무조건 겹치는 게 생겨요. 그러면 2일 때는 어떤가요? 2일 때는. 
<SYNC Start=793361><P Class=KRCC>
다른 것은 다 생길 수도 있는데 누구만 아니면 돼요? 6, 7인 경우, 진짜 재수가 없지만 6, 7로만 구성된 2개짜리 집합을 잡으면 그때는 겹치는 게 안 생기죠. 그런데 그거 말고는 다 생기는 거죠. 
<SYNC Start=811141><P Class=KRCC>
이해되세요? 나머지 원소들은 뭘 갖고 와도 하나라도 겹치면 되는 거니까. 여기까지 이해가 됐나요? 이거 수작업으로 세는 거예요. 그러면 7개짜리 원소는, 7개짜리 집합은 1개밖에 안 나오고요. 
<SYNC Start=830807><P Class=KRCC>
6개짜리 집합은 7개 중에 6개의 원소를 선택하면 집합이 구성이 되는 거고요. 5개짜리 집합은 이렇게 선택하면 되고요. 
<SYNC Start=840265><P Class=KRCC>
4개짜리 집합은 이렇게 선택하면 되고, 3개짜리 집합은 이렇게 선택하면 선택할 때마다 어쨌든 B랑 겹치는 게 생길 수밖에 없죠. 2개짜리 집합은 원래 이렇게 구성하면 되거든요. 
<SYNC Start=851953><P Class=KRCC>
그런데 그중에 누구만 아니면 된다고 했느냐 하면 6, 7인 경우만 빼면 된다고 했으니까 하나를 빼고 나머지는 다 해당이 되는 거죠. 6, 7로만 구성된 경우 있잖아요. 그것만 빼주면 되니까, 하나만 빼주면 되죠. 
<SYNC Start=865637><P Class=KRCC>
그래서 얘는 엄밀히 말하면 7C7이죠. 그래서 이것들을 다 더해 주고, 그것을 분자로 보내주면 되는 거고요. 분모는 '임의로 선택한 한 집합을 A라고 할 때'라고 얘기했으니까 
<SYNC Start=881024><P Class=KRCC>
모든 부분 집합의 개수가 분모에 와야겠죠. 2의 7제곱. 맞죠? 따라서 2의 7제곱분의 이것들을 다 더하게 되는 거예요. 됐어요? 이거 다 더한 것을 (*)식이라고 하고 한번 세 보자. 
<SYNC Start=898093><P Class=KRCC>
뭘 알고 있느냐 하면 수작업으로 다 세도 되고, 사실, 그런데 우리 뭐 알고 있니, 얘들아? 이거 다 더하면 얼마지? 2의 7제곱이죠. 그런데 그중에서 이거 빼야 되죠? 그러면 얘는 1이고, 얘는 7이니까 
<SYNC Start=918194><P Class=KRCC>
결국 얘들은 뭐가 돼요? 8을 여기서 빼게 되니까, 맞죠? 여기서부터 여기까지 더한 게 128에서 8를 빼서 120이죠. 
<SYNC Start=928646><P Class=KRCC>
그런데 우리가 원하는 것은 이것만 다 더한 게 아니라 하나 빼야 되죠. 아까 {6, 7}짜리 뺀다고 그랬잖아요. 그래서 여기서 하나를 또 빼주니까 결국은 119가 되죠. 
<SYNC Start=939401><P Class=KRCC>
.
<SYNC Start=943627><P Class=KRCC>
그리하여 119. 하실 수 있겠어요? 네, 좋습니다. 이렇게. 마무리 해야죠. 128분의 119. 이렇게 해서 두 개를 더하면 이거 얼마냐? 7, 4, 2. 247. 이렇게 정리하시면 되겠습니다. 됐나요? 
<SYNC Start=962667><P Class=KRCC>
느낌상 사실 이렇게 세시면, 정석대로의 풀이고요. 아니면 그렇게 세도 될 것 같지 않아? 얘가 여사건을 이용하는 거지. 서로소가 아니라고 했으니까 서로소가 되는 것만 빼주는 거야. 무슨 얘기인지 알겠어요? 
<SYNC Start=980165><P Class=KRCC>
그러면 여기로 다시 올라가 볼까? 느낌상 서로소가 되는 게 누구, 누구냐는 거지? 서로소가 되는 게. 그러면 서로소가 되는 것은, 여기까지는 무조건 서로소가 될 수가 없잖아. 
<SYNC Start=994432><P Class=KRCC>
이 밑으로 가는데 원소가 2개짜리, 1개짜리, 0개짜리를 생각해 보면 이 중에 이제 서로소인 것을 구해서 1에서 그것을 뺀다고 생각하시면 돼요. 그러면 2개짜리 중에서는 누구만 서로소라고 그랬지? 6, 7 있지. 6, 7. 2개, 6, 7.
<SYNC Start=1013647><P Class=KRCC>
그것은 서로소가 될 수 있죠. 맞아요? 그래서 이거 한 가지가 되는 거죠. 이해가 되나요? 원소를 두 개를 뽑으면. 그렇죠? 
<SYNC Start=1025574><P Class=KRCC>
그다음에 원소를 한 개 뽑는 경우랑 원소를 아예 안 뽑는 경우인데 안 뽑는 경우는 이제 공집합을 얘기하는 거죠. 그렇죠? 한 개 뽑는 경우랑 안 뽑는 경우. 한 개 뽑는 경우는 7개 중에 하나 뽑으면 되죠. 맞죠? 
<SYNC Start=1042401><P Class=KRCC>
안 뽑는 경우는 1개 중에 하나도 안 뽑고, 원래는 얘는 7개 중에 2개 뽑는 것이었지만 그 중에 한 개는 겹치는 게 안 생기고 나머지는 겹치는 게 생기는 것이었잖아요. 그래서 그것만 빼주신 거고요. 
<SYNC Start=1054104><P Class=KRCC>
됐나요? 그러면 얘는 7개가 되죠. 전체의 경우의 수는 몇 개인가요? 아까도 얘기했지만 2의 7제곱해서 128이고요. 1에서 이 나머지 경우를 빼준다고 생각하고 이제 덤비시면 되겠죠. 됐어요? 
<SYNC Start=1072715><P Class=KRCC>
그러면 얘들을 더하면 몇 개인가요? 9개가 되나요? 그래서 아까 얘기했듯이 119/128이다. 이렇게 정리가 돼서 아까 얘기했던 119/128에서 또 2개를 더하게 되면 247이야. 이렇게도 나올 수가 있는 겁니다. 
<SYNC Start=1088102><P Class=KRCC>
.
<SYNC Start=1090834><P Class=KRCC>
원소의 개수가 2개 이상이 된다고 했으니까 이 1개짜리나 없는 것은 겹치는 게 생기든 안 생기든 어쨌든 얘는 필요 없는 게 되는 거죠. 
<SYNC Start=1101290><P Class=KRCC>
조건에 안 맞는 것이고, 원소의 개수가 2개짜리 중에서는 얘는 서로소가 되기 때문에 얘는 재껴야 되고, 그래서 이것들을 다 더해서 뺀다는 식으로 가서
<SYNC Start=1110996><P Class=KRCC>
솔직히 말씀드리면 얘는 여사건이 조금 더 수월하고 편한 문제이기는 해요. 저는 두 개의 풀이를 먼저 저것을 세고, 직접 세고, 그리고 여사건을 보여드렸기 때문에 여러분이 다 똑같은 풀이인 것처럼 느껴질 수는 있지만 
<SYNC Start=1125857><P Class=KRCC>
처음부터 여사건으로 접근했으면 솔직히 말하면 좀 더 시간을 훨씬 단축할 수 있었지 않았을까 그런 생각도 좀 드는 문제네요. 
<SYNC Start=1132764><P Class=KRCC>
어쨌든 두 가지의 풀이 전부 다 괜찮습니다. 다 유의미하니까요. 그렇게 해서 확인하고 풀어보시면 좋겠고요. 3-1번 이렇게 마무리 할게요. 그다음 3-2번 문제로 가보도록 하겠습니다. 
<SYNC Start=1145272><P Class=KRCC>
이 문제는 이게 또 만만치가 않습니다. 왜냐하면 이게 또 되게 생소해요. 문제는 좋아요. 저는 이제 여러분이 많이 고민해 보셨으면 좋겠는데, 이런 문제를 풀 때 여러분이 가장 많이 저한테 하는 질문이 뭐냐 하면
<SYNC Start=1160672><P Class=KRCC>
"선생님, 고민을 많이 해보라는 것은 알겠는데요. 이거 언제까지 고민해야 돼요?" 이렇게 물어보는 친구가 진짜 많아요. 그런데 고민을 하실 때는 30분이고 1시간이고 계속 고민을 할 수는 없어요. 
<SYNC Start=1173755><P Class=KRCC>
문제가 풀릴 것 같으면 하셔도 되는데 사실, 솔직히 말씀드리면 10분에서 20분 고민했는데 문제가 안 풀리면, 특히 어떤 지식을 다 알고 있는데 이렇게 문제 해결 문제에서, 이런 식의 문제에서. 
<SYNC Start=1190364><P Class=KRCC>
그러면 좀 기다렸다가 고민하시는 게 더 나아요. 왜냐하면 여러분, 지금 수험생이라서 다른 과목 간의 밸런스도 중요하기 때문에 한 문제만 갖고 붙들고 늘어질 수는 없거든요. 
<SYNC Start=1201433><P Class=KRCC>
그러다 보니 한 문제를 가지고 10분에서 20분을 고민하다가 잘 안 되면 제가 아까 서두에 말씀드렸듯이 해설지를 보고 다시 한 번 고민을 하는 거예요.
<SYNC Start=1211285><P Class=KRCC>
그러다가 다시 한 번 고민해 보고 힌트만 얻어가지고 또 다시 고민해 본다든지, 선생님의 풀이 중에서 제가 앞에서 약간 실마리를 잡아주죠. '이런 식으로 갈 거야.'라고 아이디어를 던져주면 그것만 듣고 내가 다시 해보는 거죠. 
<SYNC Start=1227175><P Class=KRCC>
이런 식의 방법이 더 나아요. 아니면 오늘 고민을 해보고 하룻밤 자고 내일 새로운 마음으로 다시 하든가, 몇 시간 있다가 다시 하든가 이러면 또 머릿속에서 또 새로운 느낌으로 고민을 하게 되거든요. 
<SYNC Start=1239771><P Class=KRCC>
그래서 한 자리에 앉아서 뭔가 하나를 가지고 30분 이상, 1시간 이상을 고민하는 것은 별로 좋지 않아요, 지금으로서는. 
<SYNC Start=1248368><P Class=KRCC>
그런데 생각을 하는 상황에서 많이 생각이 크고, 아까 얘기했죠? 고생을 한만큼 깊이가 깊어지는 것은 사실인데요. 그 고생이라는 게 하나를 붙들고 계속해서 늘어지라는 게 아니고 
<SYNC Start=1261593><P Class=KRCC>
만약에 될 것 같으면 고생을 해서라도 다 일일이 써가면서 3번은 연습, 이런 게 고생인 거고요. 아니면 오늘 고민을 머리를 쥐어짜면서 10분이고, 20분이고 엄청 집중해서 하고
<SYNC Start=1272894><P Class=KRCC>
그러다 좀 쉬었다가, 좀 있다가 한다거나 내일 한다거나 이런 식이 효율적이라는 것을 꼭 아셔야 돼요. 어쨌든 이 문제는, 문제는 다 읽어 보셨죠? 핵심은 이거예요. 
<SYNC Start=1286137><P Class=KRCC>
4개 선분을 이렇게 그어서, 마치 함수의 개수 대응하듯이 
<SYNC Start=1290278><P Class=KRCC>
P1, P2, P3, P4에서 Q1, 2, 3, 4에다가 함수의 개수 대응시키듯이, 함수 대응시키듯이 선분을 긋는 거죠. 그러고 나서 나누어진 영역의 개수가 정확히 6개가 되고 싶은 확률이에요. 그러면 생각해 볼래? 
<SYNC Start=1306160><P Class=KRCC>
이렇게, 이렇게, 이렇게, 이렇게 그으면 하나, 둘, 셋, 넷, 다섯, 여섯 개 맞거든요. 이런 거 괜찮아요. 그런데 하나, 둘, 셋, 넷, 다섯, 여섯, 일곱. 이것은 일곱 개가 됐기 때문에 얘는 조건에 맞지 않는 거예요. 
<SYNC Start=1317259><P Class=KRCC>
몇 개, 이제 그러면? 시작은 시도를 몇 개 해보시는 거죠. 
<SYNC Start=1322360><P Class=KRCC>
.
<SYNC Start=1328784><P Class=KRCC>
이렇게 그으면, 아니, 맨 처음에 이렇게 그으면 5개밖에 안 나오죠. 그러면 안 돼. 
<SYNC Start=1336296><P Class=KRCC>
.
<SYNC Start=1337841><P Class=KRCC>
얘, 6개 나오죠. 괜찮아요. 
<SYNC Start=1341216><P Class=KRCC>
.
<SYNC Start=1343963><P Class=KRCC>
안 되죠. 7개잖아. 
<SYNC Start=1347877><P Class=KRCC>
.
<SYNC Start=1353911><P Class=KRCC>
8개잖아. 느낌 와요? 어떤 느낌이냐 하면, 얘가 꼬임이 혹은 교점이 1개만 나오도록 해야 돼요. 이해가 되죠. 
<SYNC Start=1372718><P Class=KRCC>
.
<SYNC Start=1375276><P Class=KRCC>
꼬임이, 교점이 1개만 나오도록. 이런 경우는 교점이 2개 나왔잖아요. 그러면 그 사이에서 만나는 영역이 또 생기게 돼 버리니까, 또 다른 영역이 또 생기게 돼 버리니까 
<SYNC Start=1388646><P Class=KRCC>
꼬임 즉, 교점이 1개만 나오도록 해야 된다는 것과 이 꼬임이 만약에 예를 들어, 이렇게 꼬여버리잖아요. 
<SYNC Start=1399629><P Class=KRCC>
그러면 얘가 어디로 가든지 간에, P3가 여기, 여기, 여기, 여기, 어디로 가든 간에 무조건 만나는 게 하나가 더 생길 수밖에 없죠. 최소 하나, 두 개가 생길 수도 있고, 하나가 생길 수도 있고, 더 생기죠. 
<SYNC Start=1413762><P Class=KRCC>
그러니까 이 꼬임이 생길 때 P2, P4가 꼬임이 생기거나, 그러면 안 되고요. 무조건 어떻게? 
<SYNC Start=1422440><P Class=KRCC>
.
<SYNC Start=1425325><P Class=KRCC>
이웃하는 것끼리 꼬임이 생겨야 돼요. 이웃, 바로 옆에 있는 것끼리. 그래야 다른 점에 간섭을 받지 않고 꼬임이 유일하게 하나만 생길 수 있어요. 교점이 하나만. 
<SYNC Start=1436642><P Class=KRCC>
안 그러면 얘랑 얘가 꼬여버리면, 이 하나 걸러서나 두 개 걸러서 꼬여버리면 중간에 가는 것들이 어디로 가든지 간에 만나는 점이 또 생길 수밖에 없다는 결론이 나와요. 몇 개 이렇게 긋다가 보면. 
<SYNC Start=1449964><P Class=KRCC>
그래서, 이것은 그런데 이런 생각을 하는 과정에서 여러분은 여러 번 그려보실 수밖에 없어요. 그래서 경험적으로 
<SYNC Start=1460541><P Class=KRCC>
이런 경우에 꼬임이 하나밖에 안 생기겠구나! 이웃하는 경우에 꼬임이 생겨야 되겠구나! 그리고 그 꼬임이 즉, 교점이 1개가 넘게 나오면 그 사이에서 만나는 영역, 구분되는 영역이 또 생기니까 그것은 안 되겠구나! 
<SYNC Start=1473949><P Class=KRCC>
이런 생각들을 자꾸만 하게 되니까, 자꾸만 그려 보면서 감을 잡아보셔야 돼요. 최소 3개 이상을 그림을 그려 보시면서. 그래서
<SYNC Start=1483761><P Class=KRCC>
그러면 기준을 이렇게 세우면 되겠네. 이웃하는 것끼리 꼬임이 생기는 개수가 1개가 되면 되니까 그 이웃해서 꼬임을 만드는 그 점을 P1, P2라고 생각하는 경우, 그다음 P2, P3라고 생각하는 경우
<SYNC Start=1499467><P Class=KRCC>
그다음 P3, P4라고 생각하는 경우, 3세트로 나눠서 생각해 보면 되겠구나! 이제 여기까지 끄고, 여러분이 하시면 돼요. 제가 앞에 힌트는 다 드렸어요. 이제 시작해 볼게요. 
<SYNC Start=1514267><P Class=KRCC>
P1, P2를 연결했을 때 여기에서 P1에서 연결하고 P2에서 연결한 선에서 꼬임이 생겼다. 이 사이에서 교점이 생겼다. 첫 번째. 
<SYNC Start=1526270><P Class=KRCC>
두 번째는 P2, P3, 그다음에 P3, P4, 이렇게 나눠서 볼 겁니다. 됐죠? 그러면 보면서 여기를 같이 볼 거라서 그림을. 이 그림을 보면서 제가 여기에다 쓰면서 그리고 갈게요. 됐죠? 
<SYNC Start=1539604><P Class=KRCC>
.
<SYNC Start=1542389><P Class=KRCC>
P1, P2가, 수작업을 좀 하셔야 돼요. 이게 머릿속으로만 하다가는 생각보다 잘 안 된다는 것을 알게 되실 거거든요. 이 그림 같이 볼게요. 같이 보면서 갈게요. 
<SYNC Start=1552611><P Class=KRCC>
P1, P2가, 일단 P1이 선택하는 게 어디인지부터 선택을 해야 되는데, P1이 만약에 Q1을 선택해 버리잖아요. 그러면 P2가 아무리 이 선이랑 만나고 싶어도 만날 수가 없어요. Q1으로 와도 Q1이라는 점에서 만나니까. 
<SYNC Start=1569576><P Class=KRCC>
그리하여 P1은 무조건 Q2로 가든지, 아니면 Q3로 가든지, 아니면 Q4로 가든지 셋 중 하나로 가셔야 돼요. 이해가 되시죠? 
<SYNC Start=1579562><P Class=KRCC>
그래서 여기가 P2가 선택할 수 있는 것은 Q2로 가든지, Q3로 가든지, Q4로 가든지를 일단 써놓으시고요. 그때마다 다시 한 번 가볼게요. 진짜 완전 그냥 하나하나 수작업 하다가 규칙 찾으면 돼요. 
<SYNC Start=1593919><P Class=KRCC>
그런데 그 규칙이 뭔가 하나만 해서 다 곱하는 그런 케이스는 아니고요. 하다 보면 대충 느낌이 오는 케이스예요. 한 번 해보셔야 돼요. 
<SYNC Start=1601795><P Class=KRCC>
그러면 P2는 어디로 가면 꼬임이 생기느냐 하면, Q2보다는 왼쪽으로 가야 꼬임이 생기죠. Q2로 오면 안 생겨요. 그래서 여기는 Q1으로만 가야 돼요. 이해됐죠? 
<SYNC Start=1613762><P Class=KRCC>
그다음 P3이랑 P4는 어디로 가는지 볼게요. 이것까지 완벽하게 대응을 시켜주셔야만 완전히 이게 판이 결정이 되는 거니까. 그러면 지금 상황은 이렇게 되는데, P3이랑 P4는 어디로 갈 수 있겠어요? 
<SYNC Start=1629921><P Class=KRCC>
더 꼬이면 안 돼요. 더 꼬이면 안 돼요. 그러니까 이 중에 제일 오른쪽으로 와 있는 Q2보다는 최소한 같거나 오른쪽으로 대응이 돼야 돼서 P3, P4는 어디로 대응될 수밖에 없느냐 하면 
<SYNC Start=1641125><P Class=KRCC>
Q2, 3, 4, 셋 중에 하나로만 갈 수밖에 없어요. 셋 중 두 개나 하나로. 그렇죠? 겹쳐서 가도 돼요, 이런 식으로. 꼬임만 안 생기면 되니까. 
<SYNC Start=1650891><P Class=KRCC>
이 안에서 또 꼬임이 이렇게 생겨버리면 큰일 나죠. 그러면 또 영역이 구분되니까. 여기서 중요한 얘기가 나와요. 
<SYNC Start=1659800><P Class=KRCC>
이것을 일일이 세지 마시고요. 여기서 중요한 얘기가 나와요. P3, P4는 Q2, 3, 4로 갈 수 있다. 그런데 같은 곳으로는 갈 수 있다. 즉, 중복해서는 갈 수 있다.
<SYNC Start=1681086><P Class=KRCC>
.
<SYNC Start=1684661><P Class=KRCC>
P2, 3, 4가, 쏘리. P3, 4가 Q2, 3, 4로 갈 수 있다. 그런데 중복해서 가도 된다. 둘 다 2로 가도 되고, 그렇죠? 그 대신에 순서가 정해져 있다. 키 큰 순서. 무슨 말이에요? 
<SYNC Start=1708297><P Class=KRCC>
예를 들어 P3이 여기로 갔잖아요. Q4로. 그러면 얘는 무조건 이 옆으로는 못 가요. 여기로 가야 돼요. P4가 P3이 선택한 것보다는 크거나 같은 쪽으로 가야 된다는 거죠. 
<SYNC Start=1721607><P Class=KRCC>
P3이 P4보다 이렇게 작다고 생각하는 거예요, 쉽게 말하면. 그래서 이것을 f라는 함수로 생각하면 f(P3)과 f(P4)를 비교하면 얘가 크거나 같게, 마치 이거 뭐예요? 중복 조합 이용하듯이. 
<SYNC Start=1737270><P Class=KRCC>
무슨 말인지 알겠어요? 키 큰 순서 나열. 뽑아만 놓으면 자기들끼리 순서는 정해질 수밖에 없어요. 안 그러면 얘, 역행하게 되니까 꼬임이 생기죠. 굉장히 중요한 얘기죠. 
<SYNC Start=1744689><P Class=KRCC>
그래서 얘를 일일이 다 세려고 하지 말고 이런 함수 판으로 생각하시면 돼요. 그러면 함수는 y를 기준으로 생각하라고 했죠? 이 3개를 가지고, 선택권을 가지고 생각되 
<SYNC Start=1755852><P Class=KRCC>
3, 4가 선택하는 얘들이 2, 3, 4인데, 2, 3, 4중에서 중복을 허락해서 얘들이 가져가는 2개를 선택하게 되는 경우죠. 따라서 3H2라고 생각하시면 되죠. 
<SYNC Start=1766968><P Class=KRCC>
.
<SYNC Start=1770201><P Class=KRCC>
여기가 좀 어렵죠? 무조건 수작업으로만 됐던 게 아니었던 거죠. 얘들을 결정하는 게 3H2였던 거예요. 
<SYNC Start=1776868><P Class=KRCC>
.
<SYNC Start=1780147><P Class=KRCC>
좋습니다. 그다음 Q3은, 이제 거의 다 했어요. 이제 이 패턴 하나만 아시면 나머지 어렵지 않아요. 이번에는 P1이 Q3으로 가요. 그다음에 P2가 이번에는 Q1이 아니라 Q2로 갔다고 생각해 볼게요. 
<SYNC Start=1796255><P Class=KRCC>
잠깐만, 이거 다 안 하고 왔다, 애들아, 우리. 이거 다 안 했잖아. Q2랑 Q1 조합 있잖아. P1이 Q2로 왔는데 P2가 Q1으로 온 것만 했지? 그러면 그다음에는 여기로 오는 것은 꼬임이 안 생기네. 안 해도 되겠다. 오케이? 
<SYNC Start=1812324><P Class=KRCC>
여기는 끝났어, 그럼? 그다음에 얘가 Q3으로 왔어. 그러면 P2는 어디로 올 수 있느냐 하면, Q1, Q2로 다 올 수 있지, 여기. 
<SYNC Start=1819727><P Class=KRCC>
Q1 아니면 Q2로. 그렇지? 이거 한 번 해보자. Q1, Q2. 
<SYNC Start=1826568><P Class=KRCC>
.
<SYNC Start=1829945><P Class=KRCC>
그래서 Q1, Q2로 왔다고 치자. P1이 Q3로 왔고, 얘가 만약에 이리로 왔다고 치자. 그러면 얘들은 어디로 가야 돼요? 
<SYNC Start=1838898><P Class=KRCC>
그렇죠, Q3, 4로 가야 되죠. 마찬가지죠. 2개 중에 중복을 허락해서 2개를 선택해서 3, 4가 가져가게 하는 것이랑 똑같죠. 2H2예요. 이 경우. 
<SYNC Start=1854111><P Class=KRCC>
맞아요? 그러면 얘는? Q2로 갔을 경우는? 마찬가지죠. 2H2. 그렇더라도 어쨌든 Q3에서 더 오른쪽으로만 대응이 돼야 되니까 얘가 이리로 가더라도, 이렇게 하고 이렇게 가더라도. 그렇지? 됐어요. 
<SYNC Start=1871435><P Class=KRCC>
그다음 이번에는 P1이 Q4로 갔을 때 해볼까요? P1이 Q4로 갔어. 그러면 2는 하나, 둘, 셋 다 올 수 있네요, 이렇게. 어디 오든 상관없어요. 한 번에 꼬임이 일어나죠? 그래서 이때는 3개가 다 돼요. 
<SYNC Start=1887231><P Class=KRCC>
.
<SYNC Start=1889485><P Class=KRCC>
됐죠? 그러고 나서 이제 P3, P4는 어디로 갈 수 있어요? 이때는 간단해요. 이것이 이미 선택이 됐기 때문에 이 옆으로 더 가게 되면 꼬임이 또 생기죠. 무조건 Q4로 가요. 무조건.
<SYNC Start=1903855><P Class=KRCC>
그래서 이때는 다 한 개씩이에요. 이것을 다 더하시면 되죠. 
<SYNC Start=1909972><P Class=KRCC>
.
<SYNC Start=1914680><P Class=KRCC>
3C2가 되니까 3이네요. 미안. 
<SYNC Start=1917676><P Class=KRCC>
.
<SYNC Start=1920285><P Class=KRCC>
15개다. 그렇지? 하실 수 있겠죠? OK. 
<SYNC Start=1926457><P Class=KRCC>
.
<SYNC Start=1927650><P Class=KRCC>
그나마 다행인 것은 P3, P4로 만약에 선택을 하잖아요, 얘가 꼬임이. 이게 세 번째 할 것이었는데, P3, P4에 꼬임이 있다. 
<SYNC Start=1939050><P Class=KRCC>
그러면 얘가 위치만 바꿨지 얘는 왼쪽 끝에 두 개였고, 얘는 오른쪽 끝에 두 개이니까 이것만 바뀌는 거예요. 그래서 상황이 똑같아요. 발생하는 상황이 왼쪽에서 발생하는 것뿐이니까 얘도 똑같이 15개예요. 
<SYNC Start=1953180><P Class=KRCC>
이것은 따로 따져보지 않으셔도 돼요. 어차피 왼쪽 끝에 2개를 꼬이고 나머지 두 개 선택하느냐, 아니면 얘는 오른쪽 끝에 두 개가 꼬이고 그 옆을 선택하느냐의 차이이기 때문에 얘는 똑같다는 거죠. 이해되시죠? 좋습니다. 
<SYNC Start=1968780><P Class=KRCC>
그러면 2)번으로 가서 얘가 꼬였다고 생각하고 또 시작해 볼게. 그러면 이것을 여기다가 쓰고 할게. 지금 15, 15 나왔다. 이거 다 지우고 갈게요. 왜냐하면 그림을 좀 보고 싶어서. P2, 3가 꼬임이 있다. 
<SYNC Start=1987670><P Class=KRCC>
.
<SYNC Start=1991090><P Class=KRCC>
그러면 P2, 3에 꼬임이 있다면 이 꼬임이 어떻게 되는지 2가 선택하는 것부터 생각해 볼까? 그러면 2가 만약에 여기를 선택했어. 그러면 얘가 기를 쓰고 가도 꼬임이 생기지 않죠. 
<SYNC Start=2003420><P Class=KRCC>
그러니까 P2가 선택할 수 있는 것은 Q2, 3, 4 중이에요. 그래서 여기도 P2, P3이 선택할 수 있는 것, 그다음에 P1. P4가 선택하는 것 수작업을 좀 할 거예요. 
<SYNC Start=2015190><P Class=KRCC>
그런데 얘가 Q2, Q3, Q4 이렇게밖에 안 된다는 거 아시겠죠? 그림 같이 볼게요. 그러면 만약에 P2가 Q2로 왔다. 그러면 P3은 Q1로밖에는 못 가죠. 여기 오면 꼬임이 안 생기니까. 이제 바로바로 갈게요. 됐어요?
<SYNC Start=2034750><P Class=KRCC>
그러면 P1하고 P4, 이런 그림 상황으로 볼게요. P1은 왼쪽에 나와 있는 것보다 작거나 같은 쪽으로 가야 되니까 Q1밖에 못 가요. 왜냐하면 이것보다 오른쪽으로 가면 꼬임이 또 생기죠. 그래서 여기는 무조건 Q1이에요. 
<SYNC Start=2048850><P Class=KRCC>
그때마다 P4는 이 둘 중에 최대한 오른쪽에 있는 것보다는 더 같거나 큰 쪽으로 가야 되니까 Q2, 3, 4 중에서 선택권이 있어요. 
<SYNC Start=2058510><P Class=KRCC>
.
<SYNC Start=2060890><P Class=KRCC>
얘는 오로지 수작업이네요. 이해되시죠? 좋아요. 그다음 만약에 이번에는 P2가 Q3로 갔다. 그렇다면 P3는 어디로 갈 수 있느냐 하면 하나, 두 개가 다 선택권이 있어요. 이해되시죠? 
<SYNC Start=2074999><P Class=KRCC>
그중에서도 Q1으로 갔다고 쳐보자. 그러면 P1은 역시 Q1밖에는 선택권이 없어요. 그런데 그때마다 P4는 이 Q3보다는 같거나 오른쪽이니까 두 가지가 다 되는 거죠. 더 이상 꼬임이 안 생기도록 가고 싶은 거니까. Q3, Q4. 
<SYNC Start=2093810><P Class=KRCC>
.
<SYNC Start=2095742><P Class=KRCC>
그다음, 여기서 P2가 Q3로 갔는데 P3이 이번에는 Q2로 가는 거예요. 이렇게. 이해되시죠? 그러면 얘는 어디로 가? 여기도 되고, 여기도 되지? 맞아요. 1, 2 다 돼요. 
<SYNC Start=2113515><P Class=KRCC>
.
<SYNC Start=2116844><P Class=KRCC>
됐죠? 얘도 여기 다 되죠. 여기도 마찬가지죠. 이렇게 하나씩 써 내려 가는 거예요. 생각보다 금방이에요. P2가 Q4로 갔다. 그러면 어떻게 될까요? P3가 선택권이 세 가지나 생기네요. 선택권이 Q1, 2, 3. 
<SYNC Start=2139079><P Class=KRCC>
.
<SYNC Start=2141640><P Class=KRCC>
그러면 그때마다 Q1으로 갔다고 치자. 그러면 P1은 Q1으로밖에 못 가죠. 그러면 바로 볼게요. P4는 어디로 가요? 제일 끝으로밖에 못 가죠. Q4. 
<SYNC Start=2155639><P Class=KRCC>
그림 같이 볼 거예요. 그다음에 Q2로 갔다. 그러면 얘가 어디로 가야 돼요? 이렇게 오는 거죠. 그러면 P1은 1, 2 올 수 있죠. 그러면 그때마다 P4는 Q4보다 오른쪽에 있거나 같아야 되니까 여기는 Q4, Q4 그대로죠. 됐어요?
<SYNC Start=2176921><P Class=KRCC>
그다음에 Q3로 갔다. 옆으로 간 거죠. 바로 옆으로. 그러면 얘가 선택권이 3개로 늘어나네요. Q1, 2, 3. 그러나 각각에 해당되는 P4의 선택권은 똑같이 4, 4, 4죠. 됐어요. 
<SYNC Start=2192894><P Class=KRCC>
그리하여 3개, 2개, 2개, 2개, 여기가 1개, 2개, 3개, 이렇게 되네요. 그러면 여기 6, 여기도 6, 여기 3, 15개. 다 합치면 45개. 15, 15, 15이었잖아. 그렇지? 전체의 경우의 수는 어떻게 될까요? 
<SYNC Start=2215393><P Class=KRCC>
전체의 경우의 수는 약간 이런 느낌이죠. P1, P2, P3, P4라는 X 집합에서 Q1, Q2, Q3, Q4라는 Y 집합으로 대응되는 것이랑 비슷한 느낌이에요. 전부 다 이리로 갈 수도 있죠, 솔직히.
<SYNC Start=2237333><P Class=KRCC>
그렇죠? 왔다갔다 꼬여서 갈 수도 있고, 함수의 개수랑 똑같아요. 그래서 4개, 4개, 4개, 4개를 갈 수 있으니까 4의 4제곱, 2의 8제곱이죠. 
<SYNC Start=2248905><P Class=KRCC>
.
<SYNC Start=2251736><P Class=KRCC>
그래서 256. 그런데 전체의 경우의 수는 45라고 했으니까요. 45/256라고 해서 이들을 더하면 301이다. 이렇게 정리하시면 되는 내용입니다. 아시겠죠? 
<SYNC Start=2267080><P Class=KRCC>
이것 좀 쉽지 않았죠? 고민 많이 해보셔야 돼요. 고생을 좀 해보셔야 돼요. 그런데 막상 하다 보면 이 정도 계산은 하실만하다는 느낌은 좀 있거든요. 왜냐하면 하다 보니까 또 규칙이 나오기도 하고요. 
<SYNC Start=2282111><P Class=KRCC>
제가 봤을 때 이 문제의 가장 꽃이라고 해야 되나요? 아까 중합 조합 쓴 느낌 있죠. 그 느낌 좀 살리시면 좋겠고요. 그건 정말 괜찮은 아이디어예요. 
<SYNC Start=2292467><P Class=KRCC>
나머지는 사실은 고생하면서 수작업 하시면 얻어갈 수 있는 부분이기는 한데요, 논리적으로 잘만 하셔서. 
<SYNC Start=2298537><P Class=KRCC>
그것을 중복 조합의 아이디어로 수학적 모델링을 할 수 있는지 그런 것들을 이 문제의 질이 높아지는 약간 그런 느낌의 아이디어라고 볼 수 있을 것 같아요.
<SYNC Start=2308845><P Class=KRCC>
그래서 그런 거 좀 잘 생각해 보시면서 문제를 복습해 주시면 훨씬 좋겠습니다. 
<SYNC Start=2313437><P Class=KRCC>
이제 3-3번 볼게요. 아마 오늘의 마지막 문제가 될 것 같고요. 이 문제도, 이게 문제 되게 재미있어요. 이렇게 된 그림인데요. 문제 읽어보셨죠? 1부터 8까지를 가장자리에 써넣는 거예요. 한 번씩만.
<SYNC Start=2329858><P Class=KRCC>
그래서 가운데는 0을 그냥 고정시켜 놓고, 네 개 수의 합을 더했을 때 홀수면 1을 쓰고요. 짝수면 0을 쓴대요. 홀수면 1을 쓰고, 짝수면 0을 쓴대요. 
<SYNC Start=2340864><P Class=KRCC>
.
<SYNC Start=2343083><P Class=KRCC>
여기까지는 이해되시죠? 홀수면 1을 쓰고 짝수면 0을 쓴다. 그런데 문제는 여기다가, 가운데다가. 그런데 문제는 전부 다 1이 되고 싶대요. 
<SYNC Start=2351459><P Class=KRCC>
그러면 이렇게 네 개 더한 것도 홀수, 이렇게 더한 것도 홀수, 이렇게 더한 것도 홀수, 이렇게 더한 것도 홀수가 되고 싶은 위치를 잡아봐라. 그 얘기죠.
<SYNC Start=2361630><P Class=KRCC>
처음에 문제 보면 '뭐야? 이거 어떻게 하라는 거야?' 이렇게 생각할 수 있는데요. 그러면 어쨌든, 이렇게 갈 거예요. 이 조합, 그다음에 이 조합, 그다음에 이 조합, 이 조합, 크게 조합이 네 조합이 돼야 되는 거고요. 
<SYNC Start=2379994><P Class=KRCC>
어차피 네 개의 수를 더하지만 그 중에 0은 항상 가져가는 거죠. 그러니까 0 빼고 나머지 세 수의 합이 홀수가 돼야 되는 거죠. 
<SYNC Start=2389479><P Class=KRCC>
.
<SYNC Start=2391351><P Class=KRCC>
이 아이디어가 이 문제에서는 key가 되는 겁니다. 핵심 아이디어가 이거예요. 세 수의 합을 홀수로 만들고 싶다. 
<SYNC Start=2399351><P Class=KRCC>
.
<SYNC Start=2401252><P Class=KRCC>
지금 나와 있는 홀수, 짝수는 1, 3, 5, 7이랑 2, 4, 6, 8, 네 개씩이에요. 그렇죠? 그것을 가지고 조합을 해서 3개의 수를 만들었을 때 그 세 개의 수를 더해서 홀수가 되고 싶으면, 세 수의 합이 홀수가 되고 싶다. 
<SYNC Start=2416154><P Class=KRCC>
그러면 그런 조합을 만들려면 어떻게 해야 되느냐 하면 '홀, 홀, 홀' 조합이 가든지, 이해되세요? 아니면 홀 두 개면 짝이 되니까 홀이 하나만 끼는 거죠. 짝, 짝, 홀. 
<SYNC Start=2435006><P Class=KRCC>
.
<SYNC Start=2437567><P Class=KRCC>
이해가 돼요? 
<SYNC Start=2439229><P Class=KRCC>
.
<SYNC Start=2441931><P Class=KRCC>
이런 조합이 있을 수 있다는 거죠. 그러면 예를 들어서 이게 세팅을 몇 개씩 할 수 있는지 보는 거예요. '홀, 홀, 홀' 조합을 다 들어가게 할 수는 없어요. 왜냐하면 홀수가 기껏해야 4개밖에 없거든요. 
<SYNC Start=2459303><P Class=KRCC>
그러면 '홀, 홀, 홀' 조합을 이렇게 넣어버리잖아요. 그러면 홀수가 한 개밖에 안 남아요. 그러면 자동으로 여기는 짝수가
<SYNC Start=2467823><P Class=KRCC>
왜냐하면 홀수 한 개밖에 안 남는데 여기 이 세 개 중에 홀수는 하나는 무조건 와야지만 되는 거잖아요, 적어도. 
<SYNC Start=2474125><P Class=KRCC>
그러면 그 홀수는 여기나 여기나 여기 중에 와야 돼요. 그러니까 여기는 무조건 짝수가 오는 거죠. 그냥 제 마음대로 한 번 넣어볼게요. 
<SYNC Start=2480873><P Class=KRCC>
그러면 여기 홀수가 왔으니까 여기는 짝수가 와도 되죠. 와야 되죠. 그렇죠? 그다음에 여기도 홀수가 왔으니까 여기까지 홀수가 와버리면 여기서 부족해요. 그러니까 여기가 짝수가 무조건 와야 되고요. 
<SYNC Start=2491636><P Class=KRCC>
그러면 여기 홀수 하나 왔으니까 여기도 짝수가 와야 되죠. 그러니까 나머지 홀수 하나가 여기에 오는 거예요. 이해돼요? 그러니까 이 'ㄴ'자로 혹은 'ㄴ'자 거꾸로 돌리고, 또 'ㄱ'자로 또 돌리고 했던 이 네 가지 조합 중에서 
<SYNC Start=2506620><P Class=KRCC>
'홀, 홀, 홀' 조합은 한 개, 나머지는 '홀, 짝, 짝', '홀, 짝, 짝', 또 여기도 '홀, 짝, 짝', 이렇게 되면 되죠. 이거 한 가지, 이거 세 가지 세트로 네 세트를 구성하는 경우가 있을 수 있다는 거죠. 
<SYNC Start=2524257><P Class=KRCC>
이해되세요? 세트를 구성을 먼저 하자는 거야. 그러니까 쉽게 말해서, 구성부터 정하자는 거지. 수작업을 조금 해보면 이렇게 세트 구성이 될 수밖에 없다는 것을 알게 돼요. 됐나요? 
<SYNC Start=2538839><P Class=KRCC>
아니면 어떤 경우가 또 생길 수 있느냐 하면, '홀, 홀, 홀'이 더 들어가기는 어려워요, 사실. 홀수의 개수에 제약이 있으니까. 그렇죠? 아예 빼버리는 거죠. '홀, 홀, 홀' 이 조합을 없애는 거예요. 
<SYNC Start=2556562><P Class=KRCC>
'짝, 짝, 홀'을 네 세트를 다 만드는 거죠. 이해가 돼요? '짝, 짝, 홀'을 네 군데를 다 만드는 거예요. 그러면 어떤 조합이 되겠느냐? 
<SYNC Start=2565385><P Class=KRCC>
.
<SYNC Start=2570087><P Class=KRCC>
예를 들어 1 들어갔다. 그러면 여기는 2, 4, '짝, 짝, 홀'을 들어가게 하는 거죠. 짝수이니까 홀수 하나 짝수 하나가 들어와야 되거든요. 
<SYNC Start=2580395><P Class=KRCC>
그러면 여기에 들어오는 것은, 만약에 여기에다 짝수를 넣어버리면 여기는 홀수가 무조건 와야 되죠? 그러면 2, 6 그다음에 3, 홀수가 무조건 와야 되죠, 짝, 짝이니까. 
<SYNC Start=2590100><P Class=KRCC>
그러면 홀수가 있으니까 이거 무조건 짝, 짝이 와야 돼요. 그러면 6, 8이 되나요? 그러면 여기는 어떻게 돼요? 짝, 짝이 왔으니까 홀수 무조건 하나 와야 되죠. 1, 3, 2 이렇게 하면 안 되는 거죠. 
<SYNC Start=2602430><P Class=KRCC>
그러면 여기가 겹쳐서 들어가죠. 짝수가 지금 이렇게 되면 안 되죠. 그러면 여기가 홀수가 와야 되는데, 짝수가 벌써 두 개가 들어가 있으니까 나올 수 있는 짝수가 부족한 거죠. 
<SYNC Start=2611385><P Class=KRCC>
그래서 어떤 느낌이 드느냐 하면 '아, 이거 자리가 고정되겠구나!', 어떻게? 이렇게 되면 안 되는 거예요. 여기가 짝수가 오는 순간 틀어지는 거예요. 짝수가 여기 또 와야 되니까. 
<SYNC Start=2621780><P Class=KRCC>
홀수가 오면 여기 두 개 짝수가 또 오니까 여기 짝수가 왔는데, 여기도 또 왔고. 홀수가 맞물려서 여기 와야 되는구나! 그러면 여기는 짝수가 오고, 그다음에 여기는 다시 홀수가 여기 네 귀퉁이에 오는 거죠, 쉽게 말해서. 
<SYNC Start=2637531><P Class=KRCC>
여기 오고 그러면 여기 다시 홀수가 오고, 이렇게 오면 괜찮은 거죠. 무슨 말인지 아시겠어요? 
<SYNC Start=2643645><P Class=KRCC>
그래서 이렇게 '짝, 짝, 홀'의 조합으로 갈 때는 홀수가 네 귀퉁이에 온다는 아이디어를 얻을 수가 있는 거죠. 위치가 정해진다는 거예요, 쉽게 말해서. 
<SYNC Start=2653279><P Class=KRCC>
.
<SYNC Start=2655750><P Class=KRCC>
됐어요? 여기가 홀수, 나머지가 짝수, 이렇게. 끝났어. 이 조합, 이 조합으로 먼저 해보시면 이게 ①번, 그다음에 이게 ②번이라고 하고 한번 세 볼게요. 
<SYNC Start=2666958><P Class=KRCC>
'홀, 홀, 홀'을 결정하는 세트를 이제 아까처럼 이 'ㄴ'자 세트, 또 그다음에 여기 'ㄴ'자 세트 돌린 것, 여기 세트, 여기 세트, 네 개 중에서 '홀, 홀, 홀' 조합을 어디에다 하는지를 먼저 선택을 해주시는 거예요.
<SYNC Start=2683382><P Class=KRCC>
그러면 내가 만약에 이렇게 '홀, 홀, 홀' 조합을 선택한다고 해보세요. 그런데 '홀, 홀, 홀' 조합으로 들어갔을 때 그렇게 구성되는 홀수를 선택하는 것도 여러분이 하셔야 되거든요. 
<SYNC Start=2695039><P Class=KRCC>
그래서 네 개의 홀수 중에서 3개를 선택해서 이 조합에 들어가는 팀을 구성을 한 거죠. 그러면 이제 1, 3, 5까지 결정이 됐고, 위치도 결정이 된 거예요. 이해가 되시나요?
<SYNC Start=2706695><P Class=KRCC>
그러고 나면 나머지 한 군데에는 홀수가 들어가면 되는데 그 홀수 자리는 얘랑 마주보는 여기에 들어갈 수밖에 없어서 나머지 홀수는 여기 들어가면 되고요. 그다음에 나머지 짝수는 자리가 4개가 남았잖아요. 
<SYNC Start=2719156><P Class=KRCC>
여기는 무조건 짝수가 오는 거잖아요. 그래서 짝수 네 개 자리를 배열만 하시면 돼요. 뽑을 필요가 없고 그냥 배열만. 어차피 네 개를 네 자리에 넣는 거니까. 이렇게 하는 게 첫 번째 케이스고요. 
<SYNC Start=2730635><P Class=KRCC>
.
<SYNC Start=2732084><P Class=KRCC>
그런데 이거 안 했구나! 여기서 홀수 세 개 뽑았는데 여기가 1, 3, 5의 배열로 올지, 3, 5, 1의 배열로 올지 이런 것은 정해줘야 되는 거 아니야? 그렇지? 그래서 여기다가 곱하기 3!을 하셔야겠네요. 
<SYNC Start=2743222><P Class=KRCC>
그러면 처음부터 여기서 4P3 하셔도 되겠고요. 홀수 뽑아서 나열까지 하고, 이것은 짝수 나열하고, 이것은 홀수 들어가는, 세 개 들어가는 연달아 들어가는 자리 마련하고, 이렇게 되시고요. 
<SYNC Start=2757358><P Class=KRCC>
②번입니다. 얘는 되레 간단한 게 '짝, 짝, 홀'의 조합으로 모든 데를 다 들어가야 되는데 그때 홀수가 양쪽 귀퉁이 네 군데 들어와야 된다고 했으니까 그 홀수 네 개가 자리 바꾸는 방법을 먼저 곱하시고요. 
<SYNC Start=2770763><P Class=KRCC>
나머지 자리에 짝수가 채워지는 거니까 짝수 네 개도 또 자리 바꾸는 방법이 필요하죠. 끝이에요. 왜냐하면 홀수랑 짝수의 자리가 완전히 고정돼 버린 거니까. 이해되시죠? 
<SYNC Start=2782285><P Class=KRCC>
그러고 나서 이 둘을 더하는 게 분자에 가고요. 분모는 여덟 개 1부터 8까지의 수를 전부 다 채워 넣어서 여기에다가 나열하는 방법이에요. 이해되시죠? 조심하실 것은 원순열인가를 고민하실 수도 있는데요.
<SYNC Start=2797672><P Class=KRCC>
이 문제에서는 돌렸을 때 같은 것을 같은 것으로 취급한다는 얘기가 없어요. 그렇게 되기 때문에 원순열로 생각하시면 안 돼요. 그러니까 전체의 경우의 수는 8!이에요, 그냥. 이거 원순열로 갔다가는 큰일 날 수 있죠.
<SYNC Start=2811309><P Class=KRCC>
이렇게 되고요. 이 둘을 더하니까 (4×4!×4!)인 거죠. 왜냐하면 4P3은 어차피 4!이랑 결과 값이 같으니까. 그러니까 느낌상으로 4!×4!을, 잠깐만요. 4!×4!을 묶어주시면 
<SYNC Start=2827643><P Class=KRCC>
그러면 이 앞에 4가 남고 이 뒤에 1 남으니까 (4+1) 해서 여기가 5 되네요. 그렇죠? 요령을 피워볼까요? 4!에 5니까 여기가 5!이거든요. 5!을 다 날려버리면 8, 7, 6만 되죠. 
<SYNC Start=2842671><P Class=KRCC>
그래서 4, 3, 2, 1에서 4, 2, 8, 여기 8 지우고요. 여기 3이니까 이거 날려버리면 1/14이 되는 거죠. 따라서 이 문제 정답은 1/14, 이렇게 하시면 됩니다. 하실 수 있겠죠? 문제가 쉽지 않아요. 그런데 문제는 괜찮아요. 
<SYNC Start=2864002><P Class=KRCC>
한 번 생각해 보실만한 부분들이 좀 있어요. 그런 것 조합을 정할 때 세 수의 합이 홀수가 되는 조합을 정한다든지 그런 아이디어들은 평가원에서도 굉장히 즐겨 쓰는 아이디어거든요.
<SYNC Start=2875107><P Class=KRCC>
그래서 이 문제가 많이 꼬임이 있는 문제이기는 하지만 그래도 고민해 볼만한 것들이 좀 있으니까 차분하게 좀 오늘은 고생을 해보셨으면 좋겠습니다. 다 끝나고 나면 낙이 옵니다. 
<SYNC Start=2886139><P Class=KRCC>
오늘도 수고 많으셨고요. 오늘은 코드 정리할 게 별로 없죠. 코드 하나 올려주시고요. 그리고 그것보다는 문제 풀이에 대한 복습을 조금 더 열심히 하셨으면 좋겠습니다. 우리는 다음 시간에 뵐게요. 
<SYNC Start=2896038><P Class=KRCC>
.
<SYNC Start=2945346><P Class=KRCC>

</BODY>
</SAMI>
