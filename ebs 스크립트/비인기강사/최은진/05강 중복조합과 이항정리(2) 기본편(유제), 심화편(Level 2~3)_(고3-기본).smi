<SAMI>
<HEAD>
<STYLE TYPE="text/css">
<!--
P { margin-left:8pt; margin-right:8pt; margin-bottom:2pt;
    margin-top:2pt; font-size:12pt; text-align:left;
    font-family:굴림, Arial; font-weight:normal; color:white;
    background-color:#405A8D; }
.KRCC { Name:한국어; lang:ko-KR; SAMIType:CC; }
#STDPrn { Name:Standard Print; }
#LargePrn { Name:Large Print; font-size:20pt; }
#SmallPrn { Name:Small Print; font-size:10pt; }
-->
</STYLE>
</HEAD>
<BODY>
<SYNC Start=9455><P Class=KRCC>
반갑습니다. 내신 만점 확률과 통계 수능특강 강의에 오셨고요. 저는 체인지 수학 최은진입니다. 다섯 번째 시간이에요.
<SYNC Start=18303><P Class=KRCC>
오늘은 이제 기본 편 문제 풀이하는 거 아시죠? 수능특강 문제 풀이. 아, 심화 편이 되겠네요. 기본편 지난 시간 개념 설명했고. 심화 편 문제 풀이 하는 시간이고요.
<SYNC Start=28790><P Class=KRCC>
저의 일상을 먼저 공유하고 시작해 볼까요.
<SYNC Start=31453><P Class=KRCC>
오늘 보여드리는 사진은. 잘 안 보이긴 하죠. 근데 대충의 느낌은 뭔가 사진이 모여 있는 느낌인데요. 선생님의 작년, 대부분을 차지했던 이제 그 다큐 찍었던 친구들과 함께 했던 그 사진이에요.
<SYNC Start=46108><P Class=KRCC>
선생님 사진만 있는 게 아니라 뭐 EBS 다른 선생님들 사진도 있고 같이 참여했던, 그리고 같이 했던 친구들 사진도 있죠.
<SYNC Start=56520><P Class=KRCC>
이게 얼마 안 된 것 같은데 이제 몇 개월이 지나고, 아마 여러분 이 방송을 볼 때쯤이면 1년 가까이 돼 가는 시기가 될 수도 있겠네요.
<SYNC Start=67514><P Class=KRCC>
참 그런 것 같아요. 이게 여러분 지금 되게 힘들잖아요. 공부하기. 근데 진짜 생각보다 시간이 금방 가요.
<SYNC Start=75355><P Class=KRCC>
그래서 하루하루는 정말 잘 안 가는 것 같은데. 막상 1년은 생각보다 후딱, 금방 흐르더라고요. 그래서 참 그게 아쉽죠. 나이 먹는 것도 아쉽지만.
<SYNC Start=89148><P Class=KRCC>
어쨌든 1년이라는 시간이, 그 시간이 다시 오지 않는데, 참 아쉬운데 막상 지나고 나면 ‘그렇게 금방 갈 것을 조금 더 열심히 할걸.’ 이런 후회가 나중에 꼭 남더라고요. 선생님도 그랬고.
<SYNC Start=103437><P Class=KRCC>
그래서 고3 정말 중요한 시기 혹은 재수생 정말 중요한 시기에, 여러분 이 시기를 정말 놓치시면 안 됩니다.
<SYNC Start=111582><P Class=KRCC>
나중에 후회하지 않도록 정말 하루하루가 남들보다 내가 조금 더 알차게. 남들이 24시간을 쓴다면 나는 진짜 48시간을 쓴다는 생각으로 정말 알차게 보내셔야 나중에 후회가 없을 겁니다.
<SYNC Start=129308><P Class=KRCC>
정말 이렇게 모아놓고 보면 한순간의 진짜 사진 한 장 정도로밖에 안 느껴집니다. 그렇지만 하루하루는 왜 그렇게 힘든가 몰라요. 그렇죠?
<SYNC Start=140221><P Class=KRCC>
힘내시라고 좀 응원할 겸 해서 선생님의 작년 추억을 가져와 봤고요. 여러분도 이 순간이 내년 이맘때 추억이 되지 않을까. 좋은 추억이 되려면 지금 열심히 해 보자. 그런 의미로 얘기해 봤습니다.
<SYNC Start=156642><P Class=KRCC>
오늘 수업 시작해 보도록 하겠습니다. 오늘은 제가 아까도 예고했듯이 이제 심화 편 문제 풀이 시작할 거고요.
<SYNC Start=162661><P Class=KRCC>
지난 시간에 제가 이항정리 부분을 문제를 좀 많이 못 풀었다고 말씀을 드렸고요. 그래서 오늘은 조금 이항정리를 푸는 비중이 좀 많을 겁니다.
<SYNC Start=170506><P Class=KRCC>
물론 중복조합에 대한 문제들도 문제 풀이하겠지만 이항정리에 대한 문제들 위주로 조금 더 문제를 좀 많이 다뤄 보도록 하겠습니다.
<SYNC Start=181270><P Class=KRCC>
첫 번째 여러분과 볼 내용은 가장 기본 문제 유제로 한번 풀어보도록 하겠습니다. 다항식 이거의 전개식에서 x의 7제곱의 계수와 x의 6제곱의 계수를 비교하고 싶다고 얘기했습니다.
<SYNC Start=192400><P Class=KRCC>
그렇다면 ‘7제곱의 계수다.’라고 한다면, 일단은 이거 일반항을 먼저 구해 보자고요.
<SYNC Start=198568><P Class=KRCC>
왜냐면 특정한 항의 계수에 관한 물음은 일반항을 구하고 그러고 나서 그때의 r을 맞춰가면서 그러고 나서 비교해서 구하는 거라고 말씀을 드렸기 때문에. 일반항을 구하시면 8Cr에.
<SYNC Start=211479><P Class=KRCC>
저는 사실 이런 문제를 풀 때 이 x랑 하나가 상수면 이걸 뒤로 미뤄서 (k+x)의 8제곱이라고 써도 사실 같은 전개식을 가지잖아요. 그래서 저는 이 x를 뒤로 미는 걸 좋아하기는 해요.
<SYNC Start=224635><P Class=KRCC>
그러면 이 r을 따라가면서 x의 차수가 높아지니까 조금 더 계산이 간단한 그런 효과가 있기는 하죠. 그래서 k의 8-r제곱에, r제곱. 이렇게 계산을 한번 해 보죠.
<SYNC Start=239734><P Class=KRCC>
그렇다면 x의 7제곱의 계수와 x의 6제곱의 계수를 구하라고 했거든요.
<SYNC Start=245351><P Class=KRCC>
그러면 이게 x의 7제곱이 되고 싶고, 또 하나는 x의 6제곱의 계수가 이제 비교가 되고 싶은 거니까. x의 7제곱이라면 이때의 r=7이 될 거고요. x의 6제곱이라고 하면 이때의 r=6이 되겠죠.
<SYNC Start=262713><P Class=KRCC>
좋습니다. 그렇다면 8C7에다가 k에 7을 넣어 주면 1제곱이 되겠고요. r이 6이라면 8C6에다가 k²이 되겠죠.
<SYNC Start=276254><P Class=KRCC>
그런데 이렇게 계산한 게 이쪽은 24라고 얘기했고요. 이쪽은 뭐냐고 물어본 거죠.
<SYNC Start=283208><P Class=KRCC>
그럼 이게 24라는 걸 이용해서 먼저 k값을 완성하시고, 그걸 이용해서 이 물음에 답하시면 되겠네요.
<SYNC Start=291777><P Class=KRCC>
따라서 이게 24라면 8k가 24니까 k=3이 되거든요. 그렇죠? 그럼 k=3이면 8C6은 8ㆍ7을 2로 나누면 4×7=28이니까 28에 3×3=9가 되는 거죠.
<SYNC Start=306392><P Class=KRCC>
맞나요? 그래서 28×9 해서 252더라. 이렇게 정리하시면 되는 문제입니다.
<SYNC Start=314431><P Class=KRCC>
이항계수 문제는 어쨌든 한 가지 팁을 드리자면, 하나가 상수고 하나가 x, 문자식이면 문자식을 뒤로 미는 게 조금 더 차수를 계산해서 따라가기가 좀 더 쉽더라. 뭐 이런 팁을 좀 드리고 싶고요.
<SYNC Start=328859><P Class=KRCC>
그래서 이거 어차피 이렇게 바꿔주셔도 상관은 없으니까. 어쨌든 중요한 건 일반항을 구한다는 게 가장 중요하고요.
<SYNC Start=335371><P Class=KRCC>
일반항을 구하고 나서 그때 r의 값을 맞춘 다음에 그러고 나서 계수를 구하는 식으로 전개하는 가장 기본 문항이라고 생각하실 수 있겠습니다.
<SYNC Start=343790><P Class=KRCC>
그러면 유제 7번 문항도 한번 보면서. 23쪽입니다. 문제 풀이해 보도록 할게요.
<SYNC Start=350441><P Class=KRCC>
자연수 n에 대하여 서로 다른 6종류의 아이스크림 중에서 중복을 허락해서 n개의 아이스크림을 택하는 경우의 수를 구한다. 그 얘기입니다.
<SYNC Start=359760><P Class=KRCC>
이 문제는 사실은 이항정리 문제는 맞습니다만, 중복조합의 아이디어가 좀 섞여있는 이항정리 문제라고 보실 수 있어요. 그래서 중복조합과 이항정리의 단원 복합형 문제라고 보실 수 있어요.
<SYNC Start=374811><P Class=KRCC>
일단 그냥 하나만 단적으로 예를 들어서 f(3)만 한번 생각해 볼까요.
<SYNC Start=379800><P Class=KRCC>
그럼 f(3)이 뭐냐면. 서로 다른 6종류의 아이스크림 가지고, 아이스크림을 가지고 중복을 허락해서 3개를 선택하고 싶다는 거죠. 맞죠.
<SYNC Start=395821><P Class=KRCC>
그러면 아이스크림의 종류는 충분히 많고, 중복을 허락해서 선택을 하고. 그럼 내가 특정한 아이스크림이 너무 좋아서 특정한 아이스크림만 가지고 선택을 해도 상관은 없는 거고요.
<SYNC Start=407415><P Class=KRCC>
그러니까 말하자면 아이스크림이 6종류니까 이렇게 쓰고요. 그걸 가지고 3개를 채워 넣는다고 생각하시면 되겠죠.
<SYNC Start=415902><P Class=KRCC>
따라서 뭐 예를 들어 a 아이스크림을 3개를 다 선택을 하고 나머진 0, 0, 0, 0, 0으로 선택해도 되고. 이런 순서쌍의 개수가 되니까 결국에는 6H₃이더라. a, b, c, d, e, f는 0 이상이니까.
<SYNC Start=430389><P Class=KRCC>
여기까지 따라오실 수 있죠?
<SYNC Start=431908><P Class=KRCC>
단적으로 제가 f(3)만 가지고 구했는데요. 그렇다면 이 3 대신에 이제 1이 오고, 2가 오고, 4, 5, 6까지 오는 거니까 결국은 뭘 더 구하게 되는 거냐면
<SYNC Start=442230><P Class=KRCC>
6H₁, 6H₂, 6H₃, 6H₄, 맞지? 6H5, 6H6까지를 더하게 되는 그런 문제가 된다는 거죠. 됐죠? 그러면 6H6은 6C₁이고, 6H₂는 7C₂가 되죠.
<SYNC Start=466651><P Class=KRCC>
맞죠? 그다음에. 6H₃은 8C₃이 되고. 이거는 9C₄가 되고, 10C5가 되고 11C6이 되겠죠. 좋습니다.
<SYNC Start=482928><P Class=KRCC>
맞죠. 그래서 이걸 다 더하게 될 거예요.
<SYNC Start=485663><P Class=KRCC>
근데 얘들아, 사실 이거 계산해서 더해도 돼. 6개밖에 안 되니까. 근데 기왕이면 이항계수의 성질을 이용하면 조금 더 좋거든요.
<SYNC Start=495768><P Class=KRCC>
이항계수의 성질 중에 어떤 게 있냐면, 우리 ‘깔때기 공식’ 기억하시죠? 사실은 그게 연장이 되면 결국 하키 스틱 패턴이 되는 거긴 한데요. 이걸 그거를 이용할 거예요.
<SYNC Start=508004><P Class=KRCC>
근데 이렇게 더하라고 나오면 이항계수를 모아놓은 파스칼 삼각형을 다 그려가면서 하기엔 사실은 시간상 너무 위험부담이 좀 있기 때문에, 너무 오래 걸리니까.
<SYNC Start=519661><P Class=KRCC>
이거를 이제 조작을 좀 하면서 깔때기 공식을 이용해 볼 건데 어떻게 할 거냐면, 그냥 한번 이걸 더해 볼게요. 1이거든요. 값이.
<SYNC Start=529997><P Class=KRCC>
그럼 1을 더하면. 어쨌든 우린 다 이거 더한 걸 지금 구하고 싶은 거죠. 그럼 1을 빼면 어쨌든 내가 구하고 싶은 식에는 변동이 없어요.
<SYNC Start=540676><P Class=KRCC>
그 대신에 이 앞에를 따로 계산을 해 주시면요. 6C0과 6C₁을 더하면 깔때기 공식에 의하면 다음 행에 더 큰 값이 나오죠.
<SYNC Start=554870><P Class=KRCC>
그다음은요?
<SYNC Start=558002><P Class=KRCC>
다음 행에 더 큰 값이 나오죠.
<SYNC Start=561987><P Class=KRCC>
그다음은요?
<SYNC Start=563676><P Class=KRCC>
다음 행에 더 큰 값이 나오죠.
<SYNC Start=566591><P Class=KRCC>
이게 깔때기 공식이었잖아. 이렇게, 뭐지? 이렇게 이제 쓰잖아요. 이렇게. 파스칼 삼각형을 쭉 썼을 때.
<SYNC Start=575025><P Class=KRCC>
이렇게 더하면 이게 되고. 이게 그대로 내려오고. 이렇게 더하면 이게 되고. 뭐 이런 식으로 이제 갔단 말이죠.
<SYNC Start=580797><P Class=KRCC>
맞죠. 그러니까 이렇게 더해서 이게 되는 그 느낌. 그게 이거 더해서 그다음 행이 나오는 그 느낌이라고요.
<SYNC Start=587070><P Class=KRCC>
그다음에 이렇게 더하면 그다음 행에 둘 중에 큰 수. 이렇게 더하면 그다음 행에 둘 중에 큰 수. 그다음에 이렇게 더하면 그다음 행에 둘 중에 큰 수.
<SYNC Start=598064><P Class=KRCC>
하시고 1은 빼야 마땅하죠. 처음에 필요 없는 걸 더했었으니까. 여기서 1을 뺀 이 값이 우리가 구하고자 하는 정답이 되는 겁니다.
<SYNC Start=607070><P Class=KRCC>
여기까지 되시죠?
<SYNC Start=608260><P Class=KRCC>
따라서 12C6을 계산을 하시고. 계산하시고. 그리고 1을 빼시고 그렇게 가면 됩니다.
<SYNC Start=614570><P Class=KRCC>
이거 계산하시면. 여러분 계산 여러분이 하세요. 제가 내신 만점 수능특강에서까지 계산 막 하고 있진 않을 겁니다.
<SYNC Start=620798><P Class=KRCC>
그래서 제가 강의 노트 올리니까 그거 참고해서 보시고요. 그래서 이거 924에서 1을 빼니까 결국엔 923이 되는 겁니다.
<SYNC Start=628658><P Class=KRCC>
여기까지 할 수 있겠죠?
<SYNC Start=630217><P Class=KRCC>
&nbsp;
<SYNC Start=632073><P Class=KRCC>
이렇게 이제 구한 건데 사실은 이거를 그림을 그려놓고 보면, 파스칼 삼각형을 이렇게 그려놓고 보면. 6C0부터 11C6까지 더한 게 이렇게.
<SYNC Start=642524><P Class=KRCC>
&nbsp;
<SYNC Start=644103><P Class=KRCC>
하키 스틱 모양으로 더해서 하나 꺾어진. 이 값이 바로 12C6이 나오는 그런 느낌의 그림일 거예요.
<SYNC Start=652127><P Class=KRCC>
근데 이게 그림이 주어지면 하키 스틱 패턴을 이용하면 되는데 그림이 주어진 게 아니기 때문에 그것보다는 이 하나하나를 만들어가는 거 있잖아요. 그 구조로 생각을 해서.
<SYNC Start=662055><P Class=KRCC>
왜냐면 이 하키 스틱 패턴 자체가 어떻게 만들어진 거냐면. 이 값은 이거랑 똑같으니까 이거, 이거를 더해서 그게 이 옆에가 되는 거고. 그렇죠?
<SYNC Start=672171><P Class=KRCC>
그다음에 이거, 이거를 더하면 이 옆에가 되는 거고. 이거랑 더하면 또 옆에가 되고, 더하면 옆에가 되고. 그렇게 해서 이게 나오는 거거든요. 이게, 이 값이.
<SYNC Start=681822><P Class=KRCC>
그러니까 결국엔 하키 스틱 패턴은 깔때기 공식에서 유도, 유도, 유도, 유도해서 간 거거든요.
<SYNC Start=687114><P Class=KRCC>
그런데 그림이 주어지면 훨씬 빨리 하키 스틱으로 풀면 편하고요.
<SYNC Start=691947><P Class=KRCC>
그게 아니라 수식으로 주어지면 하나, 하나, 하나, 하나를 깔때기처럼 뽑아, 뽑아, 뽑아가서 답으로 유도해 가는 걸 기억해 가시면 돼요.
<SYNC Start=700649><P Class=KRCC>
이런 부분이 실제 수능이나 모의고사에선 자주 등장하진 않았는데요. 여러분 때에는 또 등장할 가능성이 또 있기 때문에 좀 기억을 하시고요.
<SYNC Start=709180><P Class=KRCC>
또 내신에서는 또 워낙 중요한 부분이라 연결 지어서 보시면 되겠습니다. 아마도 이 문제가 앞부분에서는, 이항정리 부분에선 조금 제일 난이도가 있지 않았나 싶어요.
<SYNC Start=722170><P Class=KRCC>
왜냐하면 중복조합이랑 또 섞여있기 때문에 좀 문제는 괜찮습니다. 그래서 이 문제까지 잘 정리를 해 두시고요.
<SYNC Start=728156><P Class=KRCC>
그러면 다음 문제로 가서 이제 레벨 2 문제부터 문제 풀이를 조금 더 해 보도록 하겠습니다.
<SYNC Start=737258><P Class=KRCC>
레벨 2와 3에 있는 문제들을 조금 볼 텐데요. 지금은 레벨 2에 1번 문제로 가 보겠습니다. 26쪽입니다.
<SYNC Start=745178><P Class=KRCC>
흰 공이 9개 있고요. 검은 공이 9개가 있고, 파란 공이 9개가 있는데요. 그중에.
<SYNC Start=749906><P Class=KRCC>
이 문제가 약간 말이 많아서 좀 어려워요. 막상 하고 나면 ‘엄청 어렵다.’ 그런 느낌은 아니지만 말이 많으니까 그거를 논리적으로 따라가는 게 좀 귀찮은 문제는 맞습니다.
<SYNC Start=760202><P Class=KRCC>
그래서 여러분이 좀 정신을 빠짝 차리셔야 되는데요.
<SYNC Start=763211><P Class=KRCC>
결국에는 A, B, C 상자에 어떻게 들어가겠단 얘기냐면, 3개씩 넣겠다는 거예요. A, B, C 상자에.
<SYNC Start=771200><P Class=KRCC>
근데 A 상자랑 B 상자에는 파란 공의 개수를 합해서 4개를 넣겠다는 거예요. 여기 2개를 파란 공을 4개를 합쳐서 넣겠다는 거죠.
<SYNC Start=783738><P Class=KRCC>
그리고 이 C 상자에는 흰 공의 개수가 여기 A에 넣은 파란 공의 개수와 같게 들어가도록 넣고 싶다는 게 조건이에요.
<SYNC Start=794048><P Class=KRCC>
물론 공은 어떻게 넣겠다는 거냐면 9개, 9개, 9개. 공이 충분히 들어있는데 그 안에다가 A, B, C에 각각 3개씩을 넣겠다는 게 기본 전제에 깔린 거고요. 일단 이렇게 문제 파악은 됐을 겁니다.
<SYNC Start=807961><P Class=KRCC>
그러면, 그러면 이제 볼까요?
<SYNC Start=812107><P Class=KRCC>
우선은 파란색, 파란색이 더해서 A, B가 4개가 나오도록 하는 방법이 4, 0. 3, 1. 2, 2. 1, 3. 0, 4. 이렇게밖에 없다는 건 아시죠.
<SYNC Start=826787><P Class=KRCC>
그런데. 이제 이 케이스를 가지고 봤을 때 한 상자 안에 들어가는 공의 개수는 최대 3개까지 넣고 싶은 거예요.
<SYNC Start=836331><P Class=KRCC>
최대가 아니라 어쨌든 3개씩 넣고 싶은 거니까 이런 케이스는 계산을 해 줄 필요가 없죠. 따질 필요가 없죠.
<SYNC Start=842108><P Class=KRCC>
그래서 일단은 케이스를 파란 공 3개, B에 들어가는 파란 공 1개. A 들어가는 파란 공 2개, B 들어가는 거 2개. A 1개, B 3개. 이렇게 나눠주는 게 일단은 가장 기본이라고 생각하시면 됩니다.
<SYNC Start=857209><P Class=KRCC>
그렇게 되면 이제 여기 들어가는 흰 공이 3개가 들어오는 거예요. C에 들어가는 흰 공은 2개가 들어오고요. C에 들어가는 흰 공이 또 1개가 들어온다. 그게 이제 전제에 깔린 겁니다.
<SYNC Start=869318><P Class=KRCC>
그럼 이제 여러분은 어떻게 해야 되냐면, 같은 색깔의 공끼리는 구분을 안 하니까 그걸 넣는 방법은 생각은 안 하셔도 되고요.
<SYNC Start=876323><P Class=KRCC>
이제 이 상태에다가 나머지 공들을 채워 넣어서 각각의 상자에 공이 3개씩 들어가도록 하는 방법을 구해 주어야 하는 겁니다.
<SYNC Start=887257><P Class=KRCC>
여기까지 됐죠.
<SYNC Start=888861><P Class=KRCC>
그럼 첫 번째부터 보시면. 이때는 C나 A에는 공이 3개씩 이미 다 들어가 있어서 더 이상 다른 공을 넣을 필요는 없고요.
<SYNC Start=897375><P Class=KRCC>
B 상자에만. B 상자에만 1개만 들어있으니까 B 상자에만 2개의 공을 추가로 넣어 주시면 돼요.
<SYNC Start=907264><P Class=KRCC>
근데 파란 공이 1개라고 지금 정해 놓은 거니까 이때는 B 상자에 파란 공 말고 흰 공이나 검은 공을 가지고 2개를 넣는 방법이죠.
<SYNC Start=920415><P Class=KRCC>
그럼 사실 이거 수작업으로 구해도 B 상자에 흰 공을 2개 넣고, 검은 공 안 넣는 방법. 아니면 검은 공, 흰 공 하나씩 넣는 방법.
<SYNC Start=929409><P Class=KRCC>
아니면 검은 공 2개 넣고 흰 공 안 넣는 방법. 3가지 방법밖에 없어요. 사실 이게. 결국엔 3가지거든요. 그렇죠.
<SYNC Start=938037><P Class=KRCC>
근데 이제 이거를 조금 더 수학적으로 생각을 해 본다고 한다면. 더해서, 그렇죠.
<SYNC Start=945955><P Class=KRCC>
흰 공의 개수, 검은 공의 개수라고 a, b를 설정을 하면. 흰 공의 개수, 검은 공의 개수라고 설정을 하면 더해서 2가 나오고. 0 이상이라고 생각하면 되죠.
<SYNC Start=956299><P Class=KRCC>
그러면 흰 공이 2개가 다 들어갈 수도 있고 검은 공이 뭐 1개씩도 되고. 그 순서쌍이니까. 그래서 얘가 사실은 ₂H₂가 돼서 ₃C₂가 되고 그게 3개가 되는 원리이기는 해요.
<SYNC Start=970040><P Class=KRCC>
됐어요. 어찌 됐든 3개입니다.
<SYNC Start=973446><P Class=KRCC>
이번에는. 이때는 결국엔 공이 다 2개씩만 들어가 있으니까 1개, 1개, 1개를 채워 넣으셔야 돼요.
<SYNC Start=981432><P Class=KRCC>
그렇다면 A 상자에는 흰 공만 2개가 들어가 있는 상황이니까 검은 공 아니면 파란 공을 1개를 넣는 방법이 있을 수 있죠.
<SYNC Start=992481><P Class=KRCC>
그래서 검은 공 아니면 파란 공을 넣는 2가지 종류의 방법이 있고요. A 상자에. 아, Sorry. A가 아니라. 미안. C 상자인데. 여기 C잖아. 그렇지. C 상자에.
<SYNC Start=1004472><P Class=KRCC>
그다음에 그럴 때마다 A 상자도 마찬가지예요. A 상자에는 파란 공 2개가 이미 들어가 있는데 나머지 흰 공이나 검은 공은 또 들어올 수 있거든요.
<SYNC Start=1014507><P Class=KRCC>
그러니까 여기도 검은 공 아니면 흰 공이 들어올 수가 있는 상황이에요. 이때도 마찬가지고. 그러니까 다 2가지 방법이 있는 거죠. 이 2가지 방법에다가 각각의 또 2가지가 온다는 거죠.
<SYNC Start=1025183><P Class=KRCC>
그러면 그때마다 B 상자도 마찬가지예요. 아직 B 상자도 2개밖에 안 들어와 있으니까 파란 공 2개를 제외하고 나머지 흰 공이나 검은 공 중에 1개씩은 들어와도 되니까
<SYNC Start=1036013><P Class=KRCC>
여기도 검은 공 아니면 흰 공. 여기도, 여기도, 여기도. 그러니까 역시 그때마다 다 2개씩 들어오죠. 따라서 이들을 다 그때마다 만족하는 거니까 8가지 방법이 되겠죠.
<SYNC Start=1049480><P Class=KRCC>
따라오실 수 있고요.
<SYNC Start=1052379><P Class=KRCC>
이번에는 흰 공 1개, 파란 공 1개, 파란 공 3개가 들어가 있는 상황이에요. 그렇다면 어떻게 하면 되냐면, 이번에는 어떻게 하면 되냐면.
<SYNC Start=1064556><P Class=KRCC>
C랑 A 상자에만 공을 넣는 방법이 되는 거죠. 그렇게 따지니까 C 상자랑 A 상자는 어떻게 하면 될까요?
<SYNC Start=1073513><P Class=KRCC>
C 상자에 2개가 들어가야 되는데 흰 공이 아닌 2개가 들어가는 방법이죠. 그래서 C 상자에 파란 공이나 아니면 검은 공을 2개를 넣는 방법이고요.
<SYNC Start=1085339><P Class=KRCC>
그때마다 A 상자에도 마찬가지로 파랑은 고정이니까 흰 공 또는 검은 공을 역시 2개를 넣는 방법이 되겠죠.
<SYNC Start=1097203><P Class=KRCC>
역시 이 부분 역시 수작업이 가능하지만 그게 여기서 했던 아이디어와 똑같기 때문에 3개를 그냥 쓰셔도 되고 ₂H₂라는 걸 가져와서 3개라고 하셔도 되고요. 그러니까 여기도 3가지 방법이 되겠죠.
<SYNC Start=1111606><P Class=KRCC>
그러니까 3가지, 8가지. 이 경우는 그럼 어떻게 돼요? C 상자에 3가지 방법으로 들어가면서 동시에 그때 A 상자에도 3가지 방법이 들어가니까 이들을 곱한 9가지 방법이 되는 거예요.
<SYNC Start=1127602><P Class=KRCC>
그러니까 3가지, 8가지, 9가지 방법을 더한 것이 실제 우리가 구하고자 하는 방법의 수가 되겠죠.
<SYNC Start=1136368><P Class=KRCC>
따라서 이들을 다 더해 주시면 20가지가 되거든요. 그래서 ‘이 문제의 정답은 20이야.’라고 정리해 주시면 되는 겁니다.
<SYNC Start=1144135><P Class=KRCC>
문제 쉽지 않아요. 쉽지 않은 문제고요. 이 상황들을 다 따져 보는 건데 문제 괜찮습니다.
<SYNC Start=1150593><P Class=KRCC>
그래서 여러분이 중복조합으로 생각을 넓혀가되, 케이스를 나눠가면서 하는 굉장히 생각을 좀 요하는 문제의 유형입니다.
<SYNC Start=1159656><P Class=KRCC>
근데 뭐 아주 어려운 건 아닌데요. 그래도 요즘엔 중복조합 문제도 너무 전형적으로 나오기보다는 이런 식의 유형들이 나오고 있으니까 좀 잘 기억해 주시면 좋겠고요.
<SYNC Start=1170372><P Class=KRCC>
이제. 수능특강 레벨 2의 6번 문제로 갈게요. 제가 이 사이에 있는 문제들이 되게 많은데 그거는 다음 시간에 변형 문제로 좀 문제를 많이 다뤄 볼 생각이고요.
<SYNC Start=1182323><P Class=KRCC>
6번으로 가서 이항계수 문제를 조금 더 집중적으로 이번 시간에 풀어볼게요.
<SYNC Start=1187535><P Class=KRCC>
10 이하의 자연수 n에 대하여 이거의 전개식에서 상수항을 f(n)이라고 하자. 그러면 일단은 이거 상수항을 만들어줘야 되거든요. 그러면 일단 일반항을 구해 보자고.
<SYNC Start=1199328><P Class=KRCC>
nCr에 (x²)의 n-r제곱에 (x분의2)의 r제곱. 이게 이제 일반항이거든. 근데 상수항이라는 거는 여기서 x만 모아주면 x의 2n-2r에다가 x의 이거 -1제곱이지. x분의1은. 그러니까 x의 -r제곱이거든.
<SYNC Start=1218689><P Class=KRCC>
이걸 곱해 버리면 x의 2n-3r제곱이잖아요. 3r제곱. 그게 이제 상수항이 되고 싶은 거니까 결국은 x의 0제곱이 되고 싶다는 단서인 거예요.
<SYNC Start=1230662><P Class=KRCC>
그래서 먼저 일반항을 구해라. 그다음에 두 번째. 단서. 주어진 조건을 만족하는 그때의 r을 구해라. 그러나 지금은 r을 그냥 구할 순 없고요. 2n이 3r과 같다는 조건식은 구했어요.
<SYNC Start=1247696><P Class=KRCC>
그러고 나면 이때 n하고 r의 조건을 살펴보시면 어쨌든 n하고 r은 0 이상 10 이하라고 했죠. 그 사이의 정수가 되기 때문에.
<SYNC Start=1261676><P Class=KRCC>
n은 어쨌든 3의 배수가 될 수밖에 없고요. 2, 3이 서로소기 때문에. 맞나요?
<SYNC Start=1269302><P Class=KRCC>
r 역시 짝수가 될 수밖에 없어요.
<SYNC Start=1272693><P Class=KRCC>
그러니까 n이 될 수 있는 경우는 10 이하의 자연수 중에서 3의 배수는?
<SYNC Start=1277908><P Class=KRCC>
0은 당연히 아닐 테니까 3, 6, 9밖에 안 되죠. 그래서 n과 r의 순서쌍은 n이 3일 때, n이 6일 때, 그다음에 n이 9일 때 이렇게 밖에 안 되고요.
<SYNC Start=1291224><P Class=KRCC>
n이 3이라면 그때 r은 2가 될 거고요. 맞죠? n이 6이라면 그때 r은 4가 될 거고요. 그다음에 이때 n이 9라면 r은 6이 되겠죠.
<SYNC Start=1304756><P Class=KRCC>
됐나요?
<SYNC Start=1306742><P Class=KRCC>
따라서 이런 경우들이 n과 r이 이걸 만족한다면 ‘상수항’이 되겠더라. 그러면 ‘상수항’ 자체를 구한다는 건 이때의 계수를 구한단 의미이고. 따라서 이제 상수항을 구하러 가는 거예요. 계수를.
<SYNC Start=1326774><P Class=KRCC>
nCr에. 이거는 x에 관한 식. 이 2의 r제곱까지가 계수죠. 이게 이제 계수거든요. 이항계수.
<SYNC Start=1334479><P Class=KRCC>
그러면 상수항이 되는 이 이항계수는 그때 조건이 이 3가지라 그랬어요. (3, 2), (6, 4), (9, 6). 그러니까 그걸 대입하시면 돼요.
<SYNC Start=1345553><P Class=KRCC>
(3, 2)를 대입하시면 ₃C₂에 2²이 되는 거고요. 그다음에 (6, 4)를 대입하시면 6Cr에 2⁴이 되는 거고요. 마지막 9C6이 되고요. 그다음에 2의 6제곱이 되겠죠.
<SYNC Start=1361766><P Class=KRCC>
이들을 제각각 전부 다 상수항이 될 수 있는 거기 때문에 그런 케이스들을 지금 어떻게 하래요? 더하라 그랬어요.
<SYNC Start=1370840><P Class=KRCC>
n이 1일 때부터 10일 때까지를 다 더하라고 했는데. 10 이하의 자연수니까.
<SYNC Start=1376459><P Class=KRCC>
근데 아까 n이 상수항이 되려면 3의 배수가 될 수밖에 없다는 조건이 나왔고, 그러니까 이때 1부터 10까지 더하는 것 중에서 3, 6, 9일 때만 더하면 된단 얘기가 나오고.
<SYNC Start=1385670><P Class=KRCC>
그래서 이때의 값만 더하면 구하고자 하는 값이 나오겠더라. 그렇다면 이걸 더해 주시면 3×4=12. 맞죠?
<SYNC Start=1396786><P Class=KRCC>
그다음에 이때는 6×5니까 3×5=15에다가 이제 16을 곱하니까 240. 이거 그냥 계산할게요. 제가.
<SYNC Start=1404631><P Class=KRCC>
이 값은 5376. 제가 그냥 값을 계산해서 쓸게요. 이거 어렵지 않으니까. 여러분 계산은 여러분이 하세요. 이 정도는 산수 계산이니까 제가 강의 노트도 올려드리니까 같이 보시고요.
<SYNC Start=1416446><P Class=KRCC>
어쨌든 이들을 다 더하시면 되겠죠. 따라서 더하게 되면 5628이더라. 이 문제 정답은 이렇게 정리해 주시면 되겠습니다. 하실 수 있겠죠? 전형적인 이항정리에 대한 문제를 또 하나 풀어봤습니다.
<SYNC Start=1431859><P Class=KRCC>
그러면 다음 문제로 가서 레벨 2에 7번 문제로 가 보도록 하겠습니다.
<SYNC Start=1436452><P Class=KRCC>
이 문제도 보시면, ‘이게 중복조합 문제인가?’라는 고민이 들다가도 사실은 알고 보면 그냥 이항정리 문제예요. 보실까요.
<SYNC Start=1445912><P Class=KRCC>
같은 종류의 사탕이 10개가 있고요. 다른 종류의 초콜릿이 10개가 있어요. 그중에서 12개를 택한대요. 근데, 그러니까 합쳐서 12개를 택한다는 건데 초콜릿의 개수가 짝수가 되고 싶대요.
<SYNC Start=1457896><P Class=KRCC>
그러면 초콜릿의 개수가 짝수라는 건 초콜릿의 개수를 그러면 일일이 세면서 가면 좀 좋을 것 같아요.
<SYNC Start=1463774><P Class=KRCC>
그럼 한번 생각해 보죠. 초콜릿이 사실은 짝수라고 하면 0을 포함하냐, 안 포함하냐를 가지고 여러분 고민하실 수도 있는데요.
<SYNC Start=1472949><P Class=KRCC>
문제에서 명확하게 줘요. 보통. 수능이나 모의평가나 모의고사에서 거의 대부분. 또 학교 시험에서도. 그러니까 너무 걱정은 안 하셔도 되고요. 이 경우는 고민할 여지가 없게 됐어요.
<SYNC Start=1482474><P Class=KRCC>
왜냐면 0을 짝수로 본다면, 0을 넣는다고 생각하면 이때는 사탕을 12개를 뽑아야 되는데 12개까지 사탕이 없으니까 이건 들어갈 수가 없죠.
<SYNC Start=1490931><P Class=KRCC>
이런 식으로 명확한 상황을 주기 때문에 이런 고민은 하지 않으셔도 됩니다.
<SYNC Start=1495983><P Class=KRCC>
초콜릿을 2개를 줬다. 그렇다면 사탕은 10개를 줘야 될 거고요. 4개다 그러면 이때는 8개. 6개, 6개. 8개, 4개. 10개, 2개. 이렇게 이제 나눠지게 되는 거죠.
<SYNC Start=1515350><P Class=KRCC>
그러면 얘들아, 상식적으로 사탕은 종류가 같기 때문에 사탕은 뽑아놓으면 그냥 끝이야. ‘네 거야.’ 이렇게 놓으면 끝이라고.
<SYNC Start=1524933><P Class=KRCC>
그 사탕이 몇 개, 들어가 있는 사탕이 이게 어떤 종류의 사탕인지는. 다 한 종류라니까. 같은 종류니까.
<SYNC Start=1532006><P Class=KRCC>
그러니까 이걸 세는 거는 방법이 들지 않아요. 그럼 초콜릿은 상황이 달라요. 서로 다른 종류의 초콜릿이니까 다른 종류 10개 중에서 어떤 거 2개를 뽑아서 줄지. 선택해야죠.
<SYNC Start=1546997><P Class=KRCC>
10개 중에서 어떤 거 4개를 뽑아서 줄지 선택해야죠. 그럼 나머지는 사탕으로 채워서 주면 되니까.
<SYNC Start=1555047><P Class=KRCC>
여기 마찬가지죠. 여기도 마찬가지고. 여기도 마찬가지죠. 그래서 이들을 어떻게 해요? 이런 케이스들을 다 더해 주시면 답이 되겠죠. 나눠주는 방법의 수.
<SYNC Start=1566058><P Class=KRCC>
됐나요?
<SYNC Start=1568052><P Class=KRCC>
어떻게 계산할까?
<SYNC Start=1570747><P Class=KRCC>
하나하나 계산하셔도 되고요. 우리 뭘 알고 있죠?
<SYNC Start=1573067><P Class=KRCC>
여기서 10C0까지 0, 2, 4, 6, 8, 10. ‘뒷부분이 짝수가 되는 이항계수를 더했다.’라고 하면 2의 10제곱-1. 2의 10-1제곱. 2의 9제곱이 된다고 말씀드렸거든요.
<SYNC Start=1591533><P Class=KRCC>
그런데 그중에서 이 1은 사실은 필요가 없었죠. 그러니까 1은 마지막에 빼주셔야죠. 그래서 정답은 이렇게 정리가 되고요.
<SYNC Start=1598555><P Class=KRCC>
2의 9제곱에서 빼기 1을 하니까 결국엔 512에서 1을 빼니까 511이 되네요. ‘그래서 이 문제 정답은 511이야.’ 이렇게 간단하게 정리하실 수 있습니다. 되시겠죠? 문제 좋습니다.
<SYNC Start=1612716><P Class=KRCC>
그럼 다음 문제 볼게요. 레벨 2에 8번입니다. 이거 누가 봐도 이항계수 정리하는 이항계수의 성질에 관한 문제죠.
<SYNC Start=1621090><P Class=KRCC>
이거 제가 아까 말씀드렸던 깔때기 공식이에요. 하키 스틱 패턴이죠. 쉽게 말하면. 이거를 바꾸세요. 10C10을 11을 이용해서, 11을 이용해서 바꾸자고요.
<SYNC Start=1635652><P Class=KRCC>
11C11로 바꾸면 똑같이 값이 1이니까 상관없죠. 그러면 이거 더하면 어떻게 돼요?
<SYNC Start=1643069><P Class=KRCC>
같은 행에서 그렇다면 더 큰 다음 줄이 나오고요. 이 중에 더 큰 값이 나온다. 이게 깔때기 공식이라고 했죠. 이렇게, 이렇게 나오는.
<SYNC Start=1654064><P Class=KRCC>
파스칼 삼각형 그려놨을 때. 그럼 여기는 13C11. 큰 값.
<SYNC Start=1660572><P Class=KRCC>
그렇다면 결국에는 이런 식으로 가다 보면 이거랑 그 밑에 있는 걸 더하게 되면 어떻게 돼? 그 전 거를 더하게 되면?
<SYNC Start=1667072><P Class=KRCC>
18. 다음 행에 이거랑 에거 중에 큰 값이 밑에 있는 거니까 이거보다 큰 건 11이 나오겠죠. 이게 이제 정답이 되는 거야. 둘을 더하면.
<SYNC Start=1674934><P Class=KRCC>
왜냐면 그 전 단계에는 분명히 17C11이었을 거거든요. 이거까지 이렇게 이렇게 오면. 그래서 이거 2개 더하면 이게 되죠. 됐어요.
<SYNC Start=1685102><P Class=KRCC>
이걸 사실은 하키 스틱처럼 생각하셔도 되는데요. 이렇게 깔때기 모양으로 이렇게 가고, 가고, 가고, 가고 오는 게 훨씬 더 정확하고 훨씬 더 좋은 방법이에요. 여러분. 잊어버리지도 않고요.
<SYNC Start=1698078><P Class=KRCC>
그래서 이거 정리하시면 되는데요. 18C11이니까 18C7이에요. 그래서 이걸 이제 정리하시면 되거든요. 이거 계산 이제 여러분이 하시면 돼요. 이거를 계산은.
<SYNC Start=1711653><P Class=KRCC>
일일이 이제 다 한다고 생각하지 마시고요. 이거를 약분을 하고 가시면 되는 게. 어차피 이게 얼마냐고 물어본 게 아니고요. 소인수의 합을 구하라는 얘기예요.
<SYNC Start=1722234><P Class=KRCC>
그러니까 곱한 꼴로 만들면 되는 거예요.
<SYNC Start=1726659><P Class=KRCC>
7×2=14. 6×3=18. 5×3=15. 4×3=12. 이제 이렇게 되는 거죠. 그러고 나서 소인수분해를 한 꼴로 만들어주는 거예요.
<SYNC Start=1741204><P Class=KRCC>
3 2개. 이거는? 16이니까 2⁴이죠. 그리고는 13이 소수고요. 17이 소수니까 이렇게 쓸 수 있죠. 그러면 이 중에 소인수가 누구누구니? 3, 2, 13, 17. 이들을 더하시면 되겠죠. 소인수의 합이니까.
<SYNC Start=1761203><P Class=KRCC>
할 수 있겠어요? 그래서 이들을 더하시면 35가 됩니다. 문제 정답은 35. 오케이.
<SYNC Start=1770609><P Class=KRCC>
그래서 이 문제는 전형적인 이항계수의 성질을 이용하는 문제인데요.
<SYNC Start=1775191><P Class=KRCC>
이런 식으로 여러분이 이제 이항계수의 성질을 저랑 같이 정리했던 것처럼 한 번씩 정리해 보시고 문제를 통해서 자꾸만 적용을 해 보셔야 이 파트는 실력이 늘어갈 겁니다.
<SYNC Start=1784895><P Class=KRCC>
그렇다면 레벨 3으로 넘어가서 저는 2번 문제로 가 보도록 하겠습니다. 레벨 3에 2번 문제 볼게요.
<SYNC Start=1793241><P Class=KRCC>
이 문제가 생각보다 좀 복잡해요. 생각할 게 좀 있는데요. 근데 아주 생각을 못 할 정도로 엄청 어려운 건 아니에요. 근데 좀 경우를 나누긴 하셔야 돼요.
<SYNC Start=1805680><P Class=KRCC>
요즘에 나오는 문제 유형이랑 굉장히 유사해요. 정수 순서쌍. 자연수 순서쌍의 개수를 구하는 문제 중에서도 조건을 박스 안에 넣어 주고 그걸 가지고 여러분이 좀 판단하면서.
<SYNC Start=1817198><P Class=KRCC>
그러니까 중복조합의 정수해의 순서쌍의 개수를 구하는 문제의 응용판, 활용판이라고 생각하면 되죠. 문제 좋은 문제고요. 한번 보도록 하겠습니다.
<SYNC Start=1826227><P Class=KRCC>
어쨌든 저걸 만족하는, ab랑 곱하고 c, d, e, f 더한 거 1개에 24가 나온다는 거에서 전체적인 큰 틀이 정리가 될 겁니다. 왜냐면 곱해서 24가 되는 수는 몇 개 없거든요.
<SYNC Start=1839102><P Class=KRCC>
그래서 ㈎ 조건에 의해서 이걸 정리해 보면. 일단 가장 작은 수부터 시작할게요.
<SYNC Start=1847905><P Class=KRCC>
그럼 ab=1이고 c, d, e, f를 더한 게 24가 되는 케이스를 하나 생각할 수 있고요. ab=2고, c, d, e, f를 더한 게 12가 되는 케이스를 생각할 수 있고요.
<SYNC Start=1868867><P Class=KRCC>
그다음에 ab=3이고, c, d, e, f를 더한 게 8이 되는 케이스를 생각할 수 있고요. ab=4고. 지금 줄줄이 다 하는 이유가 24의 약수가 다 되기 때문에 그래요. 1,2,3,4 전부 다 24의 약수죠.
<SYNC Start=1885903><P Class=KRCC>
어디까지 갈 거냐면 24의 약수인 6, 8, 12, 24까지 지금 ab를 다 가져갈 생각이에요. 그리고 c, d, e, f를 더한 게 6이 되는 거죠. 다시.
<SYNC Start=1899364><P Class=KRCC>
이번에는 6일 때도 볼게요. 그럼. a, b를 곱해서 6이고, c, d, e, f를 더하면 6×4=24. 4가 되는 거죠.
<SYNC Start=1909249><P Class=KRCC>
그리고 여기가 만약에 8이면 여기는 3. 여기가 12면 여기가 2. 여기가 24면 여기가 1. 이제 이렇게 되는 거거든요. 결국 케이스들이.
<SYNC Start=1919299><P Class=KRCC>
근데 a, b, c, d, e, f가 뭐라 그랬니? 얘들아.
<SYNC Start=1922353><P Class=KRCC>
자연수. 자연수라는 건 어쨌든 1 이상이거든요. 최소한 1 이상이니까 돼요? 안 돼요?
<SYNC Start=1933391><P Class=KRCC>
1씩만 가져가도 얘는 딱 4까지니까 얘까지만 딱 되네요. 그렇죠. 근데 3이 되는 순간 돼요? 안 돼요?
<SYNC Start=1941427><P Class=KRCC>
안 되죠. 왜냐면 1씩만 딱 가져가도 4가 되는데 3이 될 수는 없죠. 그래서 케이스는 여기서 멈춰도 돼요. 구분은. 케이스 구분은. c, d, e, f를 더해서 4가 되는 거까지만. 여기까지만 할게요.
<SYNC Start=1954912><P Class=KRCC>
a, b를 곱해서 6이 되고, c, d, e, f를 더해서 4가 되는 형태까지만 멈추자. 그래서 이 케이스들을 구분해서 각각의 경우를 계산해서 구하고 그들끼리를 더해 주면 되는 문제가 되겠다.
<SYNC Start=1971434><P Class=KRCC>
그렇다면 a, b가 곱해서 1이 나온다는 건 a=1, b=1이거든요. 맞죠? 그거밖에 없어요. 그런데 네 수를 더해서. 4개가 다 자연수예요. c, d, e, f는 지금 다 자연수예요. 1 이상. 그렇지?
<SYNC Start=1987411><P Class=KRCC>
더해서 24가 나오고 싶다는 거죠. 근데 문제는 ㈏ 조건에 뭐라고 되어 있냐면 a, b, c, d, e, f 중에서 적어도 3개는 뭐라고? ‘짝수다.’라는 조건이 있어요. 적어도 3개는 짝수다.
<SYNC Start=2001486><P Class=KRCC>
그럼 지금 a, b가 둘 다 홀수이기 때문에 c, d, e, f 중에서 적어도 3개는 짝수예요.
<SYNC Start=2011135><P Class=KRCC>
적어도 3개는 짝수예요.
<SYNC Start=2013415><P Class=KRCC>
근데 얘들아, 이 중에 적어도 3개가 짝수면 3개가 짝수거나 4개가 짝수라는 얘기인데 3개만 짝수일 수가 있니?
<SYNC Start=2020009><P Class=KRCC>
왜냐면 여기까지가 짝수면 얘가 홀수라는 얘기인데 짝수랑 홀수 더해서 짝수가 나오냐고. 아니잖아. 더한 수 자체가 짝수기 때문에 적어도 3개가 짝수이려면 4개가 다 짝수라는 얘기예요.
<SYNC Start=2033918><P Class=KRCC>
그렇죠. 그래서 적어도 3개가 짝수라는 얘기는 4개가 다 짝수란 얘기죠.
<SYNC Start=2041498><P Class=KRCC>
그럼 제가 내용 정리할 때 한번 정리를 했어요. ‘짝수다.’라고 얘기하면 어떻게 정리하기로 했냐면 2c´+2. 맞죠? 그래야 자연수 범위의 짝수가 나올 거고요.
<SYNC Start=2061263><P Class=KRCC>
2d´+2. 2e´+2. 2f´+2. 대신에 c´, d´, e´, f´는 0 이상이 되고. 그렇죠. 그걸 여기 넣으면 되죠.
<SYNC Start=2077531><P Class=KRCC>
그러면 2에 c´, d´, e´, f´라고 한다면 2, 2, 2, 2를 더한 게 넘어가서 8이 없어지면서 16이 되고. 이 2도 나눠 주면 2×8=16 되고. c´, d´, e´, f´는 0 이상이 되죠.
<SYNC Start=2096987><P Class=KRCC>
그럼 결국은 중복조합이죠. 전형적인. 따라서 ₄H8. 이렇게 정리돼요. 첫 번째는.
<SYNC Start=2107429><P Class=KRCC>
언제? a, b가 1, 1일 때. 그때 c, d, e, f를 짝짓는 방법이 ₄H8인 겁니다.
<SYNC Start=2114064><P Class=KRCC>
이거 정리해 주시면 11C₃이니까 정리해 주면 165가 돼요. 이따 이제 계산할 때 좀 써먹을게요.
<SYNC Start=2122421><P Class=KRCC>
그다음에 이 경우도 한번 생각해 보죠. 곱해서 2가 된다는 건 a=1이고 b=2가 되던지, 아니면 a=2고 b=1이 되는 이런 2가지 케이스밖에 없어요. 그렇죠?
<SYNC Start=2134613><P Class=KRCC>
그러면 그때마다 c, d, e, f를 더해서 12가 되려면. 어쨌든 여기는 적어도 3개가 짝수가 되려면 이미 짝수가 하나는 있거든요. 그러니까 적어도 몇 개가 짝수가 돼야 된다는 거예요?
<SYNC Start=2148615><P Class=KRCC>
2개. 짝수가 된다는 거죠. 그래요.
<SYNC Start=2154331><P Class=KRCC>
그러면 2개가 짝수든 3개가 짝수든 4개가 짝수면 되는데 2개가 짝수면 2개 홀수가 되면 더해서 10이 나올 수 있죠. 10이 짝수니까.
<SYNC Start=2164138><P Class=KRCC>
그러니까 2개가 짝수일 수 있고요. 아니면. 3개는 짝수일 수 없어요. 위에랑 같은 이유 때문에. 그래서 4개가 짝수일 수도 있어요. 아예. 이 2가지 케이스는 생각을 하셔야죠.
<SYNC Start=2180675><P Class=KRCC>
됐나요?
<SYNC Start=2182459><P Class=KRCC>
그래서 2개가 짝수거나 4개가 짝수인 2가지 경우를 생각할 수 있더라.
<SYNC Start=2188506><P Class=KRCC>
그러면 생각해 보세요. 짝수 2개가 누가 나올지를 모르겠으나 어쨌든 짝수가 2개라고 한번 생각을 해 보죠. 그래서 그냥 임의로 제가 c랑 d를 짝수라고 그냥 한번 해 보려고요.
<SYNC Start=2202664><P Class=KRCC>
그러면 e랑 f는 뭐예요? 홀수잖아요.
<SYNC Start=2207655><P Class=KRCC>
이렇게 표시할 수 있죠? f는요?
<SYNC Start=2213705><P Class=KRCC>
맞아요? 이걸 가지고 이제 다시 넣어 보는 거죠. 어디 갔지? 이 식에다가.
<SYNC Start=2219682><P Class=KRCC>
그러면 이거 다 더했다고 생각하면. 그리고 이제 이때는 c´, d´, e´, f´는 다 0 이상이죠. 그렇죠? 그래서 여기다 이제 넣어 보는 거죠.
<SYNC Start=2234202><P Class=KRCC>
그러면 다 더하면 나머지 상수들이 3×3=6이니까 2에 c´, d´, e´, f´가. 6을 빼 주면 6이 되고 이거 나눠 주면 3이 되는 거잖아. 그렇지?
<SYNC Start=2249316><P Class=KRCC>
그렇죠. 그렇죠? 그래서 여기서 나올 수 있는 케이스가 ₄H₃이 되죠. 됐나요?
<SYNC Start=2259620><P Class=KRCC>
₄H₃은 6C₃이니까 6ㆍ5ㆍ4를 3ㆍ2ㆍ1로 나누고, 20이 되겠죠. 그래서 이 케이스가 20가지예요. 됐나요?
<SYNC Start=2270938><P Class=KRCC>
근데 여기서 조심할 게 있죠. 2개가 짝수인데 그 짝수 2개가 누구인지는 제가 임의로 정했어요. c, d라고. 그럼 그 짝수를 정하는 방법이 ₄C₂예요. 맞죠? 따라서 6가지가 나와요.
<SYNC Start=2284813><P Class=KRCC>
그러니까 결국 2개가 짝수가 되는 이런 케이스는 결국은 6×20이 되는 거죠. 6×20. 그래서 120가지예요.
<SYNC Start=2295763><P Class=KRCC>
따라오나요?
<SYNC Start=2297119><P Class=KRCC>
&nbsp;
<SYNC Start=2300309><P Class=KRCC>
그렇다면 4개가 짝수인 경우는 어떻게 될까요? 4개가 짝수라는 건 4개 다 이제 이거 +2, +2, +2, +2를 설정하는 거죠. 이제 다 안 쓸게요. 여러분 이제 머릿속에 있을 테니까.
<SYNC Start=2314352><P Class=KRCC>
그럼 2, c´, d´, e´, f´라고 한다면 이 2, 2, 2, 2를 빼서 8을 빼 주면 4가 될 거고요. 나눠 주면 2가 되겠죠.
<SYNC Start=2325672><P Class=KRCC>
다 0 이상이죠. 그러니까 ₄H₂가 됩니다. 이때는. 그럼 5C₂가 되죠. 맞아요? 그래서 답이 10. 여기는 10가지가 되죠. 아까 120가지였고요. 그럼 이 둘을 더하면 130가지거든요. 맞죠?
<SYNC Start=2344381><P Class=KRCC>
그런데 얘들아, 언제? a=1, b=2일 때도 그렇지만 반대로 a=2, b=1로 바꿨을 때도 그렇잖아. 그러니까 전체적으로는 이 130가지에 2를 곱한 ‘260가지야.’라는 결론을 얻을 수가 있어요.
<SYNC Start=2361098><P Class=KRCC>
그래서 첫 번째 케이스에는 165. 그다음에는 260가지. 이 2가지 지금 정리된 거예요. 이제 뒤로 가면서 비슷한 패턴이라 금방 하실 겁니다. 세 번째도 가 볼게요.
<SYNC Start=2374808><P Class=KRCC>
여기 좀 지울까요? 이제? 이렇게 좀. 다 보셨으니까 좀 지울게요. 이렇게 좀 지우고 갈게요.
<SYNC Start=2381563><P Class=KRCC>
여기도 볼까요? 그러면 이때는 ab가 a=1, b=3이거나 a=3, b=1 이렇게 2가지밖에 없고요. 그때마다 c, d, e, f를 더해서 8이 됐다는 건데.
<SYNC Start=2393889><P Class=KRCC>
적어도 3개가 짝수라는 건 어쨌든 이게 짝수가 없으니까 전부 다 짝수여야 된다는 거 이제는 알겠죠. 3개가 짝수일 수는 없다고요. 4개가 다 짝수든지. 왜냐면 여기가 짝수니까.
<SYNC Start=2404193><P Class=KRCC>
여기 다 짝수인데 짝수를 더해서, 1 이상인데 짝수를 더해서 8이 되려면 다 2, 2, 2, 2밖에 안 되잖아요. 그러니까 이때는 케이스가 1가지예요.
<SYNC Start=2415417><P Class=KRCC>
근데 여기 이럴 때도 1가지, 이럴 때도 2, 2, 2, 2 1가지니까 결국은 이때는 2가지 케이스가 되겠죠. 됐어요. 3번에서는.
<SYNC Start=2427404><P Class=KRCC>
4번은요? 1, 4와 2, 2와 4, 1. 이렇게 될 수 있죠. 됐나요?
<SYNC Start=2434731><P Class=KRCC>
그러면 이때는 1, 4와 2, 2와 4, 1 이 3가지 케이스가 되는데. 근데 문제는 1하고 4를 넣게 되면 이때는, 이거랑 이 케이스는 짝수가 하나씩 들어있죠.
<SYNC Start=2446873><P Class=KRCC>
적어도 3개가 짝수라고 했으니까 이때는 적어도 2개가 짝수인 거예요. 적어도 2개가 짝수인 거예요. 그렇죠?
<SYNC Start=2456870><P Class=KRCC>
그러면 적어도 2개가 짝수라는 얘기. 이미 짝수가 1개씩 있으니까. 적어도 2개가 짝수가 된다는 얘기고요.
<SYNC Start=2463939><P Class=KRCC>
그러면.
<SYNC Start=2467401><P Class=KRCC>
이 중에 2개가 짝수일 수도 있고. 아니면. 4개가 다 짝수일 수도 있죠. 사실. 맞죠. 그래도 상관은 없으니까. 맞아요?
<SYNC Start=2478893><P Class=KRCC>
그러면 적어도 2개가 짝수라는 건 2개가 짝수일 수도 있고, 결국엔 4개가 짝수일 수도 있고 이 2가지를 이때 생각해 주시면 돼요.
<SYNC Start=2489510><P Class=KRCC>
그럼 2개가 짝수라면 이때도 마찬가지예요. 짝수 2개고, 나머지는 홀수 2개라는 얘기거든요.
<SYNC Start=2496494><P Class=KRCC>
근데 이때도 명확하죠. 짝수 2개, 홀수 2개면 2, 2, 1, 1밖에 없잖아요. 2, 2, 1, 1. 왜냐면 더해서 6이 나오니까. 다 더하면 6이니까. 1가지 케이스예요.
<SYNC Start=2508492><P Class=KRCC>
4개가 다 짝수인 건? 없어요. 왜냐면 짝수 4개 더해서 6이 나올 수가 없죠. 2, 2, 2, 2만 해도 8이니까. 없어요.
<SYNC Start=2517566><P Class=KRCC>
여기 이 2가지 케이스에 이렇고. 2, 2로 했을 때는요?
<SYNC Start=2520989><P Class=KRCC>
그때도 마찬가지로. 2, 2면 적어도 3개가 짝수니까 이 중에 1개는 어쨌든 적어도 짝수가 나온다는 거거든요. 1개만 짝수일 수는 없죠.
<SYNC Start=2529835><P Class=KRCC>
그러니까 당연히 2개는 짝수가 최소한 나와야 되고요. 혹은 4개까지 나와야 되는 거죠.
<SYNC Start=2534981><P Class=KRCC>
마찬가지 이유에서 2개가 짝수인 거는 2, 2, 1, 1은 가능하지만 4개 다 짝수일 순 없어요. 더해서 6이 되면서. 그러니까 이때도 1가지예요.
<SYNC Start=2545614><P Class=KRCC>
그래서 결국 1개, 1개, 1개 하니까 3가지 경우가 나오겠죠.
<SYNC Start=2549599><P Class=KRCC>
그런데 얘들아, 이때도 2개가 짝수라는 건 짝수 2개를 선정은 해 줘야 되잖아. 그러니까 ₄C₂에다가 여기서 나온 3을, 3가지를 곱하게 돼서 결국엔 18가지가 되겠죠. 맞습니까?
<SYNC Start=2562720><P Class=KRCC>
좋습니다. 그럼 이제 다섯 번째 마지막으로는. 이때는 1, 6. 2, 3. 3, 2. 6, 1. 뭐 이런 이제 4가지 케이스가 나오는데.
<SYNC Start=2570955><P Class=KRCC>
그때 각각에 대해서 c, d, e, f를 정하면 사실은 1, 1, 1, 1밖에 안 돼요. 더해서 1 이상이면서 4가 더해서 나오려면.
<SYNC Start=2578077><P Class=KRCC>
적어도 3개가 짝수인 건 없잖아요. 이런 케이스는. 그래서 이건 모순이라서 더 이상 진행할 필요가 없어요.
<SYNC Start=2584024><P Class=KRCC>
그렇다면 여기서 2가지, 18가지 해서 20가지가 되거든요. 20가지까지 여기다 다 더해 주시면 되겠고요.
<SYNC Start=2591082><P Class=KRCC>
이것까지 정리해서 정답을 구해 주시면, 정답은 445가지더라. 이렇게 정리해서 여러분 해 주시면 됩니다.
<SYNC Start=2599997><P Class=KRCC>
만만한 문젠 아닙니다. 그런데 문제는 괜찮아요. 여러분이 하나하나 따져 보면서.
<SYNC Start=2606884><P Class=KRCC>
모의평가 문제나 이런 것들이 이제 너무 익숙해졌을 때 ‘좀 중복조합에 대해서 좀 어려운 문제 풀어보고 싶다.’ 하면 풀어볼 만한 굉장히 좋은 문제라고 생각이 들고요.
<SYNC Start=2617286><P Class=KRCC>
그리고 연습 한번 해 보시면 좋겠습니다.
<SYNC Start=2620107><P Class=KRCC>
이제 오늘의 마지막 문제고요. 레벨 3에 3번 문제입니다. 의외로 이게 문제가 좀 풀만 했어요. 한번 볼게요.
<SYNC Start=2628081><P Class=KRCC>
3개의 문자 x, y, z 중에서 중복을 허락해서 10개를 일렬로 나열한대요. 근데 조건이 있어요. 어떤 조건이냐면
<SYNC Start=2635086><P Class=KRCC>
x와 y는 한 번만 이웃한대요. 그럼 예를 들어 한번 보자. x랑 y는 한 번만 서로 이웃한대. y랑 z도 한 번만 이웃한대. 그럼 여긴 z만 와야겠고.
<SYNC Start=2645618><P Class=KRCC>
왜냐면 y 다음에 또 x가 오면 x가 2번 이웃하잖아. y랑. 그럼 안 된다는 거지. 그다음에 z와 x는 또 한 번만 이웃하니까 여기 다음엔 x가 오는 게 맞지.
<SYNC Start=2655637><P Class=KRCC>
z랑 y 이렇게 오게 되면 또 z가 y랑 2번 이웃하게 되니까. 결국엔 x, y, z는 서로 이렇게. 예를 들자면 이런 배열이 오면 이 조건에 만족하게 되죠.
<SYNC Start=2668157><P Class=KRCC>
근데 10개를 나열하는 건데 지금 2개밖에 나열이 안 됐으니까. 이걸 기본으로 해서 나열한다면 어떤 스타일의 나열이 나올 수 있냐면,
<SYNC Start=2678082><P Class=KRCC>
이 앞에는 y 이런 거 끼면 안 돼요. 한 번만 이웃해야 되니까. 무조건 이 앞에는 이 배열을 끼고 있되 x만 와야 돼요.
<SYNC Start=2685099><P Class=KRCC>
뭐 예를 들어 이렇게 3개 오고 여기도 나머진 x만 와야지 xy, xz 뭐 이렇게 이웃하는 건 한 번씩만 이웃하니까.
<SYNC Start=2692132><P Class=KRCC>
그럼 여기 하나, 둘, 셋, 넷, 다섯, 여섯, 일곱, 여덟, 아홉이니까 여기 하나 더 끼면 10개를 배열하면서 xy, yz, zx가 서로 한 번씩만 이웃하는 배열을 갖게 되죠. ‘이런 게 몇 개냐?’ 이거예요.
<SYNC Start=2706019><P Class=KRCC>
언뜻 보면 되게 복잡해 보이거든요. 근데 이런 배열을 여러분이 떠올린다고 접근하시면 이 문제는 어렵지 않아요.
<SYNC Start=2714205><P Class=KRCC>
그래서 기본이 되는 배열은 이거랑. 아니면 이렇게 하시면 돼요. x 다음에 만약에 z가 왔잖아요. 그럼 z 옆엔 누가 와요?
<SYNC Start=2723234><P Class=KRCC>
x가 또 올 순 없어요. 또 이웃하면 안 되니까 y가 무조건 와야죠. y 옆에는? z는 또 못 오죠. 다시 x가 와야죠. 이 배열은 괜찮아요.
<SYNC Start=2732173><P Class=KRCC>
그러고 나서는 이 사이사이에 누군가 문자를 같은 문자를 덧대는 건 괜찮아요. 같은 문자를 추가하는 건.
<SYNC Start=2738194><P Class=KRCC>
예를 들어서 뭐 xxx yy zzz xx. 이런 건 괜찮다고요. 같은 문자를 중간중간에 배열을 더 하는 건. 그러나 문자 구성은 이렇게 가야 된다는 거야. 순서 구성은.
<SYNC Start=2751914><P Class=KRCC>
이제 느낌이 오죠. 한 번씩만 이웃하게 하니까.
<SYNC Start=2755201><P Class=KRCC>
그럼 이번엔 y로 시작해 볼까요. 그럼 이번엔 x로 할 수 있고. 그럼 x 옆에는 y는 또 못 와요. 그러면 z. 그 옆에는 x는 또 못 오고 y가 와야죠. 이 배열이 있고.
<SYNC Start=2765839><P Class=KRCC>
아니면 y 대신에 z가 오잖아요. 이 알파벳순으로 생각했을 때. 그럼 z 옆엔 무조건 x가 와야죠. y가 다시 올 수 없죠.
<SYNC Start=2773378><P Class=KRCC>
그럼 x 대신에 z는 또 못 와요. 2번 이웃하게 되니까 다시 y가 와야죠. 이 배열이 있고.
<SYNC Start=2780784><P Class=KRCC>
아니면 z로 시작했다고 하면 x가 온다면 그다음에 y가 무조건 오고, 다시 z가 와야 돼요. x가 다시 오면 2번 이웃하는 거죠.
<SYNC Start=2789212><P Class=KRCC>
아니면 z로 시작했는데 y로 끝났다면 그다음 옆에는 x 아니면 z인데 z는 못 오죠. 그럼 x 옆에는 y 아니면 z인데 y가 또 못 오죠. z가 와야죠.
<SYNC Start=2799291><P Class=KRCC>
이런 배열밖에는 허용이 안 돼요.
<SYNC Start=2803801><P Class=KRCC>
근데 제가 아까도 말했지만 이걸 하나, 하나, 하나, 하나라고 생각을 하면 이 안에 들어오는 문자의 개수는,
<SYNC Start=2812010><P Class=KRCC>
몇 개가 오든 상관이 없어요. 합쳐서 10개만 오면 돼요. 같은 문자는 반복적으로 와도 돼요. 무슨 얘기인지 알겠죠?
<SYNC Start=2818228><P Class=KRCC>
그래서 이렇게 갈 거예요.
<SYNC Start=2822164><P Class=KRCC>
이 칸, 이 칸, 이 칸에 들어가는 문자의 개수. 각각 a, b, c, d라고 할 거예요. 그럼 a, b, c, d 이 문자의 개수를 더해서 몇 개가 나와야 되냐면, 총 10개를 나열한다고 했으니까 10개가 와야 돼요.
<SYNC Start=2838208><P Class=KRCC>
대신에 이 안에 문자는 무조건 1개씩은 들어는 가 있어야 되죠. x, y, z, w가 최소한.
<SYNC Start=2845907><P Class=KRCC>
그러나 어떤 경우에는 더 많이 들어가도 되긴 되죠. 1개 이상만 되면 되죠. 그렇게 하면 서로 이웃하는 건 한 번씩만 이웃하되 문자는 합이 10개가 나오는 거죠.
<SYNC Start=2858355><P Class=KRCC>
이렇게 되는 문자의 개수를 적고 나면 중복조합 문제가 됩니다.
<SYNC Start=2863132><P Class=KRCC>
따라서 1씩 나눠 주고 여기 6이 되는 거죠. a´, b´, c´, d´. 그러면 얘네는 0 이상이 되겠죠.
<SYNC Start=2874345><P Class=KRCC>
전형적인 중복조합. 이렇게 계산하시면 되죠. 그러면 9C₃이 되니까 이거 계산해 주시면 되고요. 이게 이제 3, 4, 7을 곱하니까 84가 되죠.
<SYNC Start=2888370><P Class=KRCC>
그런데, 이렇게 6개의 케이스가 있는 거예요. 1개의 케이스일 때 이런 게 나오는 거니까 여기에다가 6개 곱한 84×6이 정답이죠.
<SYNC Start=2900365><P Class=KRCC>
그래서 정답은 504더라. 이렇게 해 주시면 문제의 정답 처리하실 수 있습니다. 하실 수 있겠죠?
<SYNC Start=2908226><P Class=KRCC>
그래서 이 문제가 또 괜찮아요. 근데 문제 좀 어려울 수 있습니다. 사실 풀어보면 어렵지 않은데요. 처음 접근할 때는 제 느낌에는 해결 못 하는 친구들 많았을 거라고 생각은 듭니다.
<SYNC Start=2919797><P Class=KRCC>
문제 다시 한번 고민해 보시면 ‘구조로 접근하니까 좀 편하구나.’ 이렇게 생각하시면 되겠습니다.
<SYNC Start=2926408><P Class=KRCC>
오늘은 여기까지 하겠습니다. 저는 레벨 3에 3번 문제까지 풀어봤고요. 다음 시간에는 우리 변형 문제로 만나도록 하겠습니다. 우리 다음 시간에 뵐게요.
<SYNC Start=2935274><P Class=KRCC>
&nbsp;
</BODY>
</SAMI>