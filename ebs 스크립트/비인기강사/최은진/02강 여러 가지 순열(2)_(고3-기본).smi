<SAMI>
<HEAD>
<TITLE>(주)기록법인상생 자막 2019</TITLE>
<STYLE TYPE="text/css">
<!--
P { margin-left:8pt; margin-right:8pt; margin-bottom:2pt;
    margin-top:2pt; font-size:12pt; text-align:left;
    font-family:굴림, Arial; font-weight:normal; color:white;
    background-color:#405A8D; }
.KRCC { Name:한국어; lang:ko-KR; SAMIType:CC; }
#STDPrn { Name:Standard Print; }
#LargePrn { Name:Large Print; font-size:20pt; }
#SmallPrn { Name:Small Print; font-size:10pt; }
-->
</STYLE>
</HEAD>
<BODY>
<SYNC Start=8379><P Class=KRCC>
여러분, 반갑습니다. 내신만점 확률과 통계 강의에 오셨습니다. 저는 여러분의 든든한 조력자 체인지수학 최은진이고요. 오늘 바로 두 번째 시간에 오셨습니다.
<SYNC Start=17654><P Class=KRCC>
여러분, 오늘은요. 지난 시간에 우리가 여러 가지 순열 중에서도 중복순열을 공부를 했어요. 그래서 그 중복순열에 분배 유형 있었지요? 우체통 유형이라고 했었고요.
<SYNC Start=31312><P Class=KRCC>
서로 다른 우체통에 서로 다른 편지를 집어넣는 방법의 수, 서로 다른 필통에 서로 다른 연필을 집어넣는 방법의 수 등등 해서 이런 중복순열의 분배 유형을 조금 심화시켜서 공부를 하려고 합니다.
<SYNC Start=48930><P Class=KRCC>
이 부분이 최근에 좀 떠오르고 있는, 특히 내신에서, 그런 부분이라서. 특히 그런데 여러분이 조금 어려워하는 그런 부분이기도 하고요. 그래서 저랑 좀 자세히, 좀 공부를 한번 해 보고요.
<SYNC Start=62767><P Class=KRCC>
한 두어 문제 풀면서 좀 공부해 보고요. 그리고 이제 넘어가서 오늘은 같은 것이 있는 순열까지 연결시켜 보도록 하겠습니다.
<SYNC Start=69603><P Class=KRCC>
준비되셨으면 지금부터 저랑 중복순열의 심화 분배 유형을 보도록 할게요. 일단 내용을 요약해 보면 이렇습니다. 선택 유형, 모스부호 유형이고요.
<SYNC Start=81046><P Class=KRCC>
분배 유형, 우체통 유형, 두 가지 제가 지난 시간에 말씀드렸고요. 그중에서도 분배 유형, 우체통 유형을 조금 더 오늘 보도록 할 겁니다. 분배 유형인데요.
<SYNC Start=92204><P Class=KRCC>
우체통에 들어가는 편지의 개수에 제약이 생기는 거예요. 무슨 말이냐? 적어도 하나가 들어간다든지 어떤 우체통은 2개가 들어간다든지, 편지가, 이런 식으로 제약이 생기는 거지요.
<SYNC Start=108200><P Class=KRCC>
그래서 그럴 때는요. 수작업이 반드시 병행이 될 수밖에 없어요. 다만, 특정한 우체통 하나만, 혹은 2개만 이렇게 제약이 들어가는 게 아니고 전체적으로 우체통에, 빈 우체통이 하나도 없다,
<SYNC Start=124906><P Class=KRCC>
그 얘기는 적어도 하나 이상의 편지가 들어간다, 모든 우체통에, 이런 조건이 있을 수 있거든요, 일괄로.
<SYNC Start=131171><P Class=KRCC>
그래 버리면 전체적으로 계산을 해서 다 계산한 다음에 빈 우체통이 생기는 경우를 빼 주는 것으로 가기도 해요. 이게 사실은 제일 어려운 유형이에요, 중복순열에서, 특히 분배 유형에서.
<SYNC Start=144828><P Class=KRCC>
물론 이것은 조 편성으로 하는 경우도 있는데요. 중복순열로 보통은 설명을 하기 때문에 그래서 이렇게 오늘 예시를 통해서, 예제를 통해서 보도록 하겠습니다. 이렇게 보면 또 어렵게 느껴지고요.
<SYNC Start=155719><P Class=KRCC>
저랑 직접 문제를 통해서 부딪쳐 보셔야 돼요. 문제 보면 의외로 또 할 만합니다.
<SYNC Start=161049><P Class=KRCC>
서로 다른 5개의 공을 서로 다른 3개의 주머니에 남김없이 넣는대요. 우리 지난 시간에도 계속 하고 왔지요? 서로 다른 5개의 공을 서로 다른 3개의 바구니에, 혹은 주머니에 넣는 경우의 수.
<SYNC Start=173010><P Class=KRCC>
여기까지만 한다면 어떻게 하기로 했냐면 집, 사람 해서 주머니 3개에 5개를 넣는다, 이렇게 하기로 했었거든요.
<SYNC Start=183699><P Class=KRCC>
물론 지난 시간에는 막 일일이 수작업으로 막 해서 결국 이것을 유도하는 것도 많이 해 드렸고요. 아니면 단편적으로 집, 사람 해서 계산해도 상관없다고 그랬어요.
<SYNC Start=191424><P Class=KRCC>
중복이 허락되는 것은 어쨌든 주머니니까. 공 하나를 쪼개 가지고 두 주머니에 넣을 수는 없잖아요. 그러니까 중복이 허락되는 것은 주머니예요.
<SYNC Start=199044><P Class=KRCC>
A 주머니에 많이 들어가거나 B 주머니에 다 들어가거나, 이럴 수도 있는 상황이니까. 그래서 중복이 허락되는 것을 앞에 쓰기로 했다는 것을 기억하시고요.
<SYNC Start=207492><P Class=KRCC>
다만, A 주머니에는 공을 2개만 넣고 싶대요. 이거 아주 제약이 큰데요? 그러면 이런 상황인 거지요.
<SYNC Start=214943><P Class=KRCC>
&nbsp;
<SYNC Start=218951><P Class=KRCC>
여기는 공을 2개만 넣는 거예요. 그리고 나머지 3개의 공은 B 아니면 C에 넣는 거지요. 골고루 나눠 넣을 수도 있고 B나 C에 몰아서 넣을 수도 있고요.
<SYNC Start=231587><P Class=KRCC>
어찌 됐든 A에 넣는 2개의 공이 누구인지는 구분을 해 주셔야 돼요. 왜냐하면, 서로 다른 공이니까 그리하여 5C2로 먼저 A에 들어가는 공을 뽑아 주세요. 그러면 A에 공을 2개를 넣지요?
<SYNC Start=246563><P Class=KRCC>
그러면 남은 공은 3개예요. 3개를 몇 개의 주머니에 넣는 거예요? 2개의 주머니에 넣는 거예요. 빈 주머니 허용해요, 안 해요? 허용해서 상관없어요. 그러니까 ₂Π₃이 되겠지요. 집, Π, 사람.
<SYNC Start=259025><P Class=KRCC>
혹은 중복되는 집이 앞에 오는 거지요. 그래서 이렇게. 이것을 곱해 주시면 돼요. 그때마다 일어나는 거니까. 따라서.
<SYNC Start=266676><P Class=KRCC>
&nbsp;
<SYNC Start=270401><P Class=KRCC>
정답은 80개가 되는 겁니다. 아시겠지요? 이런 것은 유사한 기출문제도 있었고요, 사실은. 그래서 수특에도 나온 문제이고요. 워낙 중요한 개념입니다.
<SYNC Start=278150><P Class=KRCC>
그래서 특정한 주머니에 들어가는 특정한 우체통에 들어가는 공의 개수에 제약이 생겼다, 그렇다면 이런 경우에 수작업을 통해서 약간 경우를 나눠서 해 주시면 좋겠다는 얘는 드리고 싶고요.
<SYNC Start=292870><P Class=KRCC>
그러면 이 문제가 조금 어려워요. 그러나 전통적으로 중요한 얘기입니다. 한번 볼게요. 서로 다른 볼펜이 다섯 자루가 있어요. 그런데 그것을 세 명한테 나누어 준대요.
<SYNC Start=310686><P Class=KRCC>
그러면 이 세 명은 어쨌든 다르겠지요? 세 명이 같은 세 명은 아닐 것 아니야? 그러면 세 명한테 모두 적어도 볼펜 한 자루씩은 나누어 주고 싶다는 거예요. 이 조건이 굉장히 중요하지요.
<SYNC Start=322844><P Class=KRCC>
그러니까 3개의 필통에, 서로 다른 3개의 필통에 연필을 5개를 넣는 거야. 그런데 적어도 하나씩은 다 들어가야 되는 거야. 그러니까 빈 필통이 있으면 안 된다는 거거든.
<SYNC Start=334691><P Class=KRCC>
그러면 하나씩 넣고 시작할까, 이런 생각도 할 수 있는데 그러면 안 돼요. 왜냐하면, 하나씩 넣고 시작해도 그 볼펜이 서로, 연필인가? 볼펜이지.
<SYNC Start=344382><P Class=KRCC>
볼펜이 서로 다 다른 볼펜이기 때문에 어떤 볼펜을 넣는지에 따라서 또 상황이 달라지거든요. 그래서 넣고 시작하기는 좀 곤란하다, 이거지요. 그래서 이런 경우는요.
<SYNC Start=353497><P Class=KRCC>
전체 경우에서 볼펜이 적어도 한 자루씩은 들어가야 된다는 것은 빈 상자, 그러니까 이 세 명이지요? 그러니까 받지 못하는 사람, 받지 못하는 사람이 생기는 경우 있지요?
<SYNC Start=379466><P Class=KRCC>
그것을 빼 주시면 돼요, 전체의 경우에서. 그렇게 갈 건데. 그러면 전체는요. 세 명한테, 그러니까 3개의 우체통, 3개의 바구니에 서로 다른 볼펜 5개를 넣을 거니까 3Π5지요.
<SYNC Start=394097><P Class=KRCC>
그래서 얘는 하나로 몰아 들어갈 수도 있고 3개에 골고루 들어갈 수도 있고 경우들이 다 들어가 있어요. 그런데 여기는 받지 못하는 사람이 생기는 경우 있지요? 그것을 빼 줄 거라는 말이지요.
<SYNC Start=408369><P Class=KRCC>
무슨 말인지 아시겠지요? 그러면 이제 이렇게 접근을 할 거예요. 세 명을 A, B, C라고 한다면 A가 못 받아, 만약에. B가 못 받아. C가 못 받아. 3개로 한번 나눠 보자고. 무슨 말인지 알겠지요?
<SYNC Start=429790><P Class=KRCC>
A가 못 받으면 이것은 두 명 이하에 나눠 주는 거지요? B, C에 나눠 주는 것을 여기에 곱할 거예요, A가 못 받는다, 그 얘기는. 이렇게 하니까 왠지 A 곱하기인 것 같다.
<SYNC Start=442952><P Class=KRCC>
‘A가 못 받아, B가 못 받아, C가 못 받아.’야. A가 못 받는다는 것은 B랑 C가 받겠지요, B 또는 C가. 그러면,
<SYNC Start=450723><P Class=KRCC>
&nbsp;
<SYNC Start=453300><P Class=KRCC>
이런 경우가 있을 수 있지요. 두 명이 5개를 가져가는 거지요. 그런데 이 안에는요. B가 다 가져갈 수도 있고요. C가 다 가져갈 수도 있어요.
<SYNC Start=462370><P Class=KRCC>
어쨌든 두 명 이하가 가져가는 것을 여기에 계산해 줄 거예요. 얘도 똑같겠지요. 얘도 또 같겠지요. 이 경우는 A, C가 가져갈 거고요. 이때는 A, B가 가져가겠지요. 어쨌든.
<SYNC Start=479194><P Class=KRCC>
그래서 얘네를 빼 주면 되거든요. 이렇게만 하면 뭔가 아쉬워요. 뭐가 아쉽냐면, 이 안에 뭐가 들어 있냐면요.
<SYNC Start=491531><P Class=KRCC>
&nbsp;
<SYNC Start=495405><P Class=KRCC>
B, C가 받는데요, 여기는 B만 받는 경우도 들어가 있고 C만 받는 경우도 들어가 있어요. 그러니까 말하자면 이 안에는요. A가 못 받고 B 또는 C가 받는 건데 B가 못 받는 경우도 있을 수 있고요.
<SYNC Start=511550><P Class=KRCC>
C가 못 받는 경우도 여기에 들어가 있다는 말이지요. 그러니까 C가 다 갖거나 B가 다 갖는 거지요. 이때는 C가 모두 갖는 거예요. 이때는 B가 모두 갖는 거지요. 이해돼요?
<SYNC Start=525891><P Class=KRCC>
여기는요. A는 못 받고 C만 가질 수도 있고 여기는 C가 못 받고 A만 가질 수도 있지요. 그게 여기에 지금 다 들어가 있는 거예요. 그것을 지금 빼겠다는 거거든요.
<SYNC Start=535170><P Class=KRCC>
그러면 얘는요. C가 모두 갖는 거예요. 이때는요? 오히려 A가 모두 갖겠지요. 무슨 말인지 아시겠어요? 이때 보실래요. 이때도 A가 못 받거나 B가 못 받는 게 들어가 있는데 이때는요.
<SYNC Start=548346><P Class=KRCC>
B가 모두 갖게 되고요. 이때는요. A가 모두 갖게 돼요. 그러면 이 안에서 이것만 싹 해서 이것 32, 32, 32잖아. 32, 32, 32를 빼 버리면 뭘 두 번 뺀 게 돼? 뭘 두 번 뺀 게 돼?
<SYNC Start=564337><P Class=KRCC>
C가 모두 가져가는 것, C가 모두 가져가는 것, 얘는 여기에서 지금 두 번이나 뺀 거야. 이해되세요? B가 모두 가져가는 것, B가 모두 가져가는 것, 이것도 두 번이나 뺀 거야.
<SYNC Start=575617><P Class=KRCC>
A가 모두 가져가는 것, A가 모두 가져가는 것, 이것도 두 번이나 뺀 거야. 이해되시지요? 그러니까 이때는 오히려 이것을 뺀 다음에는 세 가지는 더해 주셔야 돼요.
<SYNC Start=590623><P Class=KRCC>
C가 모두 가져가는 것, B가 모두 가져가는 것, A가 모두 가져가는 경우는 여기에서 두 번 빼게 되어서 그 셋을 더해 주셔야 된다, 그 얘기입니다. 이해되세요?
<SYNC Start=601041><P Class=KRCC>
그래서 이것을 수식으로 조금 더 세련되게 옮겨 보면, 이렇게 옮길 수 있어요. 얘가 두 명 이하가 가져가는 거지요. 무슨 말인지 아세요?
<SYNC Start=613995><P Class=KRCC>
두 명 이하가 가져가는데 세 명 중에 가져가는 그 두 명 이하가 선택하는 방법인 거지요. 그러니까 32×3인 거예요.
<SYNC Start=622258><P Class=KRCC>
그런데 이렇게 빼게 되면 얘가 두 명 이하였기 때문에 한 명이 다 가져가는 경우 있지요. A가 가져가는 경우 두 번씩 뺀 거예요, 이때.
<SYNC Start=630126><P Class=KRCC>
이 ₃C₂에 해당되는 세 가지 케이스마다 다 A만 가져가는 경우가 두 번이 들어가 있기 때문에 오히려 A가 다 가져가는 경우, B가 다 가져가는 것, C가 다 가져가는 것, 그것 있지요?
<SYNC Start=641378><P Class=KRCC>
그것을 더해 주셔야 돼요. 그런데 이것을 굳이 수식으로 쓰면 하나가 다 가져가는 거지요. 계산하면 물론 1이지만. 이해되시지요? 이게 엄밀히 말하면 이제 수식이 되는 거예요.
<SYNC Start=654494><P Class=KRCC>
그런데 굳이 이렇게 안 하셔도 저처럼 아까 그냥 생각하면서 하셔도 괜찮고요. 어쨌든.
<SYNC Start=661609><P Class=KRCC>
여기에서 32, 3, 96. 3이 되겠지요? 그러면 얘는 93을 빼니까 150이 되는 거지요. 이렇게 정리하시는 거예요. 이게 중복순열에서 심화 분배 유형이라고 보시면 되겠습니다.
<SYNC Start=679882><P Class=KRCC>
이게 조금 어려웠을 수 있어요. 그런데 사실은 굉장히 중요해요. 너무너무 중요한 내용이고요. 시험에서 되게 좋아하는 유형 중의 하나입니다.
<SYNC Start=690075><P Class=KRCC>
이것을 사실은 어떻게도 보시는 분들이 있냐면요.
<SYNC Start=697487><P Class=KRCC>
&nbsp;
<SYNC Start=704820><P Class=KRCC>
분할과 분배로 보는 사람들도 있어요, 풀이를. 나쁘지 않아요. 얘는 사실은 고1 내용이에요. 무슨 말이냐면 다섯 자루의 볼펜을요. 세 묶음으로 나누는 거지요.
<SYNC Start=720514><P Class=KRCC>
&nbsp;
<SYNC Start=729281><P Class=KRCC>
그러고 나서 그 세 묶음을 A, B, C한테 나눠 주는 거예요.
<SYNC Start=735548><P Class=KRCC>
&nbsp;
<SYNC Start=739296><P Class=KRCC>
무슨 말인지 아세요? 그래서 분할과 분배거든요. 이렇게 설명할 수도 있어요, 사실은. 이것도 해 드리긴 할게요.
<SYNC Start=746804><P Class=KRCC>
그런데 여러분 시험 범위에서는 사실 이 풀이를 훨씬 더 많이 쓰긴 하겠지요. 왜냐하면, 중복순열이 직접적인 시험 범위니까. 그렇지만 얘는 고1 수학으로 푸는 건데 그것도 많이 나오기는 해요.
<SYNC Start=755842><P Class=KRCC>
그래서 연관을 지으실 필요는 있어요, 조금 더 생각의 깊이를 깊게 하려면. 다섯 자루를 세 묶음으로 나누는 방법은요. 3, 1, 1로 나누든지 2, 2, 1로 나누든지 하는 방법밖에 없지요.
<SYNC Start=770904><P Class=KRCC>
왜냐하면, 세 묶음인데 4, 1, 0, 이런 건 안 돼요. 그러면 세 묶음이 아니라 두 묶음이잖아. 이런 것 안 된다고. 그래서 둘 중의 하나거든요. 그러면 이렇게 나누는 방법을 생각해 보자고.
<SYNC Start=780939><P Class=KRCC>
셋, 하나, 하나로 나누는 방법은 5개 중에 3개를 뽑아. 그리고 남은 2개 중에 하나를 뽑고 하나 중에 하나를 뽑아. 무슨 말인지 아시지요? 이게 분할이에요.
<SYNC Start=791680><P Class=KRCC>
그런데 이렇게 뽑아 놓고 나면 여기에 들어가는 게 1, 2, 3이라는 팀 하나 있고 그다음에 4 있고 여기 5 있고 이렇게 해서 세 팀으로 나누는 거거든요, 얘가 지금.
<SYNC Start=803079><P Class=KRCC>
그런데 1, 2, 3 있고 뽑을 때 여기 5 뽑고 4 뽑을 수도 있잖아. 무슨 말인지 알겠어? 그런데 이렇게 곱해 놓으면 이것 2개로 친 거야. 그런데 사실 분할이라는 것은 쪼개 놓은 결과만 얘기하는 거잖아.
<SYNC Start=817871><P Class=KRCC>
그러니까 이것 하나, 이것 하나 세면 안 되지, 이것은 같은 결과인데. 묶음 3개로 나눠 놓은 그 결과가 필요한 건데 이것 같은 결과잖아, 묶음 3개로 나누는 모양새가.
<SYNC Start=827538><P Class=KRCC>
그러니까 이게 개수가 같은 게 있으면요. 그것끼리 자리 바꾸는 거로 나눠 주셔야 돼요. 1개, 1개라는 묶음이 있으니까 2!, 이들끼리 자리 바꾸는 것.
<SYNC Start=837299><P Class=KRCC>
왜냐하면, 이것 4, 5나 5, 4는 똑같은 묶음이니까. 그래서 이렇게 나눠 주셔야 정확히 분할이 되고요. 이것 보시면요.
<SYNC Start=845356><P Class=KRCC>
마찬가지지요. 2개, 그다음에 ₁C₁. 그러면 얘는 또 어떤 일이 벌어져? 얘도 마찬가지예요.
<SYNC Start=850895><P Class=KRCC>
제가 만약에 이렇게 있고, 혹은 이렇게 뽑고 이렇게 뽑았다고 해 보세요. 이것 어때요? 같은 결과지요. (1, 2), (3, 4), 5나 아니면 3, 4를 뽑고 1, 2 뽑고 5 뽑나.
<SYNC Start=867365><P Class=KRCC>
5C2, 3C2, 1C1에서는 얘를 다르게 취급한 거예요. 왜냐하면, 처음에 얘 뽑고 그다음 뽑고 하는 거나, 처음에 이것을 뽑고, 뽑고, 뽑나. 그러나 결과는 똑같지요.
<SYNC Start=876722><P Class=KRCC>
왜냐하면, 뽑아 놓은 모양새만 보는 건데 이 팀, 이 팀, 이 팀으로 나눠 놓은 결과만 본 거니까 똑같아요.
<SYNC Start=882652><P Class=KRCC>
그래서 얘도 이 둘이 자리 바꾸는, 1, 2랑 3, 4가 자리 바꾸는 2!로 나눠 주셔야 되는 거예요, 정확히 분할을 하려면. 그래서 이것을 하시면 돼요. 그러면 이것은 정리해 주시면 10개, 20, 10이지요.
<SYNC Start=895818><P Class=KRCC>
10, 3, 15지요. 맞아요? 이것 두 가지가 되는 거예요. 그래서 둘을 더하면 25개거든요, 이게.
<SYNC Start=904095><P Class=KRCC>
&nbsp;
<SYNC Start=907378><P Class=KRCC>
맞아요? 그러면 세 묶음으로 나눠 놨잖아. 그러면 그것 A, B, C가 가져갈 거야. 무슨 말인지 알지? A가 뭐 갖고 갈지, B가 뭐 갖고 갈지, C가 뭐 갖고 갈지, 묶음을 여기에 이렇게 놔.
<SYNC Start=919378><P Class=KRCC>
이 묶음, 이 묶음, 이 묶음, 이게 지금 다 다른 묶음이에요, 여기랑 여기랑. 다른 묶음이야. 그러면 ‘A, B, C 줄 서!’ 똑같지요.
<SYNC Start=929190><P Class=KRCC>
‘이것 가져갈 사람 줄 서!’ 그러면 여기 A 서고 B 서고 C 설 수도 있지만, 여기 A 서고 C 서고 B 설 수도 있고, 지금 줄 서는 방법에 따라서 가져가는 게 다를 것 아니에요. 3!이지요.
<SYNC Start=940212><P Class=KRCC>
이때마다 3!이 나오니까 둘을 곱해 주셔야 돼요. 그러면 25에 6을 곱하니까 150이 되는 거지요. 아까 구한 150과 답은 똑같아요. 무슨 말인지 아시겠지요? 통하는 내용이에요.
<SYNC Start=953268><P Class=KRCC>
세는 방법이 똑같지는 않아요. 세는 방법은 절대 똑같지 않지요. 그러나 답이 똑같아요. 그러니까 이렇게 하셔도 되고 저렇게 하셔도 되는데요.
<SYNC Start=960339><P Class=KRCC>
이게 이해가 더 잘 가시면 이 풀이도 좀 알아 두시면 나중에 여러분 좀 덜 헤매시겠지요? 그러나 문제에서는 이 풀이를 원할 수도 있기는 해요.
<SYNC Start=967354><P Class=KRCC>
왜냐하면, 중복순열을 배우고 그게 분배 유형을 좀 심화해서 물어보고 싶다면 이것을 물어보고 싶긴 하겠지요. 그러나 2개 다 괜찮은 풀이에요. 어쨌든 여기까지가 중복순열에 관한 얘기입니다.
<SYNC Start=979640><P Class=KRCC>
좋습니다. 이제 주제를 바꿀 거예요. 오늘 여러 가지 순열의 마지막이고요. 여러 가지 순열의 마지막은 같은 것이 있는 순열입니다. 같은 것이 있는 순열은요. 예를 들어,
<SYNC Start=991487><P Class=KRCC>
&nbsp;
<SYNC Start=994346><P Class=KRCC>
이것 나열해 봐. a 둘 b 하나.
<SYNC Start=997609><P Class=KRCC>
&nbsp;
<SYNC Start=1000870><P Class=KRCC>
아니면 와닿게 이렇게 해 볼까?
<SYNC Start=1002682><P Class=KRCC>
&nbsp;
<SYNC Start=1005274><P Class=KRCC>
바, 나, 나 나열해 봐. 바나나, 나바나, 바나바, 아이고, 왜 이렇게 헷갈려? 잠깐만. 바나나, 나바나, 바가 여기에 오고, 여기에 오고. 바가 여기에 올 수 있지? 나나바. 이렇게 세 가지지요. 맞아요?
<SYNC Start=1029577><P Class=KRCC>
수학적으로 계산을 좀 해 보자. 어떻게 하면 될까? 바, 나, 나가 나₁, 나₂라고 한번 구분을 해 볼게. 그러면 이것은 a, b, b라고 생각해 보자, 바나나가 좀 헷갈리면. a, b, b라고 볼게.
<SYNC Start=1045813><P Class=KRCC>
그러면 a, b, b를 나열하는 방법도 똑같아요. a가 여기에 오고, a가 여기에 오고 b가 이제 사이, 사이, 이렇게 오는 경우니까 이게 세 가지 맞거든요.
<SYNC Start=1054328><P Class=KRCC>
그러면 왜 세 가지냐는 거야. 계산해 보고 싶다고. 그렇지? 그러면 어떻게 하냐면 b를 구분을 해 버려. 이렇게 같은 것이지만, 일단 구분을 해서 나열을 해. 그러면 얼마야?
<SYNC Start=1066987><P Class=KRCC>
3!이지, 나열하면? 그렇지요, 나열하면. 그런데 있잖아, 얘들아. 얘는 a에 b₁b₂, 또 a에 b₂b₁, 이렇게 생긴 것을 전부 1개로 센 거잖아, 문자가 같으니까, 사실은.
<SYNC Start=1084237><P Class=KRCC>
그런데 다르다고 놓으면 사실은 이 두 가지가 있었던 거지. 얘도, 이것도 마찬가지지.
<SYNC Start=1090968><P Class=KRCC>
b₁에 a에 b₂, b₂에 a에 b₁, 이게 사실은 같은 거지. 얘도 b₁b₂에 a, b₂b₁에 a, 이것도 사실은 같은 거지. 그것을 하나로 센 거잖아.
<SYNC Start=1107720><P Class=KRCC>
그러니까 여기에서도 2개를 하나로 취급해서. 뭐를? b₁, b₂가 자리 바꾸는 거야. 그게 2!이잖아? 그것을 1개라고 세고 싶은 거야. 이것도, 이것도.
<SYNC Start=1120302><P Class=KRCC>
그러니까 이렇게 나열을 한 다음에 공통적으로 2!로 나눠 주면 같은 것으로 취급해서 1개씩만 센 거야. 여기의 대표, 여기의 대표, 여기의 대표.
<SYNC Start=1134200><P Class=KRCC>
6개 중에서 다 2개씩 묶음으로, 묶음을 지어서 묶음 안에 들어가는, 공통적으로 개수가 다 2개씩이지? 그래서 2개로 나누게 된 거야. 그래서 답이 3개인 거야 이해되세요?
<SYNC Start=1148228><P Class=KRCC>
묶음을 대표하는 개수를 셌다, 이렇게 생각하시면 돼요. 다시 볼래요? 예를 들어서, 그러면.
<SYNC Start=1157477><P Class=KRCC>
&nbsp;
<SYNC Start=1160526><P Class=KRCC>
이것 나열해 봐. 일단 원리가 제대로 돼야 여러분 공식이 오래가요, 기억이 그래서 원리를 제대로 아셔야 돼요. 볼게요.
<SYNC Start=1169821><P Class=KRCC>
&nbsp;
<SYNC Start=1175686><P Class=KRCC>
구분을 해 보자고, 나열하기 위해서. 그렇지? 그러면 먼저 5!을 해. 그다음에 뭐로 나눌지를 생각해 봐야 돼. 이게 같은 것이 있는 순열이야. 뭐로 나누냐고?
<SYNC Start=1193943><P Class=KRCC>
만약에 이런 순서로 있었다. 그러면 얘는 사실은 구분이 되었다면,
<SYNC Start=1201044><P Class=KRCC>
&nbsp;
<SYNC Start=1205460><P Class=KRCC>
얘는 이 두 가지가 나올 거고, b는.
<SYNC Start=1208673><P Class=KRCC>
&nbsp;
<SYNC Start=1213927><P Class=KRCC>
이렇게 나오겠지요. 이게 몇 가지가 나와? 3!이 나오지, 6개. 이것 몇 가지 나와? 2! 나오지. 그래서 결국 a가 이 순서일 때 b가 6개나 나오고,
<SYNC Start=1224031><P Class=KRCC>
a가 이 순서일 때 b가 또 6개나 나오니까 결국에는 6×2=12, 12개가 나오는 거거든. 그렇지? 이 12개의 순서를 가지는 것을 종합적으로, 만약에 a는 같은 문자이고 b가 같은 문자라고 생각한다면
<SYNC Start=1239278><P Class=KRCC>
대표로, 얘로 대표할 거야, 1개라고, 문자가 같으면. 문자가 다 다르면 12개가 나왔겠지. 그렇지만 그것을 하나로 세겠다고. 그러니까 12로 나누는 거야, 쉽게 말해도 다시?
<SYNC Start=1252540><P Class=KRCC>
왜냐하면, ababb, 이렇게 써 보자. 그러면 얘도 사실은 뭐였어? a₁, a₂, a₂, a₁, 이렇게 나올 수 있지?
<SYNC Start=1265468><P Class=KRCC>
그다음에 b도, 여기가 b₁, b₂, b₃, 그때마다 b₁, b₃, b₂, 그때마다 b₂, b₁, b₃, 그때마다 b₂, b₃, b₁, 또 그때마다 b₃, b₃,
<SYNC Start=1280470><P Class=KRCC>
b가 나올 수 있는 것도 3!. 그래서 여기 2!, 여기 3! 해서 여기도 12개야, 또. 그런데 그 12개를 대표로 이렇게 세겠다는 거야, 1개라고. 언제? a 2개가 문자가 같고 b 3개가 문자가 같다면.
<SYNC Start=1296763><P Class=KRCC>
그러면 일단 a, b가 문자가 다 다르다고 생각하면 5!로 먼저 세잖아. 일단 세, 일단. 그러고 나서 a가 달랐다고 생각하면 이 12개만큼이 다른 건데, 원래, b가 서로 다르고 그러면.
<SYNC Start=1310396><P Class=KRCC>
그것을 1개라고 세고 싶은 거야. 같은 것으로 취급하고 싶은 것의 개수로 나누는 거야. 모든 세트마다 다 12개씩을 같은 것으로 세고 싶은 거잖아. 그러니까 12개로 나누는 거예요.
<SYNC Start=1320959><P Class=KRCC>
이해되세요? 그러면 대표만 나오는 거지요, 이제. 왜 12개로 나누는 걸까? 맞아요. a끼리 자리 바꾸고 b끼리 자리 바꾼 것으로 나눈 거예요. 그래서 같은 것이 있는 순열의 공식이 나와요.
<SYNC Start=1337234><P Class=KRCC>
전체를 직순열처럼 나열을 하시고요. 같은 것의 개수가 있을 것 아니에요? a 2개, 그러면 2!. 같은 것끼리 자리 바꾸는 개수로 나누는 거예요. b 3개니까 3!로 나누시면 되는 거예요.
<SYNC Start=1350214><P Class=KRCC>
이해되세요? 그렇게 해서 계산해 주시면요. 3, 2, 1 나눠 주시고 10개가 나와요. 그래서 이 경우는 쭉 세면 다 10개가 나오는 거예요. 확실히 알겠지요, 이제?
<SYNC Start=1366655><P Class=KRCC>
그래서 같은 것이 자리 바꾸는 것의 개수로 나눈다, 이렇게 돼요. 내용 정리해 볼게요. 보시면요.
<SYNC Start=1376391><P Class=KRCC>
n개의 대상 중에서 같은 것이 각각 p, q, …, r개씩 있으면 n!을 일단 하시고요. p!q!…r!, 이런 식으로 곱한 것으로 나눠 주시는 거지요. 아시겠어요?
<SYNC Start=1387212><P Class=KRCC>
말하자면 나열을 일단 해. 그런 다음에 같은 것끼리 자리 바꾸는 것은 취소라고 생각하시면 돼요. 취소. 그래서 나열 후 취소한다, 그러면요. 제가 확률적 사고에서 나누기를 보통 얘기하거든요.
<SYNC Start=1401464><P Class=KRCC>
이 나누기의 의미랑 다 통해요. 그래서 나누기는 우리가 바로 직전에 배웠던, 오늘 첫 부분에서 배웠던 분할과 분배에서 같은 개수로 분할했을 때 2!로 나눴던 것 기억하시지요,
<SYNC Start=1415361><P Class=KRCC>
아까 두 번째 문제에서. 그것의 나누기와도 같은 의미이고요. 원순열에서 나누기 있지요? 다섯 명이 앉는다고 그러면 5!을 일단 하고 얘를 돌렸을 때 같은 것의 개수 5개 나오잖아요. 돌같개.
<SYNC Start=1429635><P Class=KRCC>
그것으로 나누잖아요. 이 나누기의 의미는 다 같아요. 그것을 하나로 세겠다는 얘기예요, 쉽게 말해서.
<SYNC Start=1435540><P Class=KRCC>
그래서 같은 것으로 취급하고 싶은 것들을 묶어서 하나로 생각하고 센다는 의미를 가지고 있어서 원순열에도 나오고 분할과 분배에서도 나오고 같은 것이 있는 순열에서도 나오고
<SYNC Start=1446086><P Class=KRCC>
앞으로도 종종 보게 될 겁니다. 그래서 여기까지. 그다음 마지막. 이것을 굉장히 헷갈려 하시는 분들이 있어요.
<SYNC Start=1454859><P Class=KRCC>
‘선생님, aabbb를 나열하면 5개의 자리 중에서 a가 들어가는 자리를 선택하면 되지 않을까요?’ 맞지요. 이 중에 a가 여기에 들어가고 싶어. 2개만 선택해 주고 a 2개 넣고 나머지 b 넣으면 되잖아.
<SYNC Start=1475472><P Class=KRCC>
맞아요. 이것 나열하는 방법은 5C2랑 같아요. 그런데 우리 지금 어떻게 배웠어요? 5!을 2!, 3!로 나눈 거랑도 같았지요, 이게 같은 것이 있는 순열의 공식이었으니까. 같은 것이 있는 순열은요.
<SYNC Start=1490844><P Class=KRCC>
조합과 같아요. 왜냐하면, 이것 계산해 봐. 이것 팩토리얼로 계산하면 5!에 3!2!, 이렇게 나누는 거잖아. 왜냐하면, 5P2를 2!로 나누는 거니까 그것 바꿔 쓰면 이거니까.
<SYNC Start=1504562><P Class=KRCC>
수식으로 의미하는 것은 똑같아요, 사실은. 그런데 실제로 구하는 것도, 내용도, 생각도 같아요. 그래서 같은 것이 있는 순열은요.
<SYNC Start=1513314><P Class=KRCC>
완전히 조합하고 아이디어가 같아서 문제마다 여러분이 편한 것 쓰시면 돼요. 같순을 배우고 나면 사실은 같순이 굉장히 깔끔한 공식이라서 계산도 쉬워지고요.
<SYNC Start=1522757><P Class=KRCC>
같은 것이 있는 순열을 줄여 쓰게 되기는 해요. 그런데 ‘나는 조합이 편해.’ 그러면 조합도 즐겨 쓰셔도 돼요. 어차피 생각은 다 같아요. 아시겠지요?
<SYNC Start=1531104><P Class=KRCC>
그래서 같은 것이 있는 순열은 조합이랑 같다, 이렇게 알아 두시면 좋겠습니다. 가끔 학교에서도 많이 물어봐요. ‘선생님, 같은 것이 있는 순열은 조합이랑 뭐가 다를까요?’ 막 이렇게 물어봐요.
<SYNC Start=1541859><P Class=KRCC>
같아요. 공식도 같고요. 그러면 문제 풀어 보도록 하겠습니다. 6개의 문자를 일렬로 나열할 때 다음을 구하여라. 모든 경우의 수 구해 보래요. 6!을 뭐로 나누면 될까?
<SYNC Start=1555926><P Class=KRCC>
f 2개, e 2개, 같은 문자 2개, 2개씩 있지요. 이렇게 나눠 주시면 되겠지요? 계산은요. 모조리 계산하고 가지 마시고요. 약분이 되는 것은 약분을 하고 가시는 게 훨씬 좋아요. 그래서.
<SYNC Start=1571637><P Class=KRCC>
4로 약분했어요.
<SYNC Start=1573156><P Class=KRCC>
&nbsp;
<SYNC Start=1576138><P Class=KRCC>
180, 이렇게 약분이 되는 것은 약분을 하고 가시는 게 훨씬 수월하지요.
<SYNC Start=1580720><P Class=KRCC>
f가 가장 앞에 놓이는 경우를 구하래요. f가 가장 앞에 놓인다? 그러면 f가 가장 앞에 놓이고, 그러면 나머지 지금 커피, 여섯 자리니까 이렇게 다섯 자리 남겠네요.
<SYNC Start=1591356><P Class=KRCC>
f의 구분이 없지요? 그러면 제일 앞에 그냥 하나 밀어 놓으세요. 그러면 남는 게 누구누구 남아요?
<SYNC Start=1598145><P Class=KRCC>
이렇게 남네요. 그렇지요? 얘는 고정이에요. 그러면 나머지만 자리 바꾸면 되니까 5!을 같은 것 e 2개, 2!로 나누시면 되지요. 그러면 5×4×3 하시면 되지요. 60, 이렇게 정리하시면 되겠지요.
<SYNC Start=1614782><P Class=KRCC>
하실 수 있겠지요? 전혀 어렵지는 않고요. 같은 것이 있는 순열에서 특정한 자리가 고정이 되어 있으면 고정시키고 가시면 돼요.
<SYNC Start=1623329><P Class=KRCC>
이제 수특 문제로 가서 좀 풀어 보도록 할게요. 유제 6번 문제입니다. 7개의 문자를 모두 일렬로 나열할 때 caadbbb 혹은 abdbacb, 이런 거랑 같이 c, d 사이에,
<SYNC Start=1639282><P Class=KRCC>
사이에 지금 a 2개 문자 들어가겠지요? 혹은,
<SYNC Start=1642546><P Class=KRCC>
&nbsp;
<SYNC Start=1646120><P Class=KRCC>
문자 2개 들어가 있지요? 맞잖아. c, d, 사이에 문자 2개 들어가 있는 것 생각해 보래, 몇 개인지? 수작업이 좀 필요하겠지요.
<SYNC Start=1655191><P Class=KRCC>
&nbsp;
<SYNC Start=1659722><P Class=KRCC>
c, d를 빼고 나면 문자가 a, b밖에 안 남네요. 그렇지요? 그러면 어쨌든 사이에 문자가 2개가 들어가야 되는데 그 사이에 들어가는 문자가 누구인지를
<SYNC Start=1672464><P Class=KRCC>
케이스를 나눠 주는 것부터 시작해야 되지 않을까? 사실은 모든 경우의 수는요. 문제가 어렵고 복잡해지면요. 대부분 경우를 잘 나누는 데에서부터 시작을 해요.
<SYNC Start=1682270><P Class=KRCC>
그렇기 때문에 사이에 누가 들어가는지를 먼저 생각해 보시는 거예요.
<SYNC Start=1688240><P Class=KRCC>
a 2개가 들어갈 수도 있고요. b 2개가 들어갈 수도 있고요. ab가 들어갈 수도 있어요. 왜 이것을 나눠 줘야만 되냐면요.
<SYNC Start=1696910><P Class=KRCC>
우리는 c, d 사이에 a 2개가 들어가고 남은 문자들까지 끼어서 다 열렬로 나열하는 것을 다 세어야 돼요. 그러니까 남은 게 누구인지도 중요하거든요. 그러니까 사이에 누가 들어가는지가 중요해져요.
<SYNC Start=1708739><P Class=KRCC>
그래서 첫 번째로요. caad이다, 이렇게 되어 있어요. 그러면 남은 문자는 누구냐면요. bbb만 남았어요. 그리고 얘네는 지금 묶어야지요.
<SYNC Start=1723556><P Class=KRCC>
그러면 이것을 나열해야 되는 거지요. 지금 caad, 이렇게 묶여 있다고 생각하시고 bbb, 이러면 4개의 문자가 총 나열이 되는 거지요. 맞아요?
<SYNC Start=1735294><P Class=KRCC>
그러니까 일단은 이웃한다고 생각하고 하나로 보기로 했으니까 4!을 하시고요. 그리고 bbb가 같은 문자니까 3!로 나눠 주시면 되겠지요. 맞아요?
<SYNC Start=1748708><P Class=KRCC>
그러고 나서 항상 이웃한다고 그러면 안을 들여다보기로 했다는 말이지요. 그래서 안을 들여다보면 a끼리는 자리 바꿀 수 없으니까 c, d만 자리 바꾸는 2!을 곱해 주시면 되는 겁니다. 됐지요?
<SYNC Start=1759204><P Class=KRCC>
그러면 두 번째로 볼게요. 이번에는 c랑 d 사이에 bb가 들어가는 거예요. 그러면 지금 남은 문자는요. a 2개랑 b 하나가 남아 있지요. 맞습니까?
<SYNC Start=1772783><P Class=KRCC>
그러면 여기도 마찬가지로 이게 하나로 묶여서 돌아가는 거지요. 그러면요. 역시 4!을 하시고요. aa 들어가 있는 것은 2!로 나눠 주셔야지요. 왜냐하면, a 2개, 같은 문자 2개 들어가 있으니까요.
<SYNC Start=1786414><P Class=KRCC>
그러면 하나, 둘, 셋, 4개가 움직이고, 그리고 그때마다 안을 들여다보시는데 bb가 자리 바꾸지는 않겠지요. c랑 d가 자리를 바꿀 수 있으니까요. ×2!, 이렇게 하실 수 있겠지요.
<SYNC Start=1802132><P Class=KRCC>
그다음, 이번에는 c, d 사이에 ab가 들어갔다는 말이지요. 그렇다면 남은 문자는요. a, b 하나씩 가져갔으니까요. a 하나에 b 2개가 남아 있겠지요. 됐나요?
<SYNC Start=1814741><P Class=KRCC>
그러면 또 마찬가지로 이것을 한 팀으로 보고 총 4!을 움직이시고 bb가 같으니까 2!로 나눠 주시겠지요? 그러고 나서 이 안을 또 들여다봐야 되는데 이때 조심하셔야지요.
<SYNC Start=1827927><P Class=KRCC>
c, d도 자리 바꿀 수 있지만, a, b도 자리 바꿀 수 있겠지요. 따라서 2!, 2!, 두 번을 곱하셔야지요. 맞습니까? 정리해 볼게요.
<SYNC Start=1839726><P Class=KRCC>
4×3=12에 2니까 24네요.
<SYNC Start=1843308><P Class=KRCC>
4, 3, 2까지 곱하고 2가 또 있어요. 그렇지요? 여기는 48인가요? 맞아요. 그래서 이들을 다 더하게 되는 거지요. 그러면 여기가 32에 다 더하면 80.
<SYNC Start=1856571><P Class=KRCC>
그래서 정답은 80까지야, 이렇게 마무리하시면 되겠습니다. 됐지요? 그래서 같은 것이 있는 순열을 이용하는 문제가 맞는데요. 전형적으로 수작업이 좀 수반되는 그런 문제로 보시면 되겠습니다.
<SYNC Start=1871279><P Class=KRCC>
조금 문제가 경우를 나눠야 돼서 좀 까다로운 게 있기는 하지만요. 학교 시험에서는 이렇게 경우를 나눠서, 잘 나눠서 잘 쓰는지를 보는 서술형으로도 좀 보고 싶고,
<SYNC Start=1882240><P Class=KRCC>
약간 그런 느낌도 드는 문제이긴 합니다. 그러면 다음 문제로 가 보도록 하겠습니다.
<SYNC Start=1887128><P Class=KRCC>
이번에는요. level 1의 8번 문제이고요. 이 문제도 약간 ‘문제가 어려운가?’라고 생각을 하다가 다시 그냥 정신 차리고 보면 금방 풀리는 약간 그런 문제입니다.
<SYNC Start=1896777><P Class=KRCC>
4의 약수, 1, 2, 4거든요. 그중에서 중복을 허락해서 4개를 선택하고 그것을 일렬로 나열하고, 그렇게 해서 만들 수 있는 네 자리 자연수를,
<SYNC Start=1907642><P Class=KRCC>
그중에서 각 자리 모든 수의 합이 8이 되는 자연수를 구하래요. 그러니까 네 자리 자연수니까 a, b, c, d가 각각 자릿수라고 생각한다면, 자리에 들어가는 숫자라고 생각한다면
<SYNC Start=1921614><P Class=KRCC>
더해서 8이 되고 싶은 거지요. 그런데. a, b, c, d는 무조건 1 아니면 2 아니면 4가 된대요. 제약이 아주 커요. 아주 제약이 없다면 이것 되게 경우 많아지거든요, 순서쌍 구하는 거니까.
<SYNC Start=1940045><P Class=KRCC>
그런데 a, b, c, d가 1, 2, 4 중에 들어간다고 생각을 한다면 몇 개 없지요? 수작업하시면 돼요. 그래서 일단 4가 2개가 들어오게 되면 사실은 8을 벌써 채워 버리니까 0이 되니까 이게 안 돼요.
<SYNC Start=1956601><P Class=KRCC>
그래서 4가 2개가 들어올 수가 없어요. 그러면 4가 하나만 들어왔다고 생각하면 2가 들어오고 또 2가 들어오면 또 여기는 0이 들어와야 되니까 또 이것도 안 돼요.
<SYNC Start=1966325><P Class=KRCC>
그러면 4하고 2가 일단 들어오고 1이 들어오면 1이 되어서 8이 만들어질 수 있지요? 이렇게 수작업을 하셔야 돼요. 그다음 또, 이번에는 4를 들여보내지 말아요.
<SYNC Start=1978964><P Class=KRCC>
그러면 2만 갖고 한다면 2, 2, 맥시멈 2, 4개 들어가면 되겠네요. 그러면 2, 4개면 8 되니까. 그렇지? 그리고, 2, 2, 2. 그러고는 안 되네요. 그래서 이 두 가지 케이스가 나오고요.
<SYNC Start=1993006><P Class=KRCC>
이들이 각각 a, b, c, d에 자리 잡는 방법. 그렇지요. a, b, c, d가 각각 어떤 수가 되는지를 선택해 주셔야지요. 그것을 짝짓는 방법이 뭐가 되냐면요. 솔직히 2, 2, 2, 2, 조합은요.
<SYNC Start=2004086><P Class=KRCC>
a, b, c, d가 다 2 가져가면 되지요. 이것 한 가지예요. 그런데 얘가 문제지요. a가 이것 가져갈 수도 있고 이것, 이것, 이것. 그렇지요. 이것 4개를 나열하는 방법이지요.
<SYNC Start=2013784><P Class=KRCC>
4, 2, 1, 1을 a, b, c, d에게 나열하는 방법이에요. 그래서 4!을 2!로 나누게 되지요. 왜냐하면, 이것들을 나열해 주면 a, b, c, d에 누가 들어갈지를 나열하게 되는 셈이 되는 거니까.
<SYNC Start=2025588><P Class=KRCC>
따라서 같은 것이 있는 순열로 해서 4×3=12, 그래서 이 둘을 각각의 경우가 수가 나오는 거니까 이런 경우도 있고, 이런 경우도 있고 하니까 13개더라, 이렇게 정리하시면 되는 겁니다.
<SYNC Start=2038191><P Class=KRCC>
하실 수 있겠어요? 그래서 어쨌든 여러분, 이제 이 문제를 보면서, 사실은 한 두어 시간 후로 넘어가 버리면 어떤 생각이 드냐면요. ‘이것 중복조합인가?’ 이런 생각을 하시는 분이 있을 수도 있어요.
<SYNC Start=2055572><P Class=KRCC>
그런데 이게 a, b, c, d의 제약이 없으면 그런데요. 지금은 그게 아니지요. 지금은 제약 조건이 있다는 말이지요. 그러니까 a, b, c, d가 1, 2, 4밖에 안 된다는 것은 굉장히 큰 제약이에요.
<SYNC Start=2066739><P Class=KRCC>
그래서 이것은 수작업을 할 수밖에 없습니다. 이해하실 수 있겠지요? 네, 조심하셔야 됩니다.
<SYNC Start=2074739><P Class=KRCC>
좋습니다. 그렇다면 여기까지 마무리해 주시고요. 우리는 이제 같은 것이 있는 순열의 응용으로 들어가겠습니다. 같은 것이 있는 순열은요. 어떻게 응용이 많이 되냐면,
<SYNC Start=2084404><P Class=KRCC>
지금 보시는 최단 거리 길 찾기 문제로 굉장히 응용이 많이 돼요. 최단 거리 길 찾기는 어떤 느낌이냐면요. 이것은 조금 문제를 보면서 얘기하셔야 돼요.
<SYNC Start=2093614><P Class=KRCC>
일단 최단 거리 길 찾기는 같은 것이 있는 순열을 이용한다는 게 널리 널리 알려져 있는데요. 이게 문제를 보셔야 알아요. 이 뒤의 얘기는 조금 이따 합시다.
<SYNC Start=2102151><P Class=KRCC>
6번 문제를 보면서 갈게요. 6번은요. A, B 사이의 도로망이 오른쪽 그림과 같을 때, A부터 B 지점으로 가는 최단 경로의 수를 지금 구하라고 했습니다. 그러면요.
<SYNC Start=2112969><P Class=KRCC>
여기에서 여기로 가는 최단 경로의 수를 구하려면, 일단 얘들아, 경로를 한번 생각해 보자.
<SYNC Start=2120439><P Class=KRCC>
올라갈 수도 있지요. 아니면요.
<SYNC Start=2123414><P Class=KRCC>
&nbsp;
<SYNC Start=2125785><P Class=KRCC>
갈 수도 있지요. 아니면요.
<SYNC Start=2129479><P Class=KRCC>
이렇게 갈 수도 있지요. 뭐만 아니면 돼요? 갔다가 다시 내려왔다가 갔다가 다시, 이런 것은 안 돼요. 그렇지요? 갔던 길을 다시 내려온다든지 올라갔다 내려갔다, 이런 것은 안 되거든요.
<SYNC Start=2141560><P Class=KRCC>
그러니까 결국은 뭐냐면 오른쪽으로 가는 것은 무조건, 순서 불문하고 다섯 번을 채워야 되고요. 위로 가는 것은 순서 불문하고 네 번을 채워야 돼요.
<SYNC Start=2153850><P Class=KRCC>
오른쪽으로 가는 것을 a라고 한다면, 위로 가는 것을 b라고 한다면 무조건 a 다섯 번, b 네 번이 왔다 갔다 순서가 섞여 주면 어쨌든 A에서 B로 가는 최단 거리가 나와요. 최단 경로가 나와요.
<SYNC Start=2170879><P Class=KRCC>
무슨 말이냐? 예를 들어 abbbbaaaa, 이렇게 갔다면 이게 어떻게 간 거냐면요. a 한 번 가고, b 네 번을 간 거지요. bbbb 그리고 aaaa, 이렇게 간 경로인 거예요. 무슨 말인지 아시겠지요?
<SYNC Start=2188831><P Class=KRCC>
그러니까 결국에는 a 다섯 번에 b 네 번이 가는 방법의 수를 구해 주는 거예요. 순서를 정해 주면 된다고요. 무슨 말인지 알겠지요? 그러니까 결국 aaaaabbbb의 순서를 정하는 방법.
<SYNC Start=2207474><P Class=KRCC>
같은 것이 있는 순열이지요. 이렇게.
<SYNC Start=2214564><P Class=KRCC>
그리고 나눠 주시면 되지요.
<SYNC Start=2218845><P Class=KRCC>
됐어요? 9×7=63에 2를 곱하니까 126이 되지요.
<SYNC Start=2225734><P Class=KRCC>
정답은 126입니다. 어렵지는 않아요. 원리를 알면 사실 금방 해요. 그런데 이게 문제가 좀 어려워지면, 중간에 탁 장애물을 줘요. 이 점은 지나지 못한다. 이 점은 꼭 지나야 된다.
<SYNC Start=2242261><P Class=KRCC>
길을 막 갑자기 막아 놓고, 공사 중, 아니면 길을 막 이렇게 없애요. 이런 식으로 주는 거지요. 그런 문제가 나오면 그것은 어떻게 하느냐? 그런 것은 이제 보통은,
<SYNC Start=2254203><P Class=KRCC>
조금 이따가 좀 보겠지만, 일일이 세거나 아니면 내가 여기에서 여기까지 갈 때 꼭 지날 수밖에 없는 점들을 잡아 줘서 나눠서 구하는 거예요, 경우의 수들을.
<SYNC Start=2265327><P Class=KRCC>
그러면 여기에서 여기로 갈 때 꼭 지날 수밖에 없는 점들을 중간중간에 포인트를 잡는 거지요. 그것은 문제를 통해서 보셔야 알아요. 어쨌든 그것은 조금 이따 좀 더 얘기할게요.
<SYNC Start=2274794><P Class=KRCC>
이 문제는 이제 이렇게 해서 같은 것이 있는 순열을 이용해서 구하시면 되고요. 사실 이게 여러분이 초등학교 때 한 번쯤은 해 봤을 수도 있는 내용이긴 한데요.
<SYNC Start=2286342><P Class=KRCC>
그렇다고 안 해 봤다고 해서 여러분이 잘못 배운 건 아니니까 걱정하지 마시고요. 언제인가 한번 봤을 수도 있는 내용이에요. 일일이 센다. 나쁘지 않은 방법이거든요. 그렇게도 할 수 있어요.
<SYNC Start=2298803><P Class=KRCC>
&nbsp;
<SYNC Start=2301254><P Class=KRCC>
별해라고 제가 표현은 해 드릴게요. A에서 B로 가는 방법을 이 포인트들마다 일일이 세는 거예요. 그런데 이게 의외로 되게 금방 세요. 보실래요?
<SYNC Start=2310528><P Class=KRCC>
이렇게 올라가는 것, 이렇게 올라가는 것, 한 가지 방법씩 있지요? 그러면 이 점으로 오는 방법은 여기에서 한 가지, 여기에서 한 가지니까 두 가지지요.
<SYNC Start=2317833><P Class=KRCC>
그러면 여기로 오는 방법은 이렇게 오니까 한 가지이고요. 여기로 오는 것도 역시 한 가지예요. 그런데 이 점으로 오는 방법은 한 가지, 두 가지니까 세 가지로 와요.
<SYNC Start=2326278><P Class=KRCC>
이 점으로 오는 것은 두 가지, 한 가지니까 또 세 가지로 와요. 이렇게 포인트들마다 점들을 올 수 있는 방법을 다 세는 거예요. 여기에 오는 것은 이렇게, 이렇게 올 수 있으니까 네 가지지요.
<SYNC Start=2336252><P Class=KRCC>
여기는요. 그러면 여섯 가지지요. 여기 한 가지, 여기는 다시 네 가지지요. 여기 한 가지, 여기 다시 다섯 가지지요. 왜냐하면, 오른쪽 아니면 위로만 갈 수 있어요. 또 여기 1이고요.
<SYNC Start=2345692><P Class=KRCC>
여기 하면 여섯 가지지요. 다시! 여기 열 가지이고요. 여기 열다섯 가지이고요. 여기는 이제 스물한 가지지요. 다시! 이리로 가면 1이고요. 이렇게 가면 다섯 가지지요. 계속 세요. 여기는 열 가지지요.
<SYNC Start=2362825><P Class=KRCC>
이렇게 모여드는 방법은 스무 가지예요, 이 포인트로 오는 방법은. 이게 누적된 횟수예요. 여기에서부터 가는 방법을 총 다 더한 거지요, 쉽게 말하면.
<SYNC Start=2370868><P Class=KRCC>
여기 오는 방법은 이렇게나 이렇게밖에 오는 방법이 없으니까 서른다섯 가지지요. 이렇게 오는 방법, 이렇게 오는 방법밖에 여기는 없으니까 56가지예요. 좋아요. 다시 와 볼게요.
<SYNC Start=2381011><P Class=KRCC>
이렇게 오는 것은 열다섯 가지예요. 다시 와 볼게요. 이렇게 오는 것 서른다섯 가지예요. 거의 다 왔어요. 정신 차리세요. 이렇게 오는 것은 70가지예요.
<SYNC Start=2390757><P Class=KRCC>
이렇게 모여드는 두 가지 종류밖에 없으니까 B는 70과 56을 더해서 126가지예요. 그래서 아까 셌던 거랑 방법은 똑같아요, 개수는. 이런 것을 뭐라고 하냐면요.
<SYNC Start=2403612><P Class=KRCC>
&nbsp;
<SYNC Start=2406829><P Class=KRCC>
‘일일이 센다.’의 법칙을 따랐다, 이렇게 얘기를 해요. 나쁘지 않은 방법이에요. 그래서 최단 거리 길 찾기 문제는요. 사실은 문제를 너무 어렵게 내도 소용이 없는 게요.
<SYNC Start=2417205><P Class=KRCC>
이렇게 일일이 세어서 문제를 해결하는 친구들이 생각보다 많아요. 그래서 같은 것이 있는 순열의 아이디어만 보고 싶으면 문제를 굉장히 세분화해서 내야 돼요.
<SYNC Start=2424914><P Class=KRCC>
그래서 문제 내기 굉장히 조심스러운 부분이긴 한데요. 어쨌든 그래도 중요한 주제는 맞습니다. 그래서 연습은 해 주셔야 되고요.
<SYNC Start=2432099><P Class=KRCC>
이런 식으로 해서 126가지가 나오는데 내용 정리를 한 번 더 해 볼게요.
<SYNC Start=2437097><P Class=KRCC>
방금 했듯이 같은 것이 있는 순열 이용하는 게 맞고요. 그런데 만약에 장애물이 있거나 거치지 말아야 된다, 이런 식으로 조건이 좀 붙어 버리면요.
<SYNC Start=2446845><P Class=KRCC>
길잡이 점이라고 해서 지나지 않으면 갈 수 없는 그런 점을 잡으세요. 그렇게 해서 같순을 이용해서 경우를 나눠서 구하는 방법이 있고요. 문제를 통해 보셔야 돼요.
<SYNC Start=2456257><P Class=KRCC>
아니면 아예 ‘여기 안 지나고 싶어.’ 그러면 전체에서 거기 지나는 것을 빼셔도 돼요. 아니면 방금 했지요? ‘일일이 센다.’법칙, 이것은 언제나 옳아요.
<SYNC Start=2466989><P Class=KRCC>
언제나 거의 먹히는 방법이라서 이것도 좋습니다. 일단 문제를 풀면서 좀 더 확인을 해 보도록 할게요. 수특에 있는 유제 5번을 볼게요. 이 문제는요. A에서 B까지 최단 거리로 가고 싶다, 그랬어요.
<SYNC Start=2480320><P Class=KRCC>
그런데 지금 길을 보니까 여기가 완성이 좀 덜 되어 있지요? 그래서 이 문제를 세는 방법은요. ‘일일이 센다.’의 법칙은 항상 옳아요, 솔직히. 일일이 세셔도 돼요. 한번 세어 볼까?
<SYNC Start=2494172><P Class=KRCC>
이리로 가지요? 여기에서 여기까지 가는 거니까. 그다음에. 여러분도 멈추고 해 보세요. 이것 어렵지 않아요. 그다음 또 1이지요? 그러면 이렇게 오는 것은 세 가지지요?
<SYNC Start=2505590><P Class=KRCC>
이렇게 온 것은 여기도 셋, 여기도 셋이지요, 여기 아니면 여기로 가니까, 이제. 6개지요. 여기 3개지요. 그러면 이렇게 오는 것은 9개예요. 이렇게 오는 것 6개예요. 이렇게 오는 것은 세 가지거든요.
<SYNC Start=2519906><P Class=KRCC>
여기에 모여드는 것은 열두 가지지요. 여기에 모여드는 것은 열다섯 가지예요. 이렇게 모여드는 것은 스물일곱 가지예요. 그래서 사실은 27개가 맞아요. ‘일일이 센다.’는 언제나 괜찮아요.
<SYNC Start=2532579><P Class=KRCC>
이렇게 세는 방법이 있고요. 아니면요. A에서 B로 갈 때 이렇게 해 볼 거예요.
<SYNC Start=2541164><P Class=KRCC>
&nbsp;
<SYNC Start=2544320><P Class=KRCC>
길이 있다고 칩시다. 이 점을 C라고 할게요. 그러면 A에서 B로 가는 모든 방법에서 A에서 C를 거쳐서 B로 가는 방법을 빼겠다, 이렇게 생각하셔도 되겠지요.
<SYNC Start=2560754><P Class=KRCC>
그렇지 않아요? 그러면 A에서 B로 가려면 일단 이 점을 지날 수밖에 없지요? 지날 수밖에 없는 점, 이런 점이 뭐냐면 길잡이 점이에요. 그래서 이때는 항상 P를 지날 수밖에 없어요.
<SYNC Start=2572378><P Class=KRCC>
그러면 이 방법을 구할 때 A에서 P 가는 방법을 먼저 구하세요. 그리고 B 가는 방법 구하시면 되겠지요. 그러면 A에서 P까지 먼저 데려다 놓으면 어떻게 돼요?
<SYNC Start=2582616><P Class=KRCC>
여기에서 여기 가는 방법은 같은 것이 있는 순열 이용하시면 되잖아요. 전체 가로 2개, 세로 하나니까 3!을 2!로 나누면 되지요. 그다음에 P에서 B로 가는 방법은요.
<SYNC Start=2595147><P Class=KRCC>
가로 3개, 세로 2개니까 5!을 3!2!로 나누면 되지요. 그런데 A에서 P로 데려다 놓고 그때마다 P에서 B로 가는 거니까 곱하셔야지요. 이게 전체예요. 일단 구할게.
<SYNC Start=2613032><P Class=KRCC>
&nbsp;
<SYNC Start=2616935><P Class=KRCC>
30이지요. 일단 전체는 30이거든. 거기에서 A에서 C를 거쳐서 가는 것을 빼겠다는 거야. 그러면 어쨌든 C를 거치고 싶어도 여기까지는 일단 와야 돼. 무슨 말인지 알아?
<SYNC Start=2630466><P Class=KRCC>
그러니까 A에서 P로 갔다가 C로 갔다가 B로 가는 것을 빼겠다고, 지금 빼고 싶은 게. 이해됐어? 그러면 A에서 P로 가는 것은 어차피 세 가지거든. 그런데 P에서 C로 가는 게 1개밖에 없어.
<SYNC Start=2645210><P Class=KRCC>
그렇지, 1개잖아. 그러면 거기에서 여기 가는 것도 한 가지밖에 없지요. 맞아요? 네. 그래서 1개, 1개예요. 세 가지지요. 2개를 빼겠다고.
<SYNC Start=2658028><P Class=KRCC>
&nbsp;
<SYNC Start=2660718><P Class=KRCC>
그래서 스물일곱 가지예요. 아까 구한 것도 스물일곱 가지였거든요. 이것도 괜찮아요. 그래서 이 문제는 제가 일부러 같은 것이 있는 순열을 이용해서 이렇게도 풀어 봤고,
<SYNC Start=2673785><P Class=KRCC>
또는 ‘일일이 센다.’로도 풀어 봤고. 둘 다 괜찮아요. 방법은 2개 다 열심히 연습을 해 주시면 아마 둘 다 도움이 좀 될 겁니다. 하실 수 있겠지요? 한 문제만 좀 더 해 볼까요?
<SYNC Start=2687128><P Class=KRCC>
이건 시간 조절용으로 제가 하나 준비했는데요. 그래도 한번 우리는 풀어 보도록 합시다. 여러분, 미리 한번 풀어 보고 오시면 좋겠고요.
<SYNC Start=2695595><P Class=KRCC>
8번입니다. 8번은요. 그림과 같이 직사각형 모양으로 연결된 도로망이 있다. 지나간 도로는 다시 지나갈 수가 없대요. A에서 C를 지나서 B로 갈 거래요.
<SYNC Start=2707783><P Class=KRCC>
그런데 지나간 도로는 다시 지날 수가 없는데. 약간 문제 특이해요. 이 문제 조금 어려워요. 그러면 C를 반드시 지나고 B로 가고 싶대요. 지금 문제는 그거지요. 그러면 가만히 좀 생각을 해 봅시다.
<SYNC Start=2720740><P Class=KRCC>
내가 C를 가고 싶어. C를 갈 수 있는 방법은, 여기는 무조건 지나야 돼, 그렇지? 무조건 지나고 이렇게 가거나 이렇게 가는 방법이 있네. 그렇지요? 맞아요?
<SYNC Start=2732185><P Class=KRCC>
무조건 이 가운데에 있는 점은 무조건 지나야 돼요. 여기는 지나야 돼. 이렇게 가거나 이렇게 갈 수 있어. 그런데 나간 점을 다시 못 지난다잖아. 그러니까 경로를 나눠 줘야 돼.
<SYNC Start=2743689><P Class=KRCC>
그러니까 내가 이 점을 P라고 하고 이 점을 Q라고 하면 내가 A에서 C에서 B로 가는 방법이 첫 번째는 A에서 P를 거쳐서 C로 갔다가 B로 갈 수가 있고,
<SYNC Start=2755084><P Class=KRCC>
아니면 A에서 이 C로 가는 방법이 Q로 갔다가 C로 갔다가 B로 갈 수가 있지. 맞잖아. 이 둘로 모여드는 것 아니면 없으니까.
<SYNC Start=2764155><P Class=KRCC>
그런데 왜 이 둘을 나눠 줘야 되냐면, 내가 만약에 P를 거쳐서 오면 C는 아무 데로나 갈 수 있어, 내려오면 되니까. 그런데 얘들아, 내가 이 점을 거쳤잖아?
<SYNC Start=2775466><P Class=KRCC>
그러면 거기에서 C로 올라갔으면 다시 밑으로는 못 내려오지, 지나간 길을 다시 못 가니까. 그러면 이때는 좀 조심하셔야 돼요, 구할 때. 그래서 둘로 나눠서 구하시는 게 이 문제는 맞아요.
<SYNC Start=2786894><P Class=KRCC>
조금 어려운 유형이에요. 됐어요? 그러면 이제 구해 보도록 할게요. 일단 P를 지나는 경우 한번 구해 볼게요. 그러면 먼저 A에서 여기까지 가는 방법은요. 3!2!로 나누니까 세 가지지요, 여기까지가.
<SYNC Start=2801128><P Class=KRCC>
여기까지가 세 가지예요, 그렇지요? 그래서 이리로 올라왔으니까 여기는 한 가지예요. P에서 C까지. 맞아요. C가 온 다음에는 사실 제약이 없어요.
<SYNC Start=2810791><P Class=KRCC>
왜냐하면, 지금 이렇게 올라온 거라서 이 길을 다 지나도 돼요. C에서 B까지 가는 방법은 같은 것이 있는 순열, 그래서 5!을 3!2! 나눠 주시면 되지요. 그러면 5, 4. 2로 나누니까 5, 2, 30가지네요.
<SYNC Start=2831431><P Class=KRCC>
됐지요? 두 번째, 이번에는 여기를 통해서 가요. 여기, 이렇게. 그러면 앞에는 다 똑같아요, 방법은. 여기 세 가지 방법 나오고 여기 한 가지 방법 나와요, Q에서 C로 나오는 방법이.
<SYNC Start=2847526><P Class=KRCC>
그런데 얘들아, 여기에서 조심할 게 있어. 내가 Q에서 C로 이렇게 올라가잖아. 그러면 C에서 B로 갈 때 반드시 어디를 거치면 안 돼? 다시 내려올 수가 없는 거야.
<SYNC Start=2858734><P Class=KRCC>
그러니까 C에서 갈 때는 반드시 이리로만 가야 돼. 그러면 여기를, 여기가 P라고 했지, 여기 Q라고 했지, 여기는 R이라고 해. 무조건 얘는 R을 거쳐서만 가야 돼. 이해되시지요?
<SYNC Start=2870743><P Class=KRCC>
그래서 여기를 거쳐야만 돼요. 그러면 R을 거쳤다, 그러면 이제 여기에서 B로 갈 거예요. 맞아요? 그러면 최단 거리로 가니까 내려와서 다시 왼쪽으로 갈 필요는 없지요.
<SYNC Start=2881929><P Class=KRCC>
여기 경로의 수만 구하시면 되겠지요. 따라서 R로 가는 방법은 어차피 한 가지이고요. R에서 B로 가는 방법이 4!, 2!2! 나누면 되지요, 이 방법의 수니까. 그렇지? 그러면 정리해 주시면요.
<SYNC Start=2895710><P Class=KRCC>
3, 4, 3×2=6이지요. 3, 18이네요. 그래서 이런 방법도 있고, 이런 방법도 있고, 더해 주니까 마흔여덟 가지야, 이렇게 정리해 주시면 돼요. 조금 어렵지요, 이것은.
<SYNC Start=2909544><P Class=KRCC>
네, 이게 조금 어려웠을 수 있습니다. 그러나 문제는 좋아요. 연습 한번 해 보시면 좀 도움이 많이 될 겁니다.
<SYNC Start=2916817><P Class=KRCC>
2강 내신만점 퀴즈 보라도 하겠습니다. 수능특강 level 1의 7번 문항이고요. a, a, a, b, b, c, d를 모두 일렬로 나열하고, 중요한 조건, 이웃하지 않은 경우의 수 구하는 문제였지요?
<SYNC Start=2928123><P Class=KRCC>
이 문제 풀어 보시고요. 수강후기 게시판에 정답을 올려 주시면 되겠습니다.
<SYNC Start=2933599><P Class=KRCC>
여러분, 오늘도 정말 고생 많으셨고요. 우리는 이것 수강후기 게시판에 정답을 올리면서, 소통하면서 갈 거니까요. 여러분 꼭 풀어 보고 복습하고, 그리고 3강에서 만나도록 하겠습니다.
<SYNC Start=2945396><P Class=KRCC>
수고 많으셨습니다.
<SYNC Start=2947090><P Class=KRCC>
&nbsp;
</BODY>
</SAMI>