<SAMI>
<HEAD>
<TITLE>Time Tools (C) CCNSOFT 2005</TITLE>
<STYLE TYPE="text/css">
<!--
P { margin-left:8pt; margin-right:8pt; margin-bottom:2pt;
    margin-top:2pt; font-size:12pt; text-align:left;
    font-family:굴림, Arial; font-weight:normal; color:white;
    background-color:#405A8D; }
.KRCC { Name:한국어; lang:ko-KR; SAMIType:CC; }
#STDPrn { Name:Standard Print; }
#LargePrn { Name:Large Print; font-size:20pt; }
#SmallPrn { Name:Small Print; font-size:10pt; }
-->
</STYLE>
</HEAD>
<BODY>
<Sync Start=10873><P Class=KRCC>
반갑습니다. 2022 수능개념 최은진의 확통 만렙공략집 강의에 오셨습니다. 저는 체인지 수학 최은진이고요. 오늘은 아홉 번째 날이 되겠습니다. 오늘 새로운 단원 들어간다고 제가 지난 시간에 이미 예고 드렸습니다. 

<Sync Start=27134><P Class=KRCC>
오늘은 중복조합을 시작할 것이고요. 큰 단원의 제목은 중복조합과 이항정리입니다. 그중에서도 오늘, 다음 시간까지 해서 중복조합을 공부할 것인데요. 워낙 중요한 단원이에요. 

<Sync Start=39993><P Class=KRCC>
너무 강조해도 지나치지 않을 정도로 일단 시험마다 한 문제는 나온다고 보셔야 되고요. 한 문제 이상 나오는 부분이라고 생각하셔야 돼서 정말 중요하게 다뤄지는 부분이니까 꼭 공부를 열심히 체계적으로 

<Sync Start=54562><P Class=KRCC>
꼼꼼하게 잘해두셔야 된다는 것. 그러면 지금부터 오늘의 목표를 확인하면서 오늘 내용을 본격적으로 진행해보도록 하겠습니다. 보시면 30일 학습계획표 펴셨나요? 여덟 번째 날에 우리는 기출 문제 풀이를 했고요. 

<Sync Start=69944><P Class=KRCC>
그중에 많이 쓰인 아이디어들을 제가 조금만 정리해보도록 하겠습니다. 우선은 같은 것 중에서 일부나 혹은 중복해서 뽑는 경우는 나열하고 싶은 것들을 수작업으로 먼저 뽑고 그러고 나서 나열한다. 

<Sync Start=81223><P Class=KRCC>
이런 이야기를 했었고요. 원순열 같은 경우는 다시 한번 강조해 드리고 싶은 것이 누군가의 자리가 일단 고정되면 그다음에 원순열이 아니다. 그냥 나열해야 된다는 것을 이야기했었고요. 

<Sync Start=91644><P Class=KRCC>
중복순열의 두 가지 유형 중에 선택 유형과 분배 유형이 있었는데요. 모스부호, 우체통 유형 두 가지가 있는데 그중에 분배 유형이 알아내기가 어려웠지만, 워낙 많이 등장하니까 꼭 알아두셔야 된다고 이야기했고요. 

<Sync Start=103648><P Class=KRCC>
사실은 중복순열의 두 가지 유형은 그대로 다음 시간에 중복조합의 두 가지 유형으로도 확장해서 같이 공부하실 수 있기 때문에 꼭 공부를 잘해두셔야 되는 부분이고요. 

<Sync Start=114839><P Class=KRCC>
마지막으로 n과 r를 중복순열에서 구분하는 방법은 중복되는 것을 n으로 정하고 nπr = 집π사람, 이렇게 정할 수 있었다는 것도 기억을 다시 한번 하시면 좋겠는데요. 

<Sync Start=126132><P Class=KRCC>
이 부분도 다음 시간에 조금 더 자세히 하겠지만 중복조합에서도 또 비슷한 부분 쓰임이 있기 때문에 여러분, 같이 연관 지어서 공부하시라고 제가 복습에 넣어봤습니다. 

<Sync Start=139168><P Class=KRCC>
오늘은 아까도 제가 말씀드렸듯이 중복조합과 이항정리를 시작하는 날이고요. 그중에서도 오늘은 중복조합에 대해서 집중적으로 공부해보도록 하겠습니다. 

<Sync Start=149940><P Class=KRCC>
중복조합은 기본적으로 서로 다른 n개에서 r개를 뽑아서 나열은 안 하고요. 중복을 허락해서 뽑기만 하는 경우거든요. 그래서 nHr이라는 기호를 써서 이렇게 쓰시고요. 

<Sync Start=162165><P Class=KRCC>
조금 이따가 본격적으로 공부하겠지만 n하고 r을 더해서 1을 뺀 다음에 Cr, 이렇게 계산한다는 것. 이것을 기억하시면 좋겠고요. 계산 방법까지 어쨌든 이따가 조금 더 자세히 보시는데 

<Sync Start=174990><P Class=KRCC>
오늘은 이것과 동시에 중복조합을 조금 더 효율적으로 풀기 위해서 0 이상 순서쌍의 개수. 정수 순서쌍의 개수. 그래서 그것을 구하는 더해서 얼마가 된다. 

<Sync Start=188603><P Class=KRCC>
이렇게 되는 x＋y＋z의 0 이상의 정수 순서쌍의 개수를 구하는 방법이 3Hr, 이렇게 정리되거든요. 이 부분에 대해서 조금 더 집중적으로 중복조합을 활용해서 보도록 할 것이에요. 

<Sync Start=200716><P Class=KRCC>
이것이 워낙에 나중에 활용도가 높기 때문에 이 부분을 조금 더 집중해서 보셔야 다음 시간부터 하는 내용에 대한 문제 풀이 적용력이 생기실 것입니다. 

<Sync Start=210850><P Class=KRCC>
오늘은 이 정도 내용을 목표로 잡고 지금부터 50쪽으로 가서 같이 공부해보도록 하시지요. 제가 항상 하는 이야기지만 이렇게 예제를 가지고 먼저 공부해보시고 그러고 나서 중복조합 개념을 다시 한번 정리할게요. 

<Sync Start=226663><P Class=KRCC>
지금 상황에서 사과와 배 두 종류의 과일이 있는데요. 두 종류의 과일에서 중복을 허락해서 4개를 선택하고 싶어요. 다시 사과, 배, 두 종류의 과일이 있어. 그런데 중복을 허락해서 4개를 선택하고 싶어. 

<Sync Start=242776><P Class=KRCC>
그러면 사과, 사과, 사과, 사과. 전부 사과만 선택할 수도 있지요? 사과, 사과, 사과, 배, 이것도 괜찮지요. 그래서 그것을 그림으로 나타낸 것이에요. 사과, 사과, 배, 배. 아니면 사과, 배, 배, 배. 아니면 배, 배, 배, 배. 

<Sync Start=262371><P Class=KRCC>
이렇게 4개를 생각할 수도 있지요. 그렇게 해서 4개를 뽑는 방법을 생각해보니까 딱 봐도 5가지가 나오지요. 사실 그래서 정답은 5가지야, 이렇게 하시면 돼요. 

<Sync Start=273834><P Class=KRCC>
그런데 제가 굳이 그림을 그리면서 이렇게 해놓은 이유는 여기서 중복조합의 공식을 여러분이 끌어내시고 계산 방법까지 유도해내셔야 돼요. 무슨 말이냐. 사과를 O라고 표시하고 배를 X라고 표시하면 지금 이 작업입니다. 

<Sync Start=288080><P Class=KRCC>
OOOO, 4개를 전부 다 사과를 뽑아도 상관없습니다. 그것을 무엇이라고 생각할 것이냐 하면 또 사과 3개에 배 하나를 가져올 수도 있고요. 쭉쭉 있는데 그것을 어떻게 바꿔서 생각할 것이냐 하면 
<Sync Start=305110><P Class=KRCC>
&nbsp;

<Sync Start=305977><P Class=KRCC>
막대기를 기준으로 왼쪽에 들어오는 것을 사과라고 하고 막대기를 기준으로 오른쪽에 들어오는 것을 배라고 생각해서 막대기를 기준으로 구분할 것이에요. 막대기를 기준으로 그러면 이 경우는 사과 3개에 배 하나니까 

<Sync Start=325668><P Class=KRCC>
사과 3개에 배 하나, 이렇게 구분할 수 있지 않아요? 지금 그것을 제가 이렇게 그림으로 표현한 것이에요, 교재에 이해됐지요? 그다음에는 사과 2개에 배 2개다. 사과 하나에 배 3개다. 

<Sync Start=336545><P Class=KRCC>
마지막으로 배 4개다. 이렇게 할 수 있지요? 그렇다면 사과 2개에 배 2개라는 것은 막대기로 사과와 배를 구분하고 왼쪽에 2개, 오른쪽에 2개의 과일을 넣는다고 생각하면 이 과일 4개는 똑같은 것이라고 생각해 주고 

<Sync Start=351394><P Class=KRCC>
똑같은 것을 중간에서 구분 지었다고 생각해서 구분 막대기의 왼쪽을 사과, 오른쪽을 배라고 생각하고 가는 중입니다. 이해되시지요? 이것 같은 경우는 그렇다면 막대기를 기준으로 왼쪽에 하나 두시고 

<Sync Start=365680><P Class=KRCC>
오른쪽에 3개를 두는 경우로 보시면 되고요. 이 경우는 하나를 두시고 나머지 오른쪽에 4개의 과일을 배치했다고 생각하시면 되는 것이거든요. 만약에 사과, 배와 감까지 있었다면 막대기가 몇 개가 되어야 돼요? 

<Sync Start=386387><P Class=KRCC>
맞아요. 막대기를 2개를 세우셔야 돼요. 왜냐하면 막대기를 기준으로 사과 2개, 배 하나, 감 2개를 선택한다면 이렇게 기준을 잡아서 결국은 사이사이에 똑같은 과일이라고 기준을 잡는다면 

<Sync Start=405074><P Class=KRCC>
막대기를 기준으로 왼쪽은 사과, 가운데는 배 그다음은 감, 이렇게 기준을 잡아야 되기 때문에 과일의 종류보다 막대기는 구분 막대기니까 하나 적게 잡는다는 것이 일단 중복조합에서 머릿속으로 생각해야 될 부분이라서 

<Sync Start=423346><P Class=KRCC>
이렇게 생각하시면 되고요. 예를 들어서 지금은 사과와 배, 두 종류의 과일이기 때문에 구분 막대기는 1개면 충분합니다. 그래서 이렇게 셌을 때 이것이 5개야, 라고 세는 방법이 우리는 어떻게 셀 것이냐 하면 

<Sync Start=440780><P Class=KRCC>
5개 자리 중에서 과일이 들어갈 자리 네 군데를 선택하는 방법이야, 라고 쓰시면 되고요. 아니면 과일이 들어가는 전부 5개의 자리 중에서 막대기가 들어가는 자리 한 군데를 선택하는 방법이야, 라고 하셔도 똑같아요. 

<Sync Start=462059><P Class=KRCC>
그렇게 하면 5개가 나오는 것이지요. 이것을 중복조합으로 생각하면 어떻게 쓸 수 있냐 하면 서로 다른 두 종류의 과일에서 중복을 허락해서 4개를 뽑기만 하는 나열은 안 해도 돼요. 

<Sync Start=480956><P Class=KRCC>
뽑기만 하는 경우의 수예요. 왜 나열을 안 한다는 개념이 들어간 것이냐 하면 예를 들어서 제가 사과 2개, 배 2개를 뽑았다면 사과 2개와 배 2개의 자리가 바뀌는 것은 여기서 생각 안 하고 그냥 5개라고 했잖아요. 

<Sync Start=496839><P Class=KRCC>
사과, 배, 사과, 배, 이런 것 생각 안 했잖아요. 그냥 사과 둘, 배 둘이면 끝나는 것이지요. 그래서 나열은 안 한다는 의미에서 중복조합이라고 표현해요. 그래서 이것을 표현은 2H4라고 이런 상황으로 할 것인데 

<Sync Start=510285><P Class=KRCC>
이것을 계산하는 것이 일일이 그려보지 않으면 어렵다는 것이지요. 그래서 그것을 공식화해서 우리가 워낙 조합을 잘하니까 조합의 아이디어로 바꾼 것이에요. 

<Sync Start=521391><P Class=KRCC>
그래서 이 상황을 중복순열을 워낙 잘하니까 중복순열의 아이디어로 바꾼 것이에요. 죄송합니다. 조합을 워낙 잘하니까 조합의 아이디어로 바꾼 것이에요. 

<Sync Start=534872><P Class=KRCC>
그래서 ‘조합을 이용해서 어떻게 체계적으로 셀까?’를 고민해서 만들어준 것이지요. 무엇으로? 구분 막대기로. 그래서 2H4는 다른 종류의 과일이 2개인데 두 종류의 과일을 구분 짓는 구분 막대기가 1개가 필요해. 

<Sync Start=550250><P Class=KRCC>
그래서 2에서 1을 빼서 구분 막대기를 쓰고 거기에다가 네 군데에다 과일을 넣는 것이니까 그중에 과일이 들어가는 것, 4가지를 뽑는 경우의 수, 네 자리를 뽑는 경우의 수. 

<Sync Start=566795><P Class=KRCC>
그래서 이렇게 정리되고 결국 5C1과 같다. 이렇게 연결을 짓는 것입니다. 그래서 저는 2H4라는 것을 서로 다른 2개의 종류에서 4개를 중복을 허락해서 뽑는다고 하면 2H4로 표현하는 것은 여러분이 알기는 아실 텐데 

<Sync Start=584262><P Class=KRCC>
그것을 계산하는 방법이 구분 막대기를 이용해서 과일의 종류가 두 종류면 구분 막대기가 하나가 필요하니까 2－1이 들어가야 되고 그리고 4개의 과일을 뽑는 것이니까 자리를 네 자리를 만들어야 되니까 

<Sync Start=599112><P Class=KRCC>
네 자리까지 다 더한 것 중에서 네 자리를 뽑아주는 경우를 생각해서 조합으로 변환, 바꿔서 생각한 것이고요. 그래서 이렇게 정리해 주면 정답이 5개다, 라고 가는 흐름을 이해하셨으면 좋겠습니다. 

<Sync Start=615520><P Class=KRCC>
됐나요? 그러면 문제를 잠깐 바꿔서 서로 다른 3개의 종류라고 바꿔볼게요. 문제 볼까요? 사과, 배, 감까지 세 종류의 과일에서 중복을 허락해서 4개를 뽑고 싶으면 어떻게 해요? 

<Sync Start=634053><P Class=KRCC>
구분 막대기가 2개가 생기는 것이지요. 표현하면 굳이 3H4가 되는데 구분 막대기가 2개가 생기니까 3개 중에서 하나를 뺀 구분 막대기 2개를 쓰시고 ＋4까지 한 다음에 그중에 4개를 뽑는 방법으로 계산하면 된다고요. 

<Sync Start=651986><P Class=KRCC>
일일이 써보지 않더라도 이해되세요? 그래서 이 경우는 6C4니까 6C2가 되고요. 그래서 15가지다. 그래서 서로 다른 세 종류의 과일에서 중복을 허락해서 4개를 뽑고 싶다면 이렇게 바꿔서 생각하면 된다는 것입니다. 

<Sync Start=670315><P Class=KRCC>
그래서 중복조합을 계산하는 수식으로 바꾸는 과정에서 이런 것을 모델링이라고 하거든요. 이렇게 제가 모델링을 해서 바꿔치기해서 사고를 유도해낸 것이거든요. 

<Sync Start=684960><P Class=KRCC>
그래서 이 과정을 여러분도 똑같이 한번 그려보시면서 구분 막대기로 구분해가면서 이 과정을 자연스럽게 해놓아야 나중에는 3H4, 그러면 바로 이렇게 계산할 수 있고 의심하지 않아요. 

<Sync Start=698185><P Class=KRCC>
왜 2를 뺐지? 맞아. 종류를 구분하기 위해서 막대기를 세운다고 하면 그것 －1을 해야 막대기의 개수가 나오니까 －1을 했었지, 라고 생각하면서 자연스럽게 공식화해서 가시고 

<Sync Start=710744><P Class=KRCC>
나중에는 공식으로 문제를 거의 다 푸신다고 보시면 됩니다. 그래서 이 흐름을 이해하시기를 바라고요. 이것이 가장 중복조합에서는 조금 어려운 부분입니다. 그래서 이것을 REMARK로 먼저 한번 정리해볼게요. 

<Sync Start=725405><P Class=KRCC>
서로 다른 2개의 종류에서 중복을 허락해서 4개를 선택하는 중복조합의 개수다, 라고 한다면 2H4라고 쓰는데요. 그러니까 중복조합은 사실 서로 다른 2개에서 4개를 뽑는 것인데 중복을 허락해서 뽑는 것이에요. 

<Sync Start=741515><P Class=KRCC>
그것이 중복이 들어간 것이고요. 그다음에 택하는데 나열을 안 했지요. 그러니까 조합이 되는 것이에요. 그래서 중복조합이 되는 것은 맞는데 그것을 2H4로 쓰는데요. 계산 방법을 유도하는 것이 중요하다는 것입니다. 

<Sync Start=755625><P Class=KRCC>
방금 했던 예제를 떠올리시면 과일이 4개가 있고 구분 막대기가 1개가 들어가야 되지요. 왜냐하면 두 종류의 과일이니까 그래서 4개의 과일과 구분 막대기 하나를 일렬로 나열하는 경우의 수와 같기 때문에 

<Sync Start=769487><P Class=KRCC>
총 해서 5개의 자리에서 4개의 과일 자리를 선택하는 경우로 생각해도 되고 총 합해서 5개의 자리에서 1개의 막대기를 놓을 자리를 선택해도 되는 것이지요. 되셨지요? 

<Sync Start=781894><P Class=KRCC>
그래서 2H4를 계산하는 방법은 2－1을 해서 구분 막대기를 구하시고 나머지 과일을 놓는 자리까지 같이 계산해서 이것을 더한 것에서 그중에 과일이 오는 자리의 개수 해서 계산하시거나 

<Sync Start=796569><P Class=KRCC>
아니면 그중에 막대기가 오는 개수를 계산하시거나 똑같기는 하니까 이렇게 정리됐다는 것이 가장 중요한 흐름입니다. 그렇다면 다시 한번 중복조합 정리해볼게요. 

<Sync Start=809215><P Class=KRCC>
보시면 서로 다른 n개에서 중복을 허락해서 r개를 선택하는 조합을 중복조합이라고 한다. 중복을 허락한다는 것, 중요하고요. 선택하는 조합이다. 중요하고요. 나열 안 한다는 것이지요. 

<Sync Start=823828><P Class=KRCC>
그랬을 때 nHr이라고 쓰시고요. n은 서로 다른 것의 개수. r은 중복을 허락해서 결국 선택하는 것의 개수다. 이렇게 이야기하는데 n과 r을 정하는 문제는 나중에 조금 더 연습하다 보면 익숙해지실 것이고요. 

<Sync Start=837244><P Class=KRCC>
결과적으로 계산하는 방법은 제가 이렇게 쓰기는 했지만 실제로는 구분 막대기의 개수 때문에 n－1을 하시고 그리고 r을 더한 다음에 그중에 r을 선택하는 느낌이라서 이렇게 되는데 

<Sync Start=849469><P Class=KRCC>
－1을 뒤로 빼서 쓴 것뿐이에요. 그래서 앞으로 계산하실 때는 6H3이다. 예를 들어 그러면 2개를 더한 다음에 그냥 1을 빼요. 그러면 8이지요? 그중에 3, 이렇게 깔끔하게 바로바로 계산할 수 있게 가시면 돼요. 

<Sync Start=863969><P Class=KRCC>
이렇게 됐던 이유는 6개를 구분할 수 있는 구분 막대기는 6－1이고요. 그중에 3까지 얹어서 8을 만들었다는 이야기를 기억하시면 되는 것이지요. 여기까지 되셨나요? 중복조합은 개념을 잡는 것이 가장 어렵습니다. 

<Sync Start=879980><P Class=KRCC>
그러고 나면 조금 이따가 제가 정수 순서쌍의 개수를 구하는 것까지 연결할 것이거든요. 그러고 나면 오히려 훨씬 수월해요. 처음에 개념 잡는 것이 어렵고 생소해서 그렇지. 

<Sync Start=892636><P Class=KRCC>
그러면 두 번째 REMARK로 가서 다른 문제들을 한번 보면서 가보도록 할게요. 중복조합은 서로 다른 n개의 종류에서 중복을 허락해서 r개를 뽑는 경우의 수다, 라고 이야기했고요. 

<Sync Start=905984><P Class=KRCC>
아무렇지 않지만, 기본 내용을 기억하시면서 이것이 바로 중복조합에서 선택 유형에 해당돼요. 10강에 한 번 더 나와요. 중복조합의 분배 유형도 있거든요. 

<Sync Start=916490><P Class=KRCC>
그것은 선택 유형 10강에서 공부하면서 다음 시간에 한번 분배 유형과 비교해서 공부할 것입니다. 어쨌든 선택 유형에 대한 기본 내용을 다시 한번 보도록 할게요. 

<Sync Start=928481><P Class=KRCC>
1, 2, 3, 4의 번호가 적힌 4장의 카드가 있습니다. 이것 5장 되어 있지요? 교재에 4장으로 고치시고요. 중복을 허락해서 2장의 카드를 선택하는 경우의 수를 구해볼래?, 그랬습니다. 

<Sync Start=941623><P Class=KRCC>
너무 아무렇지도 않게 그냥 기본적으로 여러분이 생각의 흐름대로 가시면 돼요. 4개의 번호가 적힌 4장의 서로 다른 카드가 있는데 중복을 허락해서 2장을 선택한다고 했기 때문에 1, 1을 선택하셔도 되고요. 

<Sync Start=954511><P Class=KRCC>
1, 3을 선택하셔도 되고요. 3, 4를 선택하셔도 되고요. 4, 4도 괜찮고요. 이런 식의 흐름으로 가실 것인데 중요한 것은 13과 31을 다르게 세느냐, 그것은 아니라는 것이지요. 

<Sync Start=967453><P Class=KRCC>
왜냐하면 선택만 하는 것이니까 두 자리 자연수는 아니라는 것입니다. 여기에 모든 개념이 들어가 있지요. 서로 다른 2개의 카드에서 중복을 허락했고요. 선택해서 나열은 안 하고 선택만 했지요. 중복조합입니다. 

<Sync Start=982357><P Class=KRCC>
따라서 4장의 카드 중에 2장의 카드를 선택한다고 했으니까 4H2다. 그래서 전형적인 중복조합으로 생각하시면 되고요. 맞지요? 그래서 계산해 주시면 둘을 더해서 1을 빼야지요? 

<Sync Start=996995><P Class=KRCC>
왜냐하면 여기 구분 막대기가 3개가 생길 것 아니에요. 그래서 4＋2－1을 하시고 그중에 2개를 선택하니까 5C2 해서 정답은 10가지다. 이렇게 정리하시면 되겠습니다. 

<Sync Start=1008072><P Class=KRCC>
그래서 전형적인 중복조합 선택 유형이라고 생각하고 반복적으로 연습하시고 머리에 익숙하게 길이 나게 해 주시면 됩니다. 그러면 계산 한번 연습해볼까요? 

<Sync Start=1017772><P Class=KRCC>
너무 기본적으로 많이 나오는 부분이라 제가 계산을 몇 개 넣어놓았는데 그 이유는 기존에는 순열이라는 조합의 기본적인 것들이 시험 범위에 들어갔기 때문에 단답형 22번 문제로 

<Sync Start=1030162><P Class=KRCC>
그러니까 여러분 때는 사실은 선택형으로 들어가니까 확통에 선택형의 기본 문제로 나오겠지요? 그렇게 나왔던 것이 보통은 combination이나 permutation, 기호를 이용하는 것이 나왔는데 이제는 바뀌지요. 

<Sync Start=1044241><P Class=KRCC>
이것이 직접적인 시험 범위는 아니기 때문에 H나 π를 가지고 숫자 계산하는 단순 문제가 나오더라도 이쪽으로 나올 것이거든요. 그래서 연습해보실 필요는 있고요. 그냥 기본이라 가볍게 연습하고 가겠습니다. 

<Sync Start=1057890><P Class=KRCC>
5H1이다. 그러면 둘 더해서 1을 빼는 것이지요? 따라서 5C1이 되고요. 5가 됩니다. 4H2다. 그러면 둘 더해서 1을 빼고요. 그중에 2개니까 5×4, 10가지지요. 4니까 3C2가 되고 3이 되고요. 

<Sync Start=1074000><P Class=KRCC>
7C, 5니까 2가 되지요. 빨리할 수 있지요? 그래서 이것이 익숙해지도록 연습해주시면 좋겠습니다. 그러면 다음 문제로 가보도록 할게요. 이번에 4번입니다. 
<Sync Start=1086640><P Class=KRCC>
&nbsp;

<Sync Start=1089024><P Class=KRCC>
이렇게도 나올 수가 있어요. 계산 문제치고는 조금 계산이 있다고는 보시는데요. 그래도 어렵지는 않습니다. 그대로 움직이시면 돼요. H 기호를 이용해서 3＋r을 하고 1을 빼시고 이것을 한 것이 7C2가 된다는 뜻이지요? 

<Sync Start=1103016><P Class=KRCC>
그러면 이것을 계산하는데요. 2＋r에서 r을 선택하는 것이고요. 그러면 2＋r은 r보다 2가 많잖아요. 그러니까 결국 이것은 무엇이에요? r＋2로 쓸까요? 그중에 r개를 선택하나 2개를 선택하나 똑같지요. 

<Sync Start=1119800><P Class=KRCC>
이것이 되시나요? 2개 더해서 이것이 만들어지면 똑같다고 이야기했었지요? 그래서 이것이 7C2가 되니까 그러니까 r＋2가 7이 돼서 r은 무엇이 되나요? 5가 나온다는 것이 바로 되는 것이지요. r이 5가 되는 것입니다. 

<Sync Start=1135792><P Class=KRCC>
그러면 문제에서 원하는 것은 5H5가 되기 때문에 9C5 하니까 9C4가 되겠지요? 그래서 9·8·7·6을 4·3·2·1로 나누게 되니까 126이 되네요. 63×2니까 그래서 126이야, 라고 가볍게 정리해서 

<Sync Start=1155186><P Class=KRCC>
또 문제 풀어주실 수 있는 부분입니다. 여기까지는 단순 계산을 조금 해봤고요. 51쪽에 두 번째 Basic Lecture로 가보도록 하겠습니다. 여기서부터 여러분이 문제에 직접적으로 적용하기에 굉장히 좋은 부분입니다. 

<Sync Start=1169785><P Class=KRCC>
방정식의 개수, 해의 개수를 구하는 부분인데요. 이것을 배우는 순간부터 중복조합이 굉장히 수월해져요. 왜냐하면 머릿속으로 그래도 그려지거든요. 순서쌍을 구하는 것이라서 조금 더 수월하게 되고요. 

<Sync Start=1182940><P Class=KRCC>
중복조합 대부분의 문제가 이런 상황으로 모델링이 된다면 중복조합을 쓰면 된다고 생각하면 돼서 훨씬 중복조합을 대할 때 부담이 덜해요. 무슨 이야기냐 하면 예를 들어서 먼저 한번 생각해보면 좋을 것 같아요. 

<Sync Start=1197802><P Class=KRCC>
예를 들어서 제가 밑에 예제가 많기는 한데 거기에 수치가 커서 아주 기본적인 예제 하나만 들어볼게요. 더해서 5가 되는 x, y, z는 0 이상의 음 아닌 정수라고도 표현하기도 하고요. 

<Sync Start=1209706><P Class=KRCC>
왜냐하면 0 이상이니까 음 아닌 정수라고도 표현하고요. 아니면 0 이상의 정수라고도 하고요. 0을 포함한 자연수라고 해도 괜찮고요. 아니면 이렇게 표현하기도 하고요. 

<Sync Start=1221894><P Class=KRCC>
어쨌든 이렇게 되는 x, y, z의 순서쌍을 구하여라. 이렇게 나왔다고 해봅시다. 그러면 일단 생각해보면 일일이 쓸 수는 있어요. 이런 식으로 써갈 수 있거든요? 
<Sync Start=1241780><P Class=KRCC>
&nbsp;

<Sync Start=1242978><P Class=KRCC>
그리고 사실 순서도 바꿀 수 있어요. 순서도 그렇지요? 왜냐하면 x, y, z가 분명히 다른 이름을 가지고 있는 문자 자리이기 때문에 순서를 바꾸는 것도 당연히 생각하셔야 되고요. 

<Sync Start=1257872><P Class=KRCC>
그래서 이것을 다 세는 것입니다. 무슨 말인지 아시지요? 이것을 어떻게 놓을 것이냐 하면 수학적으로 이렇게 모델링을 해볼까 봐요. 어떻게 하냐, 바꿔치기해서 생각한다는 것이지요. 

<Sync Start=1271955><P Class=KRCC>
이것을 xxxxx를 선택한 것이고 사실은 이것은 모델링이라기보다는 그대로 이것을 옮긴 것이지요, 상황을. 이것은 z를 5개 선택한 것이지요. 이 경우는? x를 4개 선택하고 y를 하나 선택한 것이고요. 

<Sync Start=1288534><P Class=KRCC>
이 경우는 x를 3개 선택하고 y를 하나, z를 하나 선택한 경우지요? 이런 식의 느낌들. 그러면 결국은 어떻게 되는 것이에요? 이렇게 센 방법들을 다 더하게 되는 것인데 x, y, z, 세 종류를 가지고 중복을 허락해서 

<Sync Start=1315783><P Class=KRCC>
5개를 선택하는 것이지요. 맞아요? 그런데 만약에 애들아, xyxxx로 썼다면 이것이 이것과 같으니, 다르니? 같지요. 왜냐하면 이것의 의미는 x를 4번, y를 1번 뽑는다는 의미예요. 

<Sync Start=1333575><P Class=KRCC>
그리고 x, 4번 들어가고 y, 1번 들어가면 순서가 중요치 않아요. 지금 상황에서 이 순서쌍을 바꿔 썼다는 것은 이해되시지요? 그러니까 같은 것이에요. 그러니까 무엇이에요? 다시 정리할게요. 

<Sync Start=1345343><P Class=KRCC>
x, y, z, 세 종류에서 5개를 선택하고 대신에 중복을 허락해서 선택하니까 안 뽑는 것이 있을 수 있지요? 나열은 안 해요. 맞아요. 나열하지 않아요. 이들끼리 자리 바꾸는 것 상관없이 하나라고 세고 싶은 것이지요. 
<Sync Start=1362890><P Class=KRCC>
&nbsp;

<Sync Start=1365840><P Class=KRCC>
세 종류 중에서 5개를 중복을 허락해서 선택만 하는 경우. 중복조합의 선택 유형이지요. 그래서 앞으로 이 문제를 이렇게 푸시면 돼요. 3H5로 이해되나요? 

<Sync Start=1381879><P Class=KRCC>
이렇게 모델링을 해서 써보다 보니 세는 방법이 완전히 중복조합의 아이디어와 똑같구나. 그래서 이렇게 쓰면 되겠구나. 그러니까 계산하게 되면 7, C5니까 2 해서 계산하시면 되지요. 21, 이런 식으로 

<Sync Start=1398556><P Class=KRCC>
이 이야기가 지금부터 정리해드리면 바로 이렇습니다. 방정식의 해의 개수 구하기. r은 자연수라고 하고 이렇게 더해서 무엇이 된다고 한다면 음이 아닌 정수해의 개수를 구한다고 했을 때 

<Sync Start=1410753><P Class=KRCC>
3Hr이다. 이렇게 된다는 것이지요. 중요한 것은 음 아닌 정수해다, 라는 것이 포인트고요. 이 조건이 조금씩 바뀌면 바뀔수록 문제가 조금 더 복잡해지는 경우들이 생깁니다. 

<Sync Start=1424050><P Class=KRCC>
일단은 이것이 기본 틀이라고 보시고 REMARK 03을 먼저 가볼게요. 양의 정수해를 구하는 경우가 나올 수도 있어요. 지금은 무엇이었어요? 음 아닌 정수해니까 0 이상이었거든요. 

<Sync Start=1435302><P Class=KRCC>
그런데 양의 정수해라는 것은 1 이상이에요. 0이 안 된다는 것이지요. 그런 경우는 치환해서 보면 되는데요. 이것은 문제로 직접 제가 볼게요. 워낙 중요하니까 실제로는 x, y, z가 1 이상이 된다는 것은 양의 정수해니까 

<Sync Start=1450814><P Class=KRCC>
적어도 하나씩은 받아야 한다는 이야기거든요? 그러니까 하나씩 미리 주고 시작하면 돼요. 그 이야기를 조금 이따가 문제로 바로 볼게요. 그래서 일단 양의 정수해가 나오는 것을 기억해야 된다, 이것이고요. 

<Sync Start=1461280><P Class=KRCC>
또 하나는 홀수나 짝수 조건이 주어지는 경우가 있어요. 양의 홀수, 양의 짝수라고 명시해 준다는 것이지요. 그러면 홀수일 경우는 2로 나눠서 나머지가 1인 경우고 짝수인 경우는 2로 나눈 나머지가 0. 

<Sync Start=1476853><P Class=KRCC>
0이라는 것은 조금 그렇지요? 2로 나눈 나머지가 나누어떨어지는 그렇게 되는 경우라서 치환하는데 이렇게 치환하시면 되거든요. 포인트는 치환한 문자가 0 이상이 되도록 해야 중복조합을 바로 적용할 수 있어서 

<Sync Start=1493386><P Class=KRCC>
치환하는 것까지 해서 이것은 직접적인 예제를 지금부터 저와 볼 것이에요. 걱정하지 마시고 지금부터 한번 시작해볼게요. REMARK를 바탕으로 지금부터 한번 봅시다. 5번입니다. 
<Sync Start=1506433><P Class=KRCC>
&nbsp;

<Sync Start=1507721><P Class=KRCC>
방정식에 대해서 다음 해의 개수를 구하여라. 음이 아닌 정수해다. 그렇다면 전형적으로 우리가 지금까지 했던 0 이상의 정수라고 했지요? 그래서 이것을 쓰다 보면 

<Sync Start=1516981><P Class=KRCC>
결국에는 x, y, z 3개 중에서 17개를 선택하는데 중복을 허락해서 그런 경우의 수지요. 그래서 3H17이다. 이렇게 가시면 되고요. 19C2가 되지요. 그래서 19에서 18을 곱해서 2로 나누게 되지요. 

<Sync Start=1534356><P Class=KRCC>
그러면 9와 곱하니까 171이지요. 양의 정수해다. 그렇다면 0 이상이 아니라 1 이상으로 바뀌는 것이지요. 이것을 주의해서 보세요. 더해서 17인데 1 이상이 되고 싶다는 것이지요. 

<Sync Start=1552409><P Class=KRCC>
그러면 아까 제가 그 이야기 했던 것 기억나시지요? 하나씩은 받아야 된다는 이야기거든요. 과일이라고 생각한다면 그래서 하나씩 받는다고 생각하면 하나씩 넣어줘요. 
<Sync Start=1565823><P Class=KRCC>
&nbsp;

<Sync Start=1566986><P Class=KRCC>
그러면 몇 개 남아요? 14개 남지요. 그래서 하나씩을 받고 나면 x′, y′, z′는 0 이상이어도 되지요? 이미 하나씩 받았으니까 그래서 3H14로 푸시면 돼요, 중복조합으로 바로. 

<Sync Start=1586915><P Class=KRCC>
이해되시지요? 1 이상이었을 때는 왜 바로 못 푸냐 하면 여기서 0이 되는 순서쌍을 포함해서 우리는 중복조합으로 셌기 때문에 그것을 또 일일이 빼주셔야 돼요. 

<Sync Start=1596745><P Class=KRCC>
0이 들어가는 경우로 그것이 너무 많으니까 이것을 하나씩 나눠주고 중복조합으로 다시 돌려 푸셔야 돼요. 16C2니까 16·15를 2로 나누게 되지요? 그래서 120가지다. 이렇게 정리하시면 됩니다. 

<Sync Start=1611290><P Class=KRCC>
양의 정수해는 이렇게 되는데요. 이 과정에서 제가 어떤 내용을 생략한 것이냐 하면 사실 이 풀이가 제일 생각하기 쉬운데요. 여기서 엄밀하게 생각해 주시면 어떤 풀이가 생략된 것이냐 하면 

<Sync Start=1624817><P Class=KRCC>
x가 1 이상이잖아요. 그러니까 x－1이라는 것을 라지 X, 이런 식으로 치환하는 것이에요, x－1이라는 것을. 그러면 이것이 넘어가면 0보다 크거나 같을 것 아니에요. 이것을 x로 치환하면 그렇지요? 

<Sync Start=1642041><P Class=KRCC>
이것이 라지 X라기보다는 여기서는 x′가 된 것이지요, 쉽게 말하면. 이렇게 치환해서 가버리면 x 자리에다가 x′＋1을 넣게 되잖아요. 이렇게 넘어가면 그래서 그것을 여기다가 넣어서 x′＋1. 이것도 y′＋1. 

<Sync Start=1658259><P Class=KRCC>
z′＋1 하면 1, 1, 1이 빠지니까 14가 되잖아요. 그 과정이 생략된 것이에요. 그것을 원래 써서 거기서 내려와서 이렇게 14로 내려오는 것인데 저는 말로 미리 하나씩 나눠 가지고 시작해, 라고 끝낸 것이지요. 

<Sync Start=1673446><P Class=KRCC>
그런데 엄밀히 말하면 이 자리에다가 이렇게 치환하는 과정이 있고 그러고 나서 이 자리에 그것을 채워 넣어서 x′＋1, y′＋1, z′＋1 = 17이니까 x′＋y′＋z′가 1, 1, 1을 넘겨서 14가 되고 0 이상이니까 3H14야. 

<Sync Start=1694075><P Class=KRCC>
이렇게 내려오는 것이 맞다는 것이지요. 그런데 대부분 문제를 푸시다 보면 치환해서 굳이 일일이 써가면서 하는 사람이 많이 없어요. 왜냐하면 이 정도면 또 기본 유형에 속하거든요. 

<Sync Start=1706070><P Class=KRCC>
그래서 그냥 이미 치환했다고 머릿속으로 생각하고 나눠주고 시작해, 라고 생각하면서 바로 많이 가세요. 그래서 저처럼 하나씩 나눠줬다면 14개만 남는다. 

<Sync Start=1719566><P Class=KRCC>
그리고 이것을 치환해서 0 이상이라고 하고 중복조합을 바로 적용한다. 이렇게 가면 되겠습니다. 이것이 제가 REMARK 첫 번째에서 했던 이야기고요. 여기까지 되시지요? 그러고 나면 6번으로 갑니다. 
<Sync Start=1733605><P Class=KRCC>
&nbsp;

<Sync Start=1735469><P Class=KRCC>
양의 정수 중 짝수인 x, y, z를 구하라는 것 보이시나요? 맞습니다. 짝수 순서쌍을 구하라는 것인데요. 그러면 짝수 순서쌍을 설정하라고 제가 REMARK에서 말씀드렸습니다. 설정 방법을 잘 보셔야 돼요. 

<Sync Start=1748755><P Class=KRCC>
x에 무엇이라고 하시냐 하면 2x′ 혹은 x를 라지 X로 보셔도 돼요. 무엇으로 보시든 여러분 편하신 대로 그런데 중요한 것은 이것도 사실 짝수고 이것도 짝수고 이것도 짝수고 솔직히 이런 것도 짝수고 다 짝수 맞지요? 

<Sync Start=1770054><P Class=KRCC>
그중에 양의 짝수라고 했기는 했어요. 그러면 0은 빼고 2, 4, 6, 8, 이렇게 가는 것이거든요? 그러면 ‘누구로 선택해야 될까?’를 고민하시는데요. 제가 아까 REMARK 맨 마지막에 무엇이라고 했냐 하면 

<Sync Start=1786533><P Class=KRCC>
치환한 것이 X인데 치환한 것이 0 이상이 되도록 하는 것이 핵심이야. 왜냐하면 그래야 여기서 바로 중복조합 적용하거든요? 그러려면 양의 짝수를 만들기 위해서는 이것이 0 이상이 되려면 

<Sync Start=1798108><P Class=KRCC>
여기다 0 이상이라고 하면 이것은 어떤 짝수가 나와요? 0, 2, 4, 6, 이렇게 나오게 되고요. 여기다가 x에 0 이상의 정수를 넣으면 0이 안 나오지요? 2를 더하니까 2, 4, 6, 이렇게 나오지요. 

<Sync Start=1813251><P Class=KRCC>
그다음에 여기다 0을 넣기 시작하면 4부터 시작하지요? 4, 6, 8, 이렇게. 여기다가 0을 넣기 시작하면 －2부터 0, 2, 4, 이렇게 가는 것이지요. 무슨 이야기인지 알겠어요? 

<Sync Start=1823612><P Class=KRCC>
그러나 나는 양의 정수 중에 짝수를 원하니까 이것이 다 안 되는 것이고요. 이 표현이 맞다는 것이에요. 그래서 치환을 이렇게 하라는 이야기예요. 많이 하다 보면 아무렇지 않게 이렇게 치환하게 되겠지요. 

<Sync Start=1835144><P Class=KRCC>
시작이 0 이상으로 했을 때 2부터 시작하게 당연히 이것이 나오는 것이지요. 그것을 머릿속으로 생각하고 이제는 하시면 됩니다. 그래서 치환을 어떻게 하라는 것이냐 하면 

<Sync Start=1845074><P Class=KRCC>
x = 2X＋2. y = 2Y＋2. z = 2Z＋2. 그리고 X, Y, Z는 0 이상의 정수, 이렇게 치환해버리면 원래 자리에 한번 넣어볼게요. 2X＋2＋2Y＋2＋2Z＋2 = 20이더라. 한 번만 더 쓸게요. 

<Sync Start=1877457><P Class=KRCC>
그러면 2, 2. sorry. 이것은 없어지는 2가 아니고요. 2, 2, 2 해서 없애서 14가 되고요. 6을 빼니까 2로 나누게 되니까 X＋Y＋Z에 2로 묶어서 나누니까 7이 되는 것이지요. 

<Sync Start=1892029><P Class=KRCC>
그리고 0 이상의 정수 순서쌍, 이렇게 되는 것입니다. 그래서 이것의 정수 순서쌍 구해 주시면 3H7이 나온다는 것 아실 수 있고요. 따라서 9C2가 되니까 9·8을 2로 나눠서 36가지구나. 

<Sync Start=1910544><P Class=KRCC>
이렇게 정리하실 수 있는 문제가 됩니다. 됐나요? 그래서 짝수 문제, 홀수 문제 굉장히 자주 등장해요. 짝수 순서쌍, 홀수 순서쌍. 그런데 보통 확률과 통계에서는 양의 정수 중에서 생각하는 것이 맞아서 

<Sync Start=1929927><P Class=KRCC>
사실 이 말을 안 해 줘도 보통은 짝수라고 하면 양의 정수에서 보통은 하지만 사실 이 경우는 0도 포함해야 되는지는 조금 애매하기는 하거든요. 음수는 당연히 보통은 안 세지만 

<Sync Start=1940639><P Class=KRCC>
그래서 이런 문제에서는 양의 정수라는 말을 짝수라고 하고 싶으면 꼭 포함해주는 편이에요. 0을 포함하냐, 안 하냐가 중요한 관건이 되기 때문에 그래서 이렇게 알아두시면 되고요. 

<Sync Start=1952420><P Class=KRCC>
문제를 하나 더 풀면서 다시 한번 이 문제를 확인해보도록 할게요. 7번을 한번 볼게요. 이번에는 x＋y＋z＋w = 20이 되도록 하는 양의 정수 중에 홀수 순서쌍을 구해볼래?, 그랬습니다. 

<Sync Start=1967203><P Class=KRCC>
똑같지요? x를 무엇이라고 치환하면 될까요? 2, 라지 Y 쓰셔도 되고요. x′ 쓰셔도 괜찮아요. 여러분, 편하신 대로 쓰세요. 사실 저는 이것이 조금 더 편하기는 하거든요? 이렇게 놓으면 되지요. 

<Sync Start=1981422><P Class=KRCC>
사실 여기에 －1을 넣어야 되냐, 3을 더하냐. 다 홀수예요. 이렇게 놓아도 그런데 중요한 것은 x′, y′, z′, w′가 0 이상이 되도록 해야 바로 중복조합 적용에 가능하다는 것이지요. 

<Sync Start=1995077><P Class=KRCC>
그러려면 x′＋1로 가셔야 바로 갈 수 있는 것이지요. 이렇게 치환합니다. 여기까지 따라오시나요? 치환하시고 이 자리에 넣어주시면 2x′＋1＋2y′＋1＋2z′＋1＋2w′＋1 한 것이 20이라는 뜻이지요. 

<Sync Start=2024706><P Class=KRCC>
따라서 1, 1, 1, 1, 다 빼서 16이 나오지요. 한 번만 다시 쓸게요. 2로 묶어서 한 것이 16이니까 나눠서 8이지요? 따라서 이렇게 4H8로 깔끔하게 정리하실 수 있겠지요? 그렇다면 11C3이 돼서 이렇게 나눠주시면 되지요? 
<Sync Start=2059134><P Class=KRCC>
&nbsp;

<Sync Start=2060621><P Class=KRCC>
그래서 정답은 165야, 라고 정리하실 수 있겠습니다. 정수 순서쌍 구하는 연습을 일단 잘하셔야 돼요. 이런 순서쌍 구하는 연습이 잘되시면 줄글로 된 실생활 활용 문제들을 

<Sync Start=2077908><P Class=KRCC>
순서쌍을 구하는 방정식 문제로 바꿔치기해서 푸시면 나중에 굉장히 편하거든요. 그래서 제가 이 연습을 계속 시키고 있는 것입니다. 그래서 이런 것들을 신경 써서 조금씩 조건이 바뀌는 경우 보시면 좋겠고요. 

<Sync Start=2092413><P Class=KRCC>
8번으로 갈게요. 실제로 수능 모의평가에 나오는 문제 유형은 이렇게 정수 순서쌍. 음 아닌 정수 순서쌍을 구하는 문제를 직접적으로 출제하기도 해요. 아니면 어떤 문제 상황을 주기도 해요. 

<Sync Start=2108425><P Class=KRCC>
과일. 예를 들어 사과 몇 개, 배 몇 개를 서로 다른 2명에게 나누어주는 방법의 수를 구하는 식으로 약간 실생활 상황으로 바꿔서 문제를 주기도 해요. 큰 트렌드는 둘 중의 하나인데요. 

<Sync Start=2122963><P Class=KRCC>
보통은 이 문제도 나오고 이런 정수 순서쌍도 나오고 실생활 문제, 활용된 문제까지 나오는 경우도 있고요. 둘 중의 하나만 내는 경우도 있어요. 그래서 양쪽을 다 보셔야 되는데 

<Sync Start=2133980><P Class=KRCC>
결국은 이것이 토대가 잘되어야 그런 실생활 문제도 잘 푸는 것이라서 연습을 잘하셔야 됩니다. 8번 문제는 a, b, c, d, 중에서 0의 개수가 2개래요. 단도직입적으로 0의 개수를 알려줬습니다. 

<Sync Start=2148180><P Class=KRCC>
그리고 a, b, c, d를 더해서 10이 나오고 싶다고 했어요. 보시면 변형 문제입니다. 이 문제 약간 변형했습니다. 먼저 a, b, c, d 중에서 0의 개수를 여러분이 그렇다면 잡아주시는 것이 가장 중요할 것 같아요. 

<Sync Start=2164461><P Class=KRCC>
그래서 0이 누가 될지를 이 중에서 잡아주시면 되는 것 같고요. 따라서 0의 종류를 정하는 방법이 4C2가 되겠지요? 그래서 예를 들어서 a와 나는 d를 0을 주고 싶다. 그렇다면 여기에 0, 0을 깔고 시작하는 것이지요. 

<Sync Start=2184603><P Class=KRCC>
그런 순서쌍을 정하는 것이 4C2가 되는 것입니다. 그러고 나면 일반적으로 그냥 a와 d를 0이라고 생각하고 b＋c = 10이라고 그냥 생각해보자. 이때마다 이것이 나오는 것이니까 하나를 딱 정해서 생각해보자고 

<Sync Start=2202004><P Class=KRCC>
그러면 b, c는 무엇 이상이 될까? 여기서 실수를 제일 많이 했었거든요, 친구들이. 맞아요? 이러면 틀리지요. “선생님, 음이 아닌 정수라고 했는데 당연히 맞는 것 아닌가요?”라고 하지만 

<Sync Start=2222663><P Class=KRCC>
이미 0의 개수는 2개라고 했고 0의 개수를 여기서 뽑아냈거든요, 0이 누구인지를? 그러면 b, c는 0이 아닌 것들이잖아요. 그러면 여기서 1 이상이라고 했었어야지요. 0이 2개밖에 안 된다고 했으니까 

<Sync Start=2238236><P Class=KRCC>
그래서 이렇게 해서 이 경우의 수를 구한 다음에 곱해 주셔야 되는 것이 맞습니다. 여기까지 하실 수 있겠지요? 됐나요? 그렇다면 1개씩 주고 나면 b′＋c′ = 8이 되고요. b′, c′의 조건은 0 이상으로 바뀌게 되겠지요. 

<Sync Start=2257683><P Class=KRCC>
따라서 2H8이 되는 것이고 이때마다 즉, 0이 누가 되느냐를 뽑을 때마다 나머지의 순서쌍이 이렇게 결정되니까 둘을 곱해 주셔야 되는 것이 맞습니다. 따라서 정리해 주시면 4×3. 6에다가 2H8이니까 9C1이 되는 것이지요. 

<Sync Start=2278999><P Class=KRCC>
따라서 9를 곱해 주셔서 정답은 54가지야, 라고 정리하실 수 있는 문제입니다. 됐나요? 이렇게 0의 개수를 정해 준 문제가 있고요. 최근 문제 중에 이것과 굉장히 유사한 유형이 있어서 

<Sync Start=2294661><P Class=KRCC>
제가 비슷하게 (2)번으로 엮어서 가져와 봤습니다. 바로 2021학년도 6월에 나왔던 문제였어요. 이 문제 보시면 4개를 더해서 6이 나오고 a, b, c, d 중에서 적어도 하나는 0이다, 라고 했습니다. 

<Sync Start=2310271><P Class=KRCC>
사실은 이 문제는 이 말만 바뀌었지 먼저 나왔던 기출하고 너무나도 비슷했던 유형이지요. 그리고 어떤 문제집에도 사실 거의 있을 법한 문제 유형으로 보실 수 있는데요. 

<Sync Start=2324701><P Class=KRCC>
a, b, c, d 중에서 적어도 하나는 0이다. 적어도 하나는 0이다? 하나가 0일 수도 있고 2개가 0일 수도 있고 3개, 4개가 0일 수도 있네. 그러면 개수가 생각보다 많네. 이렇게 가면 돼요. 

<Sync Start=2335818><P Class=KRCC>
그래서 생각한 것이 그렇다면 0이 하나도 없는 것. 그런 경우를 전체에서 빼주면 되는 것 아니야? 이렇게 가는 것이지요. 그래서 전체에서 모두 다 0이 아니다. 어쨌든 음이 아닌 정수라고 깔아줬으니까 모두 다 0 이상이다. 

<Sync Start=2355820><P Class=KRCC>
그 경우를 뺀다고 보시는 것이 좋겠지요. 모두 다 0이 아니라는 것은 모두 다 0 이상이다. 그렇지요. “0보다 크다.”겠지요. 그러니까 “1 이상이다.”겠지요. 0이 아니니까 그렇지요? 

<Sync Start=2370284><P Class=KRCC>
이렇게 되는 경우를 뺀다고 보시면 됩니다. 그러면 전체 경우의 수는 a, b, c, d를 더해서 6이 되는데 a, b, c, d가 0 이상의 순서쌍이 그냥 기본 중복조합일 것이고요. 

<Sync Start=2387546><P Class=KRCC>
모두 다 1 이상이 된다는 것은 a＋b＋c＋d = 6인데 전부 다 1 이상이 되는 것이지요. 맞아요? 그러니까 아까도 계속 강조했지만 하나씩 나눠 가지고 생각한다는 그리고 4개가 남는다는 아이디어로 가면 되지요. 

<Sync Start=2405460><P Class=KRCC>
그러면 여기가 a′＋b′＋c′＋d′가 되고 여기 4가 아니네요. 4개를 나눠 가졌으면 2가 남겠지요. 여기가 2가 되면서 나머지 a′, b′, c′, d′는 0 이상이 되는 이런 순서쌍. 이것을 구해서 전체에서 빼게 된다. 

<Sync Start=2426177><P Class=KRCC>
이렇게 생각을 좁혀 가시면 됩니다. 그러면 전체 경우의 수는 4H6이 될 것이고요. 여기 경우의 수는 4H2가 될 것입니다. 그래서 이것을 빼주시면 되고요. 9C3에서 5C2를 빼게 되니까 9·8·7을 3·2·1로 나누게 되고요. 
<Sync Start=2445788><P Class=KRCC>
&nbsp;

<Sync Start=2447355><P Class=KRCC>
84지요? sorry, sorry. 12에다가 7을 하니까 맞네요, 84. 그다음에 여기는 5×4니까 10이 되겠지요? 그래서 정답은 74가 되더라. 이렇게 정리해 줄 수 있는 문제 유형이었습니다. 

<Sync Start=2462193><P Class=KRCC>
최근 문제고요. 어렵지는 않지만 2개를 비교해가면서 보기 좋아서 제가 한번 가져와 봤던 문제 유형이었습니다. REMARK 04로 가서 다른 이야기를 해볼게요. 이런 이야기가 나올 수가 있어요. 

<Sync Start=2476638><P Class=KRCC>
계수가 다른 문자가 있는 경우. 어떻게 하면 좋겠냐, 이런 것입니다. 계수가 다른 문자가 있는 경우는 일단은 계수가 다른 항을 먼저 대입을 통해서 계산하세요. 그래서 그것을 먼저 해결하세요. 

<Sync Start=2492286><P Class=KRCC>
계수가 서로서로 다 다르면 아니지요? 그런데 특정한 하나의 계수만 다르다, 이런 방정식 문제에서. 그러면 하나를 먼저 해결하시고 한두 개를 그러고 나서 계수가 모두 같게 만든 다음에 중복조합을 적용하시면 돼요. 

<Sync Start=2506176><P Class=KRCC>
보실래요? 9번 문제입니다. 9번에 이렇게 하나만 계수가 달라졌어요. 그래서 d 앞에만 3이 붙었는데요. 수작업을 하시는 것이지요. 그래서 d 자리에다가 이것을 보고 
<Sync Start=2520828><P Class=KRCC>
&nbsp;

<Sync Start=2523476><P Class=KRCC>
이 상태에서 d가 만약에 어디까지 갈 수 있니? 3, 4. 4는 못 가지? 3까지 갈 수 있겠지요? 음 아닌 정수니까 그러면 a, b, c를 더한 것이 1이 되겠지요, 이 경우는? 
<Sync Start=2537732><P Class=KRCC>
&nbsp;

<Sync Start=2538393><P Class=KRCC>
d가 만약에 2다. 4가 되겠지요. d가 만약에 1이다. 그러면 7이 되겠지요. d가 만약에 0이다? 0도 가능한 것 아니에요? 음 아닌 정수니까 그렇지요? 그러면 10이 되겠지요. 이런 상황이 되는 것이에요. 

<Sync Start=2559786><P Class=KRCC>
음수는 어차피 안 되니까 그 상황에서 해보시면 그런데 애들아, ㈏ 조건에서는 무엇이라고 그랬어? 다 더하면 5 이하라고 했잖아. 그렇지 않아? 그런데 여기 이미 다 더해서 7이 나왔잖아. 

<Sync Start=2573322><P Class=KRCC>
a, b, c 더한 것이 5 이하라고 했는데 여기도 a, b, c 더하면 5 이하인데 이것이 다 안 되는 것 아니야? 그렇지요? 그래서 두 가지는 모순이 나와요. 그래서 생각하실 필요도 없고요. 

<Sync Start=2584318><P Class=KRCC>
문제는 두 가지 위주로만 정리해 주시면 되겠네요. 그러고 나면 a, b, c는 특별한 제약이 없으니까 문제 처음에 주어진 조건이 음이 아닌 정수, 0 이상으로 따라가시면 되겠고요. 

<Sync Start=2596828><P Class=KRCC>
따라서 3H1이 되겠습니다. 그렇다면 3C1이 돼서 이때 3가지 나오시고요. 그다음에 이때는 a, b, c가 0 이상이 된다고 했으니까 3H4라고 하시면 되고요. 이때는 6C2가 돼서 3×5 = 15가 되겠지요. 

<Sync Start=2616421><P Class=KRCC>
그래서 3과 15 해서 2가지를 더해서 18가지야, 라고 정리해 주시면 되는 문제입니다. 어렵지 않게 따라오셨을 것이라고 생각하고요. 이런 식으로 해서 9번 같은 문제는 음이 아닌 정수, 

<Sync Start=2631150><P Class=KRCC>
모든 순서쌍의 개수다, 할 때 계수가 복잡하다면 그 계수 부분을 처리하고 갈 필요가 있겠더라, 하시면 되겠고요. 그다음 다섯 번째 REMARK로 가보도록 하겠습니다. 이번에는 중복조합의 상황. 

<Sync Start=2645623><P Class=KRCC>
여러 가지가 시작이에요. 많이 나오는데 그런 것들을 지금 했던 방정식의 해의 개수를 구하는 상황 있지요? 그것으로 바꿔서 생각하시면 굉장히 수월하거든요. 그 이야기를 지금부터 해볼게요. 

<Sync Start=2659203><P Class=KRCC>
중복조합에서 빠지지 않고 나오는 이야기입니다. 서로 다른 항의 개수. 더해서 5제곱을 하고 싶은데요. ‘어떻게 하면 서로 다른 항의 개수를 구할 수 있느냐.'인데요. 이것을 이렇게 생각하시면 돼요. 

<Sync Start=2673199><P Class=KRCC>
이것을 전개해놓았을 때 지수 있지요? 일반적으로 전개해놓았을 때의 지수를 x, y, z라고 한다면 x, y, z라는 수치를 더한 것이 총 5가 되어야 되는 것은 확실하지요? 

<Sync Start=2690912><P Class=KRCC>
왜냐하면 전개해놓으면 5제곱을 못 넘어가거든요, 문자가 곱해진 개수가. 그러니까 더해서 5가 되는 것이고요. 그 대신에 x, y, z는 솔직히 말해서 다 전개했는데 a의 5제곱, 

<Sync Start=2703089><P Class=KRCC>
이렇게 될 수도 있으니까 다른 지수는 0이 될 수도 있어요, 그 경우는. 그러니까 0 이상이 다 되는 것이지요. 5, 0, 0, 이런 것도 된다는 것이에요, 쉽게 말하면. 결국에는 이렇게 되는 0 이상의 정수 순서쌍이 되는 것이지요. 

<Sync Start=2719963><P Class=KRCC>
맞아요. 그래서 3H5야. 이렇게 바로 가시면 돼요. 어렵지 않으시지요? 그래서 이렇게 보면 무엇이지? 하다가 이것을 이렇게 바꿔치기하면 이것 이렇게 정수 순서쌍. 음이 아닌 정수 순서쌍. 

<Sync Start=2734166><P Class=KRCC>
워낙 이런 식으로 문제가 수능특강이나 이런 데서도 많이 응용해서 나왔었고 잘 알아두실 필요가 있습니다. 이것도 마찬가지입니다. 이때는 이것을 전개하고 그때마다 뒤엣것을 전개하는 것이니까 

<Sync Start=2747116><P Class=KRCC>
각각에 해당되는 것을 개수를 구해서 그때마다 벌어지는 것이니까 곱하시면 돼요. 그렇다면 이때는 더해서 a, b, c의 지수를 역시 x, y, z라고 한다면 2개를 더해서 

<Sync Start=2760688><P Class=KRCC>
여기 x, y가 있네요. 그러면 겹치니까 a′＋b′＋c′로 할게요, 피치 못하게. 그러면 4라고 하고 0 이상의 정수라고 하고 푸시면 3H4고요. 이때도 마찬가지지요? x′＋y′가 이것의 지수라고 한다면 

<Sync Start=2776179><P Class=KRCC>
x′, y′를 더한 것이 3이 되는 것이지요. 그리고 역시 0 이상의 정수라고 한다면 2H3이라고 하실 수가 있겠지요. 이때마다 이것이 반복적으로 일어나는 것이니까 둘을 곱해 주시면 됩니다. 

<Sync Start=2789792><P Class=KRCC>
따라서 6C2가 되고요. 4C, 3이니까 1이 되겠지요. 3×5 = 15, ×4 = 60가지. 그래서 정답은 60가지, 이렇게 하시면 되고 이것은 정답 정리하시면 21가지겠네요, 7C2니까. 

<Sync Start=2805930><P Class=KRCC>
이렇게 해서 정리해 주시면 되겠습니다. 이것이 중복조합을 활용해서 다른 문제들에 적용해가는 것들인데요. 굉장히 중요하고도 좋은 예제입니다. 너무 기본 예제이기는 하지만 
<Sync Start=2817254><P Class=KRCC>
&nbsp;

<Sync Start=2818329><P Class=KRCC>
마지막 내용은 제가 간결하게 소개만 하고 다음 시간에 조금 더 연결해서 볼 것인데요. REMARK 여섯 번째입니다. 중복순열과 중복조합을 결정적으로 사실 여러분, 알아요. 

<Sync Start=2828625><P Class=KRCC>
그런데 제가 그냥 한마디로 비교해드리는 것과 안 해드리는 것이 느낌이 달라서 중복순열은 이미 배웠어요. 서로 다른 몇 개 중에서 중복을 허락해서 선택하고 나열까지 하는 방법이고요. 

<Sync Start=2842580><P Class=KRCC>
중복조합은 서로 다른 몇 개 중에서 중복을 허락해서 선택만 하는 경우라는 것. 그 초점이 다르다는 것. 여러분, 이미 알고 있습니다. 그래서 이것을 표현하는 예제가 바로 11번입니다. 

<Sync Start=2857808><P Class=KRCC>
기권자나 무효표가 없이 기명 투표로 10명의 유권자가 3명의 후보자에게 투표해서 한 명을 선출할 때 나타나는 득표 결과의 모든 경우의 수래요. 이것이 다음 시간에 중복조합의 분배 유형을 배우면 

<Sync Start=2874562><P Class=KRCC>
조금 더 수월하게 이것이 와닿을 수는 있는데요. 지금은 아직 배우기 전이기는 합니다만 둘을 비교한다는 차원에서 그냥 보도록 할게요. 유권자가 3명이니까 유권자를 a, b, c라고 sorry. 

<Sync Start=2887480><P Class=KRCC>
후보자가 3명이니까 후보자를 A, B, C라고 한다면 유권자는 10명이거든요? 그러니까 10명이 A, B, C의 후보 중에 누구한테 갈지 몰라요. 그러니까 모조리 A로 다 갈 수도 있고요. 

<Sync Start=2900487><P Class=KRCC>
A, B, 이런 식으로 갔다가 C와 섞일 수도 있고요. 이해되시지요? 그러니까 서로 다른 3개 중에서 중복을 허락해서 10개를 뽑는 것이에요. 그런데 중요한 것은 A 하나, B 다 했을 때 

<Sync Start=2916613><P Class=KRCC>
순서가 달라요. B를다 하고 마지막 사람이 A를 뽑는 것과 첫 번째 사람이 A를 뽑는 것은 다르지요? 맞아요. 왜냐하면 기명 투표니까 기명은 이름을 쓰는 것이거든요. 그래서 이것은 중복순열이 돼요. 3π10. 

<Sync Start=2932466><P Class=KRCC>
그러나 이 경우는 무기명이기 때문에 이름을 안 쓰지요. 그래서 이때는 3H10이 되는 것입니다. 아시겠지요? 그래서 이것을 비교해서 하는 것이 마지막 내용이었는데 다음 시간에 조금 더 연결해서 보실 수 있습니다. 

<Sync Start=2945343><P Class=KRCC>
오늘 수업 여기까지 하겠습니다. 복습 잘하시고요. 우리는 다음 시간에 뵐게요. 
<Sync Start=2949417><P Class=KRCC>
&nbsp;
</BODY>
</SAMI>