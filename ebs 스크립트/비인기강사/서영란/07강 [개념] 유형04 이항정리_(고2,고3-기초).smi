<SAMI>
<HEAD>
<TITLE>(주)기록법인상생 자막 2019</TITLE>
<STYLE TYPE="text/css">
<!--
P { margin-left:8pt; margin-right:8pt; margin-bottom:2pt;
    margin-top:2pt; font-size:12pt; text-align:left;
    font-family:굴림, Arial; font-weight:normal; color:white;
    background-color:#405A8D; }
.KRCC { Name:한국어; lang:ko-KR; SAMIType:CC; }
#STDPrn { Name:Standard Print; }
#LargePrn { Name:Large Print; font-size:20pt; }
#SmallPrn { Name:Small Print; font-size:10pt; }
-->
</STYLE>
</HEAD>
<BODY>
<SYNC Start=10122><P Class=KRCC>
여러분들의 눈높이에서 개념부터 문제 해결에 이르는 길까지 차근차근 짚어드리도록 하겠습니다. EBS 수학 영역의 서영란입니다.
<SYNC Start=20011><P Class=KRCC>
우리 지난 시간까지는 중복조합에 대해서 살펴봤는데요. 확률과 통계 파트에서 조합에 해당되는 내용이 하나가 더 있습니다. 바로 이항정리에 대한 내용입니다.
<SYNC Start=32214><P Class=KRCC>
이제 고등수학(하)에서 조합에서 배운 내용은 그냥 조합 내부에서 끝났는데요. 우리는 지난 시간에 이어서 중복조합을 배우고요. 확률과 통계에서는 또 하나를 더 배워요.
<SYNC Start=42388><P Class=KRCC>
바로 이항정리에 대한 내용입니다. 드디어 네 번째 유형인데요. 그 이항정리라는 게 도대체 어떤 내용의 정리인지 살펴보도록 하겠습니다.
<SYNC Start=52607><P Class=KRCC>
우선 이항정리를 알아보기 위해서는 조합에서 배웠던 내용들 일부를 알고 가셔야 돼요. 그래서 미리 알아야 할 개념에 조합의 수에 대한 2가지 성질들에 대해서 먼저 설명을 하도록 하겠습니다.
<SYNC Start=64871><P Class=KRCC>
첫 번째는 nCr이 nCn-r과 동일하다는 내용이에요. 일단 직관적으로 봤을 때도 5개 중에 2개를 뽑게 되면 3개가 남죠.
<SYNC Start=76716><P Class=KRCC>
그러면 5개 중에 2개를 뽑은 거나 5개 중에 3개를 뽑은 거나 상황은 같을 거란 말이에요. 그래서 nCr은 n개 중에서 r개를 선택해서 뽑은 건
<SYNC Start=87538><P Class=KRCC>
n개에서 그 나머지인 n-r개를 뽑는 것과 동일하게 됩니다. 그다음 두 번째로는 nCr이 이렇게 표현된다는 성질이 하나 더 있는데요. 얘는 그러면 어떻게 성질을 설명할 수 있느냐면
<SYNC Start=102501><P Class=KRCC>
지금 보시면 합의 법칙으로 쓰여 있어요. 결국 nCr을 어떤 동시에 일어나지 않는 두 사건으로 분류했다는 이야기입니다.
<SYNC Start=111047><P Class=KRCC>
그래서 이렇게 생각하시면 돼요. 서로 다른 n개 중에서 r개를 선택한 걸 볼 건데, 어떤 상황으로 보겠다? 특정한 것을 반드시 포함한 경우.
<SYNC Start=121614><P Class=KRCC>
특정한 하나를 반드시 포함한 경우가 있고요. 그 특정한 하나를 반드시 포함하지 않는 경우가 있을 거예요. 특정한 하나를
<SYNC Start=141067><P Class=KRCC>
&nbsp;
<SYNC Start=142812><P Class=KRCC>
포함하지 않는 경우. 그러면 두 사건은 동시에 일어날까요, 일어나지 않을까요? 당연히 동시에 일어날 수가 없겠죠. 하나는 포함된 거고 하나는 포함되지 않은 것이기 때문에.
<SYNC Start=153542><P Class=KRCC>
그래서 중간에 합의 법칙을 쓰면 될 텐데, 특정한 하나를 반드시 포함했다는 건 무슨 얘기냐면 서로 다른 n개가 있는데 그 1명은 이미 들어간 거예요.
<SYNC Start=162914><P Class=KRCC>
그러면 남아 있는 n-1개 중에서 그 사람은 이미 뽑혔으니까, 원래는 r개를 뽑으려고 했으니까 그 사람을 제외한 r-1개만큼만 뽑아오면 되겠죠.
<SYNC Start=176596><P Class=KRCC>
한편, 특정한 하나를 뽑지 않는다고 합니다. 그러면 남아 있는 사람들로만 다 구성하면 되는 거죠. 그 사람이 없다고 취급하면 되기 때문에.
<SYNC Start=186284><P Class=KRCC>
그래서 서로 다른 n개 중에서 r개를 뽑는 경우의 수는 어떤 특정한 하나를 반드시 포함하고 계산하는 경우의 수. 특정한 하나를 절대로 포함하지 않는 경우의 수 2개를 합해 주시면
<SYNC Start=201414><P Class=KRCC>
조합의 수를 또 구할 수 있게 됩니다. 그래서 첫 번째, 그리고 이 두 번째 것들을 굉장히 많이 활용하기 때문에 꼭 기억해 두셔야 되겠습니다.
<SYNC Start=212856><P Class=KRCC>
그래서 이제 이 조합하고 관련된 2가지 성질을 바탕으로 이항정리에 대한 안내를 시작하도록 하겠습니다. 이항정리, 자연수 n에 대해서 (a+b)ⁿ은 이런 식으로 표현된다고 하네요.
<SYNC Start=227600><P Class=KRCC>
이름에서 미루어 짐작하건대, 얘는 정리예요, 여러분. 피타고라스의 정리처럼 어떤 특정한 정리인데, 이항. 항 2개짜리에 대한 정리라는 뜻입니다.
<SYNC Start=238293><P Class=KRCC>
지금 보시면 항이 2개죠. a와 b, 항이 2개짜리가 있는데 얘를 n번 제곱했을 때 나와 있는 것에 대한 정리가 되겠습니다.
<SYNC Start=247201><P Class=KRCC>
그래서 이 2개짜리의 항으로 이루어진 식을 전개를 했을 때, 이 전개된 결과에 대한 정리가 바로 이항정리예요. 그러면 (a+b)³을 한번 전개해 보도록 할게요.
<SYNC Start=259594><P Class=KRCC>
(a+b)³은 지난 시간에 중복조합에서 했던 것처럼 전개를 하면 되는데, 얘는 계산을 해 본 결과 a³+3a²b+3ab²+b³이 나옵니다.
<SYNC Start=275909><P Class=KRCC>
항의 종류의 수를 구하는 것은 중복조합의 관점에서 서로 다른 2개 중에서 3개를 중복을 허용해서 선택만 하면 됐어요. 그런데 우리는 이제 뭐에 관심을 가질 거냐면
<SYNC Start=286163><P Class=KRCC>
이 계수들에 대해서 관심을 가질 거예요. 계수, 계수, 계수, 계수. 그래서 이 계수까지도 정확하게 정보를 알려주는 정리가 바로 이항정리가 되겠습니다.
<SYNC Start=298441><P Class=KRCC>
그러면 이 계수들은 도대체 어떻게 나왔을까? 어떻게 나왔는지에 대한 설명을 할게요. 서로 다른 2개 중에서 a를 3번 뽑는 경우의 수가 지금 1가지라는 겁니다.
<SYNC Start=310282><P Class=KRCC>
그래서 서로 다른 3가지 중에서 a가 3번 뽑히면. 3번 뽑을 거잖아요. 총 뽑는 횟수가 3인데. 총 뽑는 횟수가.
<SYNC Start=321496><P Class=KRCC>
&nbsp;
<SYNC Start=324993><P Class=KRCC>
3인데, 그중에서 a가 3번 뽑히면 당연히 b는 안 뽑히겠죠. 그래서 저는 b를 뽑는 걸 기준으로 해서 세어 볼게요. 어떻게 한다고요?
<SYNC Start=333801><P Class=KRCC>
b를 뽑는 걸 기준으로 셉니다. 총 3번 중에서 b가 안 뽑혔다는 거예요, 1이라는 것은. 그래서 3C0a³. 얘는 b가 안 뽑혔다. 그러니까 a가 3번 뽑혔지.
<SYNC Start=347376><P Class=KRCC>
그다음 얘는 총 b를 1번 뽑았어요. 지금 b가 1번 들어가 있잖아요. 총 3번 뽑는데, b를 하나 뽑았어. 그래서 이 3이 3C1과 일치하는 거예요.
<SYNC Start=358515><P Class=KRCC>
그러면 당연히 a는 덜 뽑혔을 테니까 제곱에 b가 되겠죠. 그다음 여기도 마찬가지죠. b가 총 2번 뽑혔어요. 총 몇 번 중에서? 총 뽑는 횟수 3번 중에서.
<SYNC Start=370238><P Class=KRCC>
3번 중에 b가 2번 뽑혔어요. 그래서 b가 2번 뽑힌 부분이 계수가 될 거고요. 이때는 b가 2번 뽑혔으니까 a가 1번, b가 2번 나올 거예요.
<SYNC Start=380897><P Class=KRCC>
그다음 맨 마지막, b가 총 3번 중에서 3번 다 뽑혔죠. 그러면 당연히 a는 안 뽑혔을 테니까 없을 거고요. b가 총 3번이 있겠네요.
<SYNC Start=389831><P Class=KRCC>
그래서 이렇게 계수들을 정해 주실 수가 있습니다. 뽑는 횟수에서 둘 중에 하나, 아무렇게나 기준을 정하셔도 돼요. 저는 지금 현재 b를 기준으로 해서 b가 안 뽑힌 경우, b가 1번 뽑힌 경우.
<SYNC Start=403212><P Class=KRCC>
b가 2번 뽑힌 경우, b가 3번 다 뽑힌 경우로 나눠서 설명을 했는데, 여러분들은 a를 기준으로 해도 상관없어요. a를 기준으로 하게 되면 어떻게 되느냐.
<SYNC Start=413502><P Class=KRCC>
총 3번 중에 a가 3번 뽑혔어요. 3C3으로 보면 되죠. 총 3번 중에 a가 2번 뽑혔어요. 3C2로 보면 될 거예요. 총 3번 중에 a가 1번 뽑혔어요. 3C1로 볼 수 있겠죠.
<SYNC Start=425780><P Class=KRCC>
그다음 총 3번 중에 a가 안 뽑혔어요. 3C0으로 볼 수 있을 거예요. 결과는 어떤가요? 똑같죠. 3C0은 3C3과 같습니다. 바로 직전에 설명해 드린, 미리 알아야 할 개념에서 배웠죠.
<SYNC Start=438080><P Class=KRCC>
3C1은 3C2와 같고, 3C2는 3C1과 같고 3C3은 3C0하고 같으니까 둘 중에 항을 어떤 걸 기준으로 삼든 결과는 같습니다.
<SYNC Start=449109><P Class=KRCC>
그래서 이항정리를 정리해 보면 이래요. 2개의 항 중에서, 얘는 지금 b를 기준으로 정했습니다. b를 n번 중에서 안 뽑았어. 그러니까 b가 없는 거예요.
<SYNC Start=459314><P Class=KRCC>
그다음 b를 n번 중에서 1번 뽑았어. 그러니까 b가 있고, a는 횟수가 하나 더 줄겠죠. b를 뽑았으니까. 그다음 얘는 b를 2번 뽑았어요.
<SYNC Start=469020><P Class=KRCC>
그러면 총 n개 중에서 2개를 뽑는데, b를 2개 뽑는 순간 a의 뽑는 횟수는 그만큼 줄어들어요. 뽑는 횟수의 총합이 n이어야 되기 때문에.
<SYNC Start=477554><P Class=KRCC>
그래서 a의 n-2제곱이 될 거고요. 그다음 b를 몽땅 다 뽑은 경우는 a가 안 들어가겠죠. 그래서 이것들을 쭈르륵 나열하면
<SYNC Start=486673><P Class=KRCC>
이 2개의 항으로 이루어진 거듭제곱의 식을 정확하게 계산하실 수 있습니다. 이렇게 전개를 하실 수가 있어요. 그렇게 첫 번째 문제에 대한 답은 ‘전개하시오.’, 이렇게 계산이 되겠습니다.
<SYNC Start=500277><P Class=KRCC>
그러면 두 번째 문제는 여러분들이 직접 계산하지 않고 이항정리를 활용하면 좀 더 쉽게 계산할 수 있겠죠. 그래서 두 번째 식을 전개하는 과정을 이항정리를 통해서 보여 드리도록 하겠습니다.
<SYNC Start=513357><P Class=KRCC>
b를 기준으로 할게요. 그래서 총 4번을 뽑는데, 4번 중에서 b를 안 뽑는 경우가 있을 거예요. 그러면 a 4번 다 나오겠죠.
<SYNC Start=523665><P Class=KRCC>
총 4번 중에서 b를 1번 뽑을 거예요. 그러면 4번 중에 1번 뽑으면, b를 하나 뽑은 만큼 a는 개수가 줄겠죠. 그래서 a는 3제곱, b 1번.
<SYNC Start=533992><P Class=KRCC>
그다음 총 4번 중에서 b를 2번 뽑습니다. 그러면 a의 횟수는 줄어들 거고 b의 횟수는 한 칸 더 늘어날 거예요. 그다음 총 4번 중에서 b를 3번 뽑아요.
<SYNC Start=544365><P Class=KRCC>
그러면 a 하나, 그다음 b는 3개가 생길 거고요. 맨 마지막, 총 4번 중에서 4번의 b를 다 뽑아요. 그러면 당연히 a는 안 뽑히겠죠.
<SYNC Start=553508><P Class=KRCC>
그래서 결론을 이렇게 정리하면 이렇습니다. 그런데 전개한 식을 구체적으로 쓰라고 했으니까 4C0=1, 4C1=4, 4C2는 얼마죠? 6이죠.
<SYNC Start=565667><P Class=KRCC>
그다음에 4C3도 4, 그다음 4C4=1이구나. 그래서 이렇게 전개를 해 주시면 되겠습니다. 그래서 이항정리라는 건 이렇게 2개의 항으로 이루어진 거듭제곱 형태를 전개할 수 있다.
<SYNC Start=579754><P Class=KRCC>
그걸 전개할 수 있게끔 보여 주는 정리라고 생각하시면 되고요. 이때 지금 제가 각각 구한 이러한 계수들을 우리가 수학 용어로 뭐라고 부르느냐면
<SYNC Start=589579><P Class=KRCC>
이항정리를 통해서 나온 계수라고 해서 이항계수라고 부르게 됩니다. 그래서 이항계수라는 내용을 또 알고 계시면 좋고, 이 이항계수들 중에서도 r번째 항.
<SYNC Start=603993><P Class=KRCC>
가장 일반적인 항을 일반항이라고 불러요. 그래서 여기에 해당하는 r번째 항은 분명히 nCr에 a의 n-r에 b의 r제곱일 텐데, 이것을 이항정리의 일반항이라고도 부르게 됩니다.
<SYNC Start=620184><P Class=KRCC>
그래서 3가지를 배웠어요. 이항정리. 이항정리를 통해서 나온 계수들, 이항계수. 그리고 걔네들 중에 가장 일반적인 r번째 항을 일반항이라고 부르게 됩니다.
<SYNC Start=633489><P Class=KRCC>
그러면 이제 이 내용들을 통해서 여러분들하고 같이 예제를 해결해 보도록 할게요. 다항식의 전개식에서 x⁴의 계수가 280일 때 x의 5제곱의 계수를 물어봤어요.
<SYNC Start=648972><P Class=KRCC>
그러면 이항정리를 통해서 일단 전개를 쑥 다 하면 되겠죠. 그래서 이항정리를 바로 써볼게요. (x+b)의 7제곱이다. 저는 b를 기준으로 한번 해 볼게요.
<SYNC Start=661014><P Class=KRCC>
그러면 7개 중에 b가 안 뽑힌 경우는 x가 7번 다 나오겠죠. 그다음에 7번 중에 1번 뽑았어요. 그러면 x는 하나 줄 거고요. b는 하나 늘어나겠죠.
<SYNC Start=673863><P Class=KRCC>
7번 중에 b를 2번 뽑습니다. 그러면 x는 5번일 거고요. b는 2번이겠죠. 그다음에 7번 중에 3번을 뽑습니다. 그러면 x는 4번일 거고요. b는 3번일 거예요.
<SYNC Start=688260><P Class=KRCC>
7번 중에 4번, x는 뭐죠? 3개죠. 그리고 b는요? 4개일 거예요. 그다음에 더 이상 지금 제가 할 필요는 없을 것 같네요. 왜? 왜 안 해도 될까요?
<SYNC Start=701025><P Class=KRCC>
문제의 조건은 다 찾았어요. x⁴의 계수가 280이래요. 그러면 x⁴의 계수가 현재 이거죠. 그래서 x⁴의 계수에 해당하는 7C3에다가 얼마?
<SYNC Start=714188><P Class=KRCC>
b³을 곱한 게 280이구나라는 사실을 알 수가 있어요. 이것을 활용해서 뭘 찾으면 돼요? x의 5제곱의 계수를 찾으시면 되는데, x의 5제곱의 계수도 이미 알고 있어요. 뭔가요?
<SYNC Start=728131><P Class=KRCC>
b²에다가 7C2를 곱한 값을 찾으시면 돼요. 이걸 가지고 7C2×b²을 찾으면 되겠구나라고 생각하시면 되겠네요. 그러면 여기에서 계산해서 b값을 찾아서 여기에 대입만 해 주면 답이 나올 겁니다.
<SYNC Start=743747><P Class=KRCC>
그래서 저 초록색으로 된 식을 먼저 계산하도록 할게요. 7C3은 7×6×5를 3×2×1로 나눈 값이고요. 거기다가 b³을 한 게 280이래요. 계산을 하면 3, 2 나누고 6으로 나누면 7×5가 남아 있는 상황.
<SYNC Start=762486><P Class=KRCC>
7도 한번 나눠 볼게요. 7도 한번 여기에서 나눠 보면, 7 나누고 여기 7×4=28이니까 40이 남을 거고요. 5도 나눌게요. 그러면 8 남네요. b³이 뭐구나?
<SYNC Start=774464><P Class=KRCC>
8이라는 사실을 알 수가 있어요. 그러면 사실은 삼차방정식이긴 한데, b³-8=0. 그래서 이걸 인수분해까지 해 가지고 계산을 해 주시면 이렇게 정리가 될 겁니다.
<SYNC Start=788259><P Class=KRCC>
그런데 얘는 판별식 D가 0보다 작죠. 따라서 b값은 얼마예요? 2가 된다는 사실을 알 수 있어요. 그러면 끝났네요. 이 b=2를 여기에 대입해 주면 답을 구하실 수 있겠습니다.
<SYNC Start=800948><P Class=KRCC>
그러면 7C2는 얼마냐. 7×6을 2×1로 나눈 값. 그런데 b가 2인데, 2×2=4죠. 그래서 계산 마무리를 해 주시면 되겠습니다.
<SYNC Start=812613><P Class=KRCC>
그래서 21에다가 4를 곱했으니까 문제에 대한 정답은 84가 정답이 되겠습니다. 그래서 이항계수에 대한 문제들을 물어보는 문항들이 대표 유형이에요.
<SYNC Start=826192><P Class=KRCC>
그래서 이항정리가 나왔다. 그러면 계수에 대한 정보를 물어보는 문제들이 계속해서 나올 거니까 그 점을 꼭 유의해 주시기 바라겠습니다.
<SYNC Start=835392><P Class=KRCC>
그다음에 이제 여러분들하고 이항정리에 대해서 알아봤는데, 이항정리의 활용에 대해서도 한번 알아볼게요.
<SYNC Start=844606><P Class=KRCC>
얘네들은 이렇게 계수를 찾는 거 말고 어떤 내용이 또 나오느냐. 활용입니다. 첫 번째, 이항계수의 성질 중에서 이런 내용이 하나 나와요.
<SYNC Start=854666><P Class=KRCC>
그러면 여러분들은 이걸 보고 막 암기하려고 하는데, 이것을 암기하기보다는 그냥 이항정리를 그대로 쓰시면 돼요. 한번 그대로 쓸게요.
<SYNC Start=863293><P Class=KRCC>
이항정리는 항 2개짜리 정리예요. 그래서 여러분, 아까 b를 기준으로 했잖아요. b 기준으로 또 해 볼게요. b 안 들어간 경우, a가 많이 나오죠. 그렇죠?
<SYNC Start=873974><P Class=KRCC>
n, 그다음 b가 지금 1번 들어간 경우는 a는 하나 줄고 b는 한번 나올 거예요. n이에요, n. 그다음에 nC2면 b가 2번 나온 거니까 a는 그만큼 덜 나올 거예요.
<SYNC Start=889187><P Class=KRCC>
그다음에 nC3이면 b는 3번 나오니까 a도 그만큼 덜 나올 거고요. 쭉 가서 어떻게 되겠느냐. 맨 마지막에 b n번에 몰빵이 될 거다. 이렇게 되겠죠.
<SYNC Start=901661><P Class=KRCC>
그러면 나는 이 식을 보고 얘를 한번 비교해 보는 거예요. 얘는 똑같이 나오려면 어떻게 해야 되지? a에다가 얼마를 대입하고? 1을 대입하고 b에도 1 대입하자.
<SYNC Start=912623><P Class=KRCC>
그래서 이 식에다가 a=b=1을 대입해 보세요. 대입하면 어떤 결과가 나오느냐. 1+1=2니까 2ⁿ이구나. 그게 nC0, nC1, nC2, nC3, nCn을 다 더한 게 나오는구나.
<SYNC Start=932201><P Class=KRCC>
그래서 지금 여기 이항정리의 활용이라고 쓰긴 했는데요. 여러분들이 이항정리 내용만 알고 있으면 이렇게 식을 손쉽게 유도하실 수가 있어요.
<SYNC Start=942548><P Class=KRCC>
그래서 nC0부터 nCn까지 모두 다 더하면 2ⁿ이 나오는구나라는 사실도 알 수 있고요. 또 하나 더 추가로 얘기해 드리자면, 여러분이 2ⁿ은 어디에서 많이 보지 않았나요?
<SYNC Start=955645><P Class=KRCC>
부분집합의 개수. 그래서 부분집합 개수가 2ⁿ이 되는데, 그 내용도 이걸 통해서 알 수 있어요. 원소의 개수가 n인 집합의 부분집합의 개수인데, 부분집합은 공집합인 것.
<SYNC Start=971654><P Class=KRCC>
원소 하나짜리인 것, 원소 2개짜리인 것. 그래서 원소 n개짜리인 것까지 해서 다 뽑은 거죠. 그래서 이걸 통해서 우리는 이항정리에서 이 내용도 알 수 있는데
<SYNC Start=980907><P Class=KRCC>
이 내용은 결국 부분집합의 개수였는데, 그 의미도 다 알겠다고 생각해 볼 수가 있겠습니다.
<SYNC Start=987646><P Class=KRCC>
그래서 여러분들하고 같이 첫 번째 이항정리의 활용, 2ⁿ이랑 nC0부터 nCn까지 쭉 다 합한 것이 같다는 걸 알았어요.
<SYNC Start=997508><P Class=KRCC>
이제 이거랑 관련된 예제를 같이 한번 풀어볼게요. 이항계수의 성질, 50 이하의 자연수 중에서
<SYNC Start=1007920><P Class=KRCC>
nC1, nC2, 땡땡땡, nCn까지 다 더한 게 3의 배수가 되도록 하는 n의 개수를 구하시오라는 문제입니다. 모의고사 문제인데요. 얘는 어떻게 풀면 되느냐면, 분명히 우리는 알아요.
<SYNC Start=1019915><P Class=KRCC>
nC0부터 nCn까지 모두 다 더하면 2ⁿ이라는 걸 알아요. 그런데 문제에서는, 지금 잘 보셔야 돼요. 눈을 크게 뜨고 보면, 첫 출발이 nC0이 아니라 nC1이 되는 걸 알 수 있어요.
<SYNC Start=1033645><P Class=KRCC>
그리고 끝나는 지점은 지금 현재 nCn으로 동일하네요. 그러면 문제를 어떻게 풀어야 되느냐. 지금 주어져 있는 nC1부터 nCn까지 모두 다 더한 것은
<SYNC Start=1048308><P Class=KRCC>
내가 알고 있는 2ⁿ에서 무엇을 뺀다? nC0을 뺐구나라고 생각을 해 주셔야 돼요. 그러니까 속으면 안 된다는 거죠. 그러면 nC0=1이니까 2ⁿ-1이 될 거고요.
<SYNC Start=1061608><P Class=KRCC>
2ⁿ-1이 몇 배수가 되도록? 3배수가 되도록 하는 n의 값을 찾아주면 되는데, 이 n이 어떤 애래요? 50 이하의 자연수 n이래요.
<SYNC Start=1073395><P Class=KRCC>
그러면 장인의 손으로 한 땀, 한 땀 숫자를 대입해서 풀어주기만 하면 돼요. 그래서 수를 한 번씩 대입해 볼게요. n=1일 때 2-1=1. n=2일 때 4-1=3.
<SYNC Start=1086304><P Class=KRCC>
n=3일 때 8-1=7. n=4일 때 16-1=15. 계속 해 볼 건데, 느낌이 이제 오지 않습니까? 3배수, 3배수. 언제? 짝수일 때라는 사실을 알 수가 있어요.
<SYNC Start=1103299><P Class=KRCC>
얘가 지금 현재 2²-1, 얘가 2⁴-1이니까요. 그러면 50 이하의 자연수에서 짝수의 개수는 그냥 2로 나누면 되겠죠. 총 얼마다?
<SYNC Start=1113881><P Class=KRCC>
25구나. 따라서 이 문제에 대한 정답은 25가지가 되는 것을 알 수가 있습니다. 이제 남은 2가지, 3가지, 4가지. 네 번째 성질까지 한번 보여 드리도록 하겠습니다.
<SYNC Start=1126092><P Class=KRCC>
첫 번째는 아까와 달리 플러스, 마이너스가 반복되는 구조가 있어요. 아까는 그냥 쭉 플러스였죠? 이번에는 마이너스, 플러스, 여기가 마이너스거든요.
<SYNC Start=1136728><P Class=KRCC>
마이너스, 플러스 이렇게 왔다 갔다 하게 되는데, 이제 어떻게 되는지를 보여 드릴게요. 이 경우는 이제 여러분들이 처음에 똑같습니다.
<SYNC Start=1145251><P Class=KRCC>
이항정리를 먼저 생각을 해 주세요. 처음에 똑같이 이항정리를 생각해서, (a+b)ⁿ은 이항정리로써 어떻게 전개되는지 한번 따져볼게요.
<SYNC Start=1156826><P Class=KRCC>
똑같아요, b가 없을 때. 그래서 b가 없을 때는 a가 전체 다 n개만큼 있겠죠. 그다음에 b가 하나 있을 때는 a가 하나 더 줄고, 그다음에 b가 하나 더 있을 거고요.
<SYNC Start=1171023><P Class=KRCC>
b가 2개 있을 때는 a가 2개 더 줄고 b가 2개 추가됐을 거예요. 그래서 쭈르륵 가 가지고 마지막 nCn에서는 b가 n개만큼 있을 거랍니다.
<SYNC Start=1183692><P Class=KRCC>
일단 쓰세요. 쓰고 나서 이제 여기에다가 얼마를 대입하면 무슨 일이 일어날지를 생각해 보는 거예요. 지금 보니까 nC0은 그대로 남아있어야 되니까, a에다가 얼마를 대입해 줄까요?
<SYNC Start=1195930><P Class=KRCC>
1 대입해 줄게요. 그래서 a에는 1을 대입하겠습니다. 그러고 나서 이제 b한테 뭘 대입할지 봤더니, 지금 마이너스, 플러스, 마이너스가 반복해서 나와야 되니까 b값에다가 -1을 대신 대입해 줄게요.
<SYNC Start=1210079><P Class=KRCC>
b=-1을 대입해 보세요. 그러면 어떤 식이 만들어질 거예요. a+b는 그러면 현재 0이니까 0ⁿ이죠. 그러면 0이에요, 그냥.
<SYNC Start=1221719><P Class=KRCC>
그러면 a=1이니까 nC0. a=1인데 b=-1이니까 -nC1. 그다음에 2죠. 그런데 a는 1이고 b는 -1이었으니까 -1의 제곱이니까 다시 플러스죠. 그래서 +nC2.
<SYNC Start=1238294><P Class=KRCC>
그래서 이렇게 왔다 갔다 하다가 b가 (-1)ⁿ이니까 (-1)ⁿnCn이 되겠죠. 증명이 끝났습니다. 지금 이 식이, 지금 제가 -1하고 1을 대입해서 나온 이 식이 결과적으로 뭐예요?
<SYNC Start=1255037><P Class=KRCC>
이 식이잖아요. 그래서 두 번째 식에 대한 내용도 증명이 끝났습니다. 그다음에 두 번째 식을 이용해서 세 번째 식도 알아낼 수 있을 것 같지 않습니까?
<SYNC Start=1265667><P Class=KRCC>
두 번째 식을 통해서 세 번째 식도 알아낼 수 있을 것 같은데, 우선 기존에 알고 있는 식 중에 뭐가 있었느냐면 nC0+nC1+nC2+…+nCn까지 모두 다 합한 게 2ⁿ이라는 걸 우리가 이미 배웠어요.
<SYNC Start=1283921><P Class=KRCC>
첫 번째 성질에 의해서. 그런데 방금 전에 배운 내용인 nC0-nC1+nC2- 쭉 가서 (-1)ⁿnCn을 한 게 0이라는 것도 배웠습니다.
<SYNC Start=1298719><P Class=KRCC>
그러면 내가 구하고자 하는 건 짝수들만 남겨야 되니까, 짝수들만 남길 수 있게 식을 조작하면 되겠죠. 어떻게 조작할 거냐.
<SYNC Start=1307970><P Class=KRCC>
짝수들만 남아 있게끔 두 식을 더할 거예요. 두 식을 어떻게 한다고요? 더할 거예요. 그러면 내가 원하는 애들만 남게 되는데, 2개씩 남네요.
<SYNC Start=1317936><P Class=KRCC>
2×nC0, 2×nC2. 이렇게 짝수들로만 구성돼 있는 게 2ⁿ이 남겠죠. 그런데 우리는 뭘 구할 거예요? 이 짝수들로만 쭉 더해진 걸 찾을 거니까 2로 나눠 버리면, 지수법칙에 의해서 얘는 어떻습니까?
<SYNC Start=1337620><P Class=KRCC>
2의 n-1제곱이 되겠죠. 그러면 증명이 끝났네요. 뭐라고요? 따라서 짝수들로만 몽땅 다 어떻게 한 거예요? 다 더한 건 2의 n-1제곱이겠구나라는 사실을 알 수 있습니다.
<SYNC Start=1353353><P Class=KRCC>
이게 바로 세 번째 성질이에요. 그러면 네 번째 성질은 뭐였느냐면, nC1부터 홀수로 되어 있는 것들도 다 똑같이 나온대요. 그러면 그게 왜 일어날까?
<SYNC Start=1363536><P Class=KRCC>
봤더니, 지금 이 두 식을 우리가 이 경우에는 더했잖아요. 이번에는 어떻게 해 볼 거냐면, 두 식을 빼볼게요. 두 식을 만약에 뺀다고 생각해 볼게요.
<SYNC Start=1375013><P Class=KRCC>
그러면 빼면 어떤 일이 벌어지느냐면, 똑같으니까 다 사라지죠. 그런데 똑같지 않은 것이 있어요. 플러스, 마이너스. 마이너스가 마이너스를 만나면 뭐로 변하죠?
<SYNC Start=1385162><P Class=KRCC>
플러스로 변하죠. 두 식을 빼면 2에 nC1+nC3, 홀수들로 되어 있는 것들이 다 나올 건데, 2ⁿ에다가 0을 뺀 거죠. 그러니까 2ⁿ. 그러니까 마찬가지 방식으로 2를 어떻게 해 주면?
<SYNC Start=1400363><P Class=KRCC>
나누어 주기만 하면, 얘도 마찬가지로 2의 n-1제곱이 나올 것 아닙니까? 따라서 홀수의 경우도 마찬가지로 nC1+nC3+…, 홀수인 걸 모두 다 더해 주면 뭐가 나온다?
<SYNC Start=1414944><P Class=KRCC>
마찬가지 방식으로 2의 n-1제곱이 나오는구나라는 사실을 알 수가 있어요. 그래서 이항정리를 활용해서 (2)번, (3)번, (4)번에 해당하는 내용까지 다 증명이 끝났습니다.
<SYNC Start=1428520><P Class=KRCC>
이제 이 내용들을 토대로 해 가지고 또 하나를 더 풀어보도록 할게요. 예제 3번입니다. nC0+nC2+nC4+nC6+nC8+nC10. 특징이 뭐예요?
<SYNC Start=1440242><P Class=KRCC>
전부 다 짝수들을 나열한 거죠. 그러면 여러분들은 이미 이걸 알고 있으면 바로 계산할 수 있어요. 이거 2의 10제곱인 줄 알았는데, 사실은 아니야. 왜?
<SYNC Start=1450661><P Class=KRCC>
짝수들로만 구성되어 있으니까 거기에서 하나를 빼줘야 돼. 그래서 2의 9제곱이 이 문제에 대한 정답이에요. 그래서 얼마다?
<SYNC Start=1458915><P Class=KRCC>
2의 10제곱이 1024거든요. 걔를 2로 나눈 것이기 때문에 512가 되겠습니다. 그래서 알면 바로 풀면 되고, 내가 모른다. 모른다 하더라도 걱정할 필요 없어요.
<SYNC Start=1470284><P Class=KRCC>
이항정리만 알면 문제는 다 풀 수 있거든요. 이항정리를 내가 알고 있다고 하면 일단 이항정리를 쓰는데, 10으로 시작하니까 10으로 쓰세요.
<SYNC Start=1479105><P Class=KRCC>
그러면 10개 중에 b가 지금 안 뽑힌 경우. 그러면 a의 10제곱. 10개 중에 b가 현재 하나 있는 경우니까 a의 9제곱에 b. 땡땡땡, 10개 중에 b가 10개가 있어. b의 10제곱.
<SYNC Start=1495490><P Class=KRCC>
이렇게 써놓고는 비교만 해 보시면 돼요. 그래서 어떻게 비교할 거냐면, 지금 현재 1로만 다 되어 있으니까 여기에 뭐 대입해 준다고요?
<SYNC Start=1502843><P Class=KRCC>
1을 대신 대입해 보시면 되겠습니다. 그래서 a에 1, b에 0. 대신 대입해 보면 여기 1, 여기 0. 0으로 하면 다 사라지는군요. 그래서 뭐로 해야 돼요?
<SYNC Start=1514032><P Class=KRCC>
1과 -1로 대신 대입해 보면, 여기가 0이 되죠. 그래서 0. 그러면 10C0. 그다음 얘는 어떻게 돼요? b가 하나 곱해져 있으니까 -10C1, 10C2. 왔다 갔다 하다가 -1의 10제곱이니까 플러스겠죠.
<SYNC Start=1532158><P Class=KRCC>
그래서 +10C10까지 올라오겠죠. 이번에는 어떻게 해 보면 돼요? 반대로 대입해 보면 돼요. 여기다가 -1 대입하고 여기에 1 대입해서 들어갈 수도 있고
<SYNC Start=1544327><P Class=KRCC>
그렇지 않고 하나의 방법을 또 쓸 수 있죠. 뭘 알고 있어요? 이미 알고 있는 게 하나 있는데, 그게 뭐냐면 2의 10제곱은 10C0부터 10C1, 10C2, 마지막 뭐까지?
<SYNC Start=1559165><P Class=KRCC>
10C10까지 다 더한다는 걸 알고 있어요. 그러면 내가 찾아야 되는 건 짝수니까, 이 두 식을 어떻게 하면 돼요? 두 식을 더해 주기만 하면 되죠.
<SYNC Start=1568169><P Class=KRCC>
그래서 두 식을 더할 거예요. 그러면 내가 찾고자 하는 이 값을 내가 A라고 할게요. 그러면 A가 나오네요. 그렇죠? 몇 배 한 걸로? 2배를 한 걸로.
<SYNC Start=1578081><P Class=KRCC>
2A는 2의 10제곱이니까, 따라서 A는 뭐다? 얘가 2의 9제곱이겠구나라고 해서 똑같이 구할 수 있게 됩니다. 그래서 이걸 다 외우려고 하지 마세요.
<SYNC Start=1590707><P Class=KRCC>
잘 모르겠으면 그냥 이항정리를 쓰고 적당한 숫자를 대입해 가지고 똑같이 찾아주시면 되겠습니다. 그래서 예제 3번 유형도 이렇게 같이 가봤습니다.
<SYNC Start=1605081><P Class=KRCC>
이제 그러면 이항정리와 관련해서 학생들이 가장 많이 하는 질문이 뭐냐면, 이름이 계속 반복되니까 이런 질문을 많이 받아요.
<SYNC Start=1613483><P Class=KRCC>
‘선생님, 우리가 이항정리를 배우는데 뒤에 분포에서 이항분포를 배워요. 얘네 둘이 무슨 관련이 있나요?’ 이런 질문을 많이 하는데, 정답은 뭐냐면 관련이 있어요.
<SYNC Start=1624177><P Class=KRCC>
이항정리를 뜬금없이 중복조합을 배우고 나서 배우는 이유 중 하나가 뭐냐면, 이항분포에서 우리가 평균과 분산을 계산할 때 이항정리를 활용합니다.
<SYNC Start=1634712><P Class=KRCC>
그래서 이항정리를 활용해 가지고 평균과 분산을 구하는데, 여러분들은 맨날 이항분포에 있는 np, npq를 맨날 외워서 쓰니까 이게 어떻게 활용되는지 기억이 잘 안 나실 거예요.
<SYNC Start=1645875><P Class=KRCC>
그런데 교과서를 천천히 뜯어보면 평균 np, 분산 npq가 나오는 과정 속에 이항정리를 활용해서 증명을 하고 있거든요. 그래서 여러분들이 나중에 교과서를 한번 쭉 보시면서
<SYNC Start=1657744><P Class=KRCC>
이항정리가 이항분포에서 이렇게 활용되는구나 정도까지 알고 계시면 좀 더 좋을 것 같습니다. 그래서 우리 한번 내신 유형으로 같이 가볼게요.
<SYNC Start=1670931><P Class=KRCC>
이항정리는 사실 문제가 그렇게 다양하지는 않아요. 전부 다 뭘 찾는 거냐면, 계수를 구하는 거예요. 그래서 이 문제는 굳이 분석을 하자면, 얘가 왜 이항정리를 쓰는 문제냐.
<SYNC Start=1684478><P Class=KRCC>
지금 항이 몇 개예요? 2개. 2개인데, 뭘 물어보고 있어요? 계수를 물어보고 있어요. 그러니까 분명히 얘는 이항정리를 써 가지고 뭘 쓰는 거다?
<SYNC Start=1696370><P Class=KRCC>
이항계수를 찾는 문제겠구나. 그러니까 당연히 피타고라스의 정리처럼 이항정리도 여러분 머릿속에 박혀 있어야 되는 거예요.
<SYNC Start=1706836><P Class=KRCC>
그래서 이항정리에 대한 내용을 써보면 문제를 풀 수 있겠죠. 접근, 뭘 알아야 돼요? 이항정리 내용을 알아야 되니까, 이항정리 내용을 그냥 접근법으로써 쓸게요.
<SYNC Start=1718924><P Class=KRCC>
b가 안 뽑힙니다. 그러면 a가 전부 다 n번 뽑힐 거예요. b가 하나 뽑힙니다. a가 하나 덜 뽑힐 거예요. b가 맨 마지막에 전부 다 뽑힌다. 그러면 a가 안 뽑히겠죠.
<SYNC Start=1733653><P Class=KRCC>
그래서 이항정리를 썼습니다. 이제 이걸 활용해서 얘를 찾을게요. 첫 번째 생각입니다. 이항정리를 활용해서 이 문제를 푼다면 어떻게 할 거냐.
<SYNC Start=1745243><P Class=KRCC>
일반항을 활용해서 문제를 풀어볼게요. 여기에서의 일반항은 누구냐면, 여기 r번째에 있는 항이어 가지고 nCr×a의 n-r제곱×b의 r제곱.
<SYNC Start=1756590><P Class=KRCC>
얘를 가장 일반적인 항이라고 해서 일반항이라고 칭하겠습니다. 그러면 첫 번째 생각에서 x⁴의 계수를 찾고 싶은데요. 얘도 똑같이 여기에 대입을 해서 그대로 생각을 해 보면
<SYNC Start=1769914><P Class=KRCC>
6번 중에 r번을 뽑을 건데, 2x²을 6-r번 뽑고 그다음에 x²분의1을 r번째 뽑았다. 그랬을 때 뭐라고요? 뭔지는 모르겠는 것에 x⁴의 이걸 찾아주면 되겠구나.
<SYNC Start=1788719><P Class=KRCC>
끝났죠. 그래서 일반항을 활용하시면, 여기 식을 좀 정리를 해 줘야겠다는 걸 알 수 있어요. 그래서 계산을 마무리 지어볼게요. 6Cr, 지수법칙에 의해서 2의 6-r제곱.
<SYNC Start=1802908><P Class=KRCC>
지수법칙에 의해서 x의 12-2r제곱. x²분의1은 얘는 x의 -2제곱으로 표현되거든요. 그래서 x의 -2r제곱.
<SYNC Start=1817596><P Class=KRCC>
그러면 지수법칙을 또 쓸 수 있어요. 지수, 곱하게 되면 밑이 같으면 곱했을 때 지수끼리 더하는 거죠. 그래서 12-2r에다가 -2r을 더해서 12-4r이 돼요.
<SYNC Start=1831922><P Class=KRCC>
그렇게 되면 이제 내가 x⁴을 찾아줘야 되니까, 이 부분이 뭐가 되면 돼요? 4가 되면 되겠죠. 그래서 12-4r=4니까 4r=8이 되어야겠죠. 그렇죠?
<SYNC Start=1843711><P Class=KRCC>
12에다가 8을 빼야 4가 나오니까. 따라서 r은 얼마다? 2라는 사실을 알 수가 있습니다. 그래서 이 네모에 들어갈 식은 6C2. 그다음 여기에 2 대입하면 2⁴이 되겠다는 사실을 알 수 있겠네요.
<SYNC Start=1859669><P Class=KRCC>
그래서 6C2는 얼마예요? 15. 2⁴은 16. 그래서 15×16을 해 보면, 얼마가 나오나요? 240이 나온다는 사실을 알 수 있겠네요.
<SYNC Start=1875410><P Class=KRCC>
그래서 이 네모에 들어갈 알맞은 답은 240이 정답이 되겠습니다. 이게 첫 번째 생각입니다. 이항정리의 일반항을 이용하는 방식.
<SYNC Start=1886428><P Class=KRCC>
그다음에 또 다른 방식도 있어요. 우리가 중복조합에서 배운 내용을 생각해 보면 너무나 쉽게 접근할 수 있는데, 지금 우리가 이 식에서 x⁴의 계수를 찾는 거잖아요.
<SYNC Start=1901465><P Class=KRCC>
그러면 어떻게 하면 쉽게 찾을 수 있느냐면, 총 몇 번 뽑을 거냐면 6번을 뽑을 거예요. 총 6번을 뽑아서 x⁴이 나오면 돼요. 그러면 생각해 봐요. 이제 하나씩 따져보는 거예요.
<SYNC Start=1913551><P Class=KRCC>
내가 얘를 1번 뽑으면, 그렇죠? 얘를 1번 뽑으면 얘는 몇 번 나와요? 5번 나오는 거예요. 그렇죠? 그런데 얘 1번 뽑고 얘 5번 뽑으면 x⁴ 나와요, 안 나와요?
<SYNC Start=1924489><P Class=KRCC>
안 나와요. 그러면 여기에 몇 번 뽑아볼까요? 여기에 한 3번 뽑고요. 그러면 여기는 6번 뽑아야 되니까, 여기도 3번 나와야 되겠죠.
<SYNC Start=1934645><P Class=KRCC>
그러면 x의 6제곱에 x의 6제곱분의1이니까 상수항 나올 거예요. 이 경우는 뭐가 나온다고요? 상수항. 그러면 당연히 여기에 있는 횟수를 좀 더 늘려줘야 얘가 나오겠죠.
<SYNC Start=1947691><P Class=KRCC>
그래서 얘를 이번에는 4번을 뽑고, 얘는 몇 번을 뽑을까요? 2번을 뽑아요. 그러면 잘 생각해 보세요. 얘를 4번 뽑으면 얘를 4번 곱할 거니까 x의 8제곱이 나올 거죠.
<SYNC Start=1959327><P Class=KRCC>
그러고 나서 얘는 뭐예요? x⁴분의1이 나올 거죠. 곱하면 x⁴ 나오겠죠. 끝났네. 이 경우가 되겠구나. 그래서 횟수를 따져보시면 좀 더 빠르게 구할 수 있어요. 그러면 2의 몇 제곱?
<SYNC Start=1971281><P Class=KRCC>
4제곱. 그런데 2⁴에서 끝나지 않죠. 6번 중에 4번을 뽑는 경우를 계산해 줘야겠죠. 앞에 뭐? 6C4가 붙어서 이 값이 이 문제에 대한 정답이 된다는 것을 알게 됩니다.
<SYNC Start=1985236><P Class=KRCC>
아까랑 계산 결과가 같죠. 6C4는 6C2와 동일하기 때문에 똑같은 계산 결과값인 240이 나올 거예요. 그래서 문제는 이렇게 2가지 방식으로 접근을 하실 수가 있다.
<SYNC Start=1999386><P Class=KRCC>
20 이하의 자연수 n에 대하여 f(n)값이 이렇게 주어져 있을 때 f(1)+f(3), f(3)+f(5), f(5)+ 하고서는 f(19)까지 더했을 때 2분의1-p라고 합니다.
<SYNC Start=2012236><P Class=KRCC>
지금 이 문제는 양수 p의 값을 구하는 문제인데요. 일단 그냥 딱 봤을 때 이 식 자체가 이항정리의 이항계수 부분에 해당하는 식 같이 딱 보이지 않습니까?
<SYNC Start=2023578><P Class=KRCC>
그것을 활용해서 문제를 해결할 거예요. 그래서 이 문제를 똑같이 같은 방식으로 분석을 하면, 이 식 자체가 이항정리에서 이항계수를 의미하는 식이었던 것 같다고 생각하시면 돼요.
<SYNC Start=2036787><P Class=KRCC>
그래서 어떻게 할 거다? 얘는 분명히 이항계수에 대한 문제일 것 같은데, 이항계수에 대한 뭔가의 합에 대한 문제겠다고 추론해 볼 수 있겠죠.
<SYNC Start=2046629><P Class=KRCC>
그러면 이렇게 분석이 끝났습니다. 그러면 여러분들은 어떻게 접근하시겠어요? 이항계수에 관련된 문제니까 이항정리를 활용하시면 되겠죠.
<SYNC Start=2056705><P Class=KRCC>
그래서 이항정리에 대한 내용을 한번 쭉 써볼게요. 어떤 정리였냐면, 2개의 항에 대한 정리. (a+b)ⁿ. b가 하나도 안 뽑혔어. 그러면 a가 n번.
<SYNC Start=2068104><P Class=KRCC>
b가 1번 뽑혔어. 그러면 a가 하나 양보했죠. 그다음에 b가 몇 번 뽑혔어요? 2번 뽑혔으면 a가 2개를 양보해야 하는 상황. 그래서 쭉 가서 어디까지?
<SYNC Start=2078884><P Class=KRCC>
nCnbⁿ까지 가는 정리였습니다. 그러면 이렇게 제가 이항정리의 내용을 썼는데요. 우선 여러분들이 이 식을 보시고 이 식이 나오게끔 뭔가 조작을 해 주셔야 돼요.
<SYNC Start=2092578><P Class=KRCC>
그런데 지금 얘는 혼자 한 덩어리로 있는 건데, 문제에서 물어보고자 하는 것은 이렇게 더해진 꼴이니까 여러분들은 뭘 해 주셔야 된다?
<SYNC Start=2100498><P Class=KRCC>
일단 이 더해진 꼴이 어떻게 생긴 식인지를 파악해야겠구나라고 생각하셔야겠죠. 그래서 1, 3, 5, 그리고 19까지 대입한 식을 한번 쭉 써볼게요.
<SYNC Start=2112122><P Class=KRCC>
그래서 문제에서 요구하는 f(1)+f(3)+f(5)+…+f(19)까지 있는 저 식을 한번 써보도록 하겠습니다. 그래서 홀수들을 쭉 다 나열하는 건데, f(19)까지 더해야 되는 상황이에요.
<SYNC Start=2129192><P Class=KRCC>
결과적으로 n에다가 1 대입하는 거니까 여기에 1, 1 대입할게요. 그러면 21C1(3분의1)(3분의2)의 20제곱이 되겠네요. 그다음 3 대입하면 어떻게 되느냐면 21C3(3분의1)³에 3분의2의 몇 제곱?
<SYNC Start=2148601><P Class=KRCC>
18제곱이 되겠네요. 그래서 5까지 가면 21C5에 (3분의1)의 5제곱(3분의2)의 16제곱이 될 겁니다. 그래서 19제곱까지 따지게 되면 21C19(3분의1)의 몇 제곱이에요?
<SYNC Start=2168415><P Class=KRCC>
19가 되면 19제곱에 (3분의2)의 21개여야 되니까 2제곱이 되겠죠. 그래서 우리가 구해야 되는 값은 지금 제가 흰색으로 쓴 이 식의 값이 될 거예요.
<SYNC Start=2179554><P Class=KRCC>
그러면 이항정리 식하고 한번 비교를 해 보겠습니다. 이 2개의 식을 비교해 보면, 앞이 21로 되어 있으니까 저 이항정리 식에서 n에다가 얼마를 대입할 거구나?
<SYNC Start=2191632><P Class=KRCC>
n에다가 21을 대입할 거구나라는 생각을 해 볼 수 있어요. 그다음에 지금 보니까 3분의1의 개수가 지금 늘어나고 있고요. 3분의2는 개수가 줄어들고 있죠.
<SYNC Start=2203556><P Class=KRCC>
그러면 여기에 뭘 대입할까 봤더니, 개수가 줄어드는 것에다가 3분의2를 대입하면 되겠죠. a에다가 3분의2를 대입하자.
<SYNC Start=2211937><P Class=KRCC>
그러면 개수 늘어나는 것에다가 3분의1 대입하면 되겠죠. b에다가 3분의1 대입을 하자. 그래서 이걸 대입한 식을 제가 오른쪽에 작성을 해 보도록 할게요. 뭐라고요?
<SYNC Start=2222707><P Class=KRCC>
n에다가 21을 대입하고요. a에다가 3분의2를 대입하고요. b에다가 3분의1을 대입한 이항정리 식을 다시 한번 써보도록 할게요. 그러면 어떻게 되느냐.
<SYNC Start=2234539><P Class=KRCC>
21이니까 21C0에 3분의2의 몇 제곱? 21제곱. 그다음 21C1에 3분의2의 몇 제곱? 하나 줄겠죠, 20제곱. 그래서 3분의1은 하나 등장했어요.
<SYNC Start=2249757><P Class=KRCC>
그다음에 21C2에 3분의2의 몇 제곱? 하나 줄겠죠. 그리고 3분의1은 하나 더 늘어날 거예요. 땡땡땡, 어디까지 갈까요?
<SYNC Start=2260426><P Class=KRCC>
총 21C21까지 갈 건데요. 21C20부터 써볼게요. 21C20에 3분의2가 점점 줄어들고 있는 상황이죠. 줄어드는데, 여기에는 이제 몇 개가 남아 있겠나요?
<SYNC Start=2272757><P Class=KRCC>
하나 남아 있을 거고요. 3분의1이 총 20개 남아 있을 거고, 맨 마지막에 21C21에 3분의1이 21제곱이 있을 거야. 이런 식이 있을 겁니다.
<SYNC Start=2284488><P Class=KRCC>
그러면 한번 또 비교, 대조해 볼게요. 내가 찾아야 되는 건 얘인데, 지금 이걸 대입하고 났더니 이런 식이 등장했어요. 그러면 내가 갖고 있는 것에는 다 아래첨자가 홀수로 박혀 있어요.
<SYNC Start=2297206><P Class=KRCC>
5, 3, 1. 그런데 현재 지금 내가 가지고 있는 것은 0, 1, 2, 3 다 있어요. 그렇죠? 그러니까 홀수로 가지고 있는 것들은 어떻게 해 주고 싶다?
<SYNC Start=2308080><P Class=KRCC>
빼주고 싶은 상황이 온 거예요. 그래서 나는 여기에서 마음에 걸리는 애가 하나 있는데, 이게 빠졌으면 좋겠어.
<SYNC Start=2316521><P Class=KRCC>
짝수는 내가 지금 안 가지고 있는데, 홀수만 남았으면 좋겠어. ‘이게 있었으면 좋겠어.’겠죠. 홀수는 어떻게 할 거라고요?
<SYNC Start=2323569><P Class=KRCC>
남겨두고 싶은 상황입니다. 그런데 지금 어떻다고요? 짝수는 지금 현재 이 항에 없기 때문에 짝수들을 빼주고 싶어 하는 그런 상황이 왔습니다. 그러면 어떻게 하고 싶으세요?
<SYNC Start=2335852><P Class=KRCC>
얘 앞을 마이너스로 처리가 되어 있는 것들을 어떻게 해 주면 돼요? 2개를 더해서 결과적으로 빼주는 형태가 되면 되겠죠. 그래서 어떻게 할 거다?
<SYNC Start=2345157><P Class=KRCC>
이번에는 n에다가 21을 대입하고요. 여기를 뺄셈으로 만들어 주고 싶어요. 그러면 이 3분의2 대신에 얼마를 대신 대입하면 될까요?
<SYNC Start=2356759><P Class=KRCC>
-3분의2를 대입하면 되겠죠. 왜? -1의 21제곱은 -1이니까요. 그러면 앞에 -1 하나 생길 것 아닙니까? 그래서 a 대신에 -3분의2를 대신 대입하고 b 대신에 1을 한번 대입해 보도록 할게요.
<SYNC Start=2371670><P Class=KRCC>
그래서 첫 번째 식은 이거였는데, 두 번째로 노란 식을 대입한 식을 밑에다가 써보도록 할게요. 그러면 이 자리를 -3분의2로만 바꾸면 되니까 -3분의21제곱은 -21C0(3분의2)의 21제곱이 되겠죠.
<SYNC Start=2390752><P Class=KRCC>
그렇죠? (-3분의2)의 21제곱이니까 -1의 21제곱, 3분의2의 21제곱. 두 개를 곱한 건데, -1의 21제곱은 -1이니까 앞으로 나온 거예요. 괜찮으시죠?
<SYNC Start=2404270><P Class=KRCC>
그다음에 여기에다가 -3분의2로 바꿔도 20제곱이니까 짝수여서 그대로 가요. 그래서 그대로 갑니다.
<SYNC Start=2415466><P Class=KRCC>
그런 다음에 다시 -3분의2를 대신 대입했어요. 그런데 -3분의2가 들어오는 순간, 이건 19제곱이어서 마이너스가 들어가요. 그래서 앞에 마이너스 하나 추가돼서 (3분의2)의 19제곱(3분의1)²이겠구나.
<SYNC Start=2430871><P Class=KRCC>
그래서 쭉 가요. 3분의2 대신에 뭘 넣었다고요? -3분의2를 넣었으니까 그 마이너스를 바깥으로 꺼내주면 여기가 뭐로 바뀌어요?
<SYNC Start=2441215><P Class=KRCC>
마이너스로 바뀌어서 21C20(3분의2)(3분의1)의 20제곱이겠구나라는 사실을 알 수 있고요. 여기는 -3분의2로 안 바꿔도 돼요. 어차피 없어요, 항이.
<SYNC Start=2454139><P Class=KRCC>
그러니까 맨 마지막은 21C21하고 (3분의1)의 21제곱이라고 써주시면 되겠네요. 이제 뭐할 것 같습니까? 여러분, 저랑 찾는 게 뭐죠?
<SYNC Start=2466552><P Class=KRCC>
현재 지금 홀수만 남겨놓고 싶은데, 지금 마침 내가 홀수만 남겨놓고 싶은 이 상황에서 바꿔 보니까 짝수로 되어 있는 부분이 뭐로 됐어요?
<SYNC Start=2476306><P Class=KRCC>
음수로 됐어요. 두 식을 어떻게 할까요? 더하면 다 사라지겠죠, 짝수항들이. 그래서 두 식을 어떻게 할 거다? 더할게요.
<SYNC Start=2486794><P Class=KRCC>
두 식을 이렇게 더하면 나오는 결과식이 뭐가 되느냐면, 결과적으로 이 짝수로 표현되어 있는 것들은 결과로 다 사라질 거예요. 이런 부분들은 다 사라지고 뭐만 남을 거다?
<SYNC Start=2498978><P Class=KRCC>
이것들도 사라지고 홀수로만 남아 있는 이런 항들만 남을 거예요. 그래서 이 두 식을 더했더니 나오는 결과를 한번 써볼까?
<SYNC Start=2507787><P Class=KRCC>
21C1에 (3분의2)의 20제곱에 (3분의1). 여기서부터 출발해서 어디까지 가요? 또 홀수가 있을 건데, 21C21인데 그 전에는 19가 있을 거니까 (3분의2)가 하나 있고요.
<SYNC Start=2525607><P Class=KRCC>
(3분의1)이 몇 개 있는 것? 19개니까 몇 개? 19개 선택해서 이게 19개 있고요. 이게 몇 개? 2개가 있는 경우가 있을 거예요.
<SYNC Start=2537499><P Class=KRCC>
그다음에 21C20이 있는데 그게 이미 사라졌죠. 그러니까 홀수 번째에 있는 21C21에 (3분의1)의 21제곱. 이렇게 남을 겁니다.
<SYNC Start=2547193><P Class=KRCC>
그러면 2개를 더하긴 더했는데, 사실 이항정리에서 이 값이 얼마였어요? 첫 번째 식의 값이? 3분의2와 3분의1을 더한 것의 21제곱이었죠. 즉 1의 21제곱. 이거는 얼마였어요?
<SYNC Start=2560397><P Class=KRCC>
-3분의2랑 3분의1을 더한 다음에 21제곱한 거였으니까 -3분의2와 3분의1을 더한 다음에 21제곱을 한 거여서, 이 값은 결과적으로 (-3분의1)의 21제곱이었어요.
<SYNC Start=2574272><P Class=KRCC>
그러면 1하고 얘를 결과적으로 어떻게 한 거예요? 더한 거죠. 그런데 (-3분의1)의 21제곱은 -(3분의1)의 21제곱이죠. 그래서 이거 두 개를 더한 값도 옆에다가 써줘야 될 거예요.
<SYNC Start=2587856><P Class=KRCC>
그래서 이거 두 개를 더한 값은 등호를 하고서는 1-(3분의1)의 21제곱. 이렇게 처리를 해 주시면 되겠습니다. 그러면 이제 내가 봐야 되는 부분은 뭐냐.
<SYNC Start=2599680><P Class=KRCC>
이 부분이에요. 지금 얘네들을 더하기는 더했는데, 사실은 이게 하나만 나오는 게 아니에요. 몇 개씩 나와요? 2개씩 나오고 있어요. 그래서 여기에 얼마를 곱해야 된다?
<SYNC Start=2609757><P Class=KRCC>
2를 곱하셔야 되겠습니다. 그러면 한번 식을 정리해 볼게요. 첫 번째 것부터 총 몇 번째 것까지? 19번째 것까지 구한 게 문제의 조건에 의해서 얼마라고 했어요?
<SYNC Start=2622004><P Class=KRCC>
1-p를 2로 나눈 값이라고 표현되어 있어요. 그래서 얘를 대신 대입해서 계산을 해 보면, 이 값은 분배법칙을 써서 1-p. 분배법칙 해 가지고 여기에 2를 곱한 거죠.
<SYNC Start=2634788><P Class=KRCC>
그래서 2×(3분의1)의 얼마? 21제곱. 그것이 얼마다? 1-(3분의1)의 21제곱이다. 그래서 결과적으로 이제 이것만 계산을 해 주면 되겠습니다.
<SYNC Start=2650128><P Class=KRCC>
그래서 1, 1 서로 사라지죠. 없어지고요. -(3분의1)의 21제곱인데, 우리가 구해야 하는 값은 p값을 구해야 하니까 p를 이쪽으로 이항할게요.
<SYNC Start=2663208><P Class=KRCC>
우리가 구해야 하는 건 p니까, 얘를 이쪽으로 이항할게요. 그러면 2×(3분의1)의 21제곱. 넘어오면 +(3분의1)의 21제곱. 그러면 다 찾았죠.
<SYNC Start=2676572><P Class=KRCC>
그래서 따라서 p값이라는 건 결국 (3분의1)의 21제곱이 2개, 하나 있는 걸 더한 거니까 3×(3분의1)의 21제곱. 즉 계산해 보면 (3분의1)의 20제곱이 되겠습니다.
<SYNC Start=2691060><P Class=KRCC>
그래서 p의 값을 찾았으니까 이 문제는 결과적으로 끝이 났네요. 그래서 정답은 (3분의1)의 20제곱이 되겠습니다. 그래서 수능 유형 문제를 보시면 이렇게 조금 복잡하게 표현되어 있지만
<SYNC Start=2703346><P Class=KRCC>
실제로 나열하면 이항계수로 이루어진 것들을 뭔가 합한 내용이니까 이항정리를 쓰시면 되고, 이 이항정리 식이랑 원래 식을 비교해 가지고
<SYNC Start=2713225><P Class=KRCC>
n 혹은 a 혹은 b에 어떤 숫자가 들어가면 계산할 수 있는지를 생각하셔야 돼요. 이렇게 이항정리에 대한 문제들까지 쭉 살펴봤는데요.
<SYNC Start=2724365><P Class=KRCC>
이항정리 파트에서 제일 중요한 건 뭐냐면, 첫 번째로 이항계수를 찾는 거고요.
<SYNC Start=2729004><P Class=KRCC>
그리고 이항계수를 찾는 것뿐만 아니라 어떤 이항계수로 구성되어 있는 것들의 합을 구하는 문제에서는 이항정리를 쓰시고 거기에 적절한 숫자를 대입해서 원하는 식의 값을 구하시면 되겠습니다.
<SYNC Start=2742670><P Class=KRCC>
그래서 이항정리 파트에 대한 내용들은 지금 여기까지가 끝이 났고요. 우리는 다음 강의에서 이항정리에 대한 감 잡기 코너로써 문제를 하나, 하나 다루어 보도록 하겠습니다.
<SYNC Start=2754567><P Class=KRCC>
&nbsp;
</BODY>
</SAMI>