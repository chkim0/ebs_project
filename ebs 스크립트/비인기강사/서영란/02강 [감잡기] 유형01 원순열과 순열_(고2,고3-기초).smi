<SAMI>
<HEAD>
<STYLE TYPE="text/css">
<!--
P { margin-left:8pt; margin-right:8pt; margin-bottom:2pt;
    margin-top:2pt; font-size:12pt; text-align:left;
    font-family:굴림, Arial; font-weight:normal; color:white;
    background-color:#405A8D; }
.KRCC { Name:한국어; lang:ko-KR; SAMIType:CC; }
#STDPrn { Name:Standard Print; }
#LargePrn { Name:Large Print; font-size:20pt; }
#SmallPrn { Name:Small Print; font-size:10pt; }
-->
</STYLE>
</HEAD>
<BODY>
<SYNC Start=11109><P Class=KRCC>
여러분들의 눈높이에서 개념부터 문제 해결에 이르는 길까지 차근차근 짚어드리겠습니다. EBS 수학영역의 서영란입니다.
<SYNC Start=20390><P Class=KRCC>
우리 지난 시간에는 개념편을 설명했었는데요. 이제 개념편에 이어서 유형1의 문제 해결 파트로 넘어가서 시작을 해 보도록 하겠습니다.
<SYNC Start=30505><P Class=KRCC>
첫 번째는 수능 유형 문제입니다. 첫 번째 문제를 보면 숫자 1, 2, 3에서 중복을 허락해서 6개를 택해서 6자리 자연수를 만들 때, 1의 개수가 홀수인 경우의 수를 구하는 문제인데요.
<SYNC Start=45411><P Class=KRCC>
우선 이 문제를 처음 봤을 때 여러분들은 분석을 하셔야 돼요. 그래서 봤더니, 중복을 허락한다는 표현이 있으니까 둘 중에 하나겠죠? 중복순열이거나 뒤에서 배울 중복조합이거나.
<SYNC Start=57511><P Class=KRCC>
그러면 순열인지 조합인지 판단하는 근거는 뭐냐면 순서가 중요하느냐, 중요하지 않느냐의 문제예요. 그런데 6자리 자연수를 만들려고 하면 순서대로 나열해야겠죠, 6개를.
<SYNC Start=69518><P Class=KRCC>
그렇기 때문에 이 문제는 중복순열에 해당하는 문제라는 사실을 알 수가 있습니다. 그래서 분석을 하되 우리가 '무슨 단원이겠구나.'라는 판단을 할 수가 있느냐면
<SYNC Start=80648><P Class=KRCC>
중복순열의 문제구나라고 생각해 볼 수가 있어요. 이제 중복순열이라는 걸 알았는데, 마지막 문장을 보니까 1의 개수가 홀수 개라고 했네요.
<SYNC Start=92350><P Class=KRCC>
그러면 1의 개수가 홀수 개가 되게끔 중복으로 나열해 주면 되겠죠. 그래서 이 내용은 분명히 1의 개수가 홀수 개다.
<SYNC Start=102522><P Class=KRCC>
1의 개수가 홀수라는 정보가 좀 더 추가돼 가지고 문제 해결을 하시면 될 거예요. 그러면 어떻게 접근을 해야 될 것이냐. 그 접근법을 생각해 볼게요.
<SYNC Start=114599><P Class=KRCC>
접근법으로 본다면, 중복순열이야 곱의 법칙을 적용하는 것과 크게 다르지 않기 때문에 무엇을 봐야 되느냐면, 1의 개수가 홀수라는 걸 어떻게 생각할지를 보셔야 돼요.
<SYNC Start=126534><P Class=KRCC>
우선 6개를 나열해야 되잖아요. 그중에 1은 홀수 개가 들어가야 된다는 얘기니까, 이 홀수 개로 되는 것들은 몇 개가 있을 것인가 생각해 볼 수가 있겠죠.
<SYNC Start=136260><P Class=KRCC>
그래서 1의 개수가 홀수가 되는 각 경우를 고려하시면 되겠습니다.
<SYNC Start=150477><P Class=KRCC>
각 경우를 고려하자. 그러면 생각해 볼게요. 홀수가 될 수 있는 건 뭐가 있을까요? 1개, 3개, 5개까지만 가능하겠죠. 7개가 될 수 없는 이유는 6자리 자연수이기 때문에 7개까지는 갈 수 없어요.
<SYNC Start=166149><P Class=KRCC>
그래서 분명히 홀수로 가능한 것은 1개, 3개, 5개로 분류를 하고, 이것은 동시에 일어날 수 없으니까 나중에 합의 법칙을 해 주시면 될 겁니다.
<SYNC Start=176631><P Class=KRCC>
그러면 이제 접근법까지 정리했으니까 이제 직접 풀어보도록 할게요. 1의 개수가 1개인 경우, 1의 개수가 3개인 경우, 그리고 1의 개수가 5개인 경우로 분류를 해서 문제를 해결해 볼게요.
<SYNC Start=191369><P Class=KRCC>
그러면 첫 번째로 우선 6자리를 나열할 것이기 때문에 6자리를 이렇게 쭉 나열할 거예요. 그러면 이 6자리 중에서 우선 1이 1개가 배치되려면
<SYNC Start=204626><P Class=KRCC>
1이 배치가 되는 자리를 지정해 줘야 되잖아요. 그러면 이렇게 하나, 둘, 셋, 넷, 다섯, 여섯 자리 중에서 한 자리. 1이 들어갈 한 자리를 지정해 줘야 돼요.
<SYNC Start=214643><P Class=KRCC>
그래서 이 경우는 이 6가지 자리 중에서 1이 들어갈 한 자리를 먼저 지정해 주고, 그러고 나서 어떤 자리가 하나 지정이 되면 남은 자리는 총 5개죠.
<SYNC Start=227228><P Class=KRCC>
이 5개에 2 또는 3이 계속 배치가 될 거예요. 그러면 2 또는 3 두 가지, 2 또는 3 두 가지. 2 또는 3 두 가지. 두 가지, 두 가지씩 들어가니까 결과적으로 2를 5번 곱한 거죠.
<SYNC Start=239283><P Class=KRCC>
결국 2, 3. 둘 중에, 서로 다른 두 개 중에서 중복을 허용해서 5개를 배치하는 형태니까, 중복조합의 수. 2∏5가 되겠습니다.
<SYNC Start=251194><P Class=KRCC>
그런 다음에 이제 3개씩 오는 경우를 생각해 볼게요. 6자리 중에서 1이 3개가 배치되어야 하는데, 1을 3개 배치한다고 했을 때 6자리 중에 3자리만 골라내면 돼요.
<SYNC Start=264720><P Class=KRCC>
그 이유는 뭐냐면, 1 자리를 이렇게 골라내서 배치를 했는데 이들끼리는 위치를 바꿔도 결과가 변하지 않죠? 그렇기 때문에 순서가 중요하지는 않아요.
<SYNC Start=275580><P Class=KRCC>
그래서 6자리 중에 3자리를 뽑아내시기만 하면 돼요. 조합이죠. 그래서 6자리 중에서 3자리를 뽑아낸다. 그러고 나서 곱의 법칙을 하고, 이제 남은 3개의 자리 중에서 2 또는 3을 배치하면 되겠죠.
<SYNC Start=289703><P Class=KRCC>
그래서 서로 다른 2개의 2, 3 중에서 중복을 허락해서 3자리만 찾아주면 되겠구나. 그래서 2∏3이 되겠습니다. 그런 다음에 이제 마지막에도 마찬가지의 방식으로
<SYNC Start=301712><P Class=KRCC>
분명히 이 6개의 자리 중에서 1이 배치될 5자리를 지정해 주면 되겠죠. 그래서 6자리 중에 1이 배치될 5자리를 지정한 다음, 그러면 남은 자리는 이제 하나 남아 있잖아요.
<SYNC Start=313570><P Class=KRCC>
거기에서 2 또는 3을 그 1자리에 배치해 주면 이 경우의 수를 구할 수가 있어요. 그러면 계산할게요. 6×2의 5제곱이니까 6×32가 돼서 192가 될 거고요.
<SYNC Start=327785><P Class=KRCC>
6C3이죠. 6C3은 6, 5, 4를 3, 2, 1 곱한 걸로 나누는 거니까 20이 될 거고요. 20에다가 8을 곱할 거니까 160이 되겠네요.
<SYNC Start=341825><P Class=KRCC>
이 경우는 6C5는 계산을 빨리 하고 싶다면 6C1로 계산을 하면 되겠네요. 그다음에 이것은 2고요. 그러면 6×2=12가 되겠습니다.
<SYNC Start=352841><P Class=KRCC>
아까 초반에서 설명해 드렸듯 1, 3, 5는 동시에 일어날 수 있을까요, 없을까요? 없죠. 그래서 이제 무슨 법칙을 적용해야겠구나.
<SYNC Start=361786><P Class=KRCC>
합의 법칙을 적용해서 이 3가지 케이스를 모두 다 더해 주면 될 거예요. 이유는? 동시에 일어날 수 없기 때문에. 따라서 192, 160, 12를 모두 다 더하면 364가 이 문제에 대한 정답이 되겠습니다.
<SYNC Start=379552><P Class=KRCC>
그래서 첫 번째 문제는 이런 분석 방식으로 해서 중복순열을 할 건데, 일단 1의 개수가 홀수가 되는 자연수의 개수를 따지라고 했으니 홀수가 되는 케이스로 분류 작업을 한 다음에
<SYNC Start=391391><P Class=KRCC>
합의 법칙까지 적용하시면 해결할 수 있는 문제였어요. 그래서 이 문제는 이런 식으로 접근을 하면 충분히 해결할 수 있었고요.
<SYNC Start=401564><P Class=KRCC>
그다음에 이제 체크 한번 해 볼게요, 유형 체크. 유형 체크 문제입니다. 이제 7 이하의 자연수 x, y, z의 모든 순서쌍의 개수를 구하라는 문제예요.
<SYNC Start=413850><P Class=KRCC>
그러면 순서쌍이라는 표현이 나오는 순간 제일 먼저 떠올려야 되는 건 뭐냐면, 세트를 구성합니다. 하나 배치하고 이것에 대해서 그다음 걸 배치하고 그다음 걸 또 배치한다.
<SYNC Start=424725><P Class=KRCC>
곱의 법칙을 나중에 적용해야 할 거예요. 그런데 x, y, z는 그냥 7 이하의 자연수니까 마음대로 하라는 뜻이니까 결국 중복을 허용한다는 거죠.
<SYNC Start=435875><P Class=KRCC>
결국 중복순열의 문제가 될 거예요. 그래서 굳이 분석을 해 본다면 이건 중복순열의 문제인데, 사실 중복순열의 경우는 곱의 법칙을 활용하는 거여서 곱의 법칙만 알아도 해결할 수 있어요.
<SYNC Start=448903><P Class=KRCC>
그다음에 이제 조건을 살펴보는 거예요. (가) 조건과 (나) 조건을 봤더니 지금 현재 (가) 조건은 뭔가 길죠. 그러니까 파악하기 쉽지 않으니까 (나) 조건 먼저 보는 거예요.
<SYNC Start=460692><P Class=KRCC>
그런데 x, y를 곱한 게 홀수래요. 그러면 저 내용을 보니까 (나) 조건에서 x, y를 곱한 게 홀수라는 말은 어떤 의미일까 생각해 볼 수가 있겠죠.
<SYNC Start=472423><P Class=KRCC>
곱한 것이 홀수라는 것은 전부 다 홀수라는 얘기예요. 그래서 x 그리고 y 모두 홀수라는 정보를 주게 됩니다. 그리고 우리가 조금만 더 생각해 보면, 홀수가 아니고 짝수면 어떨까 해서
<SYNC Start=486903><P Class=KRCC>
짝수에 대해서도 한번 생각을 해 볼 수 있겠죠. 짝수라는 건 뭐다? ‘그리고’의 반대니까 x 또는 y가 짝수라고 생각하면 되겠죠.
<SYNC Start=500510><P Class=KRCC>
그래서 이 문제에 대해서 이런 내용까지도 생각을 해 봤어요. 그런 다음에 이제 뭘 할까 봤더니, 조건 (나)를 또다시 살펴보니 x×y가 홀수라는 것은 결과적으로 x, y 모두 다 홀수라는 거구나.
<SYNC Start=514506><P Class=KRCC>
이걸 이용해서 뭔가 풀 수 있지 않을까라는 생각을 하셔야 돼요. 그러면 접근법은 어떻게 될 거냐. 나는 (x, y, z)의 순서쌍의 개수를 알고 싶은데
<SYNC Start=527002><P Class=KRCC>
x, y는 이미 뭔지 알았어요. 뭐에 의해서? 조건 (나)에 의해서. 그래서 분명히 조건 (나)에 의해서 x, y가 모두 홀수라는 정보를 찾았어요. x, y 모두가 다 홀수라는 정보를 이용해서
<SYNC Start=546924><P Class=KRCC>
이 정보를 이용해 가지고 무엇을 추론해야 돼요? z를 추론해야 돼요. 그런데 저 z는 문제의 어디에 숨어 있나 봤더니, (가) 조건에 숨어 있죠. (가) 조건에 z가 들어 있잖아요.
<SYNC Start=558550><P Class=KRCC>
그래서 조건 (나)에서 이 정보를 이용해서 뭘 도출하자? 조건 (가)에 숨어 있는 z에 대한 정보를 도출을 하는 게 이 문제의 접근법입니다. z 정보 찾기.
<SYNC Start=574533><P Class=KRCC>
그런데 이 z 정보가 어디에 들어 있다고요? 지금 조건 (가)에 들어 있어요. 그래서 조건 (나)는 이미 분석이 끝났고 이제 조건 (가)로 해서 z를 추론하는 게 이 문제를 푸는 포인트가 되겠습니다.
<SYNC Start=587005><P Class=KRCC>
그러면 이제 한번 시작해 볼게요. 첫 번째 솔루션입니다. 어떻게 풀 거냐. 첫 번째 생각은 이래요. 그냥 이 조건 (가) 식을 봤더니 x²+y²+z² 해서 2xy+2yz+2zx 해서 이것이 짝수라고 하네요.
<SYNC Start=608962><P Class=KRCC>
그러면 짝수라는 개념은 뭐냐면, 그냥 2배수잖아요. 그렇죠? 2배수인데, 마침 2배수가 보여요. 지금 표시를 한번 해 볼게요. 2xy, 2yz, 2zx는 2로 묶으면 2×에 xy, yz, zx를 더한 꼴이죠.
<SYNC Start=624538><P Class=KRCC>
결국 이것들은 다 2배수여서 짝수가 됩니다. 그러면 짝수에다가 무엇을 더해야 짝수가 나올까요? 당연히 이 부분이 뭐가 될까요? 짝수가 되겠죠.
<SYNC Start=639075><P Class=KRCC>
그런데 우리는 이미 x, y의 정체를 알고 있어요. 그래서 x랑 y가 모두 다 뭐라는 걸 알 수 있어요? 홀수라는 걸 알 수 있어요, 조건 (나)에 의해서.
<SYNC Start=650643><P Class=KRCC>
그러면 이걸 가지고 우리는 또 추론할 수 있는 게 있어요. x²과 y²이 짝수인지 홀수인지 알 수 있어요. 홀수를 제곱해요. 그러면 홀수×홀수니까 당연히 홀수가 되겠죠.
<SYNC Start=662686><P Class=KRCC>
그래서 이거 각각 모두가 다 홀수가 되겠습니다. 그러면 홀수예요. 그러면 x²도 홀수, y²도 홀수라면 우리가 지금 살펴보고 있는 x²+y²은 뭐가 될까요?
<SYNC Start=677820><P Class=KRCC>
홀수+홀수니까 이 부분은 당연히 짝수가 되겠죠. 그러면 이제 물어볼게요. 짝수에다가 z²을 더하면 짝수가 된다는 것은, 우리가 진짜 정녕 찾고 싶었던 이 z²이라는 게 결국 무엇이 된다?
<SYNC Start=693678><P Class=KRCC>
짝수라는 사실을 알 수가 있습니다. 그래서 z²이 짝수구나. 그러면 이제 z 정보를 완벽하게 찾았어요. 그러면 뭐가 되죠? 우리가 원하던 z가 짝수라는 사실을 알 수가 있습니다. 끝.
<SYNC Start=713163><P Class=KRCC>
이제 문제는 다 푼 거예요. x, y는 홀수고요. z는 짝수라는 사실을 알았어요. 그러면 이제 나는 이 순서쌍의 개수를 구할 건데, 순서쌍 (x, y, z)에서 x는 어차피 홀수잖아요.
<SYNC Start=728062><P Class=KRCC>
그런데 7 이하의 홀수로 가능한 것은 1, 3, 5, 7 네 개밖에 없죠. 그러니까 x로 가능한 것은 4가지. y도 마찬가지로 홀수였죠. 1, 3, 5, 7 네 가지.
<SYNC Start=739913><P Class=KRCC>
z는 어떻습니까? z는 짝수였으니까 7 이하의 짝수는 2, 4, 6 세 가지밖에 없죠. 그래서 순서쌍을 이뤄서 곱의 법칙을 적용하면 정답이 48이 나오게 됩니다.
<SYNC Start=753989><P Class=KRCC>
그래서 이게 지금 (나) 조건을 보고 x, y가 뭔지 아는 상황에서 (가) 조건의 z를 추론해 주기만 하면 돼요.
<SYNC Start=763234><P Class=KRCC>
그래서 x, y가 홀수인 걸 이용해서 (가) 조건에 숨어 있는 z의 정보가 짝수인지, 홀수인지를 판단해서 순서쌍의 개수를 구하는 문제가 됐었습니다.
<SYNC Start=773920><P Class=KRCC>
그래서 이렇게 푸는 게, 그냥 아무 정보 없이 짝수가 뭔지, 홀수가 뭔지. 혹은 곱해서 나오는 것들에 따라서 판단할 수 있는 이런 내용만 알고 있으면 풀 수 있어요.
<SYNC Start=784927><P Class=KRCC>
그런데 누군가는 이런 풀이 말고, 아는 게 많아 가지고 더 빨리 푸는 경우도 있어요. 아는 게 많은 친구들의 버전을 보여 드릴게요.
<SYNC Start=794183><P Class=KRCC>
두 번째 솔루션, 아는 게 많은 친구들은 조건 (가)가 이렇게 보이기 시작합니다. ‘이거 왠지 이렇게 배웠던 것 같아. 이 식이 이 식이랑 같아.’
<SYNC Start=807816><P Class=KRCC>
곱셈공식이랑 인수분해 파트에서 이걸 너무 많이 봤죠. 그래서 이게 이거라는 걸 알 수 있어서
<SYNC Start=814012><P Class=KRCC>
바로 얘가 짝수니까 얘를 제곱해서 짝수라는 것은 x+y+z가 짝수겠구나라고 판단해서 푸는 친구들도 있다고요.
<SYNC Start=825266><P Class=KRCC>
그러면 아까 xy가 전부 다 이 정보에 의해서 홀수였죠? 그래서 이 각각이 다 뭐였다고요? 홀수였어요. 그러면 홀수+홀수니까 이 부분은 뭐가 돼요?
<SYNC Start=837797><P Class=KRCC>
짝수가 되겠죠. 그래서 여기만큼이 짝수가 되겠구나. 그러면 짝수에다가 무엇을 더했을 때 짝수가 되겠어요? 당연히 짝수를 더해야겠죠. 그래서 z가 무엇이 된다?
<SYNC Start=851008><P Class=KRCC>
짝수가 된다. 이렇게 판단을 해서 x, y, z에 대한 정보를 또 바로 찾으실 수도 있습니다. 그러면 여기 홀수, 홀수, 짝수니까 아까와 같은 방식으로 계산을 할 수가 있겠죠.
<SYNC Start=863245><P Class=KRCC>
그래서 첫 번째 풀이로 가든 두 번째 풀이로 가든 답은 48이 됨을 알 수 있습니다. 그래서 조금만 더 남들보다 많이 알면, 많이 쓰지 않고 또 바로 구할 수 있는 그런 방법을 찾을 수 있어요.
<SYNC Start=876297><P Class=KRCC>
다음 문제로 한번 가보도록 할게요. 처음 문제는 약간 소프트한 문제예요.
<SYNC Start=881672><P Class=KRCC>
2 이상의 자연수 n에 대해서 이 식이 성립할 때 n의 값을 구하는 문제입니다. 이 문제는 되게 쉽죠? 왜 쉽느냐면, 여러분이 공부를 제대로 했다면 이 기호의 의미를 다 알고 있을 테니까요.
<SYNC Start=896457><P Class=KRCC>
하지만 그래도 분석은 해 드려야 하니, 어떤 단원인지에 대해서 얘기를 해 봅시다. ∏가 등장하네요. ∏가 나왔다는 건 뭐다?
<SYNC Start=905715><P Class=KRCC>
중복순열이죠. 그래서 이 내용은 중복순열의 기호를 물어보는구나라는 사실을 알 수 있고요. P가 나오죠. Permutation의 약자죠. '순열의 기호에 대해서도 묻고 있구나.'	라는 사실을 알 수 있어요.
<SYNC Start=921716><P Class=KRCC>
그러면 우리는 무엇을 알아야지 이 문제를 해결할 수 있나요? 맞습니다. 이 기호가 어떻게 계산되는지, 내용을 알고 있어야 되는데
<SYNC Start=930774><P Class=KRCC>
n∏r이라는 건 뭐냐면 서로 다른 n개 중에서 중복을 허용해서 r개를 나열하라는 거죠. 그렇게 되면 당연히 r개를 나열했으니까 n이 r번 곱해질 거예요. n의 r제곱. 그리고 또 뭐가 있었죠?
<SYNC Start=945438><P Class=KRCC>
nPr이 있었죠. nPr은 n!을 (n-r)!로 나누면 된다는 것을 이미 지난 시간에 학습을 했었어요. 이 내용을 토대로 이걸 그냥 계산만 해 주면 되니까, 계산 한번 해 볼까요?
<SYNC Start=961637><P Class=KRCC>
n∏3입니다. n³. nP2예요. 그러면 중복을 허용하지 않으니까 하나 더 빠져야겠죠. 그다음에 nP1인 상황이니까 이거는 21n이구나. 그러면 전개할게요.
<SYNC Start=976665><P Class=KRCC>
전개하면 n²-n+21n이에요. 그러면 n²+20n이 되겠죠. 이항시켜서 정리하면 n³-n²-20n=0이 되는 상황이고요. 삼차식이에요. 삼차방정식은 어떻게 풀었죠?
<SYNC Start=995813><P Class=KRCC>
고등수학(상)에서 이차식, 일차식으로 인수분해를 하면 이차식에서 인수분해를 하거나 근의 공식을 쓰면 된다고 배웠죠? 그래서 차수를 다운시킬게요.
<SYNC Start=1005861><P Class=KRCC>
공통인수가 n이네요. n²-n-20은 0. 한 번 더 인수분해가 가능하겠네요. (n-5)(n+4)=0. 그러면 근이 3개가 나와요. 0 또는 5 또는 -4가 나오는데, 2 이상의 자연수라고 했고
<SYNC Start=1024814><P Class=KRCC>
이미 이 기호 속에서 얘는 분명히 2보다 크거나 같다는 게 포함되어 있어요. 이 경우는 1보다 크거나 같다. 얘는 상관은 없죠.
<SYNC Start=1033566><P Class=KRCC>
그렇지만 그래도 자연수여야 되겠죠. 그래서 어떻게 된다? 이 중에 나올 수 있는 것은 5밖에 안 되겠구나라고 해서 n의 값은 5가 돼서 정답은 ③번이 될 거예요.
<SYNC Start=1044785><P Class=KRCC>
그래서 n의 값이 이제 5라는 걸 찾아냈어요. 그러면 이 문제야 쉬우니까 그냥 계산만 하면 되는데, 쉽지만 중요할까요, 안 중요할까요?
<SYNC Start=1055571><P Class=KRCC>
중요하니까 물어보겠죠. 이 내용은 되게 중요합니다. 이제 왜 중요한지를 제가 이야기를 해 드릴게요.
<SYNC Start=1062027><P Class=KRCC>
분명히 교육과정평가원에서는 교육과정을 우리가 제대로 가르쳤는지, 안 가르쳤는지 파악하기 위해서 교육과정 내에 있는 핵심 내용들을 물어보게 되어 있어요. 쉽든, 어렵든.
<SYNC Start=1074765><P Class=KRCC>
그래서 분명히 중복순열과 순열에 대한 기호를 학습했으면 이 기호가 어떤 의미를 가지는지 학생들이 알아야 하고, 이렇게 계산할 수 있는지를 판단해야 될 거잖아요.
<SYNC Start=1085833><P Class=KRCC>
그래서 수능에 어떤 것들이 나오는지를 보면, 이런 내용들이 나왔습니다. 작년, 그러니까 2020학년도 수능 나형 22번. 단답형 1번이거든요.
<SYNC Start=1097686><P Class=KRCC>
7P2+7C2의 값을 더한 것을 물어봤어요. 무슨 뜻이에요? 너희 순열과 조합의 기호를 이해하고 계산할 수 있느냐를 물어보는 거예요. 그렇죠?
<SYNC Start=1109911><P Class=KRCC>
여기도 마찬가지. P와 C. ‘순열, 조합. 계산할 수 있니?’라고 물어보는 거죠. 이게 순열인지 조합인지 하나도 안 나와 있어요.
<SYNC Start=1119524><P Class=KRCC>
그냥 기호를 주고 계산할 수 있는지를 물어보는 문항이 벌써 2년에 걸쳐서 나왔어요. 그래서 6월 모의평가와 9월 모의평가를 찾아보더라도 이게 계속 4~5년 전부터 들어오고 있거든요.
<SYNC Start=1132948><P Class=KRCC>
그러면 생각을 해 봅시다. 확률과 통계가 그다음 수능의 과목으로 지정이 됐는데, 어쨌건 순열과 조합은 고등수학(하) 내용이잖아요. 그러면 우리가 확률과 통계에서 새롭게 배우는 기호는 뭐가 있죠?
<SYNC Start=1146503><P Class=KRCC>
맞습니다. 중복순열의 기호, ∏. 그리고 뒤에서 배울 중복조합에 대한 기호 H가 있단 말이에요. 분명히 그들을 물어볼 것 같다고 예측해 볼 수 있겠죠.
<SYNC Start=1157950><P Class=KRCC>
그래서 새로운 기호가 나오면 그 기호를 어떻게 계산하는지 반드시 알고 계셔야 되겠습니다. 이 부분은 여기에서 메인은 아니니까, 이런 문제들이 나왔다는 느낌 정도만 아시면 되고요.
<SYNC Start=1171029><P Class=KRCC>
이제 그다음 문제로 한번 가볼게요. 그림과 같이 원을 6등분해서 만들어진 6개의 영역에 서로 다른 6가지 색을 모두 사용하여 칠하려고 한다.
<SYNC Start=1181499><P Class=KRCC>
그러면 여러분들은 ‘지도가 나오고 색칠하는 경우의 수를 구하는 문제인가?’ 싶을 거예요. 쭉 읽어볼게요. 한 영역에 한 가지 색만 칠할 때. 이런 표현 되게 많이 봤었죠?
<SYNC Start=1193026><P Class=KRCC>
색을 칠하는 경우의 수라고 하면 뭔가 색칠하는 경우의 수일 것 같지만, 마지막 줄이 포인트예요. 회전해서 일치하는 것은 같은 것으로 본다는 괄호 조건이 있죠? 이거 되게 중요하거든요.
<SYNC Start=1205008><P Class=KRCC>
이게 등장하는 순간, 여러분들은 이건 100%다. 뭐예요? 원순열 문제예요. 그래서 원순열 문제로 접근하셔야 돼요.
<SYNC Start=1217080><P Class=KRCC>
이제 원순열 문제로 접근을 하면, 접근법이 2가지가 있다고 이미 지난 시간에 설명해 드렸죠. 2가지 접근법이 있습니다.
<SYNC Start=1226631><P Class=KRCC>
첫 번째는 전체 순열의 수에서. 그렇죠? 전체 순열의 수에서 뭐로 나눈 것? 같은 자리가 있는 경우. 자리가 같은 경우의 수를 나누는 경우가 있었고요.
<SYNC Start=1241868><P Class=KRCC>
혹은 이 방법이 싫다면 1명을 먼저 배치하고요. 하나를 먼저 배치하고.
<SYNC Start=1250604><P Class=KRCC>
배치하고 나서 나머지 것들의 자리가 다 구별되니까 나머지 것들을 나열하는 방법을 곱해 준다는 방법이 있었습니다. 둘 다 알려드릴게요.
<SYNC Start=1260796><P Class=KRCC>
첫 번째, 전체 순열의 수를 고려한다면 어쨌든 6가지 색깔을 여기에 배치하는 거죠. 그래서 6!. 그런데 자리가 같은 경우는 이제 여러분들이 어떻게 해야 된다고 했어요?
<SYNC Start=1273627><P Class=KRCC>
배열을 하나 정해서 직접 여기에다가 나열해 보면 자리가 같은 게 몇 가지가 있는지 나올 거예요. 한번 볼까요? 제가 여기부터 1, 2, 3, 4, 5, 6이라고 했어요.
<SYNC Start=1286659><P Class=KRCC>
그다음 건 색깔을 달리해서 갈게요. 1, 2, 3, 4, 5, 6이라고 했어요. 이렇게 다 하나씩 따지면 총 몇 개가 나오겠어요? 출발 지점이 6개니까 6가지가 나올 텐데
<SYNC Start=1298143><P Class=KRCC>
그중에 자리가 같은 걸 찾으면 되는데, 이미 이 2개만 해 보더라도, 초록색으로 쓴 부분을 오른쪽으로 한 칸 돌릴게요. 1이 1로 가고 2가 2로 가고 3은 3으로 가고
<SYNC Start=1308604><P Class=KRCC>
4는 4로 가고 5는 5로 가고. 결국 자리가 같죠. 이걸 6번 쭉 나열할 건데, 그 6개의 자리가 전부 다 같죠. 그러니까 당연히 뭐로 나눈다?
<SYNC Start=1318253><P Class=KRCC>
자리가 같은 경우의 수는 6개야. 그래서 그 결과 5!이라는 사실을 알 수 있어요. 그러면 5!은 5×4×3×2×1이죠. 120이 나와요.
<SYNC Start=1330896><P Class=KRCC>
그래서 정답은 120이라는 걸 알았는데, 또 다른 풀이도 한번 보시죠. 또 다른 풀이도 한번 볼 건데, 이 경우는 어떻게 하느냐? 일단 한 명을 먼저 배치할 거예요.
<SYNC Start=1340079><P Class=KRCC>
그래서 하나의 색깔을 먼저 칠한다는 의미가 되겠죠. 여기에다가 칠했습니다. 그런데 제가 여기에다가 이렇게 칠한 거나, 여기에다가 이렇게 칠한 거나 결과는 어떻습니까? 같죠. 왜냐?
<SYNC Start=1352246><P Class=KRCC>
회천해서 일치하니까. 그러면 1명을 배치하는 경우의 수, 하나의 색깔을 칠하는 경우의 수는 1가지죠. 그래서 이것은 1가지가 되는구나. 이렇게 해서 1가지가 되고요.
<SYNC Start=1363859><P Class=KRCC>
이로 인해서 이 부분은 얘의 오른편, 이 부분은 얘의 왼편. 얘는 맞은편, 얘는 대각선 오른쪽, 얘는 대각선 왼쪽으로 자리가 다 구별이 되기 때문에
<SYNC Start=1375214><P Class=KRCC>
나머지 것들은 자리가 다 구별되니까 그냥 일렬로 나열해 주기만 하면 돼. 이렇게 접근하시면 되겠습니다. 그래서 두 경우 다 답은 똑같이 나와요.
<SYNC Start=1385780><P Class=KRCC>
그런데 둘 다 알고 있으면 좋은 점이 뭐냐면, 또 지금까지 수능에서는 확률과 통계라고 해 가지고 (가), (나), (다)로 해서 추론 문제가 있잖아요.
<SYNC Start=1395174><P Class=KRCC>
그래서 추론 문제를 내는 경우도 되게 많았기 때문에 여러분이 풀이도 다양하게 알고 있으면 4점짜리도 맞히실 수 있습니다.
<SYNC Start=1406679><P Class=KRCC>
그래서 이게 원순열이라는 내용을 통해서 쭉 한번 같이 가봤고요. 다음 문제로 한번 가볼게요. 아마 이게 여러분들한테는 제일 어려웠을 것 같아요.
<SYNC Start=1417231><P Class=KRCC>
두 집합이 있는데, 함수 중에서 조건을 만족시키는 함수의 개수를 찾으래요. 대부분의 애들이 저한테 그래요. 함수의 개수를 따지는 걸 진짜 모르겠다는 얘기를 너무 많이 하는데
<SYNC Start=1428135><P Class=KRCC>
지난 시간에 제가 얘기해 드렸어요. 함수를 묻는다는 건 결국 뭐다? 순열을 묻는 거예요. 그런데 함수는 선택에 제한이 없다고 했죠.
<SYNC Start=1437227><P Class=KRCC>
한 번의 선택만 하면 되는데, 내가 고른 걸 다른 것도 고를 수 있어요. 뭘 허용한다? 중복을 허용한다. 그래서 함수를 보는 순간, 여러분이 생각해야 되는 건 무엇이다?
<SYNC Start=1449296><P Class=KRCC>
이거 나중에 분명히 뭘 이용할 거야? '중복순열을 이용하는 내용일 거야.'라고 생각을 할 수가 있어요.
<SYNC Start=1458933><P Class=KRCC>
그런데 조건이 하나 추가됐죠. 지금 한번 조건을 볼게요. Y=f(x). 그렇죠? 그러면 이 내용은 도대체 뭘까 하고 궁금해 하셔야 돼요. Y가 f(x)를 다 모아놓은 것과 같다는 표현이 있구나.
<SYNC Start=1475292><P Class=KRCC>
이제 이 조건을 만족하게끔 중복순열을 쓰면 되겠군이라는 생각을 하면 되겠죠. 그러면 이게 무슨 뜻인지 한번 볼게요. 여기에서 Y는 뭐냐면, Y는 공역이에요. 공역.
<SYNC Start=1490329><P Class=KRCC>
선택 당하는 애들. 그렇죠? 그런데 f(x)는 뭐냐면 선택한 애들이에요, 선택이 된 애들. 그래서 이것을 무엇이라고 부르느냐면, 얘를 치역이라고 불러요. 치역.
<SYNC Start=1502028><P Class=KRCC>
그래서 이 문제는 공역과 치역이 같아지는 함수를 찾아보라는 의미입니다. 그러니까 공역에 있는 이 원소들이 모두 다 선택을 당했다는 거예요.
<SYNC Start=1514210><P Class=KRCC>
그래서 치역이 뭐가 된다고요, 이 문제에서? 6, 7, 8이 되게끔 해 보라는 얘기입니다. 그러면 이제 여러분들은 어떻게 생각을 해야 될까요? 어떻게 생각해서 접근을 해야 되느냐?
<SYNC Start=1527829><P Class=KRCC>
치역이 이렇게 된다는 것은 치역의 원소의 개수가 몇 개라는 뜻이죠? 3개라는 뜻이에요. 그런데 함수가 굳이 치역을 이렇게 3개로 만들 필요는 없잖아요.
<SYNC Start=1538354><P Class=KRCC>
6한테 몰빵하는 경우도 있고 7한테 몰빵하는 경우도 있고 8한테 몰빵하는 경우도 있어요. 그렇죠? 혹은 6, 7한테만 가는 경우도 있고 7, 8한테만 가는 경우도 있겠죠. 어떻게 하면 될까요?
<SYNC Start=1550203><P Class=KRCC>
바로 전체 함수의 개수에서 우리가 구하고자 하는 것은 무엇이다? 치역이 3개짜리만 찾고 싶은 거잖아요. 그렇죠?
<SYNC Start=1561245><P Class=KRCC>
그래서 치역의 원소의 개수. 치역은 집합이거든요. 집합이죠. 치역의 원소의 개수가
<SYNC Start=1573369><P Class=KRCC>
2인 걸 빼주고요. 또 다른 건 뭐예요? 치역의 원소의 개수가 1인 걸 빼주시면 되겠습니다. 그래서 이런 식으로 접근을 해 주면 이 문제를 쉽게 해결하실 수가 있어요.
<SYNC Start=1587057><P Class=KRCC>
그러면 치역의 원소의 개수가 2인 것과 1인 걸 찾고 전체 함수의 개수만 찾으면, 그냥 연산만 해 주면 끝나겠죠? 그래서 전체 함수의 개수를 먼저 찾아볼게요. 전체 함수의 개수를 찾자.
<SYNC Start=1600308><P Class=KRCC>
그러면 전체 함수의 개수는 어떻게 찾으면 되느냐면, 우선 f(1), f(2), f(3), f(4), f(5)가 될 수 있는 게 전부 다 6, 7, 8이죠. 그래서 f(1)이 될 수 있는 경우의 수는 뭐다?
<SYNC Start=1613396><P Class=KRCC>
6 또는 7 또는 8. 그러니까 3가지. f(2)가 될 수 있는 경우도 어때요? 6 또는 7 또는 8이니까 3가지죠. 마찬가지로 3도 3가지, 4도 3가지, 5도 3가지예요. 결과적으로 3의 몇 제곱이다?
<SYNC Start=1628410><P Class=KRCC>
5제곱이다. 결국 뭐냐면, 후보군 6, 7, 8 중에서 선택은 5번 일어나야 되니까 서로 다른 3개 중에서 중복을 허용해서 몇 번 뽑아라?
<SYNC Start=1641225><P Class=KRCC>
5번 뽑아라. 이런 얘기예요. 그리고 함숫값을 하나씩 지정해 주는 거니까 일렬로 나열하는 상황이 되겠죠. 그래서 결국 이건 사실 중복순열의 수 3∏5와 같습니다.
<SYNC Start=1655312><P Class=KRCC>
그렇지만 몰라도 계산은 가능하죠? 그래서 전체 경우의 수는 243가지가 나와요. 그다음에 치역의 원소의 개수가 2개인 걸 찾아볼게요. 치역의 원소의 개수가 2개인 것.
<SYNC Start=1669454><P Class=KRCC>
그래서 치역은 집합이니까, 제가 이 기호도 써볼게요. 치역의 원소의 개수가 2인 사례들을 이제 찾아볼게요. 그러면 치역의 원소 중에서 2개만 나와야 되죠. 그러면 어떤 경우가 있느냐?
<SYNC Start=1683117><P Class=KRCC>
첫 번째, {6, 7}인 경우가 있겠죠. 첫 번째, {6, 7}인 경우, 치역이 이렇게 구성되는 경우. 두 번째, {6, 8}인 경우도 있을 거예요. 그다음 세 번째 {7, 8}인 경우도 있을 거예요.
<SYNC Start=1695987><P Class=KRCC>
이렇게 총 3가지로 분류가 될 텐데, 잘 생각해 보세요. 그러면 선택지가 6, 7밖에 없으니까 {6, 7}, {6, 7}, {6, 7}, {6, 7}. 총 몇 번 뽑아야겠어요?
<SYNC Start=1706087><P Class=KRCC>
f(1)로 가능한 경우 2개, f(2)로 가능한 경우도 {6, 7} 2개, f(3)으로 가능한 경우도 {6, 7} 2개. 이렇게 되니까 결과적으로 2의 몇 제곱? 2의 5제곱이 되겠죠.
<SYNC Start=1717248><P Class=KRCC>
그래서 분명 이것은 2의 5제곱이 될 거야. 마찬가지 방식으로 전부 다 2의 5제곱이 될 거죠? 그런데 여기에서 조심해야 될 게 하나 있어요.
<SYNC Start=1729570><P Class=KRCC>
내가 {6, 7}한테 자꾸 분배를 하고 있는 상황인데 한쪽에 몰릴 수 있을까요, 없을까요? 있겠죠. 6한테 몰려서 나온 함수가 있을 수도 있고요. 7한테 몰려서 나오는 함수가 있을 수도 있어요.
<SYNC Start=1744586><P Class=KRCC>
그렇잖아요. f(1)도 6이고 f(2)도 6이고 3도 6이고 4도 6이고 5도 6이라고 선택할 수 있잖아요. 그러면 치역의 개수가 몇 개예요? 1개죠.
<SYNC Start=1755345><P Class=KRCC>
그런데 2개짜리를 찾는다고 했으니까 얘한테 몰리는 경우와 얘한테 몰리는 경우, 2가지를 반드시 빼주셔야 합니다. 마찬가지로 빼주셔야 돼요. 빼주셔야 돼요. 이게 다 뭐라고요?
<SYNC Start=1767182><P Class=KRCC>
이게 다 뭐라고요? 치역의 원소의 개수가 하나가 되는 사례들을 빼준 거예요. 그러면 이제 2개짜리만 남겠죠? 그러면 이제 32에서 2를 뺐으니까 30.
<SYNC Start=1781553><P Class=KRCC>
여기도 30, 여기도 30이 되겠네요. 이제 마지막, 치역의 원소의 개수가 하나인 걸 찾을게요. 마지막 세 번째, 치역의 원소의 개수가 하나인 걸 찾을 건데요.
<SYNC Start=1795073><P Class=KRCC>
결국 치역의 원소의 개수가 하나라는 건 다 하나한테 몰린다는 거잖아요. 함숫값이 하나밖에 없어요. 무슨 함수일까요, 이런 함수는?
<SYNC Start=1802759><P Class=KRCC>
상수함수라고 부릅니다. 그래서 치역의 원소의 개수가 하나인 함수를 상수함수라고 불러요. 그런데 6으로 가거나 7로 가거나 8로 가거나, 3가지밖에 없죠?
<SYNC Start=1815560><P Class=KRCC>
그래서 몇 가지다, 이거는? 3가지다. 그래서 이 부분은 3가지다. 그러면 이제 다 찾았습니다. 243에서 이거 3개가 동시에 다 일어날 수 없으니까 합의 법칙을 쓰면 90을 빼주고
<SYNC Start=1830189><P Class=KRCC>
그다음 마지막에 3을 빼주면 정답이 나오겠죠? 그래서 전체 함수의 개수에서 치역의 원소가 하나짜리인 걸 빼주고.
<SYNC Start=1839367><P Class=KRCC>
치역의 원소가 2개짜리인 것을 빼주고 그다음 치역의 원소가 하나짜리인 걸 빼주면 이 문제에 대한 정답은 150가지가 되는 것을 알 수가 있습니다.
<SYNC Start=1854227><P Class=KRCC>
이렇게 해서 150가지가 나오셔야 해요. 그래서 만약에 이걸 누락했으면 값이 조금 다르게 나올 거예요. 그래서 그런 부분들을 조심해 주시면 정확한 답을 도출하실 수가 있습니다.
<SYNC Start=1867679><P Class=KRCC>
생각하는 건 그렇게 어렵지 않아요. 왜? 함수잖아요. 그러니까 중복순열에 대한 문제일 거예요. 그래서 중복순열로 생각을 하자.
<SYNC Start=1876621><P Class=KRCC>
그리고 찍더라도 조건이 추가되면 원래 전체 함수보다는 개수가 줄잖아요. 그래서 전체 함수에서 이 조건을 만족하지 않는 함수들을 뺀다는 생각을 하는 건 자연스러운 거예요.
<SYNC Start=1888749><P Class=KRCC>
그래서 치역의 원소가 2개인 것, 하나인 걸 찾으면 되는데. 이건 쉬운데, 여기에서 찾는 게 조금 어려우셨을 수도 있다. 그렇지만 중간에 사용하는 내용들은 중복순열이고
<SYNC Start=1900264><P Class=KRCC>
이걸 빼줘야 되는 건 어쩔 수 없죠. 빨리 판단을 하셔야겠죠. 그래서 이렇게 접근을 하시면 되겠습니다. 아마 이 문제가 제일 어려웠을 거예요.
<SYNC Start=1911529><P Class=KRCC>
여러분들이 느끼기에 이 문제가 제일 어려웠을 텐데, 아마 답이 좀 더 너무 크게 나온 사람도 있을 것 같아요. 제가 여러분들이 좀 많이 하는 실수도 봐준다고 했으니까
<SYNC Start=1922620><P Class=KRCC>
학생들이 틀린 풀이를 쓰고서는 왜 답이 안 나오는지 물어보는 경우가 종종 있거든요. 하나의 사례를 볼게요. 어떤 학생은 이렇게 생각했대요.
<SYNC Start=1932283><P Class=KRCC>
'선생님, 6, 7, 8이 어쨌든 선택이 되어야 하잖아요.' 그래서 얘네가 미리 선택됐다고 생각을 해 가지고, 어떤 얘네들 5개의 원소 중에서 6, 7, 8을 고를 3명의 아이들을 지정했어요.
<SYNC Start=1945683><P Class=KRCC>
원소 3개를 택하고 어쨌든 이렇게 1, 2, 3을 지정하면 얘한테 ‘너 6, 7, 8 중에 하나 선택해. 2도 6, 7, 8 중에 1이 선택하지 않은 아이를 선택해.’ 3한테도 ‘남는 거 하나 너 가져.’
<SYNC Start=1957741><P Class=KRCC>
그래서 일대일함수를 만들어 낼 수 있죠. 그러면 이 3개가 다 선택이 되는 거잖아요. 그래서 일대일함수를 만들어 내서 5P3을 만들어 냅니다.
<SYNC Start=1969892><P Class=KRCC>
그런 다음에 이제 원소가 2개가 남죠. 그러면 이미 6, 7, 8이 다 선택됐으니까 치역과 공역이 같아져 버렸잖아요. 그러면 얘네들은 마음대로 다 배치하면 되죠.
<SYNC Start=1980375><P Class=KRCC>
그러니까 3개, 얘도 3개. 중복순열의 수죠. 3∏2를 곱한 거예요. 그래서 이번에는 중복순열로 해서 나열했구나. 그래서 3∏2. 그런데 계산 결과가 어떤가 볼까요?
<SYNC Start=1992837><P Class=KRCC>
무지막지하게 커졌어요. 540이 나왔어요. 엄청 크네. 원래 답보다 크게 나왔어. 그러면 이제 이런 의심을 하셔야 돼요.
<SYNC Start=2001621><P Class=KRCC>
원래 답보다 숫자가 너무 크게 나왔다? 그러면 얘는 거의 100% 중복해서 센 거예요.
<SYNC Start=2012485><P Class=KRCC>
그래서 중복해서 센 경우인데, 540이라는 숫자는 일단 만들어 낼 수 있는 함수 개수보다도 커요. 보시겠어요? 아까 전체 함수의 개수 몇 개였나요?
<SYNC Start=2023359><P Class=KRCC>
1의 입장에서 3개, 2의 입장에서 3개, 3의 5제곱이었기 때문에 전체 함수의 개수가 243이었는데 그보다 훨씬 큰 숫자가 나올 수 있겠어요, 없겠어요?
<SYNC Start=2033811><P Class=KRCC>
없겠죠. 그러면 보고 ‘틀렸나 보다.’하고 넘어가면 또 틀리게 되거든요. 그래서 그 이유에 대해서 한번 확실하게 알고 넘어가는 게 좋을 것 같아요. 이유를 한번 볼게요.
<SYNC Start=2046798><P Class=KRCC>
우선 얘처럼 한번 생각해 보는 거예요. X가 있었고, 집합 X가 있고 집합 Y가 있어요. 그래서 X에는 1, 2, 3, 4, 5가 있고요. Y에는 6, 7, 8이 있는 상황에서 우선 얘한테 함수를 보낼 건데
<SYNC Start=2063824><P Class=KRCC>
1, 2, 3을 정해 가지고 얘네로 일대일함수를 만든다고 생각을 했습니다. 그러면 1은 6을 선택하고요. 2는 7을 선택하고요.
<SYNC Start=2072871><P Class=KRCC>
3은 8이 선택되게끔 해 놓고 4, 5는 자유롭게 ‘너네 가고 싶은 곳으로 가.’라고 해서 그중 하나를 이렇게 선별했습니다. 1명은 7로 가고 1명은 8로 가고.
<SYNC Start=2083895><P Class=KRCC>
그렇다면 이제는, 그래. 이렇게 선택을 했을 때 얘를 일대일함수를 돌렸을 때 이런 원소가 하나는 일단 있는 거죠.
<SYNC Start=2092824><P Class=KRCC>
그다음에 또 하나, 이번에는 1, 2, 3을 선택하지 않고 1, 2, 3 말고 1, 2, 3, 4, 5에서 1, 2, 5를 골랐어요.
<SYNC Start=2104936><P Class=KRCC>
그래 놓고 얘네를 가지고, 얘를 가지고 한번 일대일함수를 만들어 볼까 해서 만들었습니다. 그래서 1은 6으로 보내고 2는 7로 보내고 5는 8로 보냈어요.
<SYNC Start=2116026><P Class=KRCC>
그래 놓고 3, 4는 너네가 원하는 대로 마음대로 가라고 해 놓은 상태니까, 그중에 아무 거나 하나 다 되는 거죠. 그래서 3을 8로 보내고 4를 7로 보냈어요.
<SYNC Start=2126938><P Class=KRCC>
그러면 보세요. 얘는 저 일대일함수를 1, 2, 3으로 일대일함수를 만든 경우예요. 일대일함수.
<SYNC Start=2136900><P Class=KRCC>
얘는 1, 2, 5로 일대일함수를 만든 케이스예요. 1, 2, 5로 선택해서 일대일함수를 만든 케이스. 그런데 결과는 어떤지 한번 보세요.
<SYNC Start=2147875><P Class=KRCC>
1은 6으로 왔어요, 둘 다. 2는 7로 갔어요, 둘 다. 3은 8로 갔네요, 둘 다. 4는 7로 갔고요. 5는 8로 갔어요. 함수가 정확히 어때요?
<SYNC Start=2158006><P Class=KRCC>
같죠. 같다고요. 그런데 1, 2, 3을 일대일함수로 센 경우에도 얘가 들어갔고요. 1, 2, 5로 선택했을 때도 얘가 들어갔으니까 중복됐잖아요. 다른 곳에서는 없겠어요?
<SYNC Start=2170880><P Class=KRCC>
다른 곳에서도 이렇게 분명히 중복되는 사례들이 있기 때문에 값이 이렇게 540만큼이나 크게 나온 거예요. 그래서 이 풀이의 맹점은 뭐다?
<SYNC Start=2180094><P Class=KRCC>
이렇게 일대일함수를 만들어 내고 나머지를 중복으로 나열하는 이 과정 속에서 '중복해서 센 경우들이 엄청 많이 포함되는구나.'라고 생각을 할 수 있는 거죠.
<SYNC Start=2190512><P Class=KRCC>
그래서 틀린 풀이가 되겠습니다. 그러면 왜 틀렸는지 이제 이유를 알았어요. 그러면 이제 생각을 해 봅시다. 얘처럼 아예 6, 7, 8이 미리 선택됐다고 생각을 해서 풀면 틀릴까요?
<SYNC Start=2204959><P Class=KRCC>
이렇게 해서도 분명히 맞힐 수 있는 풀이법이 있을 거예요. 그래서 이제 풀이를 수정하시면 돼요. 이제 한번 그러면 수정해 볼게요.
<SYNC Start=2213040><P Class=KRCC>
그러면 어떻게 해서 수정해서 접근할 수 있을까? 6, 7, 8이 미리 선택됐다고 생각을 한다면 6, 7, 8이 뽑히는 것들이 5번이면 될 거예요.
<SYNC Start=2223708><P Class=KRCC>
그래서 6, 7, 8이 이렇게 있을 때 얘가 뽑히는 횟수를 계산하시면 돼요. 횟수는 총 몇 번 일어나야 돼요? 5번. 그래서 어떻게 생각하자고요? 이것들이 선택되는 횟수에 집중하시면 돼요.
<SYNC Start=2241913><P Class=KRCC>
그러면 중복될 일이 없을 거예요. 그래서 어떻게 볼 거냐. 6이 1번, 7이 1번, 8이 3번 선택되는 경우도 있을 거고요. 혹은 6이 1번, 7이 3번, 8이 1번 선택되는 경우도 있을 거고요.
<SYNC Start=2255114><P Class=KRCC>
6이 3번, 7이 1번, 8이 1번 선택되는 경우가 있을 거예요. 총 선택은 5번 일어나야 되죠. 그렇죠? 1, 2, 3, 4, 5니까, 정의역의 원소가.
<SYNC Start=2264124><P Class=KRCC>
또 어떤 경우도 있을까요? 얘 2번, 얘 2번, 얘 1번. 얘 2번, 얘 1번, 얘 2번. 그다음에 얘 1번, 얘 2번, 얘 2번. 이렇게 일어나는 경우 외에는 치역이 공역과 같아지는 사례가 없겠죠.
<SYNC Start=2277877><P Class=KRCC>
적어도 1번씩은 선택을 당해야 되니까. 그러면 볼게요. 얘는 결국 이 부분을 따져보면, 6, 7, 8, 8, 8이라는 숫자를 f(1)부터 f(5)라고 생긴 자리에다가, 서로 다른 자리에다가 어떻게 해요?
<SYNC Start=2295839><P Class=KRCC>
일렬로 나열하는 방법의 수와 똑같아요. 그래서 여기 f 함숫값들의 자리에다가 6, 7, 8, 8, 8을 일렬로 배치하는 경우의 수와 같다고요. 그러면 여러분들은 이렇게 생각하면 돼요.
<SYNC Start=2309763><P Class=KRCC>
그러면 이건 5개 그냥 일단 배치하고, 여기 똑같은 애들 있죠. 8, 8, 8. 얘네들끼리는 서로 위치를 바꿔도 어때요? 항상 같죠. 하나로 세게 되죠.
<SYNC Start=2320284><P Class=KRCC>
자리가 같은 경우의 수가 되겠죠. 어떻게? 원순열처럼 이 개들끼리 자리를 바꾸는 것만큼 나눠 주면 돼요. 개수가 줄잖아요. 이들끼리 자리를 바꾸는 건 하나로 세기 때문에.
<SYNC Start=2332170><P Class=KRCC>
그래서 이 경우는 몇 개가 나온다? 5×4=20이 나와요. 마찬가지 방식으로 얘도 이번에는 7이 3개 뽑힌 경우니까 똑같이 몇 개가 나온다?
<SYNC Start=2342847><P Class=KRCC>
20개가 나오겠죠. 얘도 20개가 나올 거예요. 그러면 얘는 어떨까요, 얘는? 얘는 이제 분명히 6, 6, 7, 7, 8을 f(1)부터 f(5)라는 자리에 일렬로 배열해서 배치하는 거니까
<SYNC Start=2357849><P Class=KRCC>
얘도 왠지 5!을 한 다음에 7끼리 자리를 바꿔도 똑같고요. 6끼리 자리를 바꿔도 똑같을 테니까 분명히 2로 나눈 애들이 될 것 같다는 생각이 들겠죠.
<SYNC Start=2371180><P Class=KRCC>
그래서 이 결과는 계산해 보니까 5×4×3, 2와 1을 미리 지우고 계산을 해 보니 얼마다? 30이라는 사실을 알 수 있어요. 그러면 마찬가지로 이들도 다 30이겠죠.
<SYNC Start=2384784><P Class=KRCC>
그러면 따져볼게요. 이건 다 동시에 일어날 수 없는 사례들이잖아요. 그래서 이렇게 더하면 60, 이렇게 더하면 60.
<SYNC Start=2394056><P Class=KRCC>
이렇게 더하면 90이죠? 여기까지 90. 그래서 60이랑 90을 더하면 합의 법칙에 의해서 답이 똑같이 150이 나오는 경우를 알 수가 있습니다.
<SYNC Start=2406189><P Class=KRCC>
이 내용은 사실 다음 시간에 배울 ‘같은 것을 포함한 순열의 수’라는 내용인데요. 그때 들으시면 이 내용이 좀 더 와 닿으실 겁니다.
<SYNC Start=2416269><P Class=KRCC>
어찌됐든 이 풀이에서 이 첫 번째 생각은 틀린 생각이 아니에요. 6, 7, 8이 미리 선택되었다고 생각하고 나서 푸는데, 어쨌건 선택은 5번만 일어나야 하니까
<SYNC Start=2429114><P Class=KRCC>
선택 5번이 다 일어났다고 생각해서 선택되는 횟수를 지정해 가지고 순열의 수를 생각해 주면 답을 똑같이 150으로 도출하실 수가 있어요.
<SYNC Start=2441724><P Class=KRCC>
그래서 틀린 풀이도 그냥 넘어가지 마시고요. 맞는 풀이로 바꾸려는 노력을 해 보시면 문제를 쉽게 푸는 하나의 열쇠가 될 거예요.
<SYNC Start=2452332><P Class=KRCC>
그다음 문제로 한번 가볼게요. 그다음 문제는 뭘까요? 정육면체의 각 면에 빨간색과 파란색을 포함한 서로 다른 6가지 색으로 한 면에 한 색깔씩 칠한대요.
<SYNC Start=2464258><P Class=KRCC>
그런데 빨간색을 칠한 면하고 파란색을 칠한 면이 이웃하도록 칠하는 경우의 수는 m. 그다음 마주 보게끔 칠하는 경우의 수는 n일 때 'm+n의 값을 구하시오.'라고 되어 있습니다.
<SYNC Start=2477098><P Class=KRCC>
색칠 문제인지 아닌지 판단을 해야 되는데, 마지막 줄이 엄청난 힌트예요. 뭐라고 되어 있어요? 회전해서 일치하는 경우는 같은 것으로 본다고 명확히 명시가 되어 있죠.
<SYNC Start=2490261><P Class=KRCC>
그래서 얘는 분명히 분석을 하면, 이거 분명히 뭐일 거야? '원순열 문제일 거야.'라는 사실을 알 수 있어요. 원순열.
<SYNC Start=2501183><P Class=KRCC>
그래서 원순열이랑 관련되는데, 원래는 우리가 그냥 위에서 바라봤을 때 평면 같은 탁자에다가 사람을 배치하거나, 아니면 평면에서 볼 수 있는 어떤 물체에 색칠하는 경우였잖아요.
<SYNC Start=2512845><P Class=KRCC>
그런데 얘는 어때요? 이번에는 육면체가 나왔습니다. 면에 여러 개가 되어 있는 입체도형이 나왔어요. 그래서 얘는 왠지 이번에는 면이 많아졌어.
<SYNC Start=2523312><P Class=KRCC>
다면체에서 이웃하게 칠하는 경우와 마주보게 칠하는 경우까지 물어보고 있구나. 그래서 이 두 가지 내용의 콜라보레이션이에요. 같이 협업을 했습니다.
<SYNC Start=2534219><P Class=KRCC>
그러면 난이도가 높아졌을 텐데, 그러면 어떻게 접근할 수가 있을까요? 일단 분석을 했으면 접근을 하셔야 될 거예요. 얘는 어떻게 하면 문제를 해결할 수 있을지 이제 생각해 보면 되겠죠.
<SYNC Start=2548149><P Class=KRCC>
첫 번째로는 이웃하는 걸 먼저 칠해 줘야 돼요. 그런데 어쨌건 이 문제의 조건에서는 빨간색과 파란색을 칠한 다음에, 그다음에 뭔가 이루어져야겠죠?
<SYNC Start=2559252><P Class=KRCC>
그래서 접근 방법은 이 문제의 조건을 만족하도록 칠하고 나서, 그러고 나서 나머지 면을 고려해 주면 되겠죠.
<SYNC Start=2571861><P Class=KRCC>
칠한 후 나머지 면을.
<SYNC Start=2579385><P Class=KRCC>
나머지 면의 경우의 수를 찾아주시면 돼요.
<SYNC Start=2587350><P Class=KRCC>
그러면 이제 어떻게 된다고요? 구체적으로 쓸게요. 조건이랑 얽혀 있는 애는 빨간색과 파란색이에요. 그래서 얘는 풀 때 어떻게 접근하면 되느냐면
<SYNC Start=2596410><P Class=KRCC>
빨간색을 칠할 수 있는 경우의 수랑 그다음에 파란색을 칠할 수 있는 경우의 수를 각각 구한 다음에, 나중에 무슨 법칙을 쓰겠어요?
<SYNC Start=2606427><P Class=KRCC>
곱의 법칙을 쓸 거예요. 색깔을 하나 구성해서 입체를 구성해야 되기 때문에. 그리고 나머지 네 면. 그렇지? 나머지 네 면을 칠하는 방법의 수를 모두 다 곱해 주면 답을 구하실 수 있을 겁니다.
<SYNC Start=2620443><P Class=KRCC>
그래서 이 생각으로 이제 한번 같이 가보도록 할게요. 빨간색을 칠하는 경우의 수를 구해 볼게요. 빨간색을 칠하는 경우의 수.
<SYNC Start=2630480><P Class=KRCC>
그러면 빨간색을 칠하는 경우의 수는 여기 칠하든 여기 칠하든 여기 칠하든 여기 칠하든 다 돌리면 어쨌건 똑같이 돌아오잖아요. 1가지예요, 1가지. 그래서 1가지구나.
<SYNC Start=2640925><P Class=KRCC>
그래서 아무 데나 하나 칠해 놓을게요. 돌리면 어차피 똑같으니까. 빨간색을 이렇게 칠했습니다. 그런데 파란색을 이웃하게 칠해야 된대요.
<SYNC Start=2649476><P Class=KRCC>
파란색을 이웃하게 칠하려면 이거 옆에 모서리를 하나 공유해야지 이웃하는 거거든요. 그러면 이쪽 면에 칠하거나 이쪽 면에 칠하거나 이쪽 면에 칠하거나 이 뒷면에 칠하거나.
<SYNC Start=2659276><P Class=KRCC>
넷 중 하나인데, 돌리면 어떻습니까? 다 똑같죠. 결과적으로 하나구나. 그래서 파란색, 블루를 칠하는 경우는 1가지일 거예요.
<SYNC Start=2671478><P Class=KRCC>
그러면 1가지, 1가지니까 이제 나머지 뭘 고려한다고요? 네 면을 고려하시면 돼요. 그러면 나머지 네 면은 어떻게 될 것인가.
<SYNC Start=2681068><P Class=KRCC>
그러면 나머지 네 면이 어떻게 생겼는지가 궁금하시죠? 일단 파란색 어디에 칠하든 똑같으니까, 파란색을 이쪽에 이렇게 칠했습니다.
<SYNC Start=2689461><P Class=KRCC>
그러면 나머지 네 면을 생각해 볼게요. 이 앞에, 여러분 정면에 보이는 이 면은 어떻게 생겼느냐면 위에는 빨간색이 붙어 있고 왼쪽에는 파란색이 붙어 있고
<SYNC Start=2700547><P Class=KRCC>
그다음에 나머지 두 면은 이렇게 흰색으로 처리돼 있는 그런 정사각형일 거예요. 그다음 또 이제 여러분이 보시는 방향에서 아랫면에 붙어 있는 건 한쪽만 파란색으로 칠해져 있어요. 맞죠?
<SYNC Start=2715261><P Class=KRCC>
여러분, 아래에서 보시는 건 한쪽만 파란색으로 칠해져 있는 면이다. 그다음에 이제 여러분, 이 옆에서 보는 건 뭐예요? 위에만 빨갛게 칠해진 면이겠죠. 그래서 그것도 한번 그려볼게요.
<SYNC Start=2727490><P Class=KRCC>
위에서 봤을 때만 이렇게 된다. 그러면 이제 여러분, 뒷면 있죠? 이렇게 돌아가서 이 뒷면. 이 뒷면을 투시해서 보지 말고요. 정말로 이 건물처럼 생긴 육면체 뒤에 사람이 이렇게 서 있다고.
<SYNC Start=2741301><P Class=KRCC>
이 뒷면에 서 있다고 생각하면서 바라보시면, 위에는 빨갛고 파란색은 오른쪽에 있어요. 그래서 위에는 빨갛고 파란색은 오른쪽에 있습니다.
<SYNC Start=2752417><P Class=KRCC>
그러면 이제 물어볼게요. 이게 나머지 네 명입니다. 이 나머지 네 면 중에서 자리가 같은 경우의 수가 있나요?
<SYNC Start=2761301><P Class=KRCC>
없죠. 이거 2개를 같다고도 생각할 수 있는데, 이거 회전해 보세요. 얘랑 절대 안 겹쳐요. 그래서 이 4개의 자리는 모두 다 다른 자리로 생각을 할 수 있어요.
<SYNC Start=2773462><P Class=KRCC>
자리가 전부 다 구분이 되네요. 그러면 색깔을 마음대로 막 칠할 수 있겠죠. 뭘 생각할 수 있겠다? 순열. 순열을 고려할 수 있겠다.
<SYNC Start=2782618><P Class=KRCC>
자리가 다 다르니까, 순서가 중요해지잖아요. 그래서 남은 4가지 색 중에 하나. 중복되면 안 되니까 3개, 그다음 2개, 그다음 하나를 뿌려주면 되니까
<SYNC Start=2792556><P Class=KRCC>
이 네 면을 칠하는 경우의 수는 몇 팩토리얼이겠구나? '4!이겠구나.'라는 사실을 알 수가 있습니다. 그래서 내가 찾고자 하는 이웃하게 칠하는 m의 값은 1×1×4! 해서 정답은 24가 될 거예요.
<SYNC Start=2808605><P Class=KRCC>
그런데 아직 이 문제의 정답은 못 찾았어요. 두 번째로 뭘 하셔야 돼요? 이제 마주보게끔 칠하는 경우의 수가 있을 거예요. 그래서 마주보게 칠하는 경우의 수, n도 찾으셔야 합니다.
<SYNC Start=2820594><P Class=KRCC>
그러면 다음 것으로 넘어가서, 마주보고 칠하는 경우를 구할게요. 그러면 마찬가지입니다. 빨간색 칠하는 경우는 아까와 마찬가지로 1개겠죠.
<SYNC Start=2829681><P Class=KRCC>
제가 일부러 안 지웠어요. 똑같습니다. 그런데 마주보게끔 파란색을 칠해야 되죠. 그러면 파란색도 어떨까요? 그냥 1가지겠죠. 왜냐하면 얘랑 마주보게끔 칠해 줘야 되니까.
<SYNC Start=2843676><P Class=KRCC>
이거 한 자리로 이미 고정이 됐잖아요. 그래서 1가지. 그러면 이제 나머지 뭐가 고려됩니까? 네 면들이 고려가 되겠죠. 그래서 남은 네 면을 칠하는 경우의 수를 찾아야 되는데, 보세요.
<SYNC Start=2857538><P Class=KRCC>
여기든 여기든 이 뒷면이든 이쪽이든, 네 면이 다 어떻게 생겼어요? 똑같이 생겼어요. 위에는 빨갛고요. 밑에는 파랗고요. 그리고 양 옆은 아직 아무하고도 만나지 않아서
<SYNC Start=2869615><P Class=KRCC>
하얀 이런 애들이 총 몇 개가 있어요? 4개가 있어요. 원순열이죠? 총 여기다가 네 면을 칠할 때 4!로 나열을 하고 싶은데, 자리가 같은 경우의 수만큼 나눠 주면 되죠.
<SYNC Start=2883693><P Class=KRCC>
이 4개가 다 자리가 똑같죠. 똑같이 생겼으니까. 뭐로 나눈다? 4로 나누시면 되겠습니다. 그래서 곱의 법칙을 활용해서 곱하시면 결과적으로 이것은 3!이 되고, 그 값은 6이 되겠습니다.
<SYNC Start=2898354><P Class=KRCC>
그런데 이 문제에서 이 m과 n을 찾아서 더하라고 했었죠? 그래서 정답은 m+n은 24+6이니까 정답은 30이 되겠습니다.
<SYNC Start=2911297><P Class=KRCC>
그래서 입체도형을 칠할 때도 집중해서 칠했을 때 결과적으로 같으면 하나로 세셔야 돼요. 그것만 집중을 하시면 이 문제를 틀릴 일은 없을 겁니다.
<SYNC Start=2923724><P Class=KRCC>
그래서 이제 푸는 과정 속에서 조건을 만족하도록 칠해야 하니, 빨간색과 파란색을 조건을 만족하도록 칠해 놓고 나머지 면을 고려하자는 게 이 문제에 대한 접근법이었고요.
<SYNC Start=2936282><P Class=KRCC>
이 접근법에 따라서 칠할 때 이거 2개는 너무 잘 칠하는데, 이 문제는 이 네 면이에요. 그 네 면이 잘 안 보이면, 직접 그려 보시면 자리가 같은 경우가 있는지 없는지 판단할 수 있고요.
<SYNC Start=2948751><P Class=KRCC>
그러면 이것을 원순열로 생각할지, 그냥 일반 순열로 생각할지 바로 바로 판단하실 수가 있습니다. 여기까지 하게 되면 이제 여러분들의 입장에서는 사실 이 교재에 있는 문제를 다 푼 거예요.
<SYNC Start=2963564><P Class=KRCC>
다 푼 건데, 이렇게 하면 좀 아쉽지 않습니까? 우선 그전까지는 입체도형이 안 나와서 세모 식탁에다가 나열하고 네모 식탁에다가 나열하고 책상에 나열하고 했는데
<SYNC Start=2976770><P Class=KRCC>
입체도형이 나왔으니, 우리는 이것까지도 알아봤으면 좋겠어요. 이제 이 문제를 한번 되돌아서 곱씹어 보면, 정사면체를 칠하는 경우의 수가 무엇일지.
<SYNC Start=2987832><P Class=KRCC>
그냥 퓨어한 정육면체를 칠하는 경우의 수가 뭘지 궁금해 봐야 돼요. 왜냐하면 이 정육면체에 특정한 조건이 결합돼서 아까 24가지, 6가지가 나왔었잖아요.
<SYNC Start=2998803><P Class=KRCC>
그러면 사실 퓨어한 상태일 때보다는 개수가 적게 나오니까, 찍더라도 전체 경우의 수보다는 작게 찍어야 될 것 아닙니까? 그렇죠?
<SYNC Start=3008502><P Class=KRCC>
그래서 정사면체를 그냥 색깔 4가지를 가지고 칠하는 방법의 수와 정육면체를 색깔 6가지를 가지고 칠하는 방법의 수에 대해서 소개를 한번 해 볼게요.
<SYNC Start=3020758><P Class=KRCC>
아이디어는 뭐냐면, 입체도형의 구성 요소를 생각해 보면 쉽게 접근할 수 있어요. 입체도형의 구성 요소. 너무 머나먼 옛날이야기일 텐데요. 중학교 때 배웠어요.
<SYNC Start=3032867><P Class=KRCC>
중학교 때 입체도형이 이렇게 있을 때 밑면이 있고 뭐가 있다고 배우셨나요? 옆면이 있다고 배우셨습니다. 그래서 둘 다 어떻게 해결할 거냐면
<SYNC Start=3043334><P Class=KRCC>
밑면을 칠하는 경우의 수를 구한 다음, 그다음에 뭐라고요?
<SYNC Start=3052626><P Class=KRCC>
옆면을 칠하는 경우의 수를 구해서 어쨌건 전체 입체도형을 다 칠해야 되니까 곱의 법칙을 통해서 곱할 거예요.
<SYNC Start=3060854><P Class=KRCC>
그러면 밑면을 이제 칠해 볼게요. 정사면체의 경우는 밑면을 칠할 때 어쨌든 네 가지 색 중에 한 자리는 이렇게 차지할 거예요. 그렇죠?
<SYNC Start=3068858><P Class=KRCC>
그런데 여기에 칠하든 여기에 칠하든 사실 똑같으니까, 그냥 여기에 칠하는 걸로 생각할게요. 밑면이니까. 그러면 4가지 색 중에 뭔가 하나를 선정해 가지고 칠한다고 하면 1가지죠, 그냥 1가지.
<SYNC Start=3081843><P Class=KRCC>
밑면을 칠하는 경우는 1가지다. 어쨌건 색깔 하나는 한 면을 칠하게 돼 있으니까. 그렇죠? 그러면 이제 옆면을 볼게요. 옆면을 지금 보면 하나, 둘, 세 개죠.
<SYNC Start=3093853><P Class=KRCC>
그런데 지금 이 그림에서는 옆면이 2개밖에 안 보이고, 뒷면으로 구성돼 있는 세 번째는 뒤 저편에 가 있으니까 잘 안 보이잖아요. 그래서 이제 어떻게 할 거냐면
<SYNC Start=3103720><P Class=KRCC>
3개의 면에 그게 어떻게 분포돼 있는지, 구성돼 있는지를 보고 싶어 가지고요. 여러분이 신이 돼서 이 꼭대기를 이렇게 내려다볼 거예요.
<SYNC Start=3112799><P Class=KRCC>
여러분들이 신이 돼서 여러분의 관점에서는, 이렇게 눈이 있어요. 눈이 돼 가지고 여기 꼭지를 바라볼 거예요, 이 부분을.
<SYNC Start=3120969><P Class=KRCC>
그러면 이제 어떻게 되는 거냐면, 옆면은 이렇게 생겼어요. 이 옆면은 위에서 바라보면 이렇게, 이렇게 생겼을 거예요. 그렇죠? 정삼각형을 정확히 3등분한 걸로 나오겠죠.
<SYNC Start=3135762><P Class=KRCC>
어디에서 많이 봤죠? 원순열과 관련된 기본 유형에서 너무 많이 풀었어요. 얘는 분명히 뭐일 거다? 일단 3개 중에서 하나를 선택해서 1명을 먼저 배치한다. 한 색깔을 먼저 칠한다.
<SYNC Start=3149884><P Class=KRCC>
얘나, 그 한 색깔을 여기 칠하나 여기 칠하나 다 똑같죠. 경우의 수는 1가지예요, 1가지. 그러면 얘를 여기다 칠하는 순간, 이것의 왼쪽, 이것의 오른쪽으로 자리가 다 구별되죠. 몇 팩토리얼?
<SYNC Start=3164579><P Class=KRCC>
2!. 그래서 옆면을 칠하는 경우의 수는 2가 되고요. 1×2를 하게 되면 얼마가 나온다? 2가지가 나옵니다. 그래서 정사면체를 칠하는 경우의 수는 2가지밖에 없어요.
<SYNC Start=3180033><P Class=KRCC>
그다음에 두 번째, 정육면체로 갈게요. 정육면체도 마찬가지로 밑면을 칠하고요. 그다음에 옆면을 칠할게요. 그러면 학생들은 중학교 때의 기억이 저편으로 갔기 때문에 이런 질문을 합니다.
<SYNC Start=3195059><P Class=KRCC>
‘선생님, 윗면은요? 윗면?’ 얘를 다시 이렇게 회전을 시키면 윗면이라고 생각했던 게 다시 밑으로 내려가서 그냥 둘 다 밑면이라고 불러요.
<SYNC Start=3206509><P Class=KRCC>
그래서 이 밑면은 지금 정육면체에서는 2개가 있는 거예요. 여기도 있고 여기도 있고. 그래서 밑면을 칠하는 것부터 볼게요.
<SYNC Start=3214861><P Class=KRCC>
이제 밑면을 칠할 건데, 정말로 밑에 있는 것처럼 보이는 밑면에다가 어떤 한 색을 칠하는 경우의 수는 여기 칠하든 여기 칠하든 여기 칠하든 돌리면 다 똑같기 때문에 1가지예요. 1가지.
<SYNC Start=3229639><P Class=KRCC>
그다음에 얘를 마주보고 있는 면. 이 면도 밑면이거든요. 얘를 마주보고 있는 면을 칠하는 경우의 수를 이제 구할게요. 그러면 어쨌건 내가 칠한 이 색하고 마주보는 색이기 때문에
<SYNC Start=3242863><P Class=KRCC>
얘의 뚜껑의 자리는 정확히 구별이 돼요. 무슨 말이냐? 지금 색깔이 총 6가지가 있는데, 하나는 칠해서 5개를 가지고 있는데 이 5가지 색을 1, 2, 3, 4, 5라고 할게요.
<SYNC Start=3255061><P Class=KRCC>
이 빨간색이 1을 마주보고 있는 경우와 이 빨간색이 2를 마주보고 있는 경우와 이 빨간색이 3을 마주보고 있는 경우는 다 다른 경우죠.
<SYNC Start=3263581><P Class=KRCC>
그러니까 이 5가지를 풀로 세어 주는 거예요. 남은 5가지 중에 한 색을 정해서 여기에 칠하는 거예요. 그래서 이 5는 뭐다?
<SYNC Start=3272913><P Class=KRCC>
마주보는 면을 의미합니다. 뭐라고요? 마주보는 면. 누구를? 얘를 마주보는 면. 그다음에 이제 옆면을 칠하는 경우의 수를 구해야겠죠.
<SYNC Start=3286605><P Class=KRCC>
그러면 이제 옆면을 살펴볼게요. 옆의 애들을 봤더니, 전부 다 똑같은 상황이에요. 아까 바로 직전에 푼 문제와 같은 상황이죠. 위에는 파랗고 밑에는 빨갛고. 그렇죠?
<SYNC Start=3300981><P Class=KRCC>
이런 애들이 총 몇 개가 있는 거예요, 옆면이? 이런 것이 총 4개를 가지고 있는 상황입니다. 자리 구별 돼요, 안 돼요?
<SYNC Start=3309103><P Class=KRCC>
안 되죠. 이 4개를 똑같은 하나로 취급하기 때문에 그냥 옆면은 4개 다 나열한 다음에 자리가 같은 경우의 수에 해당하는 4개를 나눠 주시면 되겠네요.
<SYNC Start=3320643><P Class=KRCC>
그래서 곱의 법칙에 의해서 5×3!이 돼서 5×6 해서 정답은 30이 되겠습니다. 그래서 아까 그 문제가 답이 30보다는 다 작게 나왔던 거예요. 그렇죠?
<SYNC Start=3335113><P Class=KRCC>
최대 경우의 수가 30가지인데. 그렇죠? 6가지 색깔을 가지고 이 육면체를 칠하는 경우의 수가 30가지인데, 얘를 넘어설 수는 없을 것 아니에요?
<SYNC Start=3344023><P Class=KRCC>
그래서 첫 번째, 이웃하도록 칠하는 경우의 수는 몇 가지였어요? 24가지. 그리고 어떻게? 마주보게끔 칠하는 경우는 몇 개였어요? 6개였죠.
<SYNC Start=3352926><P Class=KRCC>
그래서 그때 숫자를 외우라는 건 아니고요. 전체 가짓수는 30가지니까 그보다는 작게 나오겠거니 생각하시면 되겠습니다.
<SYNC Start=3361797><P Class=KRCC>
이렇게 해 가지고 기존에 있는 문제뿐만 아니라 조금 더 심화된 문제, 그리고 조금 더 일반화된 문제들을 같이 해결해 봤어요.
<SYNC Start=3370688><P Class=KRCC>
그래서 문제를 푸실 때 여러분들이 단순히 그냥 풀고 ‘맞았어.’ 하고 넘어가지 마시고요. ‘내가 이걸 왜 이렇게 풀었지? 왜 풀이는 이렇게 풀었지?’하면서 분석해 보시면서
<SYNC Start=3380947><P Class=KRCC>
더 좋은 풀이를 향해서 나아가시면 어느 순간 수학이 되게 쉬워지고 친구들한테도 더 좋은 방법을 알려줄 수 있어서 되게 재미있게 느껴질 거예요.
<SYNC Start=3390863><P Class=KRCC>
그래서 오늘도 뒤에 학습정리가 나올 거고요. 그 뒤에 이벤트가 있는데, 오늘도 이거 같이 듣느라고 너무 고생하셨어요. 우리 이제 3강에서 만나겠습니다.
<SYNC Start=3402033><P Class=KRCC>
&nbsp;
</BODY>
</SAMI>