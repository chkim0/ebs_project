<SAMI>
<HEAD>
<STYLE TYPE="text/css">
<!--
P { margin-left:8pt; margin-right:8pt; margin-bottom:2pt;
    margin-top:2pt; font-size:12pt; text-align:left;
    font-family:굴림, Arial; font-weight:normal; color:white;
    background-color:#405A8D; }
.KRCC { Name:한국어; lang:ko-KR; SAMIType:CC; }
#STDPrn { Name:Standard Print; }
#LargePrn { Name:Large Print; font-size:20pt; }
#SmallPrn { Name:Small Print; font-size:10pt; }
-->
</STYLE>
</HEAD>
<BODY>
<SYNC Start=10737><P Class=KRCC>
여러분들의 눈높이에서 개념부터 문제 해결에 이르는 길까지 차근차근 짚어드리겠습니다. EBS 수학 영역의 서영란입니다.
<SYNC Start=18783><P Class=KRCC>
이제 두 번째 유형의 감 잡기 시간입니다. 문제 해결을 할 건데요. 우리 지난 시간에 제가 자세히 안내해 줬던 대로 같은 것이 있는 순열의 수로 풀거나
<SYNC Start=29527><P Class=KRCC>
아니면 조합을 활용해서 문제를 해결해 보도록 하겠습니다. 첫 번째, 수능 유형 체크인데요. 문제를 한번 보시죠.
<SYNC Start=37528><P Class=KRCC>
문제를 보시면 문자 A, A, A, B, C, D, E, F가 각각 하나씩 적힌 8장의 카드가 있어요. 그런데 8장의 카드 중에서 5장을 뽑아서 일렬로 나열한다네요.
<SYNC Start=50140><P Class=KRCC>
그런데 일렬로 나열한다? 결국 순열 문제겠죠. 그런데 지금 상황을 보니까 A, A, A. 같은 것이 있네요. 결국 이 문제를 분석해 보면 어떻다? 이 문제를 분석해 보면
<SYNC Start=61737><P Class=KRCC>
&nbsp;
<SYNC Start=65295><P Class=KRCC>
얘를 활용해야겠구나. 같은 것이 있는 순열의 수를 활용해야겠구나라는 생각을 해 볼 수가 있습니다. 그러고 나서 또 자세히 살펴보니까, 기존에 있는 문제들은 8장이 있으면 8장을 다 나열했죠.
<SYNC Start=79180><P Class=KRCC>
그런데 이 문제의 경우는 8장의 카드 중에서 5장을 뽑아서 일렬로 나열한다고 했으니까 지난번하고는 조금 다르겠구나.
<SYNC Start=86717><P Class=KRCC>
그중에서 5장을 뽑으니까 8장 중에 다 하는 게 아니고 5장을 뽑아서 나열한대요. 뽑아 나열한다는 조건이 붙어 있어요. 뽑아 나열.
<SYNC Start=100694><P Class=KRCC>
&nbsp;
<SYNC Start=103484><P Class=KRCC>
그러면 이제 이 두 조건을 만족하게끔 문제를 해결하시면 될 텐데, 우리가 생각해 보는 거예요. 똑같은 건 A, A, A 3개가 있습니다.
<SYNC Start=111720><P Class=KRCC>
그러면 우리가 그 5장을 뽑았을 때 그 안에는 A가 3개가 들어갈 수도 있고 2개가 들어갈 수도 있고 하나가 들어갈 수도 있고 안 들어갈 수도 있겠죠.
<SYNC Start=120499><P Class=KRCC>
그래서 이 문제에 접근하는 방식은 무엇이냐면, A를 기준으로. 그렇죠? A의 개수를 기준으로, A를 기준으로 뭐죠? 분할해 가지고 생각을 하시면 돼요. A를 기준으로 경우의 수를 나눈다.
<SYNC Start=138182><P Class=KRCC>
&nbsp;
<SYNC Start=143057><P Class=KRCC>
그러면 생각해 보세요. 이 5장 안에 A가 총 몇 개 들어가 있는 경우? 3개 다 들어가 있는 경우도 있을 거고요. 분명히 A가 전부 다가 아니고 2개만 들어가 있는 경우도 있을 거고
<SYNC Start=155359><P Class=KRCC>
A가 하나만 들어가 있는 경우도 있고 A가 아예 안 들어가는 경우도 있겠죠. 그래서 이렇게 4가지 경우로 나눠 가지고 문제를 해결해 주시면 될 것 같습니다.
<SYNC Start=167505><P Class=KRCC>
이제 우리가 어떻게 접근해야 될지 감을 잡으셨으니까, 첫 번째 생각 풀이로 가보시죠. 같은 것이 있는 순열의 수를 활용할 건데, 첫 번째 생각은 어떻다고요?
<SYNC Start=178690><P Class=KRCC>
A가 3개, A가 2개, A가 하나, A가 없는 경우로 나눠서 생각할 거예요. 그래서 첫 번째, A가 총 3개 들어간 경우를 보도록 하겠습니다.
<SYNC Start=189528><P Class=KRCC>
그러면 A가 3개를 들어가는데, 지금 현재 A가 3개 들어갔으니까 나머지 5장 중에서 몇 개를 긁어와야 돼요? 2장을 더 긁어와야지 5장이 되겠죠.
<SYNC Start=199368><P Class=KRCC>
그래서 A가 3개 있는 경우는 나머지 B, C, D, E, F 중, 나머지 중 몇 개를 뽑아 와야 돼요? 이미 3개가 있으니까 2장을 선택하는 경우의 수가 들어와야 될 거예요.
<SYNC Start=212852><P Class=KRCC>
&nbsp;
<SYNC Start=214323><P Class=KRCC>
그러면 나머지 B, C, D, E, F 중에서 2장을 선택하는 경우의 수는 5개 중에 2개가 되겠죠. 그러면 생각해 볼게요. 이제 이것들을 일렬로 나열할 거예요. 어떻게 한다고요?
<SYNC Start=226149><P Class=KRCC>
5장을 일렬로 나열을 할 겁니다.
<SYNC Start=230396><P Class=KRCC>
&nbsp;
<SYNC Start=233580><P Class=KRCC>
그러면 5장을 일렬로 나열한다는 것은 결국 5!인데, 같은 것을 포함하고 있어요. 총 몇 개? 3개를 포함하고 있으니까 뭐로 나눠야 돼요?
<SYNC Start=242409><P Class=KRCC>
3!로 나눠 주셔야 됩니다. 그러면 A가 3개 들어가 있는 경우의 수는 어떻게 되겠어요? 나머지 중에 2장을 선택하고 나서 이들을 일렬로 나열하는 거니까 무슨 법칙?
<SYNC Start=253976><P Class=KRCC>
곱의 법칙을 활용하셔서 5C2에다가 5!÷3!을 곱하시면 되겠습니다. 그러면 5C2는 얼마예요? 5×4=20을 2로 나누니까 10일 거고요. 5!을 3!로 나눈 값은요?
<SYNC Start=268224><P Class=KRCC>
5×4=20이 되니까 이 경우는 200이 되겠구나라는 사실을 알 수가 있습니다. 그러면 이제 두 번째, A가 몇 장? 2장 들어가 있는 경우를 볼게요.
<SYNC Start=281150><P Class=KRCC>
그러면 마찬가지로 나머지 중에 몇 장을 뽑으면 되겠어요? A가 이미 2개가 있으니까 3개를 뽑으면 되겠죠. 그래서 3장을 선택합시다.
<SYNC Start=290370><P Class=KRCC>
그러면 나머지 애들은 B, C, D, E, F잖아요. 그래서 5장 중에서 몇 개? 3개를 고르시고요. 그러고 나서 이 5장을 어떻게 할 거예요?
<SYNC Start=299509><P Class=KRCC>
5장을 일렬로 나열할 거예요, 일렬로 나열. 그러면 5장을 일렬로 나열하는 건데, 같은 것을 포함하고 있습니다. A가 2개 들어 있죠? 그러니까 5!을 뭐로 나누면 돼요?
<SYNC Start=312659><P Class=KRCC>
A가 들어 있는 이 개수만큼, 2!만큼 나눠 주시면 되겠죠. 그래서 곱의 법칙을 적용하시면 될 텐데, 5C3은 5C2와 똑같은 걸 알고 계시죠?
<SYNC Start=324796><P Class=KRCC>
그러니까 10에다가 곱할 건데, 얼마를 곱할 거냐? 이 값이 5×4×3까지 되는 거니까 60이고요. 이 값은 10으로 동일하기 때문에 600이 나올 거예요, 600.
<SYNC Start=337057><P Class=KRCC>
그러면 이제 A가 3개인 거, 2개인 걸 따졌으니까 1개인 거랑 없는 경우도 따져야겠죠? 그래서 여기를 지우고 추가로 쭉 이어서 설명해 볼게요.
<SYNC Start=346758><P Class=KRCC>
그다음 세 번째, A가 몇 개? 하나 있는 경우. 그러면 이제 나머지 중에서 몇 개를 선택하면 되겠어요? 5장을 선택할 거니까 총 남은 거 4장을 선택하시면 되겠죠.
<SYNC Start=360805><P Class=KRCC>
그러면 B, C, D, E, F 중에서 4장을 선택하는 거니까 5C4가 될 겁니다. 그런 다음에 이 5장을 어떻게 할 거예요? 일렬로 나열을 할 거죠. 5장을 일렬로 나열.
<SYNC Start=374178><P Class=KRCC>
&nbsp;
<SYNC Start=376167><P Class=KRCC>
그러면 결과적으로는 몇 팩토리얼? 5!을 나열하면 되겠죠. 왜냐? A도 하나. 그렇죠? B, C, D, E, F 중에서 4장을 골라 와서 서로 다 다르잖아요. 그러니까 순열의 수 5!로만 곱해 주면 되겠습니다.
<SYNC Start=389678><P Class=KRCC>
그래서 이 2개를 곱의 법칙을 적용하시면 되는데, 5C4는 5C1과 똑같으니까 결과적으로 5가 될 거죠. 5!은 120이에요. 그래서 120×5=600이 되겠습니다.
<SYNC Start=403957><P Class=KRCC>
&nbsp;
<SYNC Start=405672><P Class=KRCC>
그다음에 마지막, A가 안 들어가 있는 경우를 얘기해 볼게요. A가 없어요. 그러면 남은 게 뭐예요? B, C, D, E, F. 5장 꽉 찼죠. 그렇죠? 결과적으로 얘는 뭐다?
<SYNC Start=416708><P Class=KRCC>
B, C, D, E, F를 나열하는 경우의 수가 되겠죠. 그러면 결과적으로 뭐겠어요? 그냥 서로 다른 5가지를 일렬로 나열하는 경우의 수니까 5!=120이 되겠네요.
<SYNC Start=429729><P Class=KRCC>
그러면 끝났습니다. 지금 제가 분류한 4가지 케이스가 동시에 일어날 수 있느냐? 없죠. 왜 없어? A가 3개, A가 2개, A가 1개이면서 A가 없을 수가 있어요, 없어요?
<SYNC Start=441041><P Class=KRCC>
없으니까 무슨 법칙을 활용한다? 합의 법칙을 쓰셔야 되겠습니다. 그래서 200, 600, 그리고 600, 120을 몽땅 다 어떻게 한다?
<SYNC Start=451456><P Class=KRCC>
합의 법칙에 의해서 200, 600. 그렇죠? 200, 600, 600, 120을 어떻게 할 거예요? 더할 거예요. 근거는 뭐라고요? 근거 쓸게요.
<SYNC Start=465211><P Class=KRCC>
동시에 일어나지 않기 때문에 합의 법칙을 쓰는 거예요. 그래서 결론, 1200에다가 1400, 1520이 이 문제에 대한 정답이 되겠습니다.
<SYNC Start=476156><P Class=KRCC>
그래서 얘는 포인트가 뭐냐면, 8장을 지금까지는 다 나열했는데 이제는 그중에서 5장을 뽑아서 나열한다고 했으니까
<SYNC Start=484699><P Class=KRCC>
이 5장 안에 여러 개가 있는 A가 포함이 몇 개가 됐는지를 체크해서 분할해 가지고 생각을 해 주셔야 되겠습니다. 그래서 첫 번째 풀이를 안내해 드렸어요. 왠지 하나 더 안내할 것 같지 않습니까?
<SYNC Start=496563><P Class=KRCC>
하나 더 할 거예요. 뭘 할 거냐면, 똑같아요. 기존의 생각은 똑같은데, 방법을 좀 달리 해서 해 볼 거예요. 기존 생각이 무엇이냐?
<SYNC Start=508127><P Class=KRCC>
A를 기준으로 문제를 풀겠다. 그 생각은 변함이 없어요. A를 기준으로 해서 셀 건데, 어떻게 셀 거냐. 아까는 같은 것이 있는 순열의 수를 활용했거든요?
<SYNC Start=520281><P Class=KRCC>
이번에는 뭘 활용할 거냐면, 조합을 활용할 거예요. 뭐다? 조합을 활용해서 문제를 해결해 보도록 하겠습니다. A를 어쨌건 3개를 나열해야 돼요. 3개를 이렇게 나열할 건데
<SYNC Start=532163><P Class=KRCC>
A들끼리 위치를 바꿔도 상관이 있어요, 없어요? 없죠. 없다는 건 뭐예요? 순서를 고려 안 한다는 뜻이에요. 순서를 고려 안 하면 뭐예요? 조합이죠.
<SYNC Start=540171><P Class=KRCC>
A가 들어갈 자리를 선택하시면 돼요. 그래서 A 자리를 선택하는 경우의 수를 생각해 보세요. 그러면 당연히 총 5자리 중에서 A가 들어갈 3자리를 선택하면 되니까 5C3이 되겠죠.
<SYNC Start=555847><P Class=KRCC>
5C3이다. 그러면 나머지 자리가 이제 몇 개가 남아 있어요? 2자리가 남아 있죠. 서로 다른 6개 중에 나머지 자리 2자리를 택해서 일렬로 나열해 주면 되겠죠. 그러고 나서 뭘 해 주면 된다?
<SYNC Start=569360><P Class=KRCC>
서로 다른 6개 중에 2개를 선택해서 일렬로 나열해 주면 되겠구나. 그래서 A 자리를 선택한 다음에 나머지 자리를 고려해 주시면 얘도 분명히 나올 것 같아요.
<SYNC Start=581231><P Class=KRCC>
5C3은 5C2와 동일하니까 결과적으로 10개가 나올 거고요. 6×5죠. 얘도 그래서 6×5=30. 그래서 얼마다? 300이 나올 겁니다.
<SYNC Start=592330><P Class=KRCC>
그래서 5C3 하면 5C2잖아요. 결과적으로 한번 더 써볼까요? 5C2니까 얘는 5×4를 2×1로 나눈 거니까 10개가 나오고요. 얘는 서로 다른 하나, 둘, 셋, 넷, 다섯 개네요.
<SYNC Start=608705><P Class=KRCC>
죄송합니다. 5개 중에 2개를 골라서 가지고 올 거니까 5×4 해서 20. 그래서 200이 나올 겁니다.
<SYNC Start=616662><P Class=KRCC>
&nbsp;
<SYNC Start=620947><P Class=KRCC>
그러면 이제 같이 가볼게요. 어떤 부분을 볼 거냐? 이번에는 A가 2개예요. 그래서 A 자리를 똑같이 선택을 할 거예요.
<SYNC Start=628520><P Class=KRCC>
&nbsp;
<SYNC Start=631116><P Class=KRCC>
그러면 총 몇 개 중에서? 총 A 자리를 선택해야 되는데, 5자리 중에서 몇 자리? 2자리를 골라주기만 하면 돼요. 그런 다음에 이제 남은 경우는 뭐예요?
<SYNC Start=641676><P Class=KRCC>
남은 경우는 B, C, D, E, F. 이 5장 중에서 자리가 3개가 남았는데, 3개의 자리에 일렬로 배열할 거니까 5자리 중에서 3개의 자리에 일렬로 배열하는 수를 곱하면 돼요.
<SYNC Start=653651><P Class=KRCC>
그런데 5P3은 5×4×3이니까 60이죠. 그래서 5C2에 해당하는 10하고 얘가 곱해져서 600이 나올 거예요. 이번에는 A가 혼자 있어요. 그러면 A 자리를 선택하는 경우의 수는 얼마가 나올까요?
<SYNC Start=671721><P Class=KRCC>
&nbsp;
<SYNC Start=673746><P Class=KRCC>
5개 중에 A가 들어가는 자리, 1자리를 골라주시면 되고요. 그러고 나서 B, C, D, E, F. 5개 중에 4개를 택해서 일렬로 나열하면 되니까 5P4를 계산해 주시면 됩니다.
<SYNC Start=685476><P Class=KRCC>
그러면 얘는 5×(5×4×3×2)죠. 결과적으로 얼마다? 120×5니까 600이 되겠습니다. 그다음에 A가 없어요. 그러면 결과적으로 얘도 뭐예요?
<SYNC Start=698948><P Class=KRCC>
B, C, D, E, F를 결과적으로 일렬로 나열하는 거죠. 5P5가 될 테니까. 그렇죠? 5P5가 될 테니까 5!을 의미하고요. 결과적으로 얼마다? 120이 나올 거다.
<SYNC Start=713198><P Class=KRCC>
&nbsp;
<SYNC Start=714873><P Class=KRCC>
그러면 어쨌건 이 전체 4가지 케이스는 서로 동시에 일어날 수 있다, 없다? 없다. 무슨 법칙을 활용한다? 합의 법칙을 활용하셔야 됩니다.
<SYNC Start=723568><P Class=KRCC>
따라서 마찬가지로 동시에 일어날 수 없으니까 200+600+600+120을 해 주면 1520이 이 문제에 대한 정답이 되겠습니다.
<SYNC Start=737905><P Class=KRCC>
그래서 첫 번째 생각은 케이스를 분류한 다음에 같은 것이 있는 순열의 수로 접근하시는 거고, 두 번째는 어떻게 한다고요?
<SYNC Start=744651><P Class=KRCC>
자리를 바꿔도 이상이 없기 때문에 결국에 선택만 해 주면 돼요. 그래서 A 자리를 지정해 주고 나머지 것들을 일렬로 나열을 해 주시면 되겠습니다.
<SYNC Start=754453><P Class=KRCC>
그래서 첫 번째 문제, 수능 유형 체크를 이렇게 해결해 보았어요. 그다음 문제 한번 같이 가보도록 할게요. 그다음 문제, 그림과 같이 마름모 모양으로 연결된 도로망이 있대요.
<SYNC Start=768404><P Class=KRCC>
이 도로망을 따라 A 지점에서 출발해서 B 지점까지 최단거리로 가는 경우의 수를 구하는 문제입니다. 냄새가 나요. 어떤 냄새가 나느냐면, 이미 벌써 뭐라고 나와 있어요?
<SYNC Start=780513><P Class=KRCC>
최단거리라고 나와 있어요. 문제 분석 벌써 끝났죠? 문제 분석해 볼까요? 제가 하단에 쓰겠습니다.
<SYNC Start=786870><P Class=KRCC>
분석을 해 보면 얘는 분명히 최단거리 문제니까, 같은 것이 있는 순열이구나.
<SYNC Start=792813><P Class=KRCC>
&nbsp;
<SYNC Start=795552><P Class=KRCC>
‘같있순’이구나라는 걸 판단할 수 있는데, 지금 모양을 보아 하니 A부터 B까지 가는데 우리가 원하는 직사각형 모양이 아니에요. 모양이 특이하죠.
<SYNC Start=805550><P Class=KRCC>
모양이 특이하면 어떻게 접근해야 된다고 했어요? 분류해서 해야 된다고 했어요. 그래서 분석은 했는데, 얘를 어떻게 접근할 거냐면
<SYNC Start=814288><P Class=KRCC>
&nbsp;
<SYNC Start=816481><P Class=KRCC>
갈 수 없는 것은 이제 문제에 안 드러나 있으니까 갈 수 있는 것만 나와 있죠? 그래서 갈 수 있는 부분을 체크하시고
<SYNC Start=827397><P Class=KRCC>
&nbsp;
<SYNC Start=829163><P Class=KRCC>
그러고 나서 어떻게 할 거다? 경로를 나누시면 돼요. 그래서 갈 수 있는 부분을 확인한 다음에 뭐할 거예요? 경로를 나눠서, 이 작업에서 뭘 한다고요?
<SYNC Start=838336><P Class=KRCC>
경로를 나눈다. 경로를 나눠서 뭐하면 돼요? 같은 것이 있는 순열의 수를 체크하시면 되겠습니다. 그런데 경로를 나누는데 어떤 식으로 나눌 거라고 했어요?
<SYNC Start=852258><P Class=KRCC>
동시에 일어나지 않게끔 나눈다고 했어요. 어떻다고요? 이 경로는 동시에 일어나지 않는 경우들로 나눌 거예요. 그러면 제가 원래는 대각선 기준이라고 했는데
<SYNC Start=863258><P Class=KRCC>
얘는 기존에 있던 걸 이렇게 틀었기 때문에 이 세로선이 대각선이 결국 될 거거든요. 그런데 쪼갤 때 여러분들이 어디를 쪼개든 사실 상관은 없어요.
<SYNC Start=874735><P Class=KRCC>
그런데 계산하기 편하려면 어떻게 하자고 했죠? 정확히 절반, 대칭으로 쪼개면 편하다고 했어요. 그래서 어떻게 할 거냐면, 정확히 절반으로 쪼갤게요. 짠!
<SYNC Start=885303><P Class=KRCC>
그러면 생각해 봅시다. 내가 여기에 온 순간 선택을 해야 되죠. 이리 가든, 이리 가든 동시에 갈 수 있어요, 없어요? 없네.
<SYNC Start=895649><P Class=KRCC>
경로 나눴죠. 그래서 이 경로를 여기를 C라고 하고 여기를 D라고 하면, 이렇게 풀 수 있겠구나. 첫 번째 생각입니다. 어디를 거쳐 가는 경우?
<SYNC Start=908102><P Class=KRCC>
C를 거쳐 가는 경우와 D를 거쳐 가는 경우가 있을 거예요. 둘로 나누겠습니다. 그래서 첫 번째, C를 거쳐 가는 경우. 두 번째, D를 거쳐 가는 경우로 나눠질 텐데
<SYNC Start=921129><P Class=KRCC>
C를 거쳐서 가는 경우는 지금 상황을 봤더니 A에서 C, C에서 B로 가는 경우예요. 그래서 A에서 C로 가고 C에서 B로 가는데
<SYNC Start=931720><P Class=KRCC>
A에서 C로 가기 위해서는 위로 가는 화살표 2개와 아래로 가는 화살표 하나만 있으면 돼요. A에서 C로 가는 건 위로 가는 거 2개와 아래로 가는 것을 하나 보시면 되는데
<SYNC Start=943958><P Class=KRCC>
결과적으로 화살표 3개를 나열할 건데, 똑같은 화살표가 몇 개 있어요? 2개가 있죠. 그래서 A부터 C까지 가는 것은 3!을 똑같은 것 2!로 나눠 주면 되겠구나라는 사실을 알 수 있습니다.
<SYNC Start=959245><P Class=KRCC>
그래서 총 몇 개? 3개. 그러면 다음 건 사실 안 해 봐도 될 것 같아요. 정확히 대칭이기 때문에 똑같은 개수만큼 나올 것 같은데
<SYNC Start=968427><P Class=KRCC>
위로 한 칸, 아래로 두 칸 가는 화살표를 나열하는 게 되겠죠. 그래서 이 지점은 위로 한 칸, 아래로 두 칸 가는 화살표를 나열하는 경우가 되는데
<SYNC Start=978979><P Class=KRCC>
결과적으로 대칭이어서 얘도 똑같이 몇 개가 나올 거예요? 3개가 나올 거예요, 3개. 그래서 곱의 법칙을 적용하면 A, C, B를 거쳐서 가는 게 총 9가지가 나오겠네요.
<SYNC Start=990648><P Class=KRCC>
마찬가지로 D를 거쳐 가는 경우도 A에서 D로 가고 D에서 B로 가는 경우를 따지면 되는데, A에서 D로 가기 위해서는 아래로 2개. 그런 다음에 위로 하나.
<SYNC Start=1003985><P Class=KRCC>
D에서 B로 가려면 아래로 하나, 위로 2개로 가면 되겠어요. 그러면 결과적으로 화살표 3개를 나열할 건데, 같은 것을 포함하고 있네요. 그래서 3!을 뭐로 나누자?
<SYNC Start=1015523><P Class=KRCC>
같은 것만큼의 2!으로 나누시면 되고요. 얘도 마찬가지 방법으로 총 3개를 이렇게 나열할 건데, 그중에서 똑같은 화살표가 2개 있네요.
<SYNC Start=1027726><P Class=KRCC>
그래서 2!로 나누게 되면 곱의 법칙을 적용했을 때 똑같이 나옵니다. 몇 개? 9개. C점을 지날 때와 D점을 지날 때는 어떻다고요?
<SYNC Start=1037183><P Class=KRCC>
동시에 일어날 수 없죠. 그러니까 동시에 일어날 수 없으면 무슨 법칙을 적용할 수 있어요? 합의 법칙을 적용할 수 있어요. 그래서 몇 개다?
<SYNC Start=1045767><P Class=KRCC>
18개가 나옵니다. 꼭 알아두셔야 돼요. 동시에 일어날 수 없다. 그러면 합의 법칙을 적용한다.
<SYNC Start=1052205><P Class=KRCC>
그래서 A 지점에서 출발해서 B 지점까지 최단거리로 가는 경우의 수를 싹 다 더해서 18개가 나왔습니다. 이렇게 문제를 풀어도 돼요. 얘는 경로를 나눠서 푸는 경우인데
<SYNC Start=1065060><P Class=KRCC>
이렇게 안 풀고 또 새로운 방법도 있거든요. 한번 같이 가볼게요. 새로운 방법은 도대체 뭐냐. 여러분들은 그냥 같은 것이 있는 순열로 막 풀어도 되는 경우를 제가 지난 시간에 얘기해 드렸어요.
<SYNC Start=1080685><P Class=KRCC>
정확히 직사각형이 나올 때 그렇게 풀면 되거든요. 그런데 얘는 모양이 불행히도 직사각형 모양이 아닌데, 우리가 이걸 조작하는 거예요. 조작을 해 보자. 조작, 조작, 조작, 조작.
<SYNC Start=1092745><P Class=KRCC>
조작을 딱 하면 우리가 원하는 모양이 나오죠. 그래서 조작을 한 다음에 얘를 우리가 아는 익숙한 모양으로 만들고 싶어 가지고 어떻게 할 거예요?
<SYNC Start=1101628><P Class=KRCC>
반시계 방향으로 살짝 회전할게요. 반시계 방향으로 살짝 회전하면 결과적으로 뭐가 되느냐면, 이렇게 생겼겠구나. 우리가 늘 풀던 기본 유형 문제. 이렇게 생겼을 거야.
<SYNC Start=1114403><P Class=KRCC>
여기가 A, 여기가 B. 그리고 새로 만든 부분이 여기. 그래서 그 새로 만든 지점을 P라고 할게요. 새로 만든 지점을 Q라고 할게요. 이렇게 생겼을 거예요.
<SYNC Start=1125050><P Class=KRCC>
A부터 B까지 가는 경우의 수를 구하는 건 이제 굉장히 쉬워졌죠. 뭐 때문에? 조작을 했기 때문에. 그러면 조작한 상태에서 A부터 B까지 가는 최단거리는 뭐예요?
<SYNC Start=1136231><P Class=KRCC>
화살표 총 6개를 나열할 건데, 같은 것이 3개씩, 3개씩 있으니까 6!을 3!3!으로 나누면 되겠구나라는 사실을 알 수가 있죠.
<SYNC Start=1148525><P Class=KRCC>
그런데 말입니다, 여러분. 우리가 조작해서 만들어 냈어요. 조작해서 만들어 냈으니까 어떻게 해 줘야 되겠어요? 여기를 거치는 경우는 원래 존재하지 않았던 거죠. 빼줘야 돼요.
<SYNC Start=1160008><P Class=KRCC>
마찬가지, 여기를 거치는 경우도 존재하지 않았던 거죠. 빼주셔야 돼요. 그래서 몇 개를 빼준다? 2개를 빼주는데, 이 2개는 어디에서 나온 거예요?
<SYNC Start=1168939><P Class=KRCC>
P와 Q를 지나는 경로. P, Q를 지나는 경로의 수가 2개예요. 그런데 우리가 이걸 만들어 낸 것이기 때문에 만들어 낸 걸 지워 주시면 되겠습니다.
<SYNC Start=1180840><P Class=KRCC>
그러면 6!÷3!3!은 뭐가 되느냐? 20이 되고요. 20에서 2를 빼면 18이 돼서 문제의 정확하게 정답이 동일하게 나옵니다.
<SYNC Start=1191797><P Class=KRCC>
그래서 이렇게 풀면 우리가 굳이 경로를 나눠 주지 않아도 문제를 쉽게 풀 수 있어요. 굉장히 쉽습니다. 이제 두 번째까지 했는데, 이제 마지막으로 하나 더 볼 거예요.
<SYNC Start=1203179><P Class=KRCC>
마지막, 여러분이 좀 더 이게 편할 것 같아요, 제 생각에는. ‘나는 수학에 자신이 없다. 그런데 나는 노동을 하는 걸 좋아한다.’ 그러면 이렇게 푸세요.
<SYNC Start=1213791><P Class=KRCC>
세 번째 생각입니다. 합의 법칙을 활용하시면 된다고 지난 시간에 안내를 해 드렸을 거예요. A가 있어요. 여기까지 가는 최단경로는 1개죠.
<SYNC Start=1225245><P Class=KRCC>
A가 있어요. 여기까지 가는 최단도 직선도로 하나니까 1개, 여기도 1개, 여기도 1개. 더 이상 쓰시면 안 되겠죠. 여기는 이 점을 거쳐 오거나 이 점을 거쳐 오는 2가지 경우가 있을 거예요.
<SYNC Start=1237148><P Class=KRCC>
합의 법칙, 2. 이 점은 여기로 오거나 여기로 오거나. 그런데 이 2가지는 동시에 일어날 수 없기 때문에 합의 법칙. 마찬가지로 합의 법칙, 마찬가지로 합의 법칙. 얘는요?
<SYNC Start=1249667><P Class=KRCC>
여기까지가 3개 왔어요. 여기서부터 여기까지는 1가지예요. 경유해서 가죠. 곱의 법칙, 3×1 해서 여기도 3개. 마찬가지로 3개. 여기는요?
<SYNC Start=1259825><P Class=KRCC>
합의 법칙, 9개. 합의 법칙, 9개예요. 답 나왔네요. 9+9=18. 그래서 A부터 B까지 가는 최단거리 수는 합의 법칙을 이용해서 1, 1, 1, 1을 쓰고 덧셈만 해 줘도 나올 수 있어요.
<SYNC Start=1273869><P Class=KRCC>
그래서 첫 번째 생각은 같은 것이 있는 순열의 수로 해결한다. 두 번째 생각도 같은 것이 있는 순열로 해결을 하는데, 전체에서 갈 수 없는 곳을 빼는 방식으로 가시면 되고요.
<SYNC Start=1287274><P Class=KRCC>
그다음 세 번째는 합의 법칙을 활용해서 접근하실 수도 있겠습니다.
<SYNC Start=1292321><P Class=KRCC>
숫자 1, 2, 3, 3, 4, 4를 모두 사용해서 만들 수 있는 서로 다른 6개 자연수의 개수를 구하는 문제예요.
<SYNC Start=1300110><P Class=KRCC>
문제만 딱 봐도 느낌이 오실 거예요. 3, 3, 그리고 4, 4. 그리고 6자리 자연수. 6자리 자연수를 만들어 내려면 일렬로 나열해야 하는데, 똑같은 게 포함되어 있는데요? 그래서 어떻게 한다?
<SYNC Start=1312779><P Class=KRCC>
이 문제는 분명히 분석을 해 보면 어떤 상황이다? 같은 것이 있는 순열의 수일 거예요. 그렇죠? 같은 것이 있는 순열의 수구나.
<SYNC Start=1323695><P Class=KRCC>
&nbsp;
<SYNC Start=1325511><P Class=KRCC>
그래서 같은 것이 있는 순열의 수로 문제를 해결하시면 돼요. 그래서 접근법은 어떠냐면, 또 간단해요. 그냥 순서대로 나열한 순열의 수에서 같은 것들만큼만 나눠서 해결해 주면 되겠구나.
<SYNC Start=1338761><P Class=KRCC>
이렇게 생각을 하시면 되겠습니다. 그러면 한번 쉽게 가볼까요? 첫 번째 생각입니다. 같은 것이 있는 순열의 수로 생각을 해 보면
<SYNC Start=1349240><P Class=KRCC>
지금 보니까 1, 2, 3, 3, 4, 4니까 3이 총 몇 개가 있구나? 3이 2개가 있어요. 3이 2개, 그리고 4는 몇 개가 있어요? 4도 2개가 있는 상황입니다. 4도 2개다.
<SYNC Start=1363139><P Class=KRCC>
그러면 이 각각 2개씩, 2개씩 있는 상황이니까 총 몇 개? 총 하나, 둘, 셋, 넷, 다섯, 여섯 개잖아요.
<SYNC Start=1372830><P Class=KRCC>
그래서 6!에다가 같은 것이 있는 것만큼 일렬로 나열한 것들을 나누어 주시면 문제가 끝나겠네요. 그렇죠? 그래서 6!을 2!2!으로 나누어 주시면 될 거예요.
<SYNC Start=1384935><P Class=KRCC>
그러면 6, 5, 4, 3까지. 2, 1은 사라질 거고요. 나머지 2, 1이 있어서 지우고 지우면 10×180이니까 180이겠구나라고 알 수 있겠네요. 그래서 정답은 180이 될 거예요.
<SYNC Start=1399938><P Class=KRCC>
또 하나 더 풀겠죠? 두 번째 생각. 두 번째 생각을 보시면, 지금 결과적으로 3은 똑같기 때문에 얘네들끼리 자리를 바꿔도 상관없어요. 여기도 마찬가지죠?
<SYNC Start=1412254><P Class=KRCC>
그래서 자리를 지정해 주는 형태로 갈 거예요. 3의 자리를 선택을 해 줄 거예요. 그러면 총 6개의 자리 중에서 3이 들어갈 자리는 2자리가 있는 거죠.
<SYNC Start=1424617><P Class=KRCC>
그래서 선택만 해 주게 되면, 3은 총 6가지 자리 중에서 2개 들어가면 되겠구나라고 알 수가 있겠네요. 그런 다음에 4의 자리를 또 선택을 해 줄게요.
<SYNC Start=1436775><P Class=KRCC>
4의 자리를 선택을 해 주면, 3을 선택한 자리가 이미 2자리가 채워졌어요. 남은 자리는 4개죠. 그러면 남은 자리 4개 중에서 몇 개?
<SYNC Start=1446755><P Class=KRCC>
2개를 골라주면 되겠구나. 그러면 이제 우리는 뭐만 남았죠? 1과 2만 남았습니다. 그래서 1과 2의 자리를 얘기해 줘야 하는데, 결과적으로 서로 다른 것을 일렬로 나열할 거죠?
<SYNC Start=1459557><P Class=KRCC>
그래서 서로 다른 2개를 일렬로 나열할 거니까 몇 팩토리얼? 2!이 되겠군요. 그래서 결과적으로 우리가 무슨 법칙을 적용한다?
<SYNC Start=1469193><P Class=KRCC>
곱의 법칙을 적용하면 되겠구나. 그래서 6C2=15. 4C2=6. 얘는 2가 돼서 15×6=90. 90×2=180. 그래서 이 경우도 마찬가지로 180가지가 나오겠습니다.
<SYNC Start=1487853><P Class=KRCC>
그래서 2-2번 문제에 대해서 쭉 다 해결해 보았고요. 2-3번 문제로 가보도록 하겠습니다. 2-3번, 집합 X={1, 2, 3, 4, 5}에 대해서 다음 조건을 만족시키는 함수의 개수라고 나와 있어요.
<SYNC Start=1506333><P Class=KRCC>
함수 동그라미. 이게 분명히 이 문제를 푸는 핵심 키워드가 될 거예요. 제가 첫 번째 시간에 함수에 대해서 설명을 해 드렸어요.
<SYNC Start=1514710><P Class=KRCC>
함수는 2가지 조건만 만족하면 돼요, 2가지 조건. 첫 번째, 정의역이 있는 모든 원소가. 두 번째, 선택을 1번만 한다. 그래서 제가 예시로 들어줬던 게 뭐였죠?
<SYNC Start=1525588><P Class=KRCC>
여러분이 초등학교 때 중학교 배정을 받는 게 함수적 상황이라고 했었죠? 여러분이 어떤 중학교에 갔어요. 다른 친구가 똑같은 중학교에 배정될 수도 있잖아요.
<SYNC Start=1535043><P Class=KRCC>
그래서 그런 상황이 함수적 상황입니다. 그러면 함수는 뭘 허용했다는 거예요? 같은 중학교에 다 같이 갈 수 있잖아요. 중복을 허용했다는 거예요.
<SYNC Start=1544911><P Class=KRCC>
그래서 함수가 나왔다고 하면 여러분들은 어떻게 생각해야 되느냐면, 중복을 허용한 함숫값들을 어쨌건 나열할 거니까, 중복순열이구나.
<SYNC Start=1554487><P Class=KRCC>
얘는 순열의 상황이구나라고 해서 중복순열로 생각을 해 주시면 될 거예요. 그래서 함수의 개수는 중복순열의 수로 세서 푸는데, 지금 포인트는 뭐냐면 이 조건을 만족해야 돼요.
<SYNC Start=1568277><P Class=KRCC>
그래서 조건을 지금 보아 하니까 함숫값들을 싹 다 곱했더니 얼마가 나왔어요? 4가 나왔다. 이게 포인트죠. 다 곱해서 4가 나와야 된다.
<SYNC Start=1580085><P Class=KRCC>
그래서 함숫값들을 모두 다 곱해서 4가 되게끔 하는 함수의 개수를 찾아주는 문제예요. 그러면 이제 생각을 해 봅시다. 분석은 끝났는데, 이 문제는 도대체 어떻게 접근해야 될까?
<SYNC Start=1592057><P Class=KRCC>
&nbsp;
<SYNC Start=1594155><P Class=KRCC>
곱해서 4가 나오려면 결과적으로 f(1), f(2), f(3) 이런 아이들이 결과적으로 4의 뭐가 되어야 할까요? 4의 약수가 되어야겠죠. 얘네들이 4의 약수가 되어야 해요. 그렇죠?
<SYNC Start=1609263><P Class=KRCC>
그러면 4의 약수는 1 또는 2 또는 4예요. 그러면 제일 큰 약수가 4니까, 4를 포함하는 경우도 생각을 해 볼 수 있겠죠. 4를 포함하는 경우.
<SYNC Start=1619148><P Class=KRCC>
&nbsp;
<SYNC Start=1621270><P Class=KRCC>
그러면 4를 포함하는 경우는 케이스가 어떤 경우밖에 없겠어요? 어떤 것 중에 하나가 4가 되면 나머지는 다 1, 1, 1, 1이겠죠. 그러니까 결과적으로 (1, 1, 1, 1, 4)의 조합이 될 거예요. 그렇죠?
<SYNC Start=1633796><P Class=KRCC>
그런데 만약 4를 포함하지 않으면 누군가를 포함해야 되겠죠. 누구? 2를 포함할게요. 2를 포함합니다.
<SYNC Start=1639888><P Class=KRCC>
&nbsp;
<SYNC Start=1644962><P Class=KRCC>
포함하는 경우, 포함하는 경우. 똑같이 들어가면 되는데, 2를 포함하는 경우는 1, 1, 1 하고 2, 2가 포함되면 싹 다 곱했을 때 4가 나오겠죠. 그래서 이렇게 접근 방식은 어떻게 한다?
<SYNC Start=1659895><P Class=KRCC>
이렇게 나오는 조합을 찾아주시면 돼요. 이렇게 등장하는 조합을 여러분들이 찾아주시면 되겠습니다. 함숫값들의 조합.
<SYNC Start=1668901><P Class=KRCC>
그래서 함숫값이 1, 1, 1, 1, 4가 나오는 경우와 함숫값이 1, 1, 1, 2, 2가 나오는 경우가 곱했을 때 4가 되는 경우가 되겠습니다.
<SYNC Start=1680184><P Class=KRCC>
그러면 다 끝냈어요. 첫 번째 생각, 어떻게 하자고요? 내가 저 조합을 찾아냈어요. 이 조합이 지금 함숫값이 1, 1, 1, 1, 4인데
<SYNC Start=1690787><P Class=KRCC>
결과적으로는 f(1) 자리, f(2) 자리, f(3) 자리, f(4) 자리, f(5) 자리가 있을 때 여기에다가 이 숫자들을 결과적으로 일렬로 쭉 배열할 거죠. 그렇죠? 그런데 총 몇 개가 있으니까?
<SYNC Start=1705557><P Class=KRCC>
5개가 있으니까 4를 포함하는 경우는 분명히 몇 팩토리얼? 5!에서 똑같은 게 지금 총 몇 개? 4개가 있으니까 4!로 나눠 주면 되겠구나. 그렇죠?
<SYNC Start=1720790><P Class=KRCC>
4!로 나눠 주시면 되겠습니다. 그래서 정답은 5가 될 거고요. 그다음에 이번에는 뭘 포함하는 경우? 2를 포함하는 조합이 있었죠.
<SYNC Start=1730767><P Class=KRCC>
&nbsp;
<SYNC Start=1732194><P Class=KRCC>
2를 포함하는 조합도 마찬가지로 5!인데, 2를 포함하는 경우는 똑같은 게 3개, 2개죠. 그렇죠? 3개, 2개이기 때문에 결과적으로 얘는 3개짜리를 나누고 그다음에 2개짜리를 나누면 되겠네요.
<SYNC Start=1748224><P Class=KRCC>
그래서 정답은 얼마가 될까? 5×4를 하고 3, 2, 1과 3, 2, 1 사라지고 남는 것은 10이 돼서 이 2가지 경우는 동시에 일어날 수 없어요. 동시에 일어날 수 없으니까 무슨 법칙?
<SYNC Start=1760962><P Class=KRCC>
합의 법칙을 적용해서 정답은 15가 된다는 사실을 알 수가 있습니다. 그래서 이렇게 첫 번째 생각, 같은 것이 있는 순열의 수로 해 가지고 접근을 해 봤어요. 왠지 또 하나 더 할 것 같지 않습니까?
<SYNC Start=1775763><P Class=KRCC>
이번에는 뭘 할까요? 조합을 한번 해 보도록 할게요. 조합을 하게 되면 어떻게 될 거냐. 옆에 하나 더 써볼게요.
<SYNC Start=1782887><P Class=KRCC>
&nbsp;
<SYNC Start=1784792><P Class=KRCC>
생각은 동일해요. 어떻게 해 볼 거냐면 첫 번째, 4를 포함하는 조합이 있을 거고요. 두 번째, 2를 포함하는 조합이 있을 거예요.
<SYNC Start=1794230><P Class=KRCC>
&nbsp;
<SYNC Start=1796350><P Class=KRCC>
그러면 4를 포함하는 조합에서는 1이 몇 개? 4개 들어오고 4가 하나 들어오면 되죠. 그래서 1이 들어갈 자리를 배정해 줄게요. 1이 들어갈 자리를 선택.
<SYNC Start=1809685><P Class=KRCC>
&nbsp;
<SYNC Start=1811444><P Class=KRCC>
그러면 총 몇 개 자리? 5개 자리 중에서. 총 5개 자리 중에서 1이 들어갈 자리를 선택해야 되는데, 1은 총 몇 개? 4개가 있죠. 그러면 끝났어요. 나머지 하나가 4가 들어갈 자리니까
<SYNC Start=1824318><P Class=KRCC>
4가 들어갈 자리는 선택을 하나마나, 자리가 하나 남아 있잖아요. 그래서 1개. 그래서 무슨 법칙? 이번에는 곱의 법칙을 써야겠죠?
<SYNC Start=1833137><P Class=KRCC>
완성본으로 가야 되니까 곱의 법칙을 하면 5C4는 5C1과 동일하고 이 값은 5가 돼서 정답은 5가 되겠네요. 4를 포함하는 경우에 정답.
<SYNC Start=1845499><P Class=KRCC>
그다음에 2를 포함하는 경우는 2가 들어갈 자리를 먼저 선택을 해 주세요. 2가 들어갈 자리를 선택을 해 주시면
<SYNC Start=1855099><P Class=KRCC>
2는 두 번 나와야 되니까, 총 5개의 함숫값 중에서 2는 두 번 나와야 되니까 2가 들어갈 걸 선택을 해 주자고요. 5C2.
<SYNC Start=1865923><P Class=KRCC>
그러면 5C2는 10인데, 이제 나머지는 다 누가 들어가면 되겠어요? 나머지는 1이 들어갈 자리를 선택하면 되는데, 어차피 2가 아니면 전부 다 뭐로 깔려요?
<SYNC Start=1877405><P Class=KRCC>
1로 깔리죠. 그러니까 이 경우의 수는 뭐예요? 하나예요. 그래서 무슨 법칙? 곱의 법칙에 의해서 10×1이니까 10이다.
<SYNC Start=1885899><P Class=KRCC>
그런데 이 2가지는 동시에 일어날 수 있어요, 없어요? 없어요. 그래서 합의 법칙에 의해서 5랑 10을 더한 15가 이 문제에 대한 정답이 되겠습니다.
<SYNC Start=1897537><P Class=KRCC>
그래서 두 풀이 모두 다 답이 15가 된다는 것을 알 수가 있으니까, 얘는 조합으로도 풀 수 있고 얘는 같은 것이 있는 순열로도 풀 수 있겠구나라고 생각을 하시면 되겠어요.
<SYNC Start=1909013><P Class=KRCC>
그런데 제일 중요한 건 뭐냐면, 이 조건식을 판단할 수 있어야 돼요. 곱해서 4가 나왔으니까 4의 약수가 될 거야. 4의 약수는 1 또는 2 또는 4죠.
<SYNC Start=1921284><P Class=KRCC>
그래서 제일 큰 4가 포함되는 경우. 그다음 두 번째로 큰 2가 포함되는 경우로 나눠서 풀면 되겠습니다. 그래서 2-3번까지 우리가 쭉 가봤어요. 이제 2-4번 문제로 같이 가보도록 하겠습니다.
<SYNC Start=1937973><P Class=KRCC>
&nbsp;
<SYNC Start=1942180><P Class=KRCC>
2-4번 문제, 문자 A, B, C, X, X, Y, Y가 하나씩 적힌 7장의 카드를 모두 일렬로 나열하는데요. 문자 A, B, C가 적힌 카드가 왼쪽부터 A, B, C의 순서로 나열되는 경우의 수를 구하래요.
<SYNC Start=1957049><P Class=KRCC>
일단 문제를 분석해 볼게요. 이 문제는 도대체 무슨 단원의 문제냐. 봤더니, 나열한대요. 어떻게? 일렬로. 그러면 순열이네요. 순열인데, X, X, Y, Y.
<SYNC Start=1971574><P Class=KRCC>
끝났네요. 같은 것이 있는 순열이구나. 그래서 문제를 딱 읽었을 때 얘가 무슨 단원인지만 알면 여러분들은 절반을 푼 거예요.
<SYNC Start=1982299><P Class=KRCC>
같은 것이 있는 순열이구나. 그런데 조금 차이점이 하나 있어요. 얘는 응용된 문제인데, 뭐가 응용됐나 봤더니 문자 A, B, C의 순서로 있어야 된다는 특징을 가지고 있죠.
<SYNC Start=1992976><P Class=KRCC>
그러니까 얘는 뭔지 모르겠지만 A, B, C가 순서대로 있어야 되겠구나라고 생각을 할 수가 있는 거죠. 그러면 이제 여러분들이 또 생각을 해 봅시다.
<SYNC Start=2003424><P Class=KRCC>
분석은 이제 다 끝났어. 그러면 어떻게 접근을 하겠느냐. A, B, C 순서라는 게 뭔가 포인트잖아요. 그러면 A, B, C가 순서대로 있다. ‘이건 무슨 뜻이지?’ 하고 보는 거예요.
<SYNC Start=2017776><P Class=KRCC>
A, B, C가 순서대로 있다. 무조건 A, B, C는 이 순서대로 있어야 돼. 순서가 어떻게 됐어요? 고정됐죠. 순서가 고정됐다는 건 무슨 뜻이에요?
<SYNC Start=2027998><P Class=KRCC>
순서를 고려할 필요가 없다. 순서를 고려하지 않아도 좋다. 순서를 고려하지 않아도 좋다는 건 2가지로 생각을 해 볼 수가 있어요.
<SYNC Start=2038397><P Class=KRCC>
하나, 순서를 고려하지 않아도 된다는 건 그냥 똑같이 보면 되겠네. 그렇죠? 그래서 같은 것이 있는 순열의 수로도 볼 수 있고요.
<SYNC Start=2045870><P Class=KRCC>
&nbsp;
<SYNC Start=2048835><P Class=KRCC>
혹은 순서를 고려하지 않으니까 조합으로도 볼 수 있겠습니다. 그래서 첫 번째 접근법은 뭐냐면, 같은 것이 있는 순열로 풀자. 그렇죠?
<SYNC Start=2058229><P Class=KRCC>
그래서 A, B, C를 같은 것으로 보자. 그래서 두 번째, A, B, C를 같은 것으로 취급해서 풀거나 아니면 조합으로 해결을 하시면 되겠습니다.
<SYNC Start=2068618><P Class=KRCC>
&nbsp;
<SYNC Start=2070715><P Class=KRCC>
그러면 첫 번째 접근법으로 문제를 해결해 보도록 할게요. 첫 번째 생각.
<SYNC Start=2074580><P Class=KRCC>
&nbsp;
<SYNC Start=2077952><P Class=KRCC>
A랑 B랑 C를 같은 것으로 고려해 볼게요. 그러면 A, B, C를 별이라고 생각할게요. A, B, C를 모두 다 별 취급하자. 그러면 결과적으로 나는 뭘 나열하는 거냐면
<SYNC Start=2091082><P Class=KRCC>
별, 별, 별, 그다음에 X, X, Y, Y를 나열하면 돼요. Y, Y. 그러면 결과적으로 총 하나, 둘, 셋, 넷, 다섯, 여섯, 일곱 개를 나열하면 되는데
<SYNC Start=2106846><P Class=KRCC>
같은 것이 있는 순열의 수만큼 나눠야 되니까 3!2! 그다음에 2!로 나누어서 문제를 해결하면 되겠죠? 그래서 여기 지금 현재 7!이 있는 것을 7×6×5×4로 하게 되면
<SYNC Start=2125259><P Class=KRCC>
3!3!은 날릴 거고 남은 건 2×2가 돼서 계산해 보시면 30×7=210이 이 문제에 대한 정답이 되겠습니다. 그래서 같은 것이 있는 순열로 생각하면 이렇게 풀 수 있고요.
<SYNC Start=2138807><P Class=KRCC>
두 번째 생각, 조합으로 풀어볼게요. 조합으로 풀게 되면 A, B, C가 이미 순서가 정해져 있죠. 그러니까 순서를 고려할 필요가 없으니까 순열이 아니구나. 그러면 조합이구나.
<SYNC Start=2151391><P Class=KRCC>
총 7자리 중에서 A, B, C가 들어갈 3자리를 골라주기만 하면 돼요. 그래서 조합으로 풀면 A, B, C 자리를 선택을 바로 해 주시면 돼요.
<SYNC Start=2163492><P Class=KRCC>
&nbsp;
<SYNC Start=2165187><P Class=KRCC>
그러면 총 몇 자리? 7자리 중에서 A, B, C 자리가 총 몇 개? 3개가 있으니까 7개 중에 3자리를 골라주시면 돼요.
<SYNC Start=2173446><P Class=KRCC>
그러면 남은 자리는 총 몇 개예요? 4개 자리죠. 4개 자리 중에서 X 자리 2자리를 선택해야 되니까 X 자리 2개를 골라주시면 돼요.
<SYNC Start=2182433><P Class=KRCC>
X 자리를 이번에는 2개를 선택하면 돼요. X가 2개니까. 그래서 남은 자리 4자리 중에서 몇 자리? X 자리인 2자리를 골라주시면 돼요.
<SYNC Start=2194122><P Class=KRCC>
그러면 남는 자리는 이제 2자리인데, 남는 자리는 전부 다 무슨 자리가 되겠어요? Y 자리가 되겠죠. 그래서 Y 자리를 선택하는 경우는 남는 게 어차피 다 2자리라 Y를 몰아넣으면 되니까
<SYNC Start=2205308><P Class=KRCC>
1개가 될 거예요. 그러면 이제 계산 마무리해 볼까요? 7C3은 7×6×5를 3×2×1로 나누니까 35가 되고요. 4C2는 4×3을 2×1로 나누면 되기 때문에 6가지가 나옵니다.
<SYNC Start=2222525><P Class=KRCC>
그러면 35×6×1, 무슨 법칙을 쓴다? 곱의 법칙을 쓰셔야겠죠. 그래서 곱의 법칙을 활용하시게 되면 35×6은 결과적으로 210이 똑같이 나오게 되겠습니다.
<SYNC Start=2236437><P Class=KRCC>
그래서 같은 것이 있는 순열로 풀거나 아니면 이렇게 조합으로 활용해서 문제를 해결하시면 됩니다. 그래서 2-4번까지 우리가 문제를 쭉 해결했고요.
<SYNC Start=2250404><P Class=KRCC>
바로 또 그다음 문제로 가면, 문제는 다 풀었는데 저는 이것도 다시 한 번 보려고 합니다. 좀 집요하죠? 수능 유제 1-3번 문제니까, 지난 시간 중복순열에서 이 문제를 다뤘었어요.
<SYNC Start=2265946><P Class=KRCC>
그런데 중복순열에서 제가 물론 간단히 설명을 하긴 했지만, 얘는 어떻게도 풀 수 있느냐면 같은 것이 있는 순열의 수로도 풀 수가 있어요.
<SYNC Start=2274517><P Class=KRCC>
그래서 그 버전을 보여 드리도록 하겠습니다. 지금 보니까 공역 Y랑 그리고 f(x)값들을 싹 다 모아놓은 얘는 뭐라고 했었어요? 치역이죠.
<SYNC Start=2287988><P Class=KRCC>
그래서 공역과 치역 집합이 같은 함수의 개수를 찾는 문제예요. 공역과 치역이 같다는 건 뭐냐면, 결과적으로 함숫값이 6, 7, 8을 다 포함하고 있다는 얘기예요.
<SYNC Start=2300412><P Class=KRCC>
선택을 이미 다 당했다고요. 누가? 6, 7, 8이. 그래서 선택 대상이 됐던 6, 7, 8이 전부 다 선택이 됐다는 얘기예요.
<SYNC Start=2308837><P Class=KRCC>
&nbsp;
<SYNC Start=2310990><P Class=KRCC>
그래서 그때 중복순열에서는 어떻게 풀었느냐면, 전체 함수의 개수에서 치역이 하나인 것, 치역이 2개인 것을 빼서 풀었는데
<SYNC Start=2318596><P Class=KRCC>
이번에는 이미 다 선택이 6, 7, 8이 됐다고 하고 문제를 풀 거라고요. 볼까요? 어쨌든 f(1) 자리, f(2) 자리, f(3) 자리, f(4) 자리, f(5) 자리가 있는데 여기에다가 나열할 거예요. 누구를?
<SYNC Start=2334030><P Class=KRCC>
6, 7, 8을 다 나열할 거예요. 그래서 어떤 경우가 있나 봤더니 6, 6, 6, 7, 8. 이렇게 나열할 수가 있어요. 그렇죠? 그리고 얘네들끼리 위치를 바꿔도 상관이 없어요.
<SYNC Start=2346960><P Class=KRCC>
같은 것이 있는 순열이네. 같은 것이 몇 개? 3개 있는 순열이네요. 그래서 어떻게 된다? 총 5개를 일렬로 나열할 건데, 6, 6, 6이 있으니까 걔네들만큼으로 나누어 주면 될 거예요.
<SYNC Start=2360186><P Class=KRCC>
&nbsp;
<SYNC Start=2361872><P Class=KRCC>
6, 6, 6만 있을까요? 7이 3번 나올 수도 있겠죠. 그래서 7, 7, 7, 6, 8을 일렬로 나열해도 될 거고, 어떤 경우? 8, 8, 8, 6, 7을 일렬로 나열해도 될 거예요. 총 몇 개가 있어요?
<SYNC Start=2375257><P Class=KRCC>
3개가 있습니다. 이렇게 각각 3가지씩 있으니까 곱하기 얼마를 해 주면 돼요? 3을 해 주면 저렇게 함숫값이 중복돼서 3개가 나오는 경우는 몇 개다?
<SYNC Start=2387074><P Class=KRCC>
60개라고 알 수 있겠네요. 그러면 다 구했느냐? 아직 덜 구했어요. 어떤 것도 있어요? 6 두 번 나오고 7 두 번 나오고 8 한 번 나오는 경우도 있겠죠.
<SYNC Start=2398003><P Class=KRCC>
그다음에 6 두 번 나오고 8 두 번 나오고 7 한 번 나오는 경우도 있을 거예요. 그리고 어떤 경우? 그러면 6, 6, 8, 8이었으니까 이번에는 7 7 8 8 6 나오는 경우도 있겠죠.
<SYNC Start=2411702><P Class=KRCC>
그리고 이들끼리 자리를 바꾸면 함숫값의 조합이 달라지니까 다른 함수가 되겠죠. 그러니까 결과적으로 이 경우도 같은 것을 포함한 순열의 수로 생각할 수 있는데
<SYNC Start=2422132><P Class=KRCC>
6이 2개, 7이 2개 있으니까 이 경우는 5!을 똑같은 것만큼 2개 바꾸는 경우. 그다음 똑같은 것만큼 2개 바꾸는 경우로 나눠서 풀 수 있겠구나.
<SYNC Start=2437627><P Class=KRCC>
그래서 5×4×3까지 해 주고 2!은 날리고 나머지 2!을 계산해 주면 얼마가 나온다? 30가지가 나온다는 사실을 알 수 있어요.
<SYNC Start=2448648><P Class=KRCC>
그런데 얘도 30가지일 거고요. 이것도 30가지, 이것도 30가지겠죠. 총 몇 개가 있어요, 얘도? 이렇게 세 덩어리가 있네요.
<SYNC Start=2456297><P Class=KRCC>
그러니까 여기에 각각 하나씩 더 있는 거니까 세 덩어리씩 곱해 주시면 되겠죠. 그래서 세 덩어리씩 곱해 주면 이 결과는 90가지가 나올 겁니다.
<SYNC Start=2466278><P Class=KRCC>
그러면 제가 고려한 하나, 둘, 셋, 넷, 다섯, 여섯 가지 케이스는 서로 동시에 일어날 수 있어요, 없어요? 없습니다.
<SYNC Start=2474826><P Class=KRCC>
얘는 6이 3개가 있는 거고 얘는 7이 3개가 있는 건데, 어떻게 동시에 일어나겠나요? 얘도 마찬가지죠. 6 두 개, 7 두 개가 있는 건데 얘는 7이 하나 있으니까 동시에 일어날 수가 없어요.
<SYNC Start=2485493><P Class=KRCC>
각 케이스별로 동시에 일어날 수가 없기 때문에 무슨 법칙을 써야겠어요? 합의 법칙을 활용해 줘야 될 겁니다. 그래서 60과 90을 더하면 합의 법칙에 의해서 이런 조건을 만족하는 함수의 개수는
<SYNC Start=2500413><P Class=KRCC>
150가지가 나오게 됩니다. 그래서 지난 시간에는 중복순열을 활용해서 문제를 해결해 봤는데, 이번 시간에는 뭘 활용했어요?
<SYNC Start=2510143><P Class=KRCC>
같은 것이 있는 순열의 수로 문제를 해결해 보았습니다. 그래서 수학 문제는 어떤 걸 하나 배웠으면 오로지 그것만을 이용해서 문제를 푸는 건 아니에요.
<SYNC Start=2520915><P Class=KRCC>
특히나 이 경우의 수 단원은 되게 다양한 방식으로 문제를 해결할 수가 있어요. 그래서 문제를 보시고 여러분들이 곰곰이 생각해 본 다음에 그 생각대로 문제를 해결해 보세요.
<SYNC Start=2532418><P Class=KRCC>
그리고 제가 여러분들한테 알려드리는 문제가 조금 더 쉽다, 풀이가 더 쉽다고 하시면 제 풀이를 여러분들 것으로 만들어서 가져가시면 돼요.
<SYNC Start=2541758><P Class=KRCC>
그래서 각 문항별로 제가 풀이를 굉장히 다양하게 많이 소개하잖아요. 이유가 뭐냐면, 여러분들이 풀 수 있는 형태, 여러분들이 받아먹을 수 있는 형태로
<SYNC Start=2551480><P Class=KRCC>
여러분만의 것으로 만들고 싶은 걸 하나 픽해서, 선정해서 손에 익히시면 되겠습니다. 만약에 손에 익지 않으면, TV를 보는 거랑 똑같아요.
<SYNC Start=2559609><P Class=KRCC>
그냥 한번 보고 슉 지나가고 머릿속에 남는 게 없으니까, 반드시 강의를 다 듣고 나서 여러분들이 손으로 직접 풀고 반성을 한번 해 보셨으면 좋겠습니다.
<SYNC Start=2570548><P Class=KRCC>
오늘도 이벤트가 있으니까 개념 정리 화면 지나가고 나서 이벤트를 보시고 참여하시면 약속대로 선물을 드리도록 하겠습니다. 다음 강에서 만날게요. 안녕~
<SYNC Start=2580112><P Class=KRCC>
&nbsp;
</BODY>
</SAMI>