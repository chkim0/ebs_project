<SAMI>
<HEAD>
<TITLE>(주)기록법인상생 자막 2015</TITLE>
<STYLE TYPE="text/css">
<!--
P { margin-left:8pt; margin-right:8pt; margin-bottom:2pt;
    margin-top:2pt; font-size:12pt; text-align:left;
    font-family:굴림, Arial; font-weight:normal; color:white;
    background-color:#405A8D; }
.KRCC { Name:한국어; lang:ko-KR; SAMIType:CC; }
#STDPrn { Name:Standard Print; }
#LargePrn { Name:Large Print; font-size:20pt; }
#SmallPrn { Name:Small Print; font-size:10pt; }
-->
</STYLE>
</HEAD>
<BODY>
<SYNC Start=12586><P Class=KRCC>
좋아요. 함수의 개수. 누구랑 인터뷰? | -정의역.
<SYNC Start=18222><P Class=KRCC>
-정의역에 있는 모든 원소들이랑. 호텔 문제는? | -움직이는 애들
<SYNC Start=21836><P Class=KRCC>
-움직이는 애들. 현재 여러분들은 중복순열 풀고 계시고요. 함수의 개수에 관련된 문제 아직 안 풀었거든요. 그 문제 하나 풀고 넘어가도록 하겠습니다.
<SYNC Start=32409><P Class=KRCC>
유제 4번 아직 안 풀었습니다. 7페이지. 집합 X. 1, 2, 3, 4를 원소로 갖는 집합이고요. Y는 2, 4, 6, 8, 10을 원소로 갖는 집합이에요. Y는 2, 4, 6, 8, 10이에요. 이렇게 돼 있어.
<SYNC Start=47327><P Class=KRCC>
X에서 Y로의 함수 중에서 치역의 원소의 개수가 2 이상이고. 치역의 원소가 2 이상이라는 것은 2개 이상 화살을 맞아야 되고.
<SYNC Start=59775><P Class=KRCC>
치역의 모든 원소의 합이 3의 배수. 3의 배수가, 곱이 3의 배수라면 적어도 하나는 3의 배수라는 얘기죠. 그런데 여러분 이 Y값들 중에서 3의 배수는 뭐 밖에 없어요? 6밖에 없거든.
<SYNC Start=73925><P Class=KRCC>
그러니까 6이 적어도 한번 들어가야 된다 이런 뜻입니다. 맞지. 그러니까 진짜 어려워. 왜? 함수들 중에서 2개 이상한테 화살을 쏘면서 6이 적어도 하나는 들어가는 함수가 몇 개인지를 세는데.
<SYNC Start=88486><P Class=KRCC>
이거를 일일이 네가 선택할 수 있는 정의역의 원소의 개수 몇 가지야? 이런 느낌으로 처리하려면 못 풀어요. 왜 그러냐면 얘가 누구한테 쏘느냐에 따라서.
<SYNC Start=97491><P Class=KRCC>
얘가 그냥 단순하게 쏠 수 있는 방법이 몇 가지냐로 해결될 문제가 아니라, 누구한테 구체적으로 쐈는지에 따라서 그다음 사람들이 쏘는 방법이 달라지죠.
<SYNC Start=108779><P Class=KRCC>
그런 거를 종속이라 그러는데, 어려운 말로, 확률 시간에 배우는, 그럴 때는 각각을 곱함으로써 처리할 수가 없어요. 좀 어려운 말을 했어요, 내가 지금.
<SYNC Start=119519><P Class=KRCC>
이럴 때는 어떻게 하느냐? 인터뷰 말고 딴 방법을 이용할 수 있는 방법밖에 없는 거야. 그럼 어떻게 해야 됩니까? 글쎄다. 어떻게 할까? 난 여사건이 떠오르는데.
<SYNC Start=134000><P Class=KRCC>
수능에서 가장 많이 나오는 것들 중에 하나야. 여사건을 이용하자. 여사건을 이용하는 게 뭐냐면 치역의 원소가 2개 이상의 여사건이 뭐예요? 치역의 원소가 1개.
<SYNC Start=144279><P Class=KRCC>
그게 아니면 되니까. 1개인 걸 다 빼줘. 그러니까 전체 경우의 수에서 여사건의 경우의 수를 빼주는데. 여사건의 종류가, 이런 거야.
<SYNC Start=157449><P Class=KRCC>
이것도 여사건이고, 뭐? 치역의 원소의 개수가 딱 하나인 거. 1개. 이런 거 다 빼줘야 되고. 또 뭐도 빼줘야 됩니까? 치역의 모든 원소의 곱이 3의 배수니까 3배수 아닌 거.
<SYNC Start=176684><P Class=KRCC>
그러니까 치역의 모든 원소가, 3의 배수 6밖에 없으니까 6은 화살 맞지 않는다. 화살을 맞지 않는 거. 그렇지? 화살 맞지 않아야 돼.
<SYNC Start=210195><P Class=KRCC>
원소의 개수가 2개 이상 여사건은 원소의 개수가 1개. 치역의 모든 원소의 곱이 3의 배수인, 그랬으니까. 3의 배수가 아니어야 돼. 그 얘기는 6은 화살 맞지 않는 것 같아. 맞지? 맞잖아.
<SYNC Start=232560><P Class=KRCC>
그런데 얘랑 얘랑. 그러니까 이거인 거를 다 빼주고 이거인 걸 다 빼줄 거잖아. 그런데 얘랑 얘랑 동시에 만족시키는 게 있으면,
<SYNC Start=241013><P Class=KRCC>
여기서도 빼주고 여기서 빼주니까. 2번이나 빼줘. 그러면 답이 안 되잖아요. 1번 빼줘야 되는데. 예를 들어서 치역의 원소의 개수가 하나인데 6은 화살 맞지 않는 거. 뭐 있어?
<SYNC Start=253844><P Class=KRCC>
다 2한테 쏘고 다 4한테 쏘는 이런 것들. 동시에 일어나는 거. 그거는 여기서도 빠지고 여기서도 빠지니까
<SYNC Start=273589><P Class=KRCC>
맨 마지막에 뭐 해줘야 되겠어? 1번은 더 해줘야지. 왜? 2번이나 빠졌잖아. 그러니까 전체에서 안 되는 거 다 빼는데, 원소의 개수 1짜리 다 빼고. 6 화살 안 맞은 거 다 빼고.
<SYNC Start=287299><P Class=KRCC>
그런데 만약에 모든 애들이 다 2한테 화살 쏘는 얘도 하나의 함수잖아. 얘들아. 그렇지. 그런데 이 함수는 여기서도 해당되고 여기서도 해당되니까 하나의 함수가 2번이나 빠졌잖아요.
<SYNC Start=298791><P Class=KRCC>
그러니까 그런 건 다시 더 해줘야 된다니까. 2개를 동시에 만족시키는, 뭐야? 치역이 원소의 개수가 1개 이면서 and(×). 6은 화살 맞지 않는 것. 이런 함수는 맨 마지막에 다시 더해줘야 된다.
<SYNC Start=315002><P Class=KRCC>
이해되시죠? 전체 경우의 수부터 한번 찾아보자. 전체 경우의 수 어떻게 찾을까? 전체 함수의 개수. 전체 함수의 개수는 이거죠. 정의역에 있는 모든 원소랑 인터뷰한다. 내가 그랬잖아.
<SYNC Start=325827><P Class=KRCC>
얘랑 인터뷰하겠어. 네가 선택할 수 있는 화살, 네가 선택할 수 있는 화살, 너, 너, 너. 5의 몇 제곱? 4제곱. 시작, 625가지. 여기까지 됐어. 이게 전체 경우의 수.
<SYNC Start=339170><P Class=KRCC>
첫 번째 여사건. 원소의 개수가 1짜리, 그 얘기는 1명이 다 맞아야 되니까. 2에 몰빵. 4에 몰빵. 6에 몰빵. 8에 몰빵. 10에 몰빵. 5가지.
<SYNC Start=349991><P Class=KRCC>
6은 화살을 맞지 않는 것. 뭐라고? 6은 화살을 맞지 않는 것. 네가 선택할 수 있는 경우의 수 몇 가지? 6 빼고. 함수 중에서 6은 화살을 맞지 않은, 얘는 없다고 생각해.
<SYNC Start=377442><P Class=KRCC>
그럼 얘가 선택할 수 있는 경우의 수, 인터뷰. 시작, 4가지. 2, 4, 8, 10. 4가지, 4가지, 4가지, 4가지. 4의 4제곱가지. 256가지. 무슨 말인지 알겠지?
<SYNC Start=391738><P Class=KRCC>
그런데 2개를 동시에 만족시키는 것은 1가지를 가지고 2번이나 뺐으니까 1번을 다시 더 해줘야 된다.
<SYNC Start=399097><P Class=KRCC>
그 얘기는 치역의 원소가 하나면서 6은 화살을 안 맞는다는 얘기는, 어떻게? 시작, 2가 다 맞거나 4가 다 맞거나 8이 다 맞거나 10이 다 맞는거니까 그런 건 4개밖에 없다.
<SYNC Start=412673><P Class=KRCC>
그래서 최종적인 답은 전체 경우의 수 625가지 해서 빼주는 거야. 뭐도 빼주고? 원소 1짜리 다 빼주고. 또 뭐도 빼주고? 6 화살 안 맞는 거 다 빼주고. 맨 마지막에 4가지는 더 해야 된다.
<SYNC Start=430633><P Class=KRCC>
그래서 5 빼면 얼마예요? 620. 여러분 620에서 얘 빼면 4. 얼마예요? 6. 3. 364에서 4를 더하면 돼요. 답, 368가지. 끝.
<SYNC Start=450136><P Class=KRCC>
어떤 얘기인지 알겠지? 이게 바로 유제 4번 이야기였습니다. 좀 어려웠어요. 4점짜리 문제 정도 되는 함수의 개수 문제였습니다. 결론, 함수의 개수든 뭐든, 호텔 문제든 인터뷰하는데.
<SYNC Start=467786><P Class=KRCC>
호텔 문제는 움직이는 애들이랑 p, q, r, s, t. A, B, C 3개 호텔. 그 광경을 잊지 마세요. 제가 이 칠판에다 그렸던 그 그림을 잊지 마시고.
<SYNC Start=480278><P Class=KRCC>
함수의 개수 문제가 나오면 기본은 정의역에 있는 모든 원소들이랑 인터뷰를 하지만. 특별한 조건 때문에 그렇게 못 풀 때는 다른 방법을 사용해야 된다.
<SYNC Start=488707><P Class=KRCC>
그리고 함수의 개수는 여기서 끝나는 게 아니라, 우리 조합을 배우고 난 다음에 또 중복 조합을 또 계속 공부하게 될 거예요.
<SYNC Start=497439><P Class=KRCC>
가장 메인이 중복순열이지만 다른 단원에서도 함수의 개수 문제를 출제할 수 있다. 그거는 그때 가서 고민하시면 됩니다. 일단 여기까지.
<SYNC Start=508312><P Class=KRCC>
그럼 이제 순열에서 남아있는 건 뭐냐면, 하나 남았어요. 같은 것을 포함하는 순열. 순열이 이거예요.
<SYNC Start=516553><P Class=KRCC>
맨 처음에 순열TOP 5. 걔는 그냥 일반적인 직순열이고요. 그다음에 배우는 게 원순열. 그다음에 배우는 게 중복순열.
<SYNC Start=525245><P Class=KRCC>
그다음에 배우는 것이 같은 것을 포함하는 순열이에요. 같은 거. 옛날에 동자순열 그랬어요. 같을 ‘동’자의 글자 ‘자’자 써서. 같은 글자가 들어있는 순열. 같은 것이 있는 순열. 이럴 수도 있고.
<SYNC Start=537919><P Class=KRCC>
같은 것을 포함하는 순열. 책에 따라서 표현 방식이 다 다른데. 같은 것이 있는 순열까지도 공부하셔야 되는데. 그걸 지금부터 시작해 보도록 하겠습니다. 같은 것이 있는 순열입니다.
<SYNC Start=553144><P Class=KRCC>
이거 어떻게 풀 것이냐? 이거야. 봐 봐. 중복순열이랑 다른 게. 한 번 썼던 걸 또 쓸 수 있는 건 아닌데. 이것도 문자로 돼 있어서 카드가 적혀 있다고 보는 거야.
<SYNC Start=567509><P Class=KRCC>
a, a, b, b, c를 일렬로 배열한다처럼. 같은 것이 있는 거야. 같은 게, 똑같은 게. a, b, c, d, e는 다 다르잖아요.
<SYNC Start=578005><P Class=KRCC>
걔네들 일렬로 배열하다가 아니라 똑같은 게 들어있는 거야. a, a, b, b, c처럼. a, a 똑같고 b, b 똑같잖아. 그러면 이것도 경우의 수가 달라집니까? 그럼.
<SYNC Start=587826><P Class=KRCC>
예를 들어서 a, b, c 다 달라. a, a, c 2개가 같아. 일렬로 배열하는 방법의 수는 얘는 총 몇 가지일까? 3!(팩토리얼)가지. 다른 말로 6가지예요.
<SYNC Start=600045><P Class=KRCC>
불러볼까? abc, acb, bac, bca, cab, cba. 6가지잖아. a, b, c를 가지고 배열하는 방법의 수, 자리 바꿈 하는 방법의 수가 총 6가지예요.
<SYNC Start=613485><P Class=KRCC>
그런데 a, a, c는 아무리 얘네들이 자리 바꿔봤자 인정을 안 해. 그러니까 aac, aca, caa. 총 몇 가지밖에 안 남아? 3가지밖에 안 남아요.
<SYNC Start=626380><P Class=KRCC>
이렇게 같은 것이 들어 있을 때 일렬로 배열하는 방법의 수를 같은 것이 있는 순열 또는 같은 것을 포함하는 순열. 이렇게 얘기합니다.
<SYNC Start=639941><P Class=KRCC>
그럼 어떻게 풀 것이냐? 이거거든. 어떻게 푸느냐? 결론부터 먼저 말씀드리면. 몇 개예요? 3개. 3개잖아요. 3개를 배열하는 방법의 수는 3!가지 맞아.
<SYNC Start=656449><P Class=KRCC>
그런데 3!가지는, 원래는, 서로 다른 사람을 배열하는 방법의 수라서. 다 다르다면 3!가지 맞다고. 맞지. 잘 들어봐. 그런데 사실 다 다르지 않잖아. 2개는 같잖아.
<SYNC Start=677073><P Class=KRCC>
그러니까 이 2개가 자리 바꿈 하는 경우에 수도 당연히 이 안에 들어 있을 텐데. 왜? 3개가 자리 바꿈 하는 경우의 수니까.
<SYNC Start=684513><P Class=KRCC>
2개가 자리 바꿈 하는 경우의 수도 이 안에 들어있을 텐데. 걔는 뭐 해야 돼? 제거해야죠. 그런데 곱하기로 연결돼 있으니까 제거하는 방법은 나누기입니다.
<SYNC Start=698637><P Class=KRCC>
2개가 자리 바꿈 하는 방법의 수. 그걸 뭐라 그래요? 2! 이 안에 들어있거든. 봐 봐. 들어있잖아. 이게 2! 아니에요? 그걸 제거하기 위해서 2!을 나누는 거예요. 그러면 제거가 돼요. 2!이.
<SYNC Start=712510><P Class=KRCC>
그래서 최종적인 답은 몇 가지? 시작, 3가지. 이렇게 되는구나. 어? 신기하네. 같은 것이 있는 순열은 어떻게 푸느냐?
<SYNC Start=721834><P Class=KRCC>
일단 전체적인 개수가 같은 게 있든 없든 상관 마시고. 3개를 배열한다 그러면 3!을 써놔요. 그런데 이렇게 3!을 썼다는 것은 같은 게 있다고 본 게 아니라 다 다르다.
<SYNC Start=735707><P Class=KRCC>
다른 말로 다 자리 바꿀 수 있다고 생각하면서 푼 건데. 사실 같은 게 들어 있으면 어떤 현상? 자리 바꿀 수 없다는 현상.
<SYNC Start=743859><P Class=KRCC>
그러니까 2개는 자리 바꿀 수 없지. 아니 이 2개도 자리 바꿀 수 있고 이 2개도 자리 바꿀 수 있어. 유독 이 2개를 자리 바꿀 수 없는데, 그 2개가 자리 바꿈 하는 경우의 수도 이 안에 들어있거든.
<SYNC Start=754811><P Class=KRCC>
걔를 제거한다. 끝. 이렇게 되는 거예요. 그러니까 a, b, b, c, c, c를 일렬로 배열하는 방법의 수를 구하시오. 같은 것이 들어있고 같은 것이 들어 있잖아요.
<SYNC Start=768970><P Class=KRCC>
그럼 전체 몇 개냐? 1, 2, 3, 4, 5, 6개가 있거든. 걔네들이 일렬로 배열하는 방법의 수는 6!이야. 일단 같은 걸 무시하고 이렇게 쓴다고.
<SYNC Start=779669><P Class=KRCC>
그런데 이 안에는 같은 것끼리, 얘네끼리 자리 바꿈 하는 경우의 수도 이 안에 들어 있고. 제거하자. 이 c, c, c 3개가 자리 바꿈 하는 경우의 수도 이 안에 들어 있는데
<SYNC Start=789211><P Class=KRCC>
어차피 얘네들끼리 자리 바꿔봤자 사람들은 인정을 안 할 거 아니야. 그걸 제거시켜야지. 3개가 자리 바꿈 하는 경우의 수는 뭐예요? 3! 그것도 제거해야 된다 이거야.
<SYNC Start=798396><P Class=KRCC>
그래서 2개가 같으면 2! 3개 같으면 3!로 나눠준 게 최종적인 답이다. 이런 얘기. 그래서 답은 60가지로 바뀌는 거예요. 이게.
<SYNC Start=811996><P Class=KRCC>
같은 것이 있는 순열. 어떻게 한다고? 일단 개수를 보고 6!을 쓴다. 그런 다음에 뒤처리를 하는데. 뭘 뒤처리? 같은 것끼리는 잘 못 바꾸니까,
<SYNC Start=819966><P Class=KRCC>
2개가 자리 바꿈 하는 경우 수가 이 안에 들어있다는 게 중요한 거야. 걔를 제거시키고, 3개가 자리 바꿈하는 경우 수가 이 안에 들어있으니까 개를 제거시켜야 된다.
<SYNC Start=833122><P Class=KRCC>
그런데 만약에 문제가 이렇게 나왔다 그래도 풀이 방법이 똑같습니다. 예를 들어서 이번에는 a, b, c, d, e. 얘네들 일렬로 배열한다. 이번에는 다 다르잖아요. 그니까 120가지죠. 5!이니까.
<SYNC Start=845125><P Class=KRCC>
그런데 문제 이렇게 나와. 5개를 일렬로 배열하되 그 120가지 중에서 특정 문자 a, c의 순서가 a 다음에 b가 오고 b 다음에 c가 오는 것의 개수를 구하시오. 이렇게 돼 있어.
<SYNC Start=864368><P Class=KRCC>
특정 문자의 순서를 결정해놨어요. 이게 무슨 말이냐면 여러분 얘네들이 일렬로 배열하는 방법 중에서 abcde도 있고 cbdea도 있고 cdeba도 있고 dabec도 있고 많잖아요. 여기 120가지가 있잖아.
<SYNC Start=887353><P Class=KRCC>
그중에 a, b, c만 봤을 때 얘는 abc 순서. 얘는 cba 순서. a, b, c만 봤을 때 말이야. 딴 거 말고. 얘는 cba 순서. 얘는 abc 순서잖아.
<SYNC Start=907071><P Class=KRCC>
그러니까 전체 120개 중에서 a 다음에 b가 오고 b 다음에 c가 오는 거에 개수를 구하라는 얘기는, 이런 것들이 몇 개 있냐?
<SYNC Start=914286><P Class=KRCC>
다른 말로 a, b, c만 봤을 때, abc 순서인 거야. a 다음에 b가 오고 b 다음에 c가 오는 게 총 몇 가지겠냐? 이런 뜻이에요.
<SYNC Start=925113><P Class=KRCC>
그런데 이것도 똑같지 않니? 뭐가 똑같은데요? 선생님. 얘들아, 얘네들이 일렬로 배열하는 방법의 수 몇 가지? 시작, 5!가지인데.
<SYNC Start=933650><P Class=KRCC>
문제에서 얘기하는 a 다음에 b가 오고 b 다음에 c가 오라는 얘기는, 막 b, c 바꾸고 a, c 바꾸고 a, b, c끼리는 절대로 자리 바꾸지 말라는 얘기잖아.
<SYNC Start=942824><P Class=KRCC>
abc끼리는 자리 바꾸지 말라는 얘기가 바로 다른 말로 특정 문자의 순서를 이미 결정한 거예요. 특정 문자의 순서를 이미 결정했다는 얘기는 함부로 자리 바꾸지 말라는 얘기랑 똑같다.
<SYNC Start=954920><P Class=KRCC>
분명히 5! 안에는 뭐가 들어 있어? a, b, c 3개의 문자가 자리 바꿈 하는 경우의 수가 분명히 이 안에 들어있는데. 걔를 제거시켜야 되니까.
<SYNC Start=961424><P Class=KRCC>
또 나눠야 돼. 얘들끼리 자리 바꿈 하는 경우의 수 몇 가지인데? 3! 이걸로 나누시면 되죠. 그래서 아까랑 또 똑같구나. 뭐냐? 같은 것을 포함하는 순열이나. 뭐나 똑같아?
<SYNC Start=976690><P Class=KRCC>
특정 문자의 순서가 이미 결정돼 있는 건 똑같아. 왜? 공통점이 뭐야? 똑같은 문자도 자리 못 바꾸고, 문자의 순서가 결정돼도 자리를 못 바꾸니까.
<SYNC Start=985157><P Class=KRCC>
그런 것들은 걔네들이 자리 바꿈 할 수 있는 경우의 수를 리무브(remove) 제거해야 된다. 어디다 갖다 놓음으로써? 분모에다 갖다 놓음으로써 제거해야 된다. 이런 뜻이에요.
<SYNC Start=999849><P Class=KRCC>
어떤 애들은 왜 빼지 않고 나눕니까? 이렇게 설명하면 이해하려나? 여러분 120가지 중에서 abc 순서인 게 있고 또 뭐 있어? bac 순서 게 있고 cab 순서 cba 순서 bca, acb 전체 6가지잖아요.
<SYNC Start=1018233><P Class=KRCC>
그런데 그중에 어떤 순서가 제일 많을까? 공평하겠지. 철학적으로 생각해 봐. abc가 더 많을까 acb가 더 많을까? 똑같을 거라고. 세상의 이치는 공평하니까.
<SYNC Start=1034713><P Class=KRCC>
그러니까 abc가 자리 바꿈 하는 방법의 수가 6가지인데 모두 다 동등한 비율로 가지고 있다면. 전체의 6분의 1은 abc. 6분의 1은 bac. 6분의 1은 cab 순서.
<SYNC Start=1047559><P Class=KRCC>
6분의 1은 cba 순서. 6분의 1은 acb 순서. 6분의 1은 bca 순서. 그러니까 이거잖아. 전체의. 시작, 6분의 1. 이런 뜻이에요. 그래서 나누는 거야. 지금 무슨 말인지 알겠죠? 재미있네.
<SYNC Start=1071310><P Class=KRCC>
바나나. 뭐? 바나나(banana). 버내너, 이러지 마세요. 바나나지. 일렬로 배열하는 방법의 수를 구하시오. 전체 글자 몇 개? 6글자 6! 나누기.
<SYNC Start=1086248><P Class=KRCC>
똑같은 것끼리 자리 못 바꾸는데 a, a, a. 3개 같으니까 3! n, n 2개 같으니까 2! 이게 최종적인 답. 끝. 이렇게. 같은 것을 포함하는 순열은 이런 느낌으로 처리한다.
<SYNC Start=1099062><P Class=KRCC>
됐습니까? 문제 한번 풀어볼까요? 첫 번째 문제부터 한번 시작해보도록 하죠. 유제 5번입니다. 문자 a, a, b, b, c, c. 다 2개씩 있네요. 같은 게 포함되어 있습니다.
<SYNC Start=1112766><P Class=KRCC>
얘네들 모두 일렬로 나열할 때 a끼리 이웃하는 경우의 수를 구하시오. 그러면 이렇게 하면 되지. 이웃한다 그러면 어디에다 집어넣어? 주머니.
<SYNC Start=1120973><P Class=KRCC>
내가 그랬잖아. 순열TOP 5할 때. 앞으로 원순열에서도 적용시키고 같은 것을 계속 적용시킬 것이다.
<SYNC Start=1133891><P Class=KRCC>
a, a, b, b, c, c. 모두 나열할 때 a끼리 이웃하는 경우의 수. 이웃할 대상을 주머니 속에 집어넣는다. 이제 주머니 하나야.
<SYNC Start=1143768><P Class=KRCC>
주머니, b, b, c, c. 총 몇 개의 문자야? 5개 문자 일렬로 배열하면 5! 일이 안 끝났어. 나눠야 돼. 제거해야 돼. 뭐를? 같은 문자끼리는 자리 바꿈 할 수 없으니까.
<SYNC Start=1155695><P Class=KRCC>
선생님, 왜 여기서 끝이에요? 일 끝나지 않았고 주머니 안에 끼리 자리 바꿀 수 있잖아요. 자리 못 바꾸잖아. 왜? 같은 문자니까 여기서 끝나지. 됐지?
<SYNC Start=1164129><P Class=KRCC>
원래 주머니 있으면 주머니 안에 끼리 자리 바꾸는데 여기서 못 바꾸니까. 그런 다음에 맨 마지막에 b, b. 2개가 같다. 2! c, c. 2개가 같다. 2!로 나눠줘야 된다. 이런 얘기.
<SYNC Start=1173642><P Class=KRCC>
120을 2×2=4로 나누니까 답은 30. 끝. 이렇게. 재밌지? 유제가 좀 더 쉬워서 유제 먼저 했고요. 예제로 다시 갈까요? 그 바로 위에 있는 문제. 같은 것이 있는 순열.
<SYNC Start=1187145><P Class=KRCC>
7개의 숫자 1, 1, 1, 2, 2, 3, 3이 있다. 1만 3개 있고 나머지 다 2개씩 있네요. 1, 2, 3이 적어도 하나씩 포함되도록 5개를 일렬로 배열해서 만들 수 있는 5자리 자연수의 개수를 구하라.
<SYNC Start=1199478><P Class=KRCC>
1, 2, 3은 반드시 하나씩은 있어야 돼. 이렇게. 그럼 남아 있는 거 중에 몇 개가 추가될까요? 5자리 수니까. 5개를 택하라 그랬으니까.
<SYNC Start=1209070><P Class=KRCC>
2개가 더 추가될 텐데 남아있는 게 뭐야, 지금 현재? 1, 1, 2, 3 밖에 없잖아. 현재 뭐는 그대로 있고? 1, 2, 3은 그대로 있고.
<SYNC Start=1217059><P Class=KRCC>
여기서 2개를 추가할 거야. 그럼 2개 추가하는 방법 뭐 있어요? 1, 1 추가할 수도 있고 1, 2 추가할 수도 있고 1, 3 추가할 수도 있고 2, 3 추가할 수도 있지.
<SYNC Start=1225905><P Class=KRCC>
왜 그거를 다 생각하려고 합니까? 뭘 선택했냐에 따라서 같은 거의 개수가 달라지니까. 따로 계산할 수밖에 없어.
<SYNC Start=1233449><P Class=KRCC>
그래서 이 문제를 읽자마자 하는 게 바로 뭐냐? 첫 시간에 그렇게 많이 강조했었던 뭐 해야 되겠구나? 시작, 분류해야 되겠구나 라는 생각을 하는 거예요.
<SYNC Start=1241991><P Class=KRCC>
그리고 분류의 원칙은 몇 가지를 지킨다? 2가지. 하나는 동시에 할 수 없도록. 또 하나는 빠짐없이를 지켜야 됩니다.
<SYNC Start=1251967><P Class=KRCC>
분류해보자. 1, 2, 3에다 2개 추가하는데 1, 1 추가할 수 있고 또 1, 2 추가할 수 있고 또 1, 3 추가 또 이거밖에 더 있니? 그러니까 몇 가지로 분류하면 돼요? 4가지로 분류하면 돼요.
<SYNC Start=1266047><P Class=KRCC>
그래서 각각 경우의 수 구한 다음에 맨 마지막에 뭐 해 버리자? 더해버리자. 그게 끝이야. 안 헷갈리게 제가 이렇게 써드릴게요. 친절해라. 이런 걸 자상하다 그러는 거야, 자상.
<SYNC Start=1282814><P Class=KRCC>
가자. 첫 번째 방법의 수를 계산하시오. 5개의 문자니까 5! 나누기. 몇 개가 같아? 1, 1, 1. 3개 같아.
<SYNC Start=1293088><P Class=KRCC>
5자리 자연수의 개수니까 얘네들 자리 바꿀 때마다 다른, 자연수의 개수는 일렬로 배열하는 방법의 수다. 그런데 1, 1, 1. 3개가 같으니까 3!로 나눈다. 120÷6이니까 20가지.
<SYNC Start=1307377><P Class=KRCC>
밑에는 1, 1, 2개 같다. 2 2개 같다. 그러니까 5! 나누기. 2개 같다. 2개 같다. 120을 4로 나누니까 30가지. 그 밑에 거는 30가지. 왜? 얘도 2개 같다. 2개 같다니까 1, 1, 3, 3이니까
<SYNC Start=1326472><P Class=KRCC>
그 밑에 거는 2개 같다. 2개 같다니까 얘도 30가지다. 분류해서 푼 문제는 맨 마지막에 뭐 하라고 각각을? 더한다. 이게 합의 법칙. 다 더하면 돼요. 110. 답은 ②번 끝.
<SYNC Start=1344405><P Class=KRCC>
같은 것을 포함하는 순열. 뭔지 알겠지? 그런데 이 같은 것을 포함하는 순열도 가장 많이 나오는 패턴이 있어요. 그게 뭐게? 그게 뭐야? 뭐게?
<SYNC Start=1362142><P Class=KRCC>
-최단 경로의 수 | -맞아요. 도로망 문제. 최단 경로의 수 문제예요. 그래서 지금부터 최단. 또 최가 나왔네. 최단 경로의 수 특강을 시작하도록 하겠습니다. 박수.
<SYNC Start=1388658><P Class=KRCC>
길잡이 문제. 돌잡이가 아니라 길잡이 문제. 이런 거는 이제 직사각형 모양의 도로망이 나옵니다. 계획 도시, 신도시 같은 데는 다 이렇게 도로망이 바둑판 모양으로 생겼을 거예요.
<SYNC Start=1408514><P Class=KRCC>
이런 도로가 있는 거죠. 이런 도로. 이렇게 도로. 이게 도로야, 이게 도로. 도로라는 게 뭔지 알아? 이게 교차로. 우회전해서 좌회전해서 직진해서 좌회전해서. 뭔지 알겠지? 그렇지? 이게 도로망이야.
<SYNC Start=1445384><P Class=KRCC>
이 지점을 A라 그럴게. A. 이 지점을 B라 그럴게. A에서 B까지 가는, A에서 B까지 가는 최단 경로의 수를 세시오. 이게 문제라고 봐요.
<SYNC Start=1465463><P Class=KRCC>
최단. ‘가장 짧은’ 이런 뜻입니다. ‘최’는 가장. 영어로 most(모스트) ‘단’은 짧다. short(쇼트). 그렇다고 모스트를 쓰기에는 조금 애매하니까 shortest(쇼티스트).
<SYNC Start=1482411><P Class=KRCC>
가장 짧은 경로의 수를 구하라. 어떨 때는 2가지라고 그러더라고요. 왜요? 선생님, 가장 빨리 가려면 이렇게 가거나, 2가지잖아요. 아니.
<SYNC Start=1502565><P Class=KRCC>
물론 그 2가지도 최단 경로인데 이거 최단 경로 맞아. 밑으로 가는 것도 최단 경로 맞는데. 이것도 최단 경로다. 봐 봐. 이것도 최단이다. 거리가 같아. 왜?
<SYNC Start=1521383><P Class=KRCC>
봐 봐. 여기 겹쳤으니까 됐고. 이 길이나 이 길이나 같잖아. 이 길이랑 이 길이랑 같고 이 길이랑 이 길이랑 같아.
<SYNC Start=1527116><P Class=KRCC>
그러니까 가로의 길이가 다 똑같고 세로의 길이는 얘랑 얘랑 똑같고 얘랑 얘랑 똑같고 얘랑 얘랑 똑같고 얘랑 얘랑 얘랑 똑같으니까 이걸 실로 쫙 위로 올려버리면 길이가 똑같아요. 실의 길이가.
<SYNC Start=1540134><P Class=KRCC>
그러니까 노란색도 최단 경로고 파란색도 최단 경로입니다. 그러네. 가만히 보니까 파란색은 어떻게 움직인 거야? 위, 위, 위, 위, 오, 오, 오, 오, 오, 오.
<SYNC Start=1557127><P Class=KRCC>
위, 위, 위로 가고 위로 가고 오른쪽으로, 오른쪽으로, 오른쪽으로, 오른쪽으로, 오른쪽으로, 오른쪽으로 총 10칸을 이렇게 움직인 거고. 노란색은 어떻게 움직였니? 말로 해봐. 시작,
<SYNC Start=1569140><P Class=KRCC>
오른쪽 갔다가 위로 갔다가 오른쪽으로 갔다가 위로 갔다가 오른쪽으로 갔다가 위로 갔다가 오른쪽으로 갔다가 위로 갔다가 오른쪽으로 갔다가 오른쪽으로 1번 더 간 거니까 봐 봐.
<SYNC Start=1577506><P Class=KRCC>
오른쪽, 위쪽, 오른쪽, 위쪽, 오른쪽, 위쪽, 오른쪽, 위쪽, 오른쪽, 오른쪽. 이렇게 간 거예요. 그런데 위랑 아래랑 차이점은 뭐냐면
<SYNC Start=1592676><P Class=KRCC>
파란색 경로도 위 4번 오 6번이고. 노란색 경로도 위는 4번입니다. 오는 6번입니다. 그거의 순서만 다를 뿐이잖아요.
<SYNC Start=1607107><P Class=KRCC>
그러니까 경로의 수라 그러면 상당히 괴로워 보이지만. 그거를 한글로 표현했더니 얘도 위라는 글자 4개랑 오라는 글자 6개. 얘도 위라는 글자 4개랑 오라는 글자 6개니까
<SYNC Start=1626335><P Class=KRCC>
위라는 글자 4개랑 오라는 글자 6개의 순서만 바뀌었으니까 총 경로의 수는 순서를 바꾸는 경우의 수지. 왜? 순서가 바뀔 때마다 경로랑 일대일 대응을 하는 거예요.
<SYNC Start=1639699><P Class=KRCC>
경로가 달라질 때마다 순서가 달라지는 거예요. 그러니까 경로의 수는 다른 말로 순서 바꾸는 경우의 수. 오라는 똑같은 글자 6개랑 위라는 똑같은 글자 4개랑 일렬로 배열하는 방법의 수.
<SYNC Start=1655825><P Class=KRCC>
답. 시작, 10! 나누기. 몇 개 같다? 4개 같으니까 걔네들이 자리 바꿈 하는 경우의 수 제거시키고 6개가 같으니까 걔네들이 자리 바꿈 하는 경우에 수 제거시키면
<SYNC Start=1668023><P Class=KRCC>
얘가 바로 최종적인 답이 될 것이라는 거예요. 왜 그런지 한번 더 보니까. 최단 경로라는 건 뭐냐면, 잘 들어봐. 지금부터 하는 말 잘 들어.
<SYNC Start=1677494><P Class=KRCC>
최단 경로라는 것은, 이러면 최단 경로가 아니다. A에서 출발. 봐 봐. 띠띠띠띠~ 맞다. 나 열쇠 안 가져왔다. 이러면 최단 경로 아니에요.
<SYNC Start=1687032><P Class=KRCC>
왜? 얘는 뭘로 가니? 왼쪽으로 가지. 오른쪽으로 가는 액션과 위쪽으로 가는 액션만 사용해서 가면 무조건 최단이에요.
<SYNC Start=1695235><P Class=KRCC>
아래로 내려가거나 왼쪽으로 가면 최단에서 탈락됩니다. 왜 그런지 봤더니, 왜 위로랑 오른쪽으로만 가야 되게? 목적지가 거기에 있습니다.
<SYNC Start=1705964><P Class=KRCC>
무슨 말이냐면 B라는 목적지는 A를 기준으로 오른쪽에 있으면서 위쪽에 있잖아요. 그 방향으로만 가면 최단 경로인 거예요.
<SYNC Start=1717617><P Class=KRCC>
그런데 가만히 보니까 가로 칸수가 몇 칸이야, 도로망이? 6칸이고. 세로 칸수가 몇 칸이야? 4칸. 가로 칸수만큼 오른쪽으로 세로 칸수만큼 위로 올라가면 무조건 최단 경로니까
<SYNC Start=1733698><P Class=KRCC>
여기 나오는 최종적인 답은 (가로 칸수 팩토리얼, 세로 칸수 팩토리얼.)분의(2개를 더한 합의 팩토리얼)이겠구나. 그래서 아예 공식을 하나 만들어 낼 수 있다.
<SYNC Start=1753449><P Class=KRCC>
앞으로 직사각형 도로망 문제가 나오면, 그것도 어디서 어디까지? 대각선으로 가는 최단 경로의 수가 나오면. 가로 칸수를 세라. 칸수야, 칸수. 선수가 아니야.
<SYNC Start=1769379><P Class=KRCC>
1칸, 2칸, 3칸, 4칸, 5칸, 6칸, 1칸, 2칸, 3칸, 4칸. 6칸, 4칸. 시작, (6!×4!)분의10!이 답이겠구나. 그 이유를 모르면 안 돼. 외우지 마, 제발.
<SYNC Start=1780684><P Class=KRCC>
그리고 또 심지어는 이런 친구들 분명 있다. 또 이 중에 있어. 이렇게 하면서 이렇게 또 좋아하는 친구. 여기까지 작성할 동안에 답 다 나오겠다.
<SYNC Start=1790212><P Class=KRCC>
그랬더니 또 어떤 애들이 이래요, 공부를 열심히 안 한 친구들이 그러는데요. 선생님, 이렇게 막 도로망이 훼손되거나 이쪽에 없으면요. 이게 더 빠르거든요.
<SYNC Start=1797687><P Class=KRCC>
그런 거를 2글자로, 3글자로, 5글자로. 안 해서 그래. 뭐를? 공부를. 그럼 그게 더 빨라 보여요. 훨씬 느리거든, 그게.
<SYNC Start=1811173><P Class=KRCC>
지금 교과 과정이 이렇게 하라는 게 아니거든요. 교과 과정이. 같은 것을 포함하는 순열로 왜 해석을 해도 되는지를 이해하라는 얘기거든요. 그러면 그렇게 하는 게 제일 빠르게 돼 있어요.
<SYNC Start=1827991><P Class=KRCC>
그렇게 가시라고. 이해되지? 이번엔 이런 문제도 한번 볼게요. 도로망을 한 번 더 그리겠습니다. 칠판이 좀 지저분하니까 깨끗하게 치우겠습니다.
<SYNC Start=1856189><P Class=KRCC>
&nbsp;
<SYNC Start=1889196><P Class=KRCC>
봐. 이렇게 한번 가볼까? 그래, 이렇게만 가자. 이렇게만 가게? 더 가? 그래, 여기까지 가. 많기도 하다.
<SYNC Start=1919398><P Class=KRCC>
여기 A를 잡겠어. 여러분 여기가 A고 여기가 B거나 아니면 얘가 A고 여기가 B거나 결과는 같겠지. 가로 칸수. 세로 칸수. 그러니까 1가지로 보는 게 더 나아요. 가겠습니다.
<SYNC Start=1931751><P Class=KRCC>
여기가 A야, 여기가 B야 A에서 B로 가는 최단 경로의 수를 세라. 그럼 가로 칸수. 시작, 1칸, 2칸, 3칸, 4칸, 5칸, 6칸, 7칸.
<SYNC Start=1941295><P Class=KRCC>
세로 칸수. 1, 2, 3, 4칸. 그래서 (7!×4!)분의. 시작, 11! 이게 바로 최단 경로의 수입니다. 맞지? 그런데 여기서 이렇게 안 나오고. 점 하나를 더 찍을게요. 찍겠어. 어디? C.
<SYNC Start=1960828><P Class=KRCC>
A에서 B로 가는 최단 경로 중, 문제, C를 반드시 거쳐서 가는 최단 경로의 수를 세시오. 이렇게 돼 있습니다. C를 반드시 거쳐야 돼요. 그럼 어떻게 풀면 되게? 너무 쉬워요.
<SYNC Start=1975228><P Class=KRCC>
왜? 어렵게 생각하지 마. C를 거치려면. 선생님, 이렇게 가면 안 되나요? 이런 걸 다 빼줘야 되는 건가요? 아니요. 어렵게 생각하지 말라니까.
<SYNC Start=1983546><P Class=KRCC>
C를 거쳐간다는 거 이거 아니야? 어떻게요? A에서 C로 가, 일단. 거치라니까 C로 가야지. 그런 다음에 B로 가면 되잖아. 이해되시죠?
<SYNC Start=1994107><P Class=KRCC>
그럼 다음에 A에서 C로 가는 거 따로 생각하고 얘 따로 생각하면 돼. 곱의 법칙이라고 배웠잖아요. A에서 C로 가는 것만 생각해. 그러면 이 직사각형 아니야? 거기에서 대각선 모양 아니야?
<SYNC Start=2005466><P Class=KRCC>
이 직사각형. 그럼 가로 칸수 몇 칸? 3칸. 세로 칸수 몇 칸? 2칸이니까 A에서 C까지 가는데 3칸과 2칸이니까 이거 2개분의 더한 거 팩토리얼. 이게 바로 A에서 C로 가는 최단 경로의 수예요.
<SYNC Start=2024320><P Class=KRCC>
끝났어, 안 끝났어? 안 끝났지. 왜? 나 지금 어디 있어? C. 어디 가야 돼? 나 B 가야 되잖아. 그럼 이제부터 어디서 출발해서? C에서 출발해서.
<SYNC Start=2031459><P Class=KRCC>
어디까지 가야 되니까? B까지 가야 되니까 이 직사각형을 생각하시면 되죠. 가로 칸수 1칸, 2칸, 3칸, 4칸. 세로 칸수 2칸. 4칸, 2칸. 그러니까 시작, 6!나누기 4!×2!.
<SYNC Start=2045289><P Class=KRCC>
얘가 바로 C를 거쳐서 가는 최단 경로의 수가 된다. C가 중간 거점이니까 거기까지 간 다음에 더하면 된다. 이게 얼마입니까? 10. 이거 얼마입니까? 15. 그래서 답은 150가지 끝. 알겠습니까?
<SYNC Start=2068137><P Class=KRCC>
이번에는 C에 사자가 있습니다. 그럼 C를 거치면 돼요, 안 돼요? 안 돼요. 잡아 먹혀요. 문제, C를 거치지 않고 가는 최단 경로의 수를 세시오. 이렇게.
<SYNC Start=2090926><P Class=KRCC>
C를 거치면 안 돼. 이렇게 가야 돼. 이거를 시각적으로 피한다 그러면 어렵다니까. 간단하게 생각해. 어떻게 하면 되게?
<SYNC Start=2103949><P Class=KRCC>
여기에 도착하는 애들한테 물어보면 C를 거쳤다 그러겠니, 안 거쳤다 그러겠니? 2가지밖에 없지. 그럼 2개를 합친 게 전체니까 서로가 여사건이에요.
<SYNC Start=2114511><P Class=KRCC>
그러니까 C를 거치지 않고 가는 최단 경로의 수를 구하라. 그러면 전체 경로의 수 여기 있잖아. 여기서 뭐 빼주면 돼요? C를 거쳐가는 얘 빼주면 돼요. 150까지 빼주면 돼요. 그게 답. 끝.
<SYNC Start=2131197><P Class=KRCC>
거친다 그러면 거점을 만들어서 생각하면 돼요. 거치지 않는다 그러면 전체에서 걔를 빼주면 되고. 아니면 이번에는 C를 거치긴 거치는데 C에서 좌회전하는 최단 경로.
<SYNC Start=2154009><P Class=KRCC>
C에서 좌회전? 이게 또 한 술 더 뜨네. C가 여기 있는데요. C가 교차로인데요. C에서 좌회전하래. 어떻게 하면 될까? 교차로에서 좌회전 몇 가지 있니? 여러분 운전면허 없어서 모르겠다.
<SYNC Start=2174635><P Class=KRCC>
-운전면허 있다고 그랬니, 채민아? 좌회전이 더 좋아? 우회전이 더 좋아? | -우회전.
<SYNC Start=2179181><P Class=KRCC>
-우회전이 좋아요? 나 우회전 싫은데. 우회전 되게 어려워졌잖아. 사람 없어도 이제는 멈췄다 가야 되잖아.
<SYNC Start=2199316><P Class=KRCC>
C에서 좌회전하는 방법이 이래도 좌회전이고요. 이래도 좌회전이고요. 이래도 좌회전. 이것도 좌회전이에요. 좌회전 몇 개 있어요? 4개나 있어요.
<SYNC Start=2214358><P Class=KRCC>
그럼 4가지를 다 따져야 됩니까? 아니. 그중에 하나만 된다. 왜? 최단이니까. 최단은 어느 쪽으로만 가야 돼요? 목적지 방향.
<SYNC Start=2221240><P Class=KRCC>
목적지가 어디에 있는데? 오른쪽에 있으면서 위쪽에 있으니까. 오른쪽이랑 위쪽으로만 가야 돼. 만약에 이렇게 가면 이것도 좌회전이지만 어디로 갔어? 아래로 갔으니까 안 되는 거야.
<SYNC Start=2234382><P Class=KRCC>
이거는 왼쪽으로 가니까 안 되는 거야. 이거는 아래로 가니까 안 되고. 이거는 왼쪽이니까 안 된다고. 이거는 돼요. 이거는 왼쪽이니까 안 된다고. 그러니까 되는 건 딱 하나.
<SYNC Start=2252245><P Class=KRCC>
선생님, C에서 좌회전이 이거군요. 선생님, 그럼 이런 경우의 수를 어떻게 구합니까? 그림으로 보지 말라니까. 얘가 C면 이렇게 가려면 어디까지 와야 돼요? 여기까지 와야죠.
<SYNC Start=2264434><P Class=KRCC>
A에서 출발, 얘 D라 그래요. 여기까지 와야 돼요. 그다음에 C까지. 그다음에 여기까지 와야 돼. 그다음에 이리로 가면 되죠.
<SYNC Start=2272087><P Class=KRCC>
그러니까 C에서 좌회전하는 방법을 구하라. 그러면 이렇게 생각하면 돼. 어디서? A에서. 시작, D로 갔다가. 시작, C로 갔다가 E로 갔다가 B로 가면 좌회전이죠.
<SYNC Start=2283591><P Class=KRCC>
이렇게 중간 거점을 생각하면 되는구나. A에서 D로 가는 방법이 수. 이 직사각형을 생각하십시다. 가로 칸수 2칸. 세로 칸수 2칸. 시작, 4! 여기는 2!×2! and.
<SYNC Start=2293422><P Class=KRCC>
D에서 C로 가는 방법의 수. 1가지 and. C에서 E로 가는 방법의 수. 1가지 and. E에서 B로 간다 그러면 이 직사각형이니까. 1, 2, 3, 4칸. 1칸. 5!. 4!×1! 이게 정형적인 답이에요.
<SYNC Start=2311034><P Class=KRCC>
6×5=30가지. 이게 바로 C에서 좌회전해서 가는 방법이 수라는 거예요. 30가지밖에 없네요. 이번엔 문제, C에 이거는 운전면허 시험에 동시에 나오면 멋있겠다. 이렇게 돼 있습니다.
<SYNC Start=2339788><P Class=KRCC>
이게 무슨 뜻? 좌회전 금지. 말을 좀 잘 들어야 되는데. 좌회전 금지에서 좌회전하는 사람, 좌회전 금지 위반한 사람 본 적은 없다. 좌회전 금지는 위반 안 한다. 뭘 많이 위반해요, 보통?
<SYNC Start=2353454><P Class=KRCC>
신호 위반 많이 하지. 신호 위반 진짜 위험한 건데. 봐. C에 좌회전 금지 표시판이 있다. 문제, 시작, 교통법규를 준수하면서 B까지 가는 최단 경로의 수를 세시오. 이렇게 나올 수도 있고.
<SYNC Start=2376646><P Class=KRCC>
아니면 그냥 완전 무시하고 C에 저런 교통 표지판이 있다. A에서 B까지 가는 최단 경로의수를 구하시오. 단, 교통 법규를 준수해야 한다. 이렇게 나와.
<SYNC Start=2387639><P Class=KRCC>
교통법규 준수하려면 C에서 좌회전하면 돼요, 안 돼요? 안 돼요. 그럼 C에서 좌회전하지 않도록 하는 방법의 수인데.
<SYNC Start=2393309><P Class=KRCC>
얘는 뭐야? C에서 좌회전하는 방법의 수잖아요. 얘가 바로 교통법규를 위반한 경우의 수인 거예요. 그러니까 어떻게 풀면 돼? 위반하지 말라고 그랬으니까.
<SYNC Start=2404955><P Class=KRCC>
전체 경우의 수. 여기에서 뭘 빼주면 돼요? 얘를 빼주면 답이에요. 거치지 않고 간다. 그러면 전체에서 거치는 경우의 수를 빼듯이.
<SYNC Start=2418383><P Class=KRCC>
하나만 더 할까? 하나만 더 할게. 잘 들어. 진짜 하나만 더 하겠어. 잘 들어야 돼. 간단하게 진짜 하나만 더 그리고 집에 갈 거야. 말리지 마라.
<SYNC Start=2449919><P Class=KRCC>
C을 거쳐서 A에서 B까지 가는 경로의 수를 세시오. 아까 했잖아요. 아까는 C가 교차로에 있었지. 지금 C가 중간에 있어요. 어떡하지? 어떡하지? 어떡하지?
<SYNC Start=2475726><P Class=KRCC>
아니, 선생님 이렇게 생각하면 되지 않습니까? A에서 C로 갔다가 C에서 B로 가는 거니까. 선생님, A에서 출발해서 C로 가려면 이렇게. C까지 이렇게 직사각형, 어머, 안 들어가네. 못 가네.
<SYNC Start=2489023><P Class=KRCC>
교차로가 아니어서 직사각형 자체를 못 만드네. 그렇지? 그래서 이럴 때는 어떻게 하느냐? 교차로에만 거점을 만들어야지 이런 길 중간에 교차로 만들면 직사각형이 안 만들어져서 어려워요.
<SYNC Start=2506246><P Class=KRCC>
어떻게 해야 되게? 거치는 방법은 이거 아니면 이건데. 내려가면 안 되잖아. 올라간다는 얘기는 일단 어디까지 와야 돼? 여기 와서. 그다음에 어디까지 와야 돼? 여기까지. 그다음에 이리로 가.
<SYNC Start=2517913><P Class=KRCC>
그러니까 얘를 해석하고 나면 교차로를 거점으로 바꿔주면 A에서 어디 갔다가 D. 그다음에 E. 그다음에 B로 가면 C를 거쳐서 가는 방법의 수가 나오는구나.
<SYNC Start=2530280><P Class=KRCC>
A에서 D로 가는 방법의 수를 계산하시오. 그러면 이 직사각형이니까 가로 칸수 4칸, 세로 칸수 1칸이니까. 시작, 5! 나누기, 4!×1! and. D에서 E로 1가지죠.
<SYNC Start=2543295><P Class=KRCC>
E에서 B로 간다 그러면 이 직사각형이니까 가로 칸 3칸, 세로 칸 2칸이니까 5!, 3!, 2!. 50가지가 나오는구나. 이게 바로 길 중간에 C가 있을 때 C를 거쳐가는 방법의 수예요.
<SYNC Start=2560844><P Class=KRCC>
만약에 C를 거치지 않고 가는 방법의 수를 구하시오. 그러면 어떻게 한다고? 여사건. 전체 경우의 수에서 이 경우의 수를 뭐 해주면 돼? 시작, 빼주면 된다. 이렇게 생각하시면 됩니다.
<SYNC Start=2571682><P Class=KRCC>
그러면 우리 문제를 풀 수 있을 것 같은데 이제. 이제 자신 있지. 그림과 같이 직사각형 모양으로 연결된 도로망이 있다.
<SYNC Start=2583647><P Class=KRCC>
이 도로망을 따라서 A지점에서 출발해서 B로 간다. 그때 C를 지나지 않도록. 그 얘기는 어디에서 어디를 빼주면 돼요?
<SYNC Start=2592182><P Class=KRCC>
전체 경우의 수에서 C를 지나는, 다른 말로 A에서 C로 갔다가 C에서 B로 가는 경우의 수를 빼주면 된다. 단순하잖아요.
<SYNC Start=2602543><P Class=KRCC>
전체 경로의 수는 어떻게 됩니까? 여기에서 이리로 가는 거니까 똑같습니다. 가로 칸수 4칸. 세로 칸수 3칸. 4칸, 3칸이니까. 시작, 7!, 4!×3! 이게 전체 경로의 수.
<SYNC Start=2614304><P Class=KRCC>
A에서 C까지 가는 경로의 수 몇 가지? 시작, 1가지 and. C에서 B로 가는 경우의 수는 이 직사형 생각하니까 가로 칸수 2칸. 세로 칸수 3칸. 시작, 5!, 2!×3! 이렇게 처리하시면 됩니다.
<SYNC Start=2628542><P Class=KRCC>
얘가 얼마게? 35. 얘는 얼마게? 10. 빼니까 얼마게? 25. 뭐야 이게? 중간에 C를 지나지 않도록 하는 방법일 수가 있다고.
<SYNC Start=2647981><P Class=KRCC>
미안합니다. A에서 B를 거쳐서 C로 가네. 특이하네. 특이합니다. A에서 어디를 거쳐서 B를 거쳐서 C로 가는데 C를 지나지 않아야 되지. 그러면 지금 이 얘기야.
<SYNC Start=2672304><P Class=KRCC>
A에서 B로 가는데, 금방 풀어. 이 중간에 C를 거치면 안 되고 그런 다음에 B에서 어디로 가야 돼? C로 가야 돼. 그런데 이걸 계산한 거야.
<SYNC Start=2688959><P Class=KRCC>
C를 거치지 말도록. 시작, 35에서 10을 빼니까 25가지. and. 이제 다시 여기서 이리로 왔으니까 다시 이리로 가면 되잖아요.
<SYNC Start=2700137><P Class=KRCC>
그러면 얘를 한 번 더 하면 되는 거니까 얘를 하나 다시 생각해주면 되잖아요. 아니야. 가로 칸수 2칸이고 세로 칸수 3칸이니까 5! 나누기 2!×3! 걔를 다시 곱해주니까 최종적인 답은 얼마다. 시작,
<SYNC Start=2717210><P Class=KRCC>
역시 좋은 문제. 250가지. 끝. 재밌지? 다음 시간에는 최단 경로의 수에서 하나를 더 붙일 거예요. 길이 훼손된 경우라고 그래서. 그것까지 해야지 여러분 수능을 완성시킬 수 있어서.
<SYNC Start=2733852><P Class=KRCC>
제가 그랬습니다. 이 수능특강이 없더라도 필요한 것들은 다 해드리겠다고. 오늘은 여기까지 하겠습니다. 고생하셨습니다.
<SYNC Start=2740757><P Class=KRCC>
&nbsp;
</BODY>
</SAMI>