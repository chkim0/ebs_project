<SAMI>
<HEAD>
<TITLE>(주)기록법인상생 자막 2015</TITLE>
<STYLE TYPE="text/css">
<!--
P { margin-left:8pt; margin-right:8pt; margin-bottom:2pt;
    margin-top:2pt; font-size:12pt; text-align:left;
    font-family:굴림, Arial; font-weight:normal; color:white;
    background-color:#405A8D; }
.KRCC { Name:한국어; lang:ko-KR; SAMIType:CC; }
#STDPrn { Name:Standard Print; }
#LargePrn { Name:Large Print; font-size:20pt; }
#SmallPrn { Name:Small Print; font-size:10pt; }
-->
</STYLE>
</HEAD>
<BODY>
<SYNC Start=10159><P Class=KRCC>
안녕하세요. 얘들아 오늘도 사진을 좀 준비했는데 우리나라는 이렇게 봄, 여름, 가을, 겨울 사계절이 있잖아. 그 계절 바뀔 때마다 그렇게 느낌들이 다 다른데
<SYNC Start=21530><P Class=KRCC>
나는 특히 봄이 올 때랑 또 여름이다가 선선한 바람 부는 가을 올 때가 좋더라. 그래서 이때 항상 봄 되고 나면 이렇게 벚꽃 볼 때마다 특히 막 설렘설렘하잖아.
<SYNC Start=34101><P Class=KRCC>
내가 언젠가 한번 강의에서도 보여 준 적이 있는데 난 이렇게 벚꽃 시즌이 되면 괜히 사람들 많이 가는 데 말고 꽁꽁 숨겨진 곳을 가고 싶다?
<SYNC Start=43510><P Class=KRCC>
그래서 그때도 사람 없다는 벚꽃 명소를 찾았는데 가 봤더니 황무지더라고. 근데 다행히 이번에는 성공했어. 그래서 이게 또 유명한 벚꽃 명소 중에 하나가 이런 경마 공원이 있는 거야.
<SYNC Start=56580><P Class=KRCC>
그래서 나 이때 처음으로 경마 공원이라는 곳에 가 봤거든? 다음 사진 보면 짠. 그래서 이게 처음에 경마 공원에 갔을 때 되게 막 설명서도 있고 너무 어려운 거야.
<SYNC Start=67427><P Class=KRCC>
그래서 ‘안 되겠다. 오늘은 공부가 부족해서 다음에 다시 와야지.’ 막 이렇게 생각을 했었는데 이때 보면서 또 놀랐던 게 나는 저 말들에 이름이 있다는 걸 몰랐다?
<SYNC Start=78633><P Class=KRCC>
그냥 ‘1호’, ‘2호’ 약간 이런 느낌일 줄 알았는데 저 말들의 이름이 다 있고 강아지 이름처럼 그런 게 아니라 막 ‘달빛 요정’, ‘빛의 기사’ 약간 이런 이름들인 거야.
<SYNC Start=90510><P Class=KRCC>
그래서 다음에는 꼭 공부를 해서 저 경마 공원을 한번 제대로 가 봐야겠어. 그래서 열심히 경마 공원 가서 구경도 하고
<SYNC Start=98290><P Class=KRCC>
그리고 다음 사진 보면, 여기가 또 벚꽃이 유명한 그런 카페라던데 또 황무지더라고. 그래서 창 밖에 보면 이렇게 나뭇가지밖에 없지?
<SYNC Start=108068><P Class=KRCC>
그래도 맛있는 케이크도 먹고 디저트도 먹고 저렇게 봄이 오는 소리를 좀 듣고 왔던 것 같아. 그래서 이때 내가 종강해 가지고 벚꽃 자랑을 못 했었거든. 그래서 준비한 사진이었어.
<SYNC Start=119640><P Class=KRCC>
그리고 이제 오늘 수업 내용을 좀 보면 우리 지난 시간에 풀었던 거 이어서 문제 한 번만 좀 다시 보자. 26번인데 얘를 만족시켜 주는 자연수 n에 대해서 이거의 값을 물어보고 있어.
<SYNC Start=133211><P Class=KRCC>
우리 지난 시간에 했던 내용들 중에서 루트 들어 있다? 그리고 시그마 들어 있어. 우리 이렇게 루트 있게 되면 뭐부터 해야 되지? 본능적으로? 그렇지. 유리화하고 싶다는 생각이 들지.
<SYNC Start=145936><P Class=KRCC>
그래서 이 식 보자마자 ‘쟤를 가지고 조금 더 유리화를 시켜 볼까?’라는 생각을 했을 거야. 그럼 얘를 가지고 유리화한다는 얘기는, 똑같이 생겼는데 가운데 부호만 다른 거 곱하는 거지.
<SYNC Start=158227><P Class=KRCC>
합차 공식 이용해서. 그럼 다시 한번 써 보면 √(k+1)에다가 √k였고 이거였어. 얘를 가지고 유리화 시키면 똑같은 거 이제 곱했다고 상상을 하는 거야.
<SYNC Start=170713><P Class=KRCC>
위아래에다가 가운데 부호만 다른 걸 곱했어. 그럼 앞에 거 제곱하니까 k+1 됐고 아래 거 제곱하니까 -k 됐어. 그리고 분자에는 √(k+1)-√k가 생겼겠지.
<SYNC Start=185852><P Class=KRCC>
그랬더니 k가 없어지면서 결국 뭐만 남았냐면 √(k+1)-√k. 여기까지 괜찮아? 그럼 일반항 정리한 거고 이제 그 일반항 가지고 다시 한 번 대입을 좀 해 보자.
<SYNC Start=199869><P Class=KRCC>
그래서 k라는 애가 1부터 0까지였고 내가 정리한 일반항이 √(k+1)-√k였어. 이렇게. 우리 지난 시간에 했던 부분 분수 같은 경우도 하나씩 하나씩 대입하고 나면 부호가 엇갈리면서 사라졌잖아.
<SYNC Start=215765><P Class=KRCC>
근데 얘도 마찬가지다? 그래서 1부터 하나씩 넣어 보면 1 넣었더니 √2-√1인 거고 2 넣었더니 √3-√2가 나왔어.
<SYNC Start=227106><P Class=KRCC>
그래서 이렇게 계속 계속 반복해서 넣다 보면 저 마지막에는 √(n+1) 되면서 그리고 끝에는 -√n 되는 거지. 그럼 이제 여기서는 지워지는 거 한번 보자.
<SYNC Start=239536><P Class=KRCC>
앞에 있던 플러스가 뒤에 있던 마이너스랑 지워져. 앞에 있던 플러스는 뒤에 있는 마이너스랑 지워질 거야. 근데 그 뒤에 있는 마이너스는 앞에 거랑 지워지니까 사라졌지.
<SYNC Start=251405><P Class=KRCC>
그래서 결국 남은 건 뭐냐면 얘하고 얘만 남았겠다. 그래서 이 식 정리한 게 결국 √(n+1)-1인 거지. 근데 그 값이 지금 몇이라 그랬냐면 6이라 그랬어. 우리 여기만 좀 다시 한번 볼까?
<SYNC Start=266316><P Class=KRCC>
그러면 지금 √(n+1)라는 애가 결국 7이 됐어. 7이 루트 몇이었지? 그렇지. 49이지. 그럼 얘가 7이 나오기 위해서는 n이라는 애가 46이 된다는 거 알 수 있지.
<SYNC Start=280303><P Class=KRCC>
그래서 n의 값은 구했고 이제 두 번째 단계, 우리 문제에서는 얘가 끝이 아니라 시그마를 하나 더 주고 있다?
<SYNC Start=288028><P Class=KRCC>
그래서 시그마 k는 1부터 2n까지이고, {√(3k+1)+√(3k-2)}분의1이었어. 여기서도 다시 한 번, 루트 들어 있는 애가 이렇게 일반항에 등장을 했어. 그럼 또 뭐 하고 싶어?
<SYNC Start=306467><P Class=KRCC>
루트 보자마자? 그렇지. 유리화하고 싶다는 생각이 들지. 여기서도 유리화하고 나서 한번 시작을 해 보자. 그래서 얘만 가지고 유리화해 주면 앞에 거 제곱했고 뒤에 거 제곱했어.
<SYNC Start=318589><P Class=KRCC>
그러니까 3k+1에서 3k-2를 빼 주면 되지. 이렇게. 대신에 유리화했단 얘기는 똑같이 생겼는데 다시 한 번 부호 바꾼 거를 이렇게 곱해 준 거고 그래서 식 봤더니 3k이는 없어졌어.
<SYNC Start=336177><P Class=KRCC>
그리고 1-(-2)가 됐으니까 분모는 3 됐지. 그리고 분자는 더 이상 정리할 거 없으니까 이 식 그대로. 그럼 지금 내가 구한 식은 결국 일반항을 정리한 거야.
<SYNC Start=346553><P Class=KRCC>
그럼 이 일반항 가지고 다시 한 번 시그마에다가 넣어 봐야겠지? 그래서 식이 뭐 나오냐면 k는 1부터 2n까지. 근데 지금 내가 갖고 있는 게 분모가 3이었지? 우리 그거 앞으로 뽑자.
<SYNC Start=364164><P Class=KRCC>
우리 시그마 계산할 때는 상수항은 앞으로 꺼냈어도 괜찮지? 그래서 3분의1은 앞으로 꺼냈고 남은 거는 뭐가 되냐면 3k+1 그리고 3k-2가 되겠다. 이렇게.
<SYNC Start=378348><P Class=KRCC>
그럼 이제 이 식에다가 하나씩 하나씩 대입하겠지? 근데 그 대입하는 식이 1부터? 그렇지. 2n까지. k는 1부터 2n까지.
<SYNC Start=389290><P Class=KRCC>
그래서 식 안에다가 넣어 보면 3분의1 있었고 식에다가 1 넣었더니 대입하면서 4, -, 1 넣었으니까 1. 똑같이 2 넣어 보면 √7-, 2 넣었니까 4 나왔어.
<SYNC Start=405548><P Class=KRCC>
이렇게 계속 계속 정리하다가 마지막 2n이었어. 그래서 2n 대입하게 되면, 여기다가 2n 넣는 거야. 그럼 3 곱했어. 식이? 그렇지. 6n+1이지. 여기까지 괜찮아?
<SYNC Start=418710><P Class=KRCC>
k 값 대신에 그대로 마지막 항이었던 2n 대입하는 중이야. 그럼 여기다가 2n 넣게 되면 식이 -6n 이 식 나오겠다. 그래서 지금 각각 2n이라는 값까지 마지막 항으로 대입했어.
<SYNC Start=434873><P Class=KRCC>
그랬더니 지워지지. 이 값하고 이 값 지워졌어. 앞에 있는 플러스가 뒤에 있는 마이너스랑 지워져. 이거 지워졌을 거고 얘 지워졌을 거고 그러니까 남은 거 얘하고 -√1밖에 없지.
<SYNC Start=449070><P Class=KRCC>
이제 거기까지 한번 대입을 해 보자. 그래서 앞에 3분의1 있었고 그리고 뭐 나왔냐면 √(6n+1). 거기다가 -1. 이만큼.
<SYNC Start=460201><P Class=KRCC>
그래서 n의 값만 대입해 주면 되는데 지금 우리가 가지고 있는 그 n의 값, 아까 전에 46이라는 거 이렇게 구했었지? 그래서 식이 3분의1에다가 √289. 거기서 1 빼 주면 되겠다.
<SYNC Start=475689><P Class=KRCC>
그래서 알맹이 값이 결국에는, 이거 17²이지? 그래서 결괏값이 16. 그래서 3분의16이 나와 주면 되지. 그래서 이 문제 한 번만 다시 보자. 26번.
<SYNC Start=488901><P Class=KRCC>
그래서 지금 너희들한테 알려 주고 있는 식이 시그마가 2개가 나와 근데. 이렇게 루트, 루트 들어 있는 게 나온다? 그래서 저렇게 루트 있을 때에는 본능적으로 유리화 떠올릴 수 있어야 되지.
<SYNC Start=500017><P Class=KRCC>
그래서 각각의 식 유리화하고 그다음에 시그마를 대입하게 되면 이렇게 항이 소거됐어. 그래서 그거 이용해서 식의 값 정리해서 풀어 주는 문제가 이 26번이었지.
<SYNC Start=512150><P Class=KRCC>
그리고 이번에는 수열의 귀납적 정의 한번 보자. 우리 수열에서 나올 수 있는 좀 어려운 파트의 문제들이 여기에서 주로 등장을 하지?
<SYNC Start=523489><P Class=KRCC>
그래서 수열의 귀납적 정의라는 게 무슨 뜻이었냐면 우리가 알고 있는 수열에 대한 또 다른 표현법인 거거든? 우리 그동안은 수열을 뭘로 표현을 했어? 가장 편리한 방법이 뭐였지?
<SYNC Start=535357><P Class=KRCC>
수열에서의 목표? 그렇지. 일반항을 구하는 거지. 근데 이번에는 귀납적 정의라고 그래서 수열을 표현해 주는 방법만 좀 다른 거야.
<SYNC Start=545185><P Class=KRCC>
그래서 이번에는 수열을 어떻게 표현을 할 거냐면 이웃하는 항들 사이의 관계로. 이웃하는 항들 사이의 관계식. 이렇게 표현해 주는 걸 우리가 귀납적 정의라고 불러.
<SYNC Start=561058><P Class=KRCC>
그래서 결국에는 이웃하는 항들 사이라는 건 내 양옆에 누가 있는지 그 관계식이 중요하다는 얘기거든?
<SYNC Start=568506><P Class=KRCC>
그래서 앞에 있는 항, 뒤에 있는 항 사이에 어떤 관계가 있는지 그 특징을 보겠다는 얘기야. 그래서 얘는 말로 설명하는 것보다는 우리가 앞에서 했었던 거 가지고 다시 한 번 비교를 해 보자.
<SYNC Start=581404><P Class=KRCC>
그래서 우리가 이름 붙은 수열 몇 개 배웠지? 딱 두 개밖에 없었는데. 하나는 등차, 다른 하나는 등비. 이렇게 두 가지 수열 배웠지.
<SYNC Start=592327><P Class=KRCC>
근데 옛날에는 등차수열하고 등비수열을 어떻게 표현을 했냐면 주로 일반항을 이용해서 표현을 했어. 일반항. 그래서 일반항이라는 건 몇 번째 항? 제n항이었지.
<SYNC Start=605329><P Class=KRCC>
그래서 일반항을 가지고 공식 한 번 복습을 좀 해 보면 등차수열의 일반항은 첫째 항에다가 공차를 n-1개 더해 줬어. 그리고 등비수열은 우리 일정한 수를 곱해서 만드는 수열이지?
<SYNC Start=620491><P Class=KRCC>
그래서 일반항을 구할 때 ar^(n-1)이었어. 그리고 또 무슨 특징이 있었냐면 등차중항, 등비중항이라는 게 있었다?
<SYNC Start=630614><P Class=KRCC>
그래서 가운데 있는 항이니까 이렇게 3개 항이 존재했고 그 3개의 항이 등차수열을 이루고 있어. 그러면 가운데를 2배 한 것은 양옆에 거 더한 거와 같다. 이게 등차중항.
<SYNC Start=644805><P Class=KRCC>
그리고 등비수열일 때는 가운데를 제곱한 것은 양옆에 거 곱한 거와 같다. 그래서 우리가 그동안 배웠던 표현법은 이렇게 2가지였어.
<SYNC Start=655109><P Class=KRCC>
근데 이제는 저 식이 아니라 뭘로 좀 바꿔 볼 거냐면 수열의 귀납적 정의로 좀 바꿔 볼 거야. 그래서 수열의 귀납적 정의는 앞에 있는 항,
<SYNC Start=665333><P Class=KRCC>
그리고 뒤에 있는 항 그 앞뒤 사이의 관계를 보자 그랬지? 그래서 여기 쓰는 내용이 귀납적 정의야. 그래서 등차수열은 우리 어떻게 만드는 수열이냐면
<SYNC Start=677811><P Class=KRCC>
앞에 있는 항에다가 일정한 숫자를 더해서 만드는 수열이었어. 그리고 계속 계속 더하는 그 일정한 값을 공통된 차이라 그래서 공차라고 불렀지.
<SYNC Start=688595><P Class=KRCC>
그래서 얘를 가지고 다시 표현했을 때 a(n+1)번째 항이야. n+1번째 항을 만들기 위해서는 그 앞에 있는 항인 n번째 항에다가 공차를 더해 주면 되지.
<SYNC Start=701941><P Class=KRCC>
저 수식을 공식처럼 외우는 게 아니라 읽을 수 있어야 돼. n번째 항에다가 공차를 더하면 그 다음 항이 나오는 거야.
<SYNC Start=709935><P Class=KRCC>
그럼 같은 방법으로 등비수열에서 n+1번째 항을 구하기 위해서는 앞의 항인 n번째 항에다가 공비를 곱해 주면 되는 거지. 이런 걸 가지고 우리가 수열의 귀납적 정의라고 불러.
<SYNC Start=722896><P Class=KRCC>
하나 더 써 보자. 우리 귀납적 정의를 가지고 이번에는 등차중항, 등비중항을 좀 한번 써 볼 거야. 그럼 항이 몇 개가 등장해야 돼? 그렇지. 3개가 등장해야 되지?
<SYNC Start=734515><P Class=KRCC>
그래서 그 항 3개 중에 가운데 있는 항이었어. 그래서 a(n+1)이라는 가운데 있는 항을 2배 한 것은, 근데 양쪽에 있는 애들은 하나는 n번째 항, 하나는 n+2번째 항이 되겠지. 이렇게.
<SYNC Start=750852><P Class=KRCC>
다시 한 번 더, 등비수열은 가운데 있는 n+1번째 항을 제곱하지? 그랬을 때 양옆에 있는 애들을 곱한 거와 그 값이 같겠지. 그래서 수열을 봤을 때 얘의 2가지 수식을 읽어 낼 수 있어야 돼.
<SYNC Start=768589><P Class=KRCC>
앞의 항에다가 공차 더해서 다음 항이 됐네? 이거 등차수열이구나. 또는 가운데 있는 걸 제곱했더니 양옆에 거 곱한 거와 같네? 이거 등비수열이구나.
<SYNC Start=779726><P Class=KRCC>
그래서 기본적인 등차, 등비에 대해서는 너희들이 식을 읽어 낼 수 있어야 되고, 만약에 얘가 아니야. 이 두 개가 아닌 너희가 난생 처음 보는 귀납적 정의가 나왔어.
<SYNC Start=790870><P Class=KRCC>
그때는 어떻게 푸냐면 그냥 식에다가 하나씩 차곡차곡 대입해서 규칙성을 직접 확인해 줘야 돼. 그래서 이 두 가지를 정확하게 기억하는 게 더 중요한 거야.
<SYNC Start=801865><P Class=KRCC>
등차인지 등비인지를 구별할 수 있어야 되고, 이 두 개가 아니라면 그때는 내가 직접 대입해서 그 새로운 수열의 규칙성을 파악해야 돼.
<SYNC Start=812948><P Class=KRCC>
그래서 우리가 가지고 있는 문제에서는 이 두 가지 케이스가 다 나오지? 그래서 이번엔 문제로 한번 풀어 보자. 28번부터. 읽어낼 수 있어야 돼. 지금 첫 번째 항은 1이었어.
<SYNC Start=827526><P Class=KRCC>
그런 자연수 n에 대해서 n번째 항에다가 2배 하고 1 더했어. 그래야지만 다음 항이 나온대. 우리 저거 아는 수열이야, 모르는 수열이야? 그렇지. 이거 등차도 아니고 등비도 아니지?
<SYNC Start=840609><P Class=KRCC>
그럼 등차도 아니고 등비도 아닐 때는 어떻게 푼다 그랬냐면 대입한다 그랬어. 근데 내가 구해야 되는 항의 값이 다섯 번째 항이야. 이 정도가 나오면 진짜 너희들한테 하나씩 넣으라는 얘기거든?
<SYNC Start=853854><P Class=KRCC>
5번째 항이 될 때까지? 그래서 하나씩 넣어 보면 n에다가 1 대입했어. 나 n에다가 1 대입하는 순간 a2 되고 2a1+1이 됐어 근데 그 a1이라는 애가 1이니까 대입해 주면 3. 얜 두 번째 항.
<SYNC Start=871740><P Class=KRCC>
이번에는 n에다가 2 넣었어. 그랬더니 세 번째 항을 구할 수 있고 2 넣었으니까 2a2+1. 근데 그 a2 방금 전에 3이었지? 그러니까 6+1이 돼서 7 나왔어. 이 과정을 두 번 더 해야겠지?
<SYNC Start=888450><P Class=KRCC>
a5 구할 거니까? 그래서 이번에는 3 대입했고, 이번에는 4번째 항. 그러면 앞에 있는 항에다가 2배 해 주고 1 더했어. 그러니까 2배 해서 1 더한 15라는 값이 나올 거고, 이제 마지막.
<SYNC Start=904582><P Class=KRCC>
n=4일 때이고 그때서야 내가 원하는 a5가 나왔어. 그럼 앞에 있는 항에다가 2배 해 주고 1 더해 주고. 앞에 있는 항에 2배 해서 1 더했으니까 정답은 31이 나와 주면 되지.
<SYNC Start=920179><P Class=KRCC>
그래서 등차하고 등비가 아니라면 지금 내가 푼 것처럼 하나씩 하나씩 대입해야 돼. 근데 문제가 좀 있어. 얘 대입할 때 어떻게 풀었어?
<SYNC Start=931037><P Class=KRCC>
a1을 가지고 a2를 구하고, 그 a2로 a3 구하고, a3로 구하고 그다음 항을 구했지? 그래서 이 중간에 만약에 어떤 한 부분이라도 계산이 틀리면 이 아래가 쭈루룩 다 틀려.
<SYNC Start=944799><P Class=KRCC>
그래서 이렇게 대입해서 푸는 문제들은 특히나 계산 실수 생기지 않도록 조심해야 된다. 얘가 28번 문제였고 이번에는 32번 한번 보자. 모양 볼 수 있어야 돼.
<SYNC Start=959429><P Class=KRCC>
an이라는 수열이 하나 있었어 그때 첫째 항은 2분의1이고 모든 자연수 n에 대해서 이 수식이 성립한다 그랬어. 그리고 am이 누군지는 모르지만 -1이 된대.
<SYNC Start=972368><P Class=KRCC>
그걸 만족시켜 주는 100 이하의 자연수 m의 개수 구해 달라 그랬어. 100 이하의 자연수 m의 개수이다? 이렇게 숫자가 클 때는 앞의 문제처럼 그냥 대입하라는 얘기는 아니야.
<SYNC Start=986081><P Class=KRCC>
설마 너희들한테 100 이하의 자연수를 하나씩 하나씩 다 체크하라는 얘기는 아닐 거 아니야. 그래서 이런 애들은 대입하다 보면 분명히 그 안에서 규칙성이 등장을 해서
<SYNC Start=998702><P Class=KRCC>
다 계산하지 않고도 반복되는 형태가 등장하게 될 거야. 그래서 이렇게 숫자가 크면 ‘어? 이거 뭔가 반복되는 규칙이 있겠다.’ 하고 알고서 대입해야 돼.
<SYNC Start=1009305><P Class=KRCC>
그럼 지금은 등차도 아니고 등비도 아니니까 하나씩 하나씩 넣자. 그래서 a2부터, a2 구할 거야. 즉 n에다가 1 넣었지? 그럼 그 얘기는 (1-a1)분의1.
<SYNC Start=1023181><P Class=KRCC>
근데 그 a1, 우리 문제에서 2분의1이라고 알려 줬어. 이렇게. 그럼 분모가 2분의1이고 그거 분의 1이었어. 그러니까 얘는? 2. 과정을 조금 더 반복해 보자.
<SYNC Start=1036404><P Class=KRCC>
그럼 a3였어. 우리 이번에는 이렇게 쓴 다음에 대입하지 말고 식에다가 바로 넣자. 1-, 그 앞의 항. 근데 그 앞의 항이 지금 2였어. 그리고 분자 1.
<SYNC Start=1050283><P Class=KRCC>
다시 한 번, 그러니까 얘는 -1. 다시 a4 한번 해 보자. 1에서 앞에 있는 항을 뺐어. 그리고 분자 1. 그러니까 뭐 나와? 2분의1. 사실 여기까지만 하면 이미 멈춰야 되거든?
<SYNC Start=1064834><P Class=KRCC>
왜 여기서 계산 멈춰야 될까? 지금 첫 번째 항이 뭐였어? 2분의1. 그다음 항 2 나왔고 그다음에 -1이고 다시 한 번 2분의1 나왔지? 한 번만 더 해서 보여 줄게.
<SYNC Start=1078681><P Class=KRCC>
만약에 a5였어. 그럼 규칙이 뭐였냐면 1에서 그 앞의 항을 빼야 되는데 그게 2분의1. 그리고 다시 한 번 1. (2분의1)분의1이 되니까 또 2가 됐어.
<SYNC Start=1091180><P Class=KRCC>
그래서 우리 지금 숫자가 반복되고 있다는 게 눈에 보이지? 그래서 맨 처음 숫자는 2분의1이었고 그다음 항은 2였어. 그리고 -1, 다시 2분의1, 그리고 2, 그러니까 그다음 항은 -1.
<SYNC Start=1105749><P Class=KRCC>
이렇게 반복되고 있다는 얘기지. 그래서 이 숫자 3개 값만 계속 계속 반복해서 나오고 있다? 근데 내가 원하는 건 뭐냐면 ‘100이하의 자연수 중에서 -1이 몇 번 나오니?’
<SYNC Start=1118441><P Class=KRCC>
그게 지금 궁금한 거야. 그럼 이 3개의 숫자가 반복되고 있잖아. 그럼 100개 안에는 이 묶음이 몇 번 들어가? 숫자가 3개니까 3으로 나눠 주면? 그렇지. 33개 들어가지.
<SYNC Start=1130598><P Class=KRCC>
그리고 그 33개 안에는 -1이 하나씩밖에 없지. 그러니까 -1의 개수는 총 33개가 나와 주면 되겠다. 그래서 100이라는 그 값 안에 이 3개씩 묶여 있는 덩어리가 33개 들어가 있고
<SYNC Start=1146062><P Class=KRCC>
그 묶음마다 -1이 하나밖에 안 나와. 그러니까 정답이 33 그 자체가 되는 거야. 그래서 식 한 번만 다시 보면, 지금 안에 있는 형태가 내가 모르는 값이니까 식 대입해서 풀었고
<SYNC Start=1160362><P Class=KRCC>
그렇게 대입해서 푸는데 100 이하의 자연수 m의 개수를 찾아 달래. 그러니까 숫자 너무 커. 분명히 뭔가 텀이 반복될 거야. 그래서 그 특징을 이용해서 풀어 준 문제가 32번 문제였지.
<SYNC Start=1174358><P Class=KRCC>
그리고 이번에는 이거 33번 한번 보자. 지금 수열 an이 모든 자연수 n에 대해서 저걸 만족한다 그랬어. 그래서 식을 좀 봤더니, 이거 잘했어? 이거 좀 어려워했을 것 같은데.
<SYNC Start=1189244><P Class=KRCC>
지금 이 시그마의 값을 구해 달라 그랬다? 근데 우리가 가지고 있는 일반항이 하나짜리가 아니라 이렇게 두 개로 연결돼 있는 상태야.
<SYNC Start=1198026><P Class=KRCC>
그럼 얘를 가지고 다시 풀어서 써 보자면, k는 1부터 20까지 ak였어. 시그마로 나와 있는 표현이 낯설다면 하나씩 대입해서 눈으로 보면 조금 더 만만해진다?
<SYNC Start=1211646><P Class=KRCC>
1 대입했어. a1, 그다음에 a2, 그다음에 a3, 그다음에 a4 똥똥똥 나가다가 마지막에는 20까지였으니까 19에다가 20. 지금 이거 구해 달라는 얘기지?
<SYNC Start=1225492><P Class=KRCC>
근데 내가 가지고 있는 일반항이 어떻게 생겼어? 2개씩 묶여 있어. 그러니까 얘를 가지고 이 식을 활용하려면 2개씩, 2개씩 묶여 있는 상태로 활용을 해야 돼.
<SYNC Start=1237521><P Class=KRCC>
그럼 원래대로라면 1부터 20까지의 합이지만 2개씩 묶여 있는 상태로 보자면 이 텀이 몇 개 나와? 그렇지. 10 덩어리인 거지? 그래야지 20까지의 합이니까.
<SYNC Start=1248002><P Class=KRCC>
그래서 1부터 10까지로 고칠 수 있을 거고 그럼 내가 지금 구하는 이 2개, 2개들이 한 쌍이 되는 거잖아. 그럼 얘를 가지고 일반항을 다시 한 번 써 보면, 앞에 있는 항이 홀수였어.
<SYNC Start=1262921><P Class=KRCC>
특히 1로 시작하는 홀수. 그러니까 2의 배수보다 하나 작은 거고 뒤에 있는 건 짝수니까 2의 배수가 되겠지. 이렇게 고칠 수 있겠다.
<SYNC Start=1273510><P Class=KRCC>
그럼 우리 문제에서 얘에 대한 일반항을 알려 줬잖아. 그러니까 이 값 가지고 대입해서 식의 형태 잡을 수 있지. 지금 이 n 자리에 뭘 대입한 거야? n 자리에?
<SYNC Start=1286908><P Class=KRCC>
위아래 모양 비교 후 n 대신에 뭘 대입한 거야? 그렇지. 2k-1. 그럼 오른쪽 부분에도 똑같이 n 대신에 2k-1 넣어 주면 되는 거지.
<SYNC Start=1298932><P Class=KRCC>
그래서 식이 뭐 나오냐면 k는 1부터 10까지. 2k-1 넣는다. 그러면 -1에다가 2k-1 +1 그러니까 2k. 그리고 2k-1+1 그러니까 2k. 근데 -1을 가지고 짝수 번만큼 곱했어.
<SYNC Start=1319217><P Class=KRCC>
그러니까 얘는 1이라서 안 써도 되겠네. 결국 뭐가 되냐면 이 식 그냥 2k인 거야. 이렇게. 근데 우리 이거 지난 시간에 외우자 그랬지? 1부터 10까지의 합이 제일 자주 나와.
<SYNC Start=1334125><P Class=KRCC>
그래서 형태 보면 앞으로 2 뽑아 낼 수 있고 1부터 10까지의 k, 자연수의 합 공식. 그러니까 얘는 55. 따라서 110이 나와 주면 되지.
<SYNC Start=1345586><P Class=KRCC>
그래서 이 문제는 일반항을 활용하기 위해서 항을 2개씩, 2개씩 묶어서 표현을 해야 돼. 그러다 보니까 시그마에서의 항의 개수 자체가 달라지고
<SYNC Start=1354730><P Class=KRCC>
그래서 10까지의 합으로 이렇게 고쳐서 표현해 줘야 되지. 얘가 33번이었고 이번에는 우리 수열에서의 마지막 개념이야. 수학적 귀납법 한번 보자.
<SYNC Start=1367587><P Class=KRCC>
우리 앞에서 했었던 귀납적 정의 같은 경우는 수열을 표현하는 방법이었고 여기서 등장하는 귀납법은 무슨 뜻? 얘는? 그렇지. 증명의 한 방법이었지. 증명.
<SYNC Start=1381183><P Class=KRCC>
근데 얘를 가지고 증명을 할 때 모든 값을 다 증명할 수 있는 게 아니라 어떤 거에만 증명이 가능했어? 그렇지. 자연수에 대해서.
<SYNC Start=1390395><P Class=KRCC>
그래서 모든 자연수에 대해서 성립하는 Pn이라는 명제를 증명하기 위해서 쓰는 방법이 수학적 귀납법이었지.
<SYNC Start=1399326><P Class=KRCC>
그래서 항상 쓸 수 있는 게 아니라 모든 자연수 n에 대해서 성립할 때 그때만 쓸 수 있는 방법이 수학적 귀납법이야. 근데 얘 같은 경우는 너희들이 단계를 좀 기억하고 있어야 된다?
<SYNC Start=1411396><P Class=KRCC>
그래서 저 증명을 활용할 때 첫 번째 단계가 뭐였을까? n이 몇이었을 때? 그렇지. 1이었을 때. 그래서 n=1이었을 때 성립하는지 확인했지. 얘를 가지고 성립하는지 체크를 했어.
<SYNC Start=1426460><P Class=KRCC>
그래서 n=1일 때 성립하는지 체크한다는 얘기는 결국 Pn이라는 명제가 하나 있었다. 근데 그 Pn이라는 명제가 성립함을 증명하는 중이야, 지금.
<SYNC Start=1437699><P Class=KRCC>
그럼 n=1일 때 성립한다는 얘기는 n=1일 때 대입한 그 P1이라는 값이 참인지를 체크하는 거지. 그래서 첫 번째 단계는 1인 값을 확인하는 거야.
<SYNC Start=1449665><P Class=KRCC>
그리고 두 번째 단계는, 이 두 번째 단계 기억나? 이때는 뭐 했어? n이? 그렇지. k일 때 성립함을 확인하는 게 아니었지.
<SYNC Start=1460714><P Class=KRCC>
1일 때는 내가 직접 대입해서 확인했지만 이 두 번째 단계에서는 성립한다고 가정했었어. 무슨 뜻인 거야? 약속하는 거지.
<SYNC Start=1470958><P Class=KRCC>
그랬을 때 n이 만약에 k+1이었다면 그때도 성립하는지 이번에는 체크했었지. 실제로 너희가 체크하는 단계가 2단계야. 맨 처음에 n=1일 때 식이 참이 되는지를 체크.
<SYNC Start=1486903><P Class=KRCC>
그리고 n=k일 때 성립한다면 k+1일 때도 성립하는지를 체크. 이 두 번째 문장이 무슨 뜻인 거냐면 결국 Pk라는 애가 참이었어. 그렇다면 P(k+1)이라는 그 아이도 참이 되니?
<SYNC Start=1504314><P Class=KRCC>
지금 이거 묻는 거야. 근데 이 두 번째 단계가 왜 이렇게 중요하냐면 맨 처음에 1이 된다는 거 알았지? 그럼 P1이 참이다. 그럼 자동으로 걔보다 하나 큰 P2도 참이 된다.
<SYNC Start=1518556><P Class=KRCC>
동시에 P2가 참이 됐대. 그 얘기는 결국 P3도 참이 된다는 얘기지. 그렇게 하나씩 하나씩 하다 보면 1일 때 2가 되고 1일때 3이 되고 3일 때 4가 되고
<SYNC Start=1530816><P Class=KRCC>
결국 이 식 언제 성립하냐면 모든 자연수 n에 대해서 전부 다 성립한다는 걸 확인할 수 있는 거지. 그래서 수학적 귀납법이라는 이쪽 파트 내용은 꼭 도미노처럼, 하나 성립하는 거 확인했어.
<SYNC Start=1545745><P Class=KRCC>
그랬을 때 어떤 애가 성립한다면 그 다음 항도 성립해. 그 특징을 이용해서 전부 다 모든 자연수 n에 대해서 성립한다는 걸 보여 주는 그런 증명의 방법이 수학적 귀납법이야.
<SYNC Start=1559181><P Class=KRCC>
그래서 얘를 가지고 문제 유형이 어떻게 나오냐면 다행히도 너희가 푸는 문제들은 아예 아무것도 없이 증명하는 문제는 잘 안 나와.
<SYNC Start=1569031><P Class=KRCC>
그래서 증명 전체를 이해하려고 하지 말고 그 앞뒤 항 사이의 관계를 보면서 칸 채우려고 한 번 생각을 좀 해 보자. 지금 이 값이고 여기가 ㈎였어. 내가 원하는 건 ㈎라는 부분이지?
<SYNC Start=1581386><P Class=KRCC>
근데 ㈎라는 부분 찾으려고 봤더니 왼쪽하고 오른쪽이 같다 그랬어. 이런 등호 잘 봐야 돼. 왼쪽, 오른쪽이 같은 식이야. 근데 무슨 차이가 있냐면 얘는 m+1이고 얜 m이었어.
<SYNC Start=1593654><P Class=KRCC>
그리고 뒤에 ㈎가 튀어나와 있어. 그럼 m번째까지의 합이고 얘는 m+1번째까지 합이야. 그럼 m+1번째 항이 밖으로 튀어나왔겠지. 그럼 이제 m+1를 넣어 보자.
<SYNC Start=1606047><P Class=KRCC>
k 대신에 m+1 대입했고, 앞부분은 2m+3 그대로, k 대신에 m+1 대입했어. 얘가 m+1번째 항이지. 그럼 지워지는 거 보이지?
<SYNC Start=1620010><P Class=KRCC>
결국 식 뭐 나오냐면 m+1에다가 2m하고 -m이니까 m, +3, -1이니까 +2 이만큼인 거야. 그래서 ㈎ 식 찾았네. ㈎ 식이 (m+1)(m+2)
<SYNC Start=1636263><P Class=KRCC>
그리고 이번에는 뒤에 식 한번 보자. 지금 내가 원하는 건 ㈎하고 ㈏, 여기 있어. 근데 우리 방금 전에 있던 식하고 여기가 다시 한 번 또 등호다? 근데 식 잘 봐야 돼.
<SYNC Start=1648253><P Class=KRCC>
지금 여기서는 시그마가 이만큼이고 ㈏하고 ㈎였어. 그리고 앞부분, 여기서는 시그마가 이만큼이고 ㈎였어. 우리 저 부분만 좀 다시 써 보자.
<SYNC Start=1660114><P Class=KRCC>
k는 1부터 m까지 k에다가 (2m+3-k)+㈎라는 식 하고 지금 어떤 식이 같은 거냐 하면 오른쪽에 시그마 k는 1부터 m까지 k에다가 (2m+1-k)+㈏+㈎ 지금 이 식이 같은 거야.
<SYNC Start=1683576><P Class=KRCC>
왼쪽, 오른쪽 같은 식인데 부분 ㈎ 부분은 똑같아. 그러니까 이 앞부분하고 이 부분하고 같겠지. 근데 식의 형태 보면 일반항 다른 거 느껴져?
<SYNC Start=1695846><P Class=KRCC>
그러니까 일반항을 맞춰야지만 내가 원하는 ㈏ 구할 수 있겠다. 그럼 이제 얘 가지고 일반항 맞춰 보자. 얘를 다시 한 번 써 보면 k는 1부터 m까지 그리고 k였어.
<SYNC Start=1707054><P Class=KRCC>
근데 내가 원하는 그 식은 2m+1-k로 바뀔 거야. 근데 원래 3이었으니까 뒤에 +2가 나와 줘야 되지.
<SYNC Start=1716645><P Class=KRCC>
이렇게. 그럼 결국 뭐만 튀어나와 주면 되냐면, 저 2에 대한 시그마만 풀어 주면 그 식이 ㈏라는 값이라는 거 알 수 있잖아.
<SYNC Start=1725778><P Class=KRCC>
그럼 이제 시그마는 더하기, 빼기 돼서 분배 가능하니까 2에 대해서만 풀어 보자. 그래서 2 뽑아져 있고 k는 1부터 m까지 k였어.
<SYNC Start=1736119><P Class=KRCC>
우리 시그마에서 자연수의 합 공식이니까 2ㆍ2분의{m(m+1)}. 그러니까 결국 m(m+1)이라는 거 알 수 있지. 그래서 얘가 ㈏라는 값이겠다. 그래서 나라는 값은 지금 m(m+1)이었어.
<SYNC Start=1754339><P Class=KRCC>
그럼 이제 문제 한번 다시 읽어 볼까? ㈎, ㈏ 구했고 그 ㈎, ㈏에 대한 식이 f(m), g(m)이었어. 그럼 f(4)라는 그 값은 4 대입해 주면 5하고 8. 4 하나씩 넣지? 5하고 6이네. 2 넣었으니까.
<SYNC Start=1772543><P Class=KRCC>
그래서 둘 곱해 주면 30. 얘는 지금 f(4). 그리고 똑같이 g(6)이었어, 이번에는. 그래서 6이라는 값 대입해 주면 6에다가 7. 그래서 42 나오고. 그리고 우리 문제에서는 둘 더해 달라 그랬어.
<SYNC Start=1788369><P Class=KRCC>
그러니까 얘는 72가 나와 주면 되겠다. 그래서 다행히 이렇게 수학적 귀납법 문제는 칸 채우는 문제 유형으로 등장을 하게 될 거야.
<SYNC Start=1797659><P Class=KRCC>
그래서 이게 오늘의 마지막 문제였어. 오늘 뭐 했나 단어만 좀 정리 한 번 해 보자. 그래서 우리 오늘 한 내용은 첫 번째로는 수열의 귀납적 정의.
<SYNC Start=1812405><P Class=KRCC>
그래서 수열을 표현하는 방법이었고 이제 n번째 항은 일반항이 아니라 앞뒤 항 사이의 관계식으로 보는 거지? 그리고 두 번째로는 귀납법. 증명의 한 방법이었어.
<SYNC Start=1823816><P Class=KRCC>
얘를 가지고 푸는 문제들은 칸 채우기로 나오니까 특히 등호 조심해서 앞뒤 비교해서 문제 풀면 될 거야.
<SYNC Start=1830708><P Class=KRCC>
그래서 우리 다음 시간에는 이제 수학Ⅰ이 드디어 끝났고 수학Ⅱ라는 새로운 과목을 좀 시작을 해 보자. 안녕.
<SYNC Start=1837944><P Class=KRCC>
&nbsp;
</BODY>
</SAMI>