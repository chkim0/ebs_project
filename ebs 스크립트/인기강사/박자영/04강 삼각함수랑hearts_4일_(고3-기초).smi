<SAMI>
<HEAD>
<TITLE>(주)기록법인상생 자막 2015</TITLE>
<STYLE TYPE="text/css">
<!--
P { margin-left:8pt; margin-right:8pt; margin-bottom:2pt;
    margin-top:2pt; font-size:12pt; text-align:left;
    font-family:굴림, Arial; font-weight:normal; color:white;
    background-color:#405A8D; }
.KRCC { Name:한국어; lang:ko-KR; SAMIType:CC; }
#STDPrn { Name:Standard Print; }
#LargePrn { Name:Large Print; font-size:20pt; }
#SmallPrn { Name:Small Print; font-size:10pt; }
-->
</STYLE>
</HEAD>
<BODY>
<SYNC Start=10609><P Class=KRCC>
안녕하세요. 얘들아 오늘 준비한 그림은 내가 좋아하는 바리소 작가님 그림 중에 하나야. 얼마 전에 내가 보고 되게 와 닿았던 그림 중에 하나인데
<SYNC Start=21697><P Class=KRCC>
‘맞네. 맞아.’ ‘일상을 조금 더 즐겁게 보내는 방법은 기분 나쁜 일을 곱씹지 않기이다.’ ‘아~ 어제 똥 밟아서’ 이러고 얘가 기분이 나빠 해.
<SYNC Start=31663><P Class=KRCC>
근데 다음 그림 보면 ‘도대체 누구야?’ 막 이러면서 화내면서 ‘때때로 하루에 짜증이 날 때가 있는데 자주 그걸 질리도록 잡아 두고선 하루 전체를 망치곤 했다.’
<SYNC Start=43630><P Class=KRCC>
근데 나 같은 경우도 뭔가 저렇게 속상하거나 기분 안 좋은 일이 생기면 자꾸 머릿속으로 반복하게 되는 것 같아. ‘아까 그때’ 막 이러면서 자꾸 자꾸 생각하게 되잖아.
<SYNC Start=53649><P Class=KRCC>
그래서 다음 사진은 ‘어쩔 수 없지. 가서 닦자.’ ‘그 일이 일어났을 때 잘 보내 주면 남은 시간은 안녕했을 텐데’ ‘건강한 일상을 위해서 이미 벌어진 일에 과한 감정 소모를 하지 않기.’
<SYNC Start=68939><P Class=KRCC>
그래서 다음 그림 보면 ‘괜히 되풀이해서 기분을 망치지 말자~’라는 그런 그림이야. 그래서 혹시 사실 어떻게 하루 종일 계속 기분이 좋을 수만 있고
<SYNC Start=80437><P Class=KRCC>
일주일 전체, 한 달 전체 좋은 일만 있을 수 있겠어. 분명히 이렇게 우울한 일도 있고 기분을 망치는 일도 있을 텐데
<SYNC Start=87987><P Class=KRCC>
그걸 너무 오래 내 마음속에 가지고 있으면 정작 기쁜 일, 좋은 일이 들어올 자리가 없어진다? 그래서 때로는 저런 애들을 좀 놓아 줄 수 있었으면, 버릴 수 있었으면 해서 준비한 사진이었어.
<SYNC Start=101314><P Class=KRCC>
그리고 우리 오늘 문제를 좀 마저 풀어 보면, 우리 지난 시간 마지막에 로그 함수에 대한 방정식, 부등식을 봤었지? 그래서 그거에 관련된 문제들인데 첫 번째로는 방정식이야.
<SYNC Start=113660><P Class=KRCC>
로그가 있었고 오른쪽도 로그가 있어. 근데 조심해서 봐야 돼. 지금 이 로그에서 뭐가 없을까? 그렇지. 밑이 없어. 우리 밑이 없다는 얘기는 상용 로그이고 즉 전부 밑이 같다는 얘기지.
<SYNC Start=126249><P Class=KRCC>
그럼 밑이 같은 두 로그를 더했어. 우리 그럴 때에는 진수끼리 뭐 하기로 했냐면 곱하기로 했지. 그래서 이게 왼쪽 식.
<SYNC Start=135496><P Class=KRCC>
그래서 왼쪽 식을 이렇게 한 덩어리로 고쳐 줄 수 있고 그리고 오른쪽 얘는 로그. 이거 -3으로 좀 묶어 내 보자. 그랬더니 x-4 이렇게 고칠 수 있었어. 그럼 왼쪽도 로그, 오른쪽도 로그.
<SYNC Start=150209><P Class=KRCC>
그리고 특히 밑이 같아. 그러니까 진수끼리 같아지면 되지. 그래서 그 진수끼리 같다는 식을 좀 세워 봤더니 x(x-4)²이라는 애가 -3(x-4)였어.
<SYNC Start=164796><P Class=KRCC>
얘를 가지고 다 정리한 다음에 다시 인수 분해를 해도 괜찮아. 괜찮긴 한데 우리 최대한 식 간단하게 묶어서 정리하자. 이거 마음속으로 저쪽으로 넘겼어.
<SYNC Start=175379><P Class=KRCC>
그럼 어떤 공통 인수가 생겼냐면 x-4라는 공통 인수가 생겼지. 그래서 그 x-4로 내가 묶어 냈어. 그랬더니 남은 게 뭐냐면 여기에서 x 하나 남았고 그리고 x-4가 하나 더 있었고
<SYNC Start=189810><P Class=KRCC>
-3이었는데 넘어가면서 +3으로 바뀌었어. 이만큼이 지금 0이라는 식인 거지. 근데 얘를 가지고 전개해 봤더니 x²-4x+3이야. 즉 인수 분해 한 번 더 할 수 있지.
<SYNC Start=203883><P Class=KRCC>
그럼 이제 인수 분해까지 한번 더 해 보면 (x-4)(x-3)(x-1). 이 3차 방정식이 지금 0인 거야. 따라서 만족하는 x값은 3개가 나오는데 하나는 1, 하나는 3, 하나는 4였어.
<SYNC Start=220282><P Class=KRCC>
이제 여기에서 고민. 이거 3개 다 답이야, 아니야? 아니야. 여기까지 풀고서 틀린 사람들이 다 풀고 틀리는 사람들이야.
<SYNC Start=229402><P Class=KRCC>
우리 로그의 방정식 그리고 로그의 부등식에서 중요한 건 뭐라 그랬었냐면 진수 조건, 밑 조건을 항상 마음속에 갖고 있어야 된다 그랬지.
<SYNC Start=238281><P Class=KRCC>
그러니까 저렇게 계산해서 나온 x값이 전부 답인 게 아니라 얘네들 중에서 밑 조건, 진수 조건에 만족하는 애만 답인 거야.
<SYNC Start=245968><P Class=KRCC>
그래서 처음부터 범위를 찾아도 되고 아니면 나온 답들을 가지고 식 만족하는지 체크. 그럼 이제 식 한 번만 다시 보자. 지금 나온 근이 1, 3, 4였어.
<SYNC Start=256386><P Class=KRCC>
이 x에 대해서는 1, 3, 4 전부 만족하지? 근데 여기서 누구는 제외해야 돼? 그렇지. 4이면 안 되잖아. 4 대입하면 0 된다? 우리 진수는 양수인데?
<SYNC Start=266800><P Class=KRCC>
그리고 오른쪽 값도 전부 다? 그렇지. 4일 때는 제외해야 되지. 그래서 식에 대한 값 봤더니 1, 3, 4 중에 4는 진수 조건에 만족 안 하네. 그러니까 진짜 답은 1하고 3.
<SYNC Start=278860><P Class=KRCC>
그리고 우리 문제에서는 합을 구해 달라고 그랬어. 그러니까 정답은 4가 나와 주면 되겠다. 그래서 방정식을 풀고 끝나는 게 아니라
<SYNC Start=286467><P Class=KRCC>
마지막에 진수 조건, 밑 조건을 반드시 꼭 다시 한번 체크해 봐야 돼. 얘가 26번이었고 이제 32번 한번 보자. 이 문제에서는 중요한 단어가 최솟값, 최댓값이지?
<SYNC Start=301733><P Class=KRCC>
근데 내가 앞에서는 뭔가 개념이 나올 때마다 이렇게 제목 쓰고 따로 정리를 잠깐이라도 해 줬잖아. 근데 왜 이 최댓값, 최솟값은 내가 따로 정리를 안 하냐면
<SYNC Start=311396><P Class=KRCC>
얘는 특별한 방법이 있는 게 아니라 제일 중요한 게 그래프야. 결국 최댓값, 최솟값 문제는 그래프 잘 그려서 그 안에서 가장 높이 있는 최댓값, 가장 밑에 있는 최솟값 읽어 내면 되는 거거든.
<SYNC Start=324755><P Class=KRCC>
그래서 특별한 개념이 있는 게 아니라 앞에서 배웠던 그 개념들을 가지고 그래프를 정확하게 이해하는 게 중요하다.
<SYNC Start=332007><P Class=KRCC>
지금 함수가 하나 있었는데 그 함수가 0부터 a까지 영역에서 정의가 되어 있어. 그리고 그 f(x)가 이렇게 생긴 로그 함수였어. 우리 로그 함수에서의 모양을 결정해 주는 건 밑의 사이즈.
<SYNC Start=344573><P Class=KRCC>
밑이 지금 3이라서 증가. 증가하는 로그 함수가 이렇게 하나 있었던 거야. 정확하게 안 그려도 돼. 근데 정의역에 대한 영역이 0부터 어디까지냐면 a까지였어.
<SYNC Start=356216><P Class=KRCC>
그럼 0이었을 때의 함숫값, 여기에서 최솟값이 나올 거고. a에서의 함수값, 여기에서 최댓값이 나오겠지. 해당되는 영역이 이만큼인 거니까. 근데 이 문제에서 최솟값이 -1이래.
<SYNC Start=369151><P Class=KRCC>
그거 한번 써 볼까? 지금 최솟값은 어디에서의 함숫값이냐면 0에서의 함숫값이었어. 그럼 이제 x에다가 0 대입했더니 남은 게 log 3 남았지? 0 없어지면서 a 남았어.
<SYNC Start=383603><P Class=KRCC>
근데 그게 지금 몇이냐면 최솟값 -1. 그럼 이거 만족시켜 주는 a값은 3분의1인 거지. 여기까지 괜찮아? 똑같이 한 번 더.
<SYNC Start=393895><P Class=KRCC>
이번엔 최댓값이 궁금한데 최댓값이라는 거 어디에서 등장하냐면 a에서. 근데 그 a라는 값 방금 전에 얼마였냐면 3분의1이었지. 그래서 f(3분의1)을 좀 구해 주면 되는데
<SYNC Start=407621><P Class=KRCC>
x 자리에다가 3분의1 대입했다? 그랬더니 log 3. 그리고 3분의1 넣었어. (3분의2)+a였는데 그 a라는 값 우리 3분의1이라는 거 방금 전에 구했지. 이렇게. 여기까지 괜찮아?
<SYNC Start=425288><P Class=KRCC>
그럼 지금 식에 대한 형태 보자. 그래서 log 3이었고 (3분의2)+(3분의1). 결국 3분의3이니까 1. 근데 우리 여기에서 기억이 나야지. 밑에 상관없이 진수가 1이면 값은 항상 0.
<SYNC Start=439183><P Class=KRCC>
따라서 문제에서 물어보는 최댓값은 0이 나와 주면 되겠다. 그래서 이런 최댓값, 최솟값 문제에서 제일 중요한 건 그래프이고
<SYNC Start=446976><P Class=KRCC>
우리 지수 함수, 로그 함수에서의 그래프를 결정해 주는 요소는 밑에 대한 범위였어. 그래서 밑의 사이즈를 보고 증가하는지 감소하는지를 읽어 낼 수 있어야 돼.
<SYNC Start=456736><P Class=KRCC>
얘가 32번이었고 우리 지수 로그에서의 마지막 문제야. 34번 한번 보자. 이 문제는 내가 저 동그라미 기호 때문에 일부러 넣었거든. 저거 기억나? 우리 1학년 때 배웠던 거? 이거 무슨 뜻이야?
<SYNC Start=473779><P Class=KRCC>
그렇지. 합성 함수지. 합성 함수를 알아야지만 이 문제를 풀 수 있어. 그래서 사실 수학이 어려운 거기도 하고.
<SYNC Start=480803><P Class=KRCC>
그러니까 우리가 지금 연계 교재 안에서 수능에서 실제로 출제되는 범위인 수Ⅰ, 수Ⅱ만 알아서 되는 게 아니라
<SYNC Start=488398><P Class=KRCC>
우리 1학년 때 배운 이런 기본 개념들까지 알아야지만 이런 문제를 풀 수가 있어. 그래서 합성 함수 한 번만 다시 보면, 지금 내 목표가 (gㆍf)(x) 이걸 구하는 게 내 목표야.
<SYNC Start=500951><P Class=KRCC>
우리 합성은 항상 어디에서부터? 그렇지. 뒤에서부터. x를 f에 넣을 거고 그 f(x)를 다시 한번 g에다가 넣을 거야. 그래서 g에다가 f(x)를 쏙 넣을 거야.
<SYNC Start=512475><P Class=KRCC>
근데 저렇게 만든 함수의 최댓값, 최솟값이 지금 궁금한 거야. 그럼 뭘 넣는지가 중요하니까 당연히 f(x)의 범위를 먼저 좀 체크를 해 봐야겠다. 근데 그 f(x)가 누군지를 봤더니 이렇게 생겼대.
<SYNC Start=526780><P Class=KRCC>
저 함수에 대해서 x값의 범위가 한정되어 있는데 이 범위로 한정이 되어 있어. 그럼 그 범위 안에서 f(x)가 어떻게 움직이는지가 중요한 건데 지금 그 f(x)가 밑의 사이즈가 몇이야?
<SYNC Start=542192><P Class=KRCC>
그렇지. 4분의1이야. 즉 무슨 상태? 감소하는 상태, f(x)가. 근데 그 감소하는 애가 -1부터 0까지만 정의가 되어 있대. 그럼 나 얘를 가지고 범위에 한번 찾아봐야지.
<SYNC Start=555344><P Class=KRCC>
그럼 -1일 때가 가장 큰 값이 나오니까 f에다가 -1 대입했어. 그랬더니 식이 앞에 2 곱해져 있고 (4분의1)^-1. 역수 되니까 4 됐고. 뒤에 플러스 1까지 계산해서 이만큼 지금 9인 거지.
<SYNC Start=571868><P Class=KRCC>
그래서 같은 방법으로 이번에는 0에서의 함숫값. 0 대입했더니 우리 지수가 0일 때는 무조건 1이지? 그래서 1 됐고. 앞에 2 있었어. 그래서 2+1 나오니까 얘는 3.
<SYNC Start=584889><P Class=KRCC>
그래서 그 f(x)라는 애가 결국에는 어디에서만 움직이냐면 3부터 9까지 범위에서만 지금 움직이고 있는 거지? 그럼 이제 그 범위에서의 최댓값, 최솟값. 이번에는 함수가 뭘로 바뀌었어?
<SYNC Start=598978><P Class=KRCC>
그렇지. g(x)로 바뀌었어. 근데 그 g(x)라는 애가 밑이 3분의1이었다? 즉 감소하는 그래프였어, 로그이면서. 근데 내가 가지고 있는 그 f(x)가 3부터 9까지 움직이고 있지?
<SYNC Start=612019><P Class=KRCC>
그럼 3일 때가 최댓값이 나올 거고 9일 때가 최솟값이 나오겠지. 대입 한번 해 보자. 3일 때의 값이었어. g(3). 그래서 g에다가 3 넣어 봤더니 log 3분의1 거기다가 3이었어.
<SYNC Start=627599><P Class=KRCC>
이거 계산해 주면 -1인 거고. 똑같이 이번에는 9에서의 함숫값이었어. 그럼 9 대입하게 되면 log 3분의1의 9 나오는데 혹시 이거 잘 안 되는 사람들은 지금 봐야 돼.
<SYNC Start=641467><P Class=KRCC>
우리 3분의1은 3^(-1). 9는 3². 이렇게 제곱, 제곱 있을 때는 앞으로 밀려나오지? 그러니까 -2인 거지. 그럼 이제 식 한번 보자.
<SYNC Start=653252><P Class=KRCC>
최댓값, 최솟값을 각각 M, N이라고 했을 때 M에서 m 빼 달라 그랬어. 그러니까 식이 -1 거기서 2 뺐으니까 더하기로 바뀌었어. 그러니까 정답은 1이 나와 주면 되겠다.
<SYNC Start=668577><P Class=KRCC>
그래서 이 34번 문제는 우리가 1학년 때 배웠던 합성 함수의 정의 알아야 되고 그래프의 모양에 따라서 언제 최대이고 언제 최소인지 구할 수 있어야지만 되는 문제가 이 34번 문제였어.
<SYNC Start=682336><P Class=KRCC>
그리고 이제는 우리 두 번째 단원인 삼각 함수에 대한 얘기를 좀 한번 해 보자. 우리 첫 번째로 등장하는 단어가 동경하고 일반각이었어.
<SYNC Start=692827><P Class=KRCC>
항상 저렇게 새로운 단어가 나올 때에는 특히나 정의가 중요했지. 그래서 그 이름 뜻을 읽을 수 있어야 되는데 우리 동경이라는 거 무슨 뜻이었어? 응. ‘운동하다’의 그 동 자였잖아.
<SYNC Start=704839><P Class=KRCC>
그래서 움직이는 반지름이란 뜻이었지. 그래서 각에서부터 우리가 시작을 했었어. ∠XOP라는 각이 있었어. 근데 얘가 30˚였다?
<SYNC Start=716229><P Class=KRCC>
우리가 중학교 때만 하더라도 ∠XOP=30˚ 이렇게 이름을 붙이고 끝났어. 근데 이제는 움직일 거야, 특히나 반지름이. 반경이라는 표현을 쓸 때 쓰는 그 경이라는 글자거든?
<SYNC Start=730844><P Class=KRCC>
그래서 각각에 대한 이름이 생기는데 이 OX라는 애를 우리가 뭐라고 부를 거냐면 기준이 된다 그래서 시초선이라는 표현을 썼고.
<SYNC Start=739391><P Class=KRCC>
그리고 저 OP라는 애를 우리가 뭐라고 불렀냐면, 얘가 움직이는 거였지? 그래서 움직이는 반지름인 동경이라는 표현을 썼어. 항상 시초선에서 시작.
<SYNC Start=749918><P Class=KRCC>
시초선을 기준으로 이 동경이 위아래로 움직일 수 있게 된 거야. 그래서 이렇게 위쪽으로 움직일 때 양의 방향이라고 부르고 아래쪽으로 움직일 때를 음의 방향이라는 표현을 썼어.
<SYNC Start=761533><P Class=KRCC>
그래서 이제는 내 눈으로 보기에는 30˚이지만 거기서 끝나는 게 아니라 사실은 한 바퀴 돌아서 이렇게 30˚로 왔을 수도 있다. 그렇게 빙글빙글 돈 것까지 고려를 해야 돼.
<SYNC Start=772729><P Class=KRCC>
그래서 눈으로 보기에는 30˚야. 하지만 빙글빙글 돌았을 수 있어. 근데 한 바퀴는 360˚. 몇 바퀴 돌았는지 모르니까 n 바퀴.
<SYNC Start=783034><P Class=KRCC>
근데 빙글빙글 돌 때도 양의 방향으로 돌 수도 있고 음의 방향으로 돌 수도 있지? 그래서 이렇게 식을 썼을 때 저 n의 값은 정수가 가능했지? 자연수만 되는 게 아니라.
<SYNC Start=794921><P Class=KRCC>
그래서 이제는 각도를 표현할 때 하나의 고정된 값이 아니라 움직인 것까지 고려해서 표현을 해 줬어야 돼. 그래서 이런 표현을 보고 우리가 일반각이라는 표현을 썼던 거지.
<SYNC Start=805504><P Class=KRCC>
그래서 첫 번째 나오는 제목이 동경과 일반각이었어. 그래서 일반각만 한 번 더 정리를 해 보자. 일반각. 그래서 각각에 대한 이름 다시 보면, 여기가 O였어. X였고, P였어.
<SYNC Start=818907><P Class=KRCC>
그랬을 때 이 OX를 뭐라고 부른다고? 기준이 되는? 그렇지. 시초선. 그래서 이 OX를 기준인 시초선. 그리고 이 OP라는 애를 움직이는 반지름인 동경. 근데 얘가 내 눈으로 봤을 때 α였다?
<SYNC Start=833463><P Class=KRCC>
근데 그 α를 가지고 하나로 딱 고정시키는 게 아니라 빙글빙글 돈 것까지 고려해 주는 일반각이라는 표현을 쓴다 그랬지? 그래서 θ는 눈으로 보기에는 α이다?
<SYNC Start=844497><P Class=KRCC>
근데 사실 그 α라는 애는 빙글빙글 돈 것까지 고려해서 360×n으로 표현할 수 있어야 되고 그 n은 정수라는 값이었어.
<SYNC Start=855164><P Class=KRCC>
그리고 이제는 각이 하나로 딱 고정된 게 아니라 움직일 수 있기 때문에 그 움직임을 표현해 주기 위해서 얘를 가지고 어디 위에다가 올려놨을까? 그렇지. 좌표축 위에다가.
<SYNC Start=867213><P Class=KRCC>
그래서 좌표축 위에 올려놔서 위치가 생겼어. 그래서 1사분면, 2사분면, 3사분면, 4사분면. 그래서 어떤 애가 있었을 때 동경이 존재했을 때 그 동경에 대해서 ‘2사분면에 있는 각이야.’
<SYNC Start=880846><P Class=KRCC>
앞으로 저런 표현을 쓰게 되는 거지. 그래서 동경과 일반각에 대한 얘기였고. 그리고 두 번째로는 진짜 중요한 게 오지? 호도법이라는 거.
<SYNC Start=892199><P Class=KRCC>
보통은 우리가 그동안 각도를 표시할 때 30˚, 45˚, 60˚ 저렇게 ‘도’라는 표현을 쓰고 동그라미를 썼다? 근데 쟤 이름이 60분법이었어.
<SYNC Start=902925><P Class=KRCC>
근데 오늘은 뭐 할 거냐면 우리 각도를 가지고 호의 길이로 표현하는 호도법이라는 걸 배웠지? 그래서 호도법에서의 정의가 뭐였어? 호도법? 그렇지. 부채꼴에서부터 시작을 했었지?
<SYNC Start=916774><P Class=KRCC>
우리 호라는 도형 자체가 부채꼴에서 이만큼 동그란 부분을 호라고 불렀었잖아. 그래서 반지름의 길이랑 호의 길이가 같아지는 순간이 있을 거야. 실수이기 때문에.
<SYNC Start=928134><P Class=KRCC>
근데 이 둘이 같아지는 그 순간의 각도를 우리가 뭘로 정의를 했냐면 1 (rad)이라고 정의를 했던 거지.
<SYNC Start=936640><P Class=KRCC>
근데 얘를 가지고 조금 더 확장시켜서, 반원 같은 경우는 각도를 정확하게 알고 있잖아. 반원도 하나의 부채꼴의 일종이지? 그럼 내가 이 순간에서는 이 호의 길이가 뭐가 돼야 돼?
<SYNC Start=951707><P Class=KRCC>
원 둘레는 2πr. 그거의 절반이니까 πr. 근데 그때 이 각도가 몇 도라는 거 알고 있어? 그렇지. 180˚라는 거 알고 있어. 근데 180˚가 되는 그 순간. 이게 몇 라디안일까?
<SYNC Start=965861><P Class=KRCC>
반지름이 지금 r인데 r일 때, r일 때 1이었어. 같은 방법으로 r일 때 πr이었어. 그러니까 얘는 π (rad)이겠지. 근데 그 π (rad)이 지금 얼마인 거야? 180˚.
<SYNC Start=979314><P Class=KRCC>
그래서 우리가 라디안이라는 표현을 생략해서 ‘π는 180˚야.’ 이런 표현을 썼고 π가 180˚라는 그 아이가 기준이었지. 180˚를 이제 뭐라고 쓸 거냐면 π (rad)이라고 쓸 거야.
<SYNC Start=992985><P Class=KRCC>
그럼 그거의 절반이니까 2분의π. 그거의 절반이니까 4분의π였어. 그럼 다시 한 번, 180˚였어. 30˚니까 6분의1이지. 6분의π. 그리고 60˚는 3분의π. 270˚는 3배 해 주면 되니까 2분의3π.
<SYNC Start=1012382><P Class=KRCC>
그리고 360˚ 한 바퀴이지? 180˚의 2배니까 2π. 앞으로는 각도 대신 저렇게 호도법이라는 표현을 쓸 거야. 그래서 이거 반드시 외워야 돼. 특히나 자주 나오는 표현들 있지? 이쪽 파트.
<SYNC Start=1026500><P Class=KRCC>
우리 문제 풀 때 나오는 거. 그래서 이런 애들은 반드시 기호 외워야 되고, 이게 애들이 45˚는 잘 기억을 한다? 45˚는 4로 시작하는데 얘는 4분의π잖아. 근데 3하고 6은 왔다 갔다 해.
<SYNC Start=1040263><P Class=KRCC>
30˚일 때가 6분의π이고 60˚일 때가 3분의π인 거야. 그래서 호도법이라는 각도를 표현하는 새로운 방법을 좀 배운 거고
<SYNC Start=1050100><P Class=KRCC>
그리고 저 호도법을 활용해서 우리 부채꼴에서의 넓이 그리고 호의 길이를 구하는 공식을 새롭게 구했었지. 그래서 첫 번째로 우리 기호들부터 좀 읽어 보자.
<SYNC Start=1061852><P Class=KRCC>
이렇게 부채꼴이 하나가 있었는데 반지름이 r이었어. 부채꼴에서. 각도는 θ였고 넓이를 S라고 얘기할 거고 호의 길이를 l이라고 부를 거야.
<SYNC Start=1072234><P Class=KRCC>
근데 우리가 옛날 옛날에는 이 부채꼴이라는 게 원의 일부였잖아. 그래서 항상 원 넓이를 구하고 360˚분의 얼마, 원 둘레를 구하고 360˚분의 얼마. 이렇게 풀었는데 이제는 바로바로 구할 거야.
<SYNC Start=1086557><P Class=KRCC>
우리 l 구하는 방법이 뭐였어? 일단 기호가 무슨 뜻? 응. 호의 길이. 그래서 l 구하는 방법이 반지름×θ, rl이었고. 그리고 넓이인 S 구하는 방법은? 얘도 몇 개 있었어? 그렇지. 2개 있었지.
<SYNC Start=1103382><P Class=KRCC>
첫 번째는 (2분의1)r²θ. 근데 이 r²θ 자세히 보면 이 안에 rθ가 숨어 있다? 그러니까 다시 썼을 때 (2분의1)rl이라는 식이 나오는 거지. 그래서 2개 다 알아야 돼.
<SYNC Start=1117875><P Class=KRCC>
이게 문제마다 쓰는 공식이 달라져. 그리고 또 하나 조심해야 될 건 여기서의 θ. 여기서 θ라는 거 부채꼴에서의 중심각이지? 근데 그 중심각은 반드시 호도법이야.
<SYNC Start=1130232><P Class=KRCC>
얘를 가지고 45˚라 그래서 45 곱하고, 60˚라 그래서 60 곱하면 큰일 난다. 그거 반드시 호도법으로 고쳐서 식에다가 대입해 주는 거야.
<SYNC Start=1140369><P Class=KRCC>
그래서 이 공식은 꼭 기억해야 되고 이제 저거 활용해서 우리 문제 한번 보자. 지금 그림과 같이 중심이 O이고 지름 AB의 길이가 4라 그랬어.
<SYNC Start=1151134><P Class=KRCC>
그리고 너희들한테 뭘 알려 줬냐면 부채꼴의 넓이 AOP야. 그럼 A 여기 있고 O 여기 있고 P 여기 있어. 그 넓이가 (4분의3)π가 된대. 근데 지금 문제에서 지름을 알려 줬다?
<SYNC Start=1165596><P Class=KRCC>
지름이 4란 얘기는 이 AO라는 반지름은 몇이라는 얘기야? 절반이니까? 그렇지. 2가 된다는 얘기이지. 여기까지 괜찮아? 그럼 지금 r을 알고 있는 거야. 그리고 넓이를 알고 있어.
<SYNC Start=1177834><P Class=KRCC>
그럼 이제 그 두 개가 섞인 식이 생각이 나야지. 우리 부채꼴의 넓이를 구하는 방법은 (2분의1)r²θ라는 방법이 있었어. 근데 그 2분의1에다가 r이 지금 2였으니까 4.
<SYNC Start=1191755><P Class=KRCC>
θ는 누군지 몰라. 근데 이거 계산한 게 (4분의3)π가 된다며. 그럼 둘 계산한 거 2였어. 그러니까 여기서 알 수 있는 게 θ라는 애가 (8분의3)π라는 걸 알 수 있지?
<SYNC Start=1205323><P Class=KRCC>
그래서 이 부채꼴에서의 중심각이 지금 뭐가 되냐면 (8분의3)π야. 여기까지 괜찮아 ?이제 반쪽 구한 거야. 근데 그다음 거, 우리 문제에서는 호의 길이를 물어봐. 근데 어디냐면 BP였어. BP.
<SYNC Start=1220647><P Class=KRCC>
이만큼의 호의 길이다? 호의 길이 구하는 공식은 뭐였었냐면 rθ야. 근데 r은 2라는 거 알고 있어. 근데 뭐가 없어? θ가 없지. 이 중심각.
<SYNC Start=1232400><P Class=KRCC>
그럼 그 중심각을 구하려면 이거 전체가 평평하니까 180˚. 결국 π 마이너스 나머지 부분인 (8분의3)π이 해 주면 되고 그러니까 얘는 (8분의5)π가 되는 거지.
<SYNC Start=1245466><P Class=KRCC>
그럼 이제 중심각 구했으니까 계산해 보면 되겠다. 그래서 l은 rθ이지? r은 2이고 중심각은 (8분의5)π이고 그래서 계산해 보면 (4분의5)π가 나와 주면 되지.
<SYNC Start=1260169><P Class=KRCC>
그래서 이런 1번 유형의 문제들이 그 앞쪽 페이지에서 자주 출제가 돼. 그리고 정말로 어렵지 않은 게 이 부채꼴 문제들은 뭔가 특별히 활용되기보다는
<SYNC Start=1269443><P Class=KRCC>
공식만 좀 정확하게 알고 있으면 쓸 수 있는 문제의 형태가 나와. 그래서 기본 공식은 잘 외워 놔야 된다. 그리고 이번에는 우리 삼각 함수 한번 보자.
<SYNC Start=1281066><P Class=KRCC>
이제 드디어 삼각 함수라는 그 제목이 등장을 했어. 단원의 이름이. 그래서 우리가 중학교 때는 삼각비를 배웠고 이제 여기서는 삼각 함수라는 개념이 등장을 하는 거지.
<SYNC Start=1293550><P Class=KRCC>
그래서 우리가 뭘로 기준을 잡냐면, 원점이 되는 애가 있었고 항상 모든 것의 기준이 되는 시초선. 그래서 x축의 양의 방향을 우리가 시초선으로 잡지? 시초선이 있었어.
<SYNC Start=1307580><P Class=KRCC>
그리고 자꾸 자꾸 움직이는 반지름인 동경이 하나가 있었어. 이렇게. 그리고 그 동경하고 원이 만나는 점을 내가 P라고 잡았고 그 P의 좌표를 (x, y)라고 한번 불러 보자.
<SYNC Start=1320991><P Class=KRCC>
그럼 이제 여기서 우리가 사인, 코사인, 탄제트라는 그 애들을 좀 하나씩 읽어 낼 거야. 근데 0부터 P까지 이 길이는 뭐가 될까? 원에서의 뭐가 되는 거야? 그렇지. 반지름. 그러니까 r이겠지.
<SYNC Start=1334352><P Class=KRCC>
그럼 그때 우리가 시초선으로부터의 각도를 내가 θ라고 잡았어. 그럼 이 상황에서 하나씩 하나씩 사, 코, 탄을 읽을 건데 좌표 자체를 내가 (x, y)라고 잡았고 여기가 x, 여기가 y가 되겠지.
<SYNC Start=1348233><P Class=KRCC>
그럼 이제 사인, 코사인, 탄젠트 읽을게. 사인은 정의가 뭐야? 사인? 그렇지. 빗변 따라서 싹 넘어가는 걸 우리가 사인이라고 불렀어. 그 점에서 시작해서 빗변 따라 넘어갔어.
<SYNC Start=1360716><P Class=KRCC>
그러니까 뭐가 되냐면 r분의y. 얘가 사인이었지? 그리고 코사인의 정의는 뭐였었냐면 빗변 따라 갔다가 돌아오는 게 코사인이었어. 빗변 따라 갔다가 돌아오는 게 코사인.
<SYNC Start=1373549><P Class=KRCC>
그러니까 결국 r분의x인 거지. 마지막 탄젠트, 우리 탄젠트는 정의가 뭐였었냐면 직각 그리는 게 탄젠트였어. 그 점에서 시작해서 직각 그려 주는 게 탄젠트.
<SYNC Start=1388091><P Class=KRCC>
그러니까 식으로 쓰자면 x분의y. 이게 탄젠트인 거지. 그래서 사인, 코사인, 탄젠트를 이렇게 정의를 했어. 근데 우리가 중학교 때 배운 거랑 무슨 차이가 있냐면 이 x, y라는 게 길이가 아니야.
<SYNC Start=1402392><P Class=KRCC>
이제는 뭘 x, y라고 부르냐면 좌표를 x, y라고 불렀어. 그러니까 삼각비가 항상 양수인 게 아니라 이렇게 좌표이기 때문에 뭐도 가능한 거야? 응. 음수도 가능한 거고 또 0도 가능한 거야.
<SYNC Start=1416238><P Class=KRCC>
그래서 이 사인, 코사인, 탄젠트를 가지고 사분면마다 플러스인 게 달랐었지? 그래서 이 정의 그대로 플러스인 걸 체크해 보자면 1, 2, 3, 4 이 순서대로 플러스인 게
<SYNC Start=1429649><P Class=KRCC>
1사분면에서는 전부 다 플러스, 2사분면에서는 사인만 플러스, 3사분면에서는 탄젠트만 플러스, 마지막 4사분면에서는 코사인만 플러스.
<SYNC Start=1442415><P Class=KRCC>
그래서 순서대로 ‘얼싸안고 플러스’라는 표현을 썼어. 그래서 앞으로 사분면의 위치마다 이 사인, 코사인, 탄젠트의 부호가 달라질 거야.
<SYNC Start=1455134><P Class=KRCC>
그리고 그 부호를 결정해 주는 요소는 사분면에서의 위치인 거야. 그래서 ‘얼싸안고 플러스’이다. 꼭 기억해야 돼. 그래서 삼각 함수에서의 기본 정의였고
<SYNC Start=1467179><P Class=KRCC>
그리고 두 번째로 우리 이다음 너무너무 많이 쓰는 거 뭐 했지? 그렇지. 삼각 함수 사이에 관계 식했었지. 우리 그 삼각 함수 사이에 관계 몇 개 있었어? 두 개 있었어.
<SYNC Start=1479437><P Class=KRCC>
첫 번째는 뭐? 그렇지. 각각 제곱하는 거. 사인을 제곱하고 코사인에 제곱해서 더하면 무조건 몇 이다? 1이다. 근데 이때는 언제만 성립하냐면 각이 같을 때야.
<SYNC Start=1492612><P Class=KRCC>
그래서 θ, θ로 같을 때만 성립하는 식이야. 그리고 우리 전체 제곱을 이렇게 간단하게 쓰는 거지? 그래서 sin²θ라는 이 표현 자체는 무슨 뜻이었냐면 sin θ를 전체 제곱한다는 뜻이었어.
<SYNC Start=1508122><P Class=KRCC>
그래서 이거 진짜로 앞으로도 남은 기간 동안 정말 천만 번 보게 될 식이야. 그리고 두 번째로는 우리 탄젠트라는 표현이었지. 아무래도 탄젠트가 좀 더 낯설잖아.
<SYNC Start=1519036><P Class=KRCC>
그래서 탄젠트 대신에 우리 뭐라고 써? 그렇지. (코사인)분의(사인). 그래서 탄젠트를 (코사인)분의 (사인)으로 이렇게 정리하는 게 가능했어. 얘가 삼각 함수 사이의 관계식이었지.
<SYNC Start=1531029><P Class=KRCC>
그래서 우리 2가지만 한번 다시 보자. 첫 번째로 우리 삼각 함수라는 거 더 이상 삼각비가 아니야. 즉 길이가 아니라 좌표로 정의하기 때문에 음수값, 0 다 가능해.
<SYNC Start=1542171><P Class=KRCC>
그래서 정의 정확하게 알아 놔야 되고 우리 다음 시간에 푸는 문제 중에 정의 자체를 활용하는 문제들이 있어. 그래서 정의 꼭 다시 한 번 봐야 된다.
<SYNC Start=1550885><P Class=KRCC>
사인이 r분의y이고 코사인이 r분의x이고. 그래서 내가 자주 얘기하는 게 ‘코엑스’라는 표현 자주 쓰거든. 그래서 코사인이 x 좌표야. 그리고 탄젠트는 x분의y.
<SYNC Start=1562016><P Class=KRCC>
여기서 또 하나 체크할 수 있는 게 x분의y, 즉 (x 증가량)분의(y 증가량). 그거 뭐에 대한 표현이야? 직선의 기울기에 대한 표현이지.
<SYNC Start=1572200><P Class=KRCC>
그래서 탄젠트는 어떤 특징도 가지고 있냐면 동경의 기울기라는 그런 특징도 가지고 있어. 가끔 문제에서 동경의 기울기를 알려 준다면 그건 너희들한테 탄젠트를 알려 주는 힌트인 거야.
<SYNC Start=1585488><P Class=KRCC>
그리고 삼각 함수 사이에서의 관계식 2개. 이 2개 반드시 외워야 된다. 꼭 꼭. 그래서 오늘 마지막 내용은 이 삼각 함수에 대한 얘기였어. 그래서 오늘 뭐 했나 정리 한번 좀 해 보자.
<SYNC Start=1600481><P Class=KRCC>
이제 드디어 두 번째 단원인 삼각 함수까지 같이 시작을 했지? 그래서 오늘 했던 첫 번째 내용은 뭐 있었냐면 동경하고 일반각. 이제는 각이 딱 고정된 게 아니라 빙글빙글 돌 수 있었어.
<SYNC Start=1612792><P Class=KRCC>
그래서 그 빙글빙글 돈 것까지 가지고서 표현해 준 게 일반각이라는 표현이었고 그리고 두 번째로는 부채꼴. 우리 부채꼴 옛날에 배웠던 거 맞아.
<SYNC Start=1623376><P Class=KRCC>
근데 옛날에 배운 그 부채꼴을 호도법을 활용해서 공식을 좀 더 간단하게 만들었고 넓이 구하는 공식은 2개 있다. 그리고 호의 길이 구하는 공식 하나. 그렇게 세 가지 공식이 있었어.
<SYNC Start=1634529><P Class=KRCC>
다음 시간에는 우리 그래프까지 한번 같이 공부를 해 보자. 그래서 오늘도 너무너무 고생 많았고 다음 시간에 보자. 안녕.
<SYNC Start=1642406><P Class=KRCC>
&nbsp;
</BODY>
</SAMI>