<SAMI>
<HEAD>
<TITLE>(주)기록법인상생 자막 2015</TITLE>
<STYLE TYPE="text/css">
<!--
P { margin-left:8pt; margin-right:8pt; margin-bottom:2pt;
    margin-top:2pt; font-size:12pt; text-align:left;
    font-family:굴림, Arial; font-weight:normal; color:white;
    background-color:#405A8D; }
.KRCC { Name:한국어; lang:ko-KR; SAMIType:CC; }
#STDPrn { Name:Standard Print; }
#LargePrn { Name:Large Print; font-size:20pt; }
#SmallPrn { Name:Small Print; font-size:10pt; }
-->
</STYLE>
</HEAD>
<BODY>
<SYNC Start=9958><P Class=KRCC>
안녕하세요. 얘들아, 오늘은 김미묘 작가님 그림 중에 하나를 준비했어. 보면서 되게 공감했던 그림 중에 하나거든.
<SYNC Start=19495><P Class=KRCC>
‘살아 있는 나 정말 대견하다. 미라클 모닝은 무슨! 살아 있는 게 미라클!’ 이런 그림이다. 언제부터인가 이렇게 고3 강의를 시작하면서
<SYNC Start=29111><P Class=KRCC>
옛날에는 그래도 하나 끝내고 나면 좀 쉬는 시간이 있고 하나 끝내고 나면 좀 쉬는 시간이 있고 해서 그런 희망으로 살았었거든.
<SYNC Start=38730><P Class=KRCC>
근데 이제 너희들도 고3이고 이렇게 고3 수업을 같이 하니까 뭔가 고3의 생활 계획표대로 나도 같이 움직이는 것 같아.
<SYNC Start=47526><P Class=KRCC>
그래서 똑딱똑딱 수능 개념 만들어서 수능 개념 하고 나면 어느덧 수특 나오고, 또 똑딱똑딱 수특 하고 나면 수능 완성 나오고, 완성 나와서 이렇게 수업 다 하고 나면 개념 만들고,
<SYNC Start=59177><P Class=KRCC>
그렇게 1년이라는 시간이 이렇게 지나가 버리는 것 같다. 그래서 때로는 ‘내가 무슨 부귀영화를 누리겠다고.’ 이런 생각을 하다가도
<SYNC Start=67097><P Class=KRCC>
지난 시간처럼 너희들이 남겨 준 후기를 볼 때면 ‘그래, 이러면 안 돼. 더 열심히 해야지.’ 하고 기운을 내고는 한다.
<SYNC Start=76210><P Class=KRCC>
그래서 너희들도 그러지 않을까 싶어서, 뭔가 대단한 걸 해내거나 엄청난 걸 하지 않아도 나는 내 존재만으로도 소중하고 살아 있는 것만으로도 대견하다는 그런 얘기를 꼭 해 주고 싶었어.
<SYNC Start=89770><P Class=KRCC>
그래서 준비한 사진이고, 그리고 우리 지난 시간 마지막에는 원순열이라는 내용을 봤었지. 그래서 이제 그거 가지고 문제를 좀 더 풀어 볼 텐데 이 문제도 마찬가지야.
<SYNC Start=99684><P Class=KRCC>
우리가 지난 시간 마지막에 풀었던 문제는 그래도 원탁에다가 애들이 자리에 앉는 거잖아. 근데 지금 이 문제는 정육각형이 나와. 정육각형.
<SYNC Start=109394><P Class=KRCC>
그러니까 반드시 원순열이 원에서 나오는 게 아니라 제일 중요한 건 회전했을 때 같은 케이스가 생긴다면 그게 원순열이라는 거라고 했지.
<SYNC Start=118220><P Class=KRCC>
그래서 정육각형이 있었는데 한 변의 길이가 1이었어. 그리고 6개의 문자가 있었는데 그중에 하나씩을 선택해서 꼭짓점에다가 서로 다른 이름을 붙여 준다고 했어.
<SYNC Start=129414><P Class=KRCC>
그리고 이제 그다음 조건이 나오지. 어떻게 했어? A, B라는 두 점 사이의 거리가 2보다 작았으면 좋겠대. 그렇게 이름을 붙이는 경우의 수야.
<SYNC Start=139855><P Class=KRCC>
그래서 나 같은 경우는 특히나 경우의 수 문제 풀 때는 좀 그림을 그려 가면서 푸는 편이거든. 눈에 좀 보일 수 있도록. 그래서 정육각형을 하나 그려 보자. 이렇게.
<SYNC Start=152614><P Class=KRCC>
정육각형이 이렇게 하나가 있었고 여기다가 이제 이름을 붙이지. A, B, C, D, E, F, 이렇게 이름을 붙이는데 내가 원하는 조건이 뭐가 있었냐면 A하고 B 사이의 거리가 2보다 작았으면 좋겠대.
<SYNC Start=165540><P Class=KRCC>
그럼 내가 A라는 애를 여기다가 한번 정해 볼게. 그럼 그 A라는 점에서 B가 위치할 수 있는 게 하나, 둘, 셋, 넷, 다섯, 이렇게 다섯 군데가 있을 거야.
<SYNC Start=176506><P Class=KRCC>
근데 그 다섯 군데 중에서 2보다 거리가 작았으면 좋겠대. 그럼 봐. 이 거리가 될 수도 있고. 우리 거리라는 건 항상 최단 거리다.
<SYNC Start=186104><P Class=KRCC>
B가 여기 있다고 해서 똑똑 움직이는 거 아니야. 거리니까 이리로 움직여야지. 아니면 이 길이도 있을 거고, 이 길이 있을 거고, 이 길이 있겠지.
<SYNC Start=196321><P Class=KRCC>
근데 그 길이들 중에서 여기 여기 여기 여기는 같잖아. 그러니까 실제로 가능한 길이는 1, 2, 3, 이렇게 세 종류가 있겠다. 그럼 우리 그 길이 한번 찾아보자.
<SYNC Start=206829><P Class=KRCC>
우리 문제에서 한 변의 길이가 1인 정육각형이라고 했어. 그러니까 이 길이는 1이 되겠지. 여기까지 괜찮아? 그리고 또 하나. 지금 이 밑변의 길이는 1이었어.
<SYNC Start=218156><P Class=KRCC>
그리고 정육각형이지, 지금. 90˚. 그럼 이 길이는 √3이 될 거고 이 길이는 2배니까 2가 되겠다. 다시 한 번 보면 이 길이 1, 이 길이 √3, 이 길이 2였어.
<SYNC Start=231634><P Class=KRCC>
나올 수 있는 가짓수는 저렇게 3가지가 전부야. 근데 그중에서 2보다 작은 케이스래. 이 3개 중에서 2보다 작은 케이스는 1하고 √3이지.
<SYNC Start=241649><P Class=KRCC>
그러니까 A라는 애가 여기 있었을 때 가능한 B의 위치가 하나, 둘, 셋, 넷, 이렇게 4개인 거야. 근데 그 4개를 전부 찾기보다는 차라리 뭐가 빨라?
<SYNC Start=252994><P Class=KRCC>
그렇지. 2인 것만 빼 버리는 게 빠른 거 아니야? 그러면 지금 어떻게 구하면 되냐면 가능한 전체 가짓수에서 내가 원하는 건 AB의 거리가 2가 되는 케이스를 빼 버리면 되는 거지.
<SYNC Start=266203><P Class=KRCC>
그럼 전체 가짓수라는 건 6개의 문자가 있었어. 그 6개의 문자를 정육각형 위에다가 올려놓을 거야. 6개를 원탁에다가 놓는 거지. 개수 하나 줄어드니까 5!
<SYNC Start=278516><P Class=KRCC>
여기까지 괜찮아? 이제 그다음 거. 길이가 2가 되는 케이스만 빼면 돼. 그럼 나머지는 2보다 작으니까. 근데 2가 되는 케이스가 A가 여기 있다면 B는 무조건 여기,
<SYNC Start=289669><P Class=KRCC>
그 건너편 유일하게 하나 존재해. 그럼 내가 할 수 있는 일은 나머지 네 귀퉁이에 자리를 정하는 일밖엔 없지. 그래서 4개를 가지고 위치를 정해 주니까 4!이면 되겠다.
<SYNC Start=302051><P Class=KRCC>
그래서 얘를 내가 4!으로 묶었어. 4! 꺼냈으니까 5 됐고 뒤에 -1. 그래서 24×4 해 주면 되고 정답은 96이 돼 주면 되지.
<SYNC Start=313923><P Class=KRCC>
그래서 이쪽 경우의 수 파트가 앞에서 했던 극한, 미분, 적분보다 어려운 이유가 너희들이 스스로 이렇게 이야기를 좀 만들어야 돼.
<SYNC Start=323184><P Class=KRCC>
그래서 케이스 만들어서 길이가 어떻게 나오는지 확인해 보고, 그럼 작은 케이스를 구할 수도 있지만 차라리 거리가 2가 되는 케이스를 구해 버리는 게 경우의 수가 더 작지.
<SYNC Start=334165><P Class=KRCC>
그래서 전체 가짓수에서 그걸 빼 버리는 거야. 이렇게 구해 준 문제가 2번 문제였고, 그다음에는 우리 새로운 순열을 하나 더 보자. 이번에는 중복 순열이야.
<SYNC Start=347579><P Class=KRCC>
이 중복 순열도 문제를 봤을 때 중복 순열이다, 원순열이다, 이런 문구를 안 줘. 그래서 방금 전에 봤던 정육각형처럼 얘도 역시나 예제를 가지고 문제들이 나올 거야.
<SYNC Start=361105><P Class=KRCC>
그래서 그 중복 순열의 느낌을 알아야 돼, 느낌을. 그래서 얘도 내가 예제로 설명할 텐데, 내가 마트에 갔어. 마트에서 과자를 세일한다고 해서, 그래서 마트에 갔는데
<SYNC Start=372479><P Class=KRCC>
우리 마트에는 10 종류의 과자가 있었다. 과자가 여분은 많아. 근데 종류가 10개였던 것뿐인 거지. 근데 내가 마트에 누구랑 갔냐면
<SYNC Start=381795><P Class=KRCC>
지난 시간처럼 자영이가 있었고 그리고 순록이가 있었고 그리고 바비가 있었어. 이렇게 3명이서 다 같이 손잡고 마트에 과자를 산 거 간 거야.
<SYNC Start=394960><P Class=KRCC>
근데 내가 마트에 가서 이렇게 과자를 살 때 가능한 얘를 내가 둘로 나눌 거거든, 첫 번째 케이스는 뭐냐면 과자를 사서 각자 집에 가서 먹는 케이스야.
<SYNC Start=406209><P Class=KRCC>
각자 집에 가서 자기가 산 거 먹을 거다. 그럼 다른 옆에 있는 애가 뭘 사는지 아무 상관 없지. 그럼 내가 이 중에서 골라서 먹을 수 있는 과자의 종류는 10종류.
<SYNC Start=417034><P Class=KRCC>
순록이도 10개 중에 하나 골라 먹을 거고 바비도 10개 중에 하나를 골라서 먹겠지. 그러니까 몇 개가 나와? 10³.
<SYNC Start=425505><P Class=KRCC>
근데 만약에 우리가 각자 집에 가서 먹는 게 아니라 다 같이 모여서 돗자리 펴 놓고 여기서 까먹을 거야, 과자를. 그렇다면 물론 똑같은 과자를 살 수도 있어.
<SYNC Start=436511><P Class=KRCC>
하지만 이게 정상적인 반응이었다면 다 같이 모여서 과자를 까먹을 때, 내가 맨 처음에 고를 수 있는 건 10가지였다.
<SYNC Start=445204><P Class=KRCC>
근데 내가 산 거는 순록이가 눈치가 있다면 그거 빼고 나머지 과자에서 고르겠지. 마찬가지로 바비도 우리 셋이 다 같이 나눠 먹을 거니까 내가 고른 거 빼고 순록이가 고른 거 빼고 고르겠지.
<SYNC Start=458347><P Class=KRCC>
그래서 우리 이렇게 하나씩 하나씩 골라서 써 주는 걸 10P3이라고 썼었잖아. 근데 반대로 중복을 허락해서 써 주는 거 얘를 기호로 어떻게 쓰냐면
<SYNC Start=469222><P Class=KRCC>
10개 중에 3개를 골랐다는 뜻에서 18Π3이라고 쓰는 거야. 근데 이 10Π3이라는 거 결국 내가 어떻게 계산했냐면 10³으로 계산했지.
<SYNC Start=480335><P Class=KRCC>
그래서 이 중복 순열은 굳이 공식이 없어도 곱의 법칙만으로도 충분히 계산이 가능하다. 그래도 다시 한 번 정의를 써 보자면, n개 중에서 중복을 허락해서 r개를 뽑아.
<SYNC Start=492897><P Class=KRCC>
뽑은 거 또 뽑아도 괜찮아. 우리 이럴 때에는 n의 r제곱으로 이렇게 수식이 나오는 거야. 그래서 또 얘에 관련된 대표적인 예제가 뭐 있냐면 자물쇠 같은 거.
<SYNC Start=504779><P Class=KRCC>
우리 자물쇠 가지고 비밀번호 만들 거야. 근데 얘가 이렇게 4자리짜리 비밀번호였어. 그리고 자물쇠를 가지고 만들 수 있는 비밀번호가 종류가 0부터 9까지야.
<SYNC Start=517716><P Class=KRCC>
0부터 9까지의 숫자를 가지고 이렇게 4자리 비밀번호를 만들어. 그럼 0부터 9까지의 숫자니까 총 10개 있지. 근데 우리가 비밀번호를 만들 때 여기가 1 나왔어.
<SYNC Start=528675><P Class=KRCC>
그럼 그다음에 1 나오면 안 돼? 그런 거 아니잖아. 그러니까 이 자리에 올 수 있는 것도 10가지, 그다음도 10가지, 그다음도 10가지, 또 10가지. 그래서 10⁴인 거야.
<SYNC Start=541001><P Class=KRCC>
그래서 지금 보면 알겠지만 나 굳이 Π, n, r, 이런 거 안 썼지. 그래서 이 중복 순열은 중복을 허락해서 내가 뽑을 수 있는 것도 뽑을 수 있다는 얘기고
<SYNC Start=551471><P Class=KRCC>
꼭 공식이 없더라도 곱의 법칙만으로도 충분히 풀이가 가능해. 이 뒤에 나오는 예제들도 마찬가지야. 4번 문제 한번 보면 문자가 A, B, C, D, 앞면에 하나씩 적혀 있는 카드가 있었어.
<SYNC Start=565485><P Class=KRCC>
우리 저기까지 먼저 한번 해 볼까? 나는 이런 거 읽을 때마다 그냥 카드를 그린다. 그게 내 눈에 보이면 좀 더 마음이 편안해지거든.
<SYNC Start=573929><P Class=KRCC>
카드가 4장 있었어. A라는 카드 있었고 B라는 카드가 있었고 C라는 카드가 있었고 마지막 D라는 카드가 있었어. 근데 그 4개의 카드가 있었고 그다음에 뭐였냐면
<SYNC Start=586749><P Class=KRCC>
빨간색을 포함한 3가지 색깔이 있었는데 중복을 허락한대. 그러니까 칠한 거 또 칠해도 괜찮아. 중복을 허락해서 4개의 색을 택해서 4장의 카드 앞면에다 색깔을 칠할 거야.
<SYNC Start=599166><P Class=KRCC>
근데 대신에 빨간색을 칠한 카드가 1개였으면 좋겠대. 그러니까 원래는 칠한 거 또 칠해도 된다. 빨, 빨, 빨, 빨, 이랬어도 괜찮아.
<SYNC Start=608356><P Class=KRCC>
근데 우리 문제에서 조건으로 뭐 줬냐면 빨간색은 1개여라, 이런 조건을 준 거야. 그럼 내가 여기다가 색깔을 칠할 때 지금 몇 가지 색깔이 존재해? 3가지 색깔이 존재해.
<SYNC Start=621492><P Class=KRCC>
이거 색연필이다. 이렇게 3가지 색깔이 존재했어, 색연필이. 근데 맨 처음 색연필은 무슨 색이었냐면 빨간색이었어. 얘가 빨간색이야.
<SYNC Start=632532><P Class=KRCC>
그리고 그다음에 나오는 색연필은 주황색이었어. 그다음에 나오는 색연필은 파란색이었어, 이렇게. 그래서 지금 카드가 4장 있었고 색연필이 이렇게 3자루가 있었어.
<SYNC Start=645095><P Class=KRCC>
‘원래는 중복을 허락하지만 지금은 빨간 거 1개만 칠해.’ 그 뜻이잖아. 그럼 내가 맨 처음에 빨간색 색연필을 들고 있어. 내가 주인공이 돼야 돼.
<SYNC Start=655243><P Class=KRCC>
나 이 4개 중에서 뭔가 하나에 칠하겠지. 그럼 4개 중에서 하나를 골라서 칠했어. 여기까지 몇 가지 경우의 수? 그렇지, 4가지지. 그리고 나 아직 안 끝났지.
<SYNC Start=667383><P Class=KRCC>
원래대로라면 또 칠할 수 있지만 우리 문제는 빨간색은 1개였으면 좋겠대. 그러니까 더 이상 빨간색 색연필은 쓰면 안 돼. 그럼 나머지 2개 가지고만 여기를 채우는 거야.
<SYNC Start=678339><P Class=KRCC>
그럼 B를 색칠할 수 있는 거 2가지 될 거고, C를 색칠할 수 있는 것도 2가지, D를 색칠하는 것도 2가지. 그러니까 나머지 부분에서는 2×2×2가 돼서 2³.
<SYNC Start=691365><P Class=KRCC>
그래서 4×8이 되니까 정답은 32가 나와 주면 되지. 그래서 이런 식으로 너희들이 스스로 정말 색칠하는 것처럼 이야기를 좀 만들어야 돼.
<SYNC Start=701220><P Class=KRCC>
‘이거 중복 허락해? 중복 순열.’ 이러면서 nΠr 생각하게 되면 문제가 복잡해져. 카드 4장 있었고 색깔 3개 있었어. 대신에 빨간색은 1개만.
<SYNC Start=711359><P Class=KRCC>
그래서 빨간색 하나 치우고 제외시키고 나머지 색깔들로 나머지 칸 채워 주는 거야. 그래서 이 문제가 4번이었고 이번에는 5번 한번 보자.
<SYNC Start=723261><P Class=KRCC>
이쪽 경우의 수 파트에서 또 자주 등장하는 게 함수에 대한 얘기지. 지금 2개의 집합이 있었는데 X하고 Y, 그리고 X에서 Y로 움직이는 함수였어.
<SYNC Start=734820><P Class=KRCC>
그때 뭘 줬냐면 f(x)라는 함숫값이지. 나 X라는 집합에서 뭐 하나를 뽑았어. 그리고 거기에다가 대응시킨 게 f(x)야. 근데 그 f(x)라는 함숫값에 1이 포함된대.
<SYNC Start=747964><P Class=KRCC>
즉, 1이라는 애가 화살을 받은 거지, 누군가에게. 그림으로 그려 보자면 X가 있었고 {1, 2, 3}이었어. Y가 있었는데 {1, 2, 3, 4, 5}였어.
<SYNC Start=761201><P Class=KRCC>
우리 함수가 정의된다, 1학년 때 개념이야. 앞으로도 함수는 계속 계속 나올 거라서 여기서는 한 번 더 정리하고 넘어가자.
<SYNC Start=770345><P Class=KRCC>
우리 함수라는 게 정의되기 위해서는 크게 2가지의 조건이 필요했어. 첫 번째, 모든 x는 반드시 화살을 쏘기는 쏴야 되지. 근데 화살을 쏘되 몇 개만 쏴야 돼?
<SYNC Start=783617><P Class=KRCC>
그렇지, 딱 하나만. 그래서 모든 x는 반드시 오직 하나의 y한테만 대응돼야 돼. 그래서 이 2가지 조건에 만족할 때를 우리가 함수가 정의된다는 표현을 썼어.
<SYNC Start=795038><P Class=KRCC>
그러니까 화살 안 쏘는 애 없어야 되고 반드시 쏴야 돼. 대신에 쏠 때는 몇 개만? 딱 하나만. 그럼 지금 내가 원하는 거 함수의 개수고
<SYNC Start=804276><P Class=KRCC>
1이라는 애가 함숫값에 들어 있다는 얘기는 누군가에게 화살을 받았다는 얘기야. 근데 1이 쐈을 수도 있고 2가 쐈을 수도 있고 3이 쐈을 수도 있지.
<SYNC Start=814746><P Class=KRCC>
근데 만약에 2라는 애가 1한테 화살을 쐈어. 근데 나머지 2개는 갈 수 있는 곳이 또 다섯 군데가 있는 거야. 그러니까 케이스가 너무 많아져.
<SYNC Start=823963><P Class=KRCC>
그러니까 1이라는 값이 단순히 함숫값이라는 조건만으로도 너무 많은 케이스가 존재하는 거야. 그래서 이렇게 케이스가 많을 때에는 오히려 반대로 생각해 보는 게 조금 더 쉽지.
<SYNC Start=835627><P Class=KRCC>
전체 개수라는 게 존재할 거야. 함수가 존재할 수 있는 전체 개수. 그 전체 개수에서 오히려 뭘 빼 버리면 될까? 1이 화살을 못 받는 케이스.
<SYNC Start=846196><P Class=KRCC>
즉, 함숫값에서 이 f(x)라는 값이 1이 아닌 케이스들. 이거 다 빼 버리면 되겠지. 1이라는 값이 없는 케이스를. 그럼 전체 가짓수는 몇 가지?
<SYNC Start=856873><P Class=KRCC>
1이 갈 수 있는 곳은 몇 가지가 있어? 어디든 갈 수 있어. 다섯 군데지. 2가 갈 수 있는 것도 다섯 군데, 3이 갈 수 있는 것도 다섯 군데.
<SYNC Start=867380><P Class=KRCC>
각각 5니까 전체 개수는 5³이 되겠지. 여기까지 괜찮아? 이제 다음 거, 1한테는 누구도 안 갔어. 즉, 1이라는 원소는 있으나 마나야, 이렇게.
<SYNC Start=879431><P Class=KRCC>
그러면 1, 2, 3이라는 원소들이 나머지 원소인 2, 3, 4, 5한테만 화살 쐈단 얘기지. 그럼 1이라는 애가 화살 쏠 수 있는 거 4개, 2도 4개, 3도 4개.
<SYNC Start=890381><P Class=KRCC>
그러니까 뭐의 얼마인 거야? 그렇지, 4³인 거지. 그래서 1이라는 애가 화살을 받는 것보다 화살을 못 받는 케이스를 세는 게 훨씬 더 간편한 거야.
<SYNC Start=900497><P Class=KRCC>
그래서 이거 정리해 주면 125였고 64였어. 그래서 36에다가 25 더해 주면 되니까 61이 나와 주면 되지. 그래서 계산식 자체는 되게 간단한데
<SYNC Start=912426><P Class=KRCC>
이제 이런 개념들을 너희들이 머릿속에 떠올리면서 스스로 수식을 좀 짜 봐야 되지. 그래서 이 문제가 함수의 정의를 활용한 5번 문제였고
<SYNC Start=923320><P Class=KRCC>
이번에는 같은 것이 있는 순열 보자. 이번에는 순열은 순열인데 그 안에 같은 게 섞여 있대. 우리가 앞에서 봤었던 순열들은 전부 다 서로 다른 거였지.
<SYNC Start=935290><P Class=KRCC>
그래서 내가 사람을 줄 세우고 그리고 과자를 뽑고 그랬었잖아. 각기 다른 과자를. 근데 이번에는 내가 가지고 있는 것 중에 똑같은 애들이 섞여 있는 거야.
<SYNC Start=945869><P Class=KRCC>
그래서 얘도 좀 예제로 보면, 나는 빵 되게 좋아하거든. 근데 우리 동네에 정말 다행히 아주 맛있는 빵집이 있다. 근데 그 빵집의 대표 메뉴가 뭐가 있냐면 소금 빵. 진짜 맛있어.
<SYNC Start=960051><P Class=KRCC>
여기 소금 빵이 있었어. 근데 소금 빵이 몇 개 있었냐면 2개 있었어. 얘는 맨날 잘 안 팔고 가 보면 퇴근해서 갔을 때는 빵 다 팔려 있고 그랬었거든.
<SYNC Start=972063><P Class=KRCC>
그래서 소금 빵이 2개가 있었고, 또 내가 좋아하는 빵이 감자 빵. 얘는 감자야. 감자 빵이 이렇게 3개가 있었어.
<SYNC Start=983024><P Class=KRCC>
근데 내가 이 5개의 빵을 가지고 뭐 할 거냐면, 거기 판매하는 데 있지. 그 판매대에다가 이 5개의 빵을 예쁘게 전시할 거야.
<SYNC Start=992598><P Class=KRCC>
그럼 만약에 아무 조건이 없었어. 그냥 5개야. 그럼 5개를 일렬로 나열하는 가짓수는 5!이지. 근데 지금 문제가 생긴 게, 얘네가 완전 똑같아. 하나도 구분이 안 되고 똑같이 생겼어.
<SYNC Start=1007374><P Class=KRCC>
그럼 이 소금하고 소금 빵, 이 2개가 자리 바꾸는 게 의미가 있어, 없어? 이 소금 빵이 둘이 똑같이 생겼다. 근데 둘이 자리 바꿨어. 그게 다른 케이스가 아니란 얘기지, 지금.
<SYNC Start=1018964><P Class=KRCC>
마찬가지로 감자 빵이 완전 똑같이 생겼어. 그러니까 이 3개끼리는 자리를 바꿔 봐야 아무 소용 없는 거야. 그래서 원래대로라면 자리 바꾸는 게 2!,
<SYNC Start=1029395><P Class=KRCC>
원래대로라면 서로 자리 바꾸는 거 3!, 하지만 그게 지금 의미가 없지. 즉, 없애 줘야 돼. 그래서 전체 개수가 5개였기 때문에 아무 조건이 없었다면 5개를 일렬로 줄 세우는 5!이었을 거야.
<SYNC Start=1043566><P Class=KRCC>
근데 그 숫자 안에 자리를 바꿨는데도 불구하고 의미 없는 애들이 있어. 소금 빵끼리 자리 바꾸는 2! 없애 줘야 되고 감자 빵끼리 자리 바꾸는 3! 없애 줘야 돼.
<SYNC Start=1056448><P Class=KRCC>
그래서 같은 것이 있는 순열은 일단 전체 개수를 줄 세우고 그다음에 똑같은 애들끼리 이렇게 없애 주는 거야. 그래서 나 이제는 수식으로 한번 써 볼게. 정의 한번 활용해 보자.
<SYNC Start=1069182><P Class=KRCC>
그래서 n개가 있었어. 총 개수가 n개였어. 근데 n개 중에 서로 같은 애들이 들어 있었거든. 근데 그 서로 같은 애들이 하나는 p개, q개, 땡땡땡, r개가 섞여 있었어.
<SYNC Start=1084443><P Class=KRCC>
그렇다면 전체 개수가 n개니까 n!, 그리고 그 안에 같은 게 p개 있는 애들 p로 없애 주고, 같은 게 q개 있는 애들 없애 주고, 나가다가 마지막 r개까지 전부 다 없애 주는 거야.
<SYNC Start=1098556><P Class=KRCC>
대신에 그 p하고 q하고 r하고 땡땡땡들 다 더해 준 게 전체 개수인 n개가 나와야겠지. 이렇게만 쓰여 있으면 낯설어. 공식만 보면. 근데 이런 느낌이야.
<SYNC Start=1111027><P Class=KRCC>
소금끼리 자리 바꿔 봐야 아무 의미 없고 감자끼리 자리 바꿔 봐야 아무 의미 없으니까. 그럼 나 이번에는 도형 가지고 예제 하나만 더 쓸게.
<SYNC Start=1120175><P Class=KRCC>
똑같이 생긴 동그라미 2개 있었고, 똑같이 생겼어. 아무도 구분 못하는 세모가 3개 있었고, 아무도 구분할 수 없는 네모가 4개 있었어. 이렇게.
<SYNC Start=1131568><P Class=KRCC>
그럼 내가 얘네를 일렬로 나열할 거야. 그렇다면 2개, 3개, 4개였어. 총 개수 몇 개? 이거 2개에 3개에 4개, 그러니까 전체 개수는 9개니까 9!
<SYNC Start=1144770><P Class=KRCC>
하지만 동그라미끼리 자리 바꾸는 거 의미 없지. 세모끼리 자리 바꾸는 거 의미 없고 네모끼리 자리 바꾸는 것도 의미 없는 거야. 그래서 이렇게 나눠 주는 거야. 각각의 똑같은 개수만큼.
<SYNC Start=1157257><P Class=KRCC>
그래서 이게 같은 것이 있는 순열이었고 이번에는 문제를 좀 같이 보자. 지금 숫자 1, 1, 2, 2, 3, 3, 저런 애들이 있었어. 저걸 일렬로 나열할 거야.
<SYNC Start=1170166><P Class=KRCC>
총 몇 개야, 숫자가? 6개야. 그러니까 이게 아무 조건이 없었다면 6개를 일렬로 나열하는 거니까 그냥 6! 이렇게 끝났을 거야. 근데 지금은 똑같은 게 섞여 있기도 해.
<SYNC Start=1184285><P Class=KRCC>
게다가 문제에서 뭐라고 했냐면 짝수였으면 좋겠대. 어떤 숫자가 6자리였어. 3, 4, 5, 6. 6자리 숫자가 있었는데 짝수인지 홀수인지를 결정해 주는 건 이 6자리 중에 누구야?
<SYNC Start=1198554><P Class=KRCC>
어느 자리? 그렇지, 끝자리지. 짝수인지 홀수인지를 결정해 주는 건 맨 마지막 자리야. 이 맨 마지막 자리가 짝수라면 짝수인 거고 여기가 홀수라면 홀수인 거지.
<SYNC Start=1212276><P Class=KRCC>
그럼 내가 원하는 조건은 짝수였어. 그럼 여기가 짝수가 되기 위해서는 내가 가진 숫자가 1, 2, 3밖에 없기 때문에 반드시 2밖에 못 와. 이렇게.
<SYNC Start=1222837><P Class=KRCC>
그럼 이제 나머지 애들만 줄 세우면 되겠다. 이 5개. 그럼 내가 2라는 숫자 카드를 하나 사용했어. 그럼 지금 남은 게 뭐냐면 1, 1, 2, 3, 3, 얘네만 나열해 주면 돼.
<SYNC Start=1234663><P Class=KRCC>
그럼 얘네를 나열하는 거야. 똑같은 거 들어 있으니까 순서 없앨 거야. 그럼 원래대로라면 5개니까 5! 근데 거기에서 1끼리 자리 바꾸는 거 의미 없어서 없애 줬고
<SYNC Start=1247233><P Class=KRCC>
3끼리 자리 바꾸는 거 의미 없어서 없애 줬어. 이제 계산 끝까지. 그래서 팩토리얼인데 없앴어. 우리 팩토리얼은 1까지 쪼르르 곱한 거지. 그럼 남은 게 뭐냐면 5ㆍ4ㆍ3.
<SYNC Start=1259976><P Class=KRCC>
근데 거기에서 2 하나 더 없앴더니 2 남았어. 그럼 5하고 2하고 3이니까 정답은 30이 나와 주면 되겠다. 그래서 7번 문제였는데 얘는 그냥 나열하는 게 아니라 짝수였으면 좋겠대.
<SYNC Start=1273181><P Class=KRCC>
그래서 끝자리 짝수로 만들어 주고 그다음에 이렇게 분리해서 구해 주는 문제가 7번 문제였지. 그리고 이번에는 8번 한번 보자. 이거 어려웠을 거야, 이 문제.
<SYNC Start=1286894><P Class=KRCC>
일단 길지. 문제 자체도 길고 그리고 그 안에 들어가 있는 조건 자체도 복잡해. 지금 숫자가 하나씩 있었는데 얘가 총 몇 장이었어? 6장.
<SYNC Start=1299173><P Class=KRCC>
근데 그 6장이 1이 3개 들어 있어. 나머지는 하나씩 하나씩 있었고. 그리고 6장의 카드를 다음 조건을 만족시키도록 일렬로 나열할 거야.
<SYNC Start=1309348><P Class=KRCC>
근데 뭐라고 했냐면 ㈎ 조건에서 숫자 2가 적혀 있는 카드는 숫자 3이 적혀 있는 카드의 왼쪽에 넣어야 된대. 이 ㈎ 조건, 앞으로도 너희들이 많이 보게 될 표현이야.
<SYNC Start=1321111><P Class=KRCC>
지금 2하고 3이 있었는데 그 2하고 3을 나열할 때는 반드시 2가 왼쪽에 있어야 된대. 이거랑 똑같은 케이스가 있거든.
<SYNC Start=1330086><P Class=KRCC>
근데 그게 무슨 케이스냐면 ‘2라는 숫자는 3보다 왼쪽에 있어야 돼.’ 이거의 대표적인 설명이 키 순서라든지 알파벳 순서라든지 사전식 배열, 그게 이 문제랑 같은 케이스야.
<SYNC Start=1341968><P Class=KRCC>
근데 그게 전혀 다른 느낌이잖아. 근데 왜 같은 케이스냐면 2하고 3이라는 숫자가 존재했을 때 이 둘은 자리를 바꿔, 못 바꿔? 못 바꿔. 이렇게 고정이야, 고정.
<SYNC Start=1354340><P Class=KRCC>
그러니까 5명이 있었어. 근데 그 5명을 일렬로 줄 세워. 그러면 얘는 5!이거든. 그냥 5개를 일렬로 줄 세우는 거니까. 근데 그 5명을 키 순서로 세우잖아?
<SYNC Start=1366913><P Class=KRCC>
그럼 이 5명에게 자율성이 없어. 내 키는 정해져 있잖아. 그래서 그렇게 키 순서로 쓰게 되면 얘는 1가지로 가짓수가 유일해져 버리는 거야.
<SYNC Start=1376321><P Class=KRCC>
마찬가지로 사전식 배열도 그래. 내가 사전식으로 숫자를 배열하거나, 숫자는 아니겠구나, 한글을 배열하거나 아니면 알파벳을 배열해. 사전의 순서로.
<SYNC Start=1388425><P Class=KRCC>
그럼 사전 순서는 딱 정해져 있잖아. A 다음 B, B 다음 C. 그래서 각각의 자율성 없이 그대로 나오니까 1가지밖에 없는 거야. 그것처럼 얘도 그래.
<SYNC Start=1400401><P Class=KRCC>
2 다음에 3 나와야 돼. 이 2, 3이 딱 고정돼 있어. 그래서 원래대로라면 이 2하고 3이 자유롭게 자리를 바꿀 수 있지만 지금은 어떤 거야?
<SYNC Start=1409772><P Class=KRCC>
이 둘 사이에 순서가 없는 거야. 그럼 순서가 없다는 얘기는 저 2개가 마치 한 문자처럼 내 눈에 보인다는 얘기지. 순서를 바꾸는 게 의미가 없으니까.
<SYNC Start=1421909><P Class=KRCC>
그럼 내가 이 ㈎ 조건 때문에 저 문제를 어떻게 생각해도 괜찮냐면, 원래는 1, 1, 1에다가 2, 3, 4였거든. 근데 그 2하고 3이 자리를 못 바꿔.
<SYNC Start=1432377><P Class=KRCC>
그러니까 그냥 2, 2, 4하고 같은 느낌인 거야. 저 두 개가 자리를 바꿀 수 없으니까 마치 같은 것처럼 저렇게 생각되는 거야. 이게 ㈎ 조건.
<SYNC Start=1442164><P Class=KRCC>
그리고 이제 ㈏ 조건 봐. 지금 숫자 2가 적혀 있는 카드의 왼쪽에 숫자 1이 적혀 있는 카드가 1장 이상이라고 했어. 이런 거 잘 봐야 되지.
<SYNC Start=1451848><P Class=KRCC>
1장 이상이라는데 근데 지금 내가 가지고 있는 1이 몇 개야? 3개야. 그럼 1장일 수도 있고, 2장일 수도 있고, 3장일 수도 있고, 지금 이런 상황이잖아.
<SYNC Start=1462040><P Class=KRCC>
이렇게 케이스가 많을 때에는 차라리 뭐가 편해? 그렇지, 반대로 구하는 게 편해. 그럼 이 문제에서는 1장 이상이 놓이도록 나열한다고 했지만 나는 반대로 1장도 없도록 나열할 거야.
<SYNC Start=1475431><P Class=KRCC>
그럼 1장도 없도록 나열하는 케이스에는 뭐가 있을까? 나 숫자 2가 적혀 있는 카드의 왼쪽에 1이 안 왔으면 좋겠어. 그럼 그냥 2가 맨 처음에 와도 되지. 이런 식으로.
<SYNC Start=1487930><P Class=KRCC>
또 무슨 케이스 있어? 지금 2 말고는 누구밖에 없어? 1하고 4밖에 없어. 근데 1은 못 와. 3 못 와. 3이라는 애는 무조건 2보다 뒤에 있어야 돼.
<SYNC Start=1498380><P Class=KRCC>
그럼 2가 처음 시작이 아니라면 그다음에 가능한 건 42밖에는 없는 거야. 이렇게. 그래서 전체 개수, 이거 ㈎ 만족하는 전체 개수에서 ㈏ 만족하는 그 애들을 구하기 위해서는
<SYNC Start=1510969><P Class=KRCC>
안 되는 걸 빼 버리면 되지. 그럼 이제 하나씩 해 보자. ㈎ 조건에 만족하는 전체 개수야. ①번, 전체 개수. 내가 전체 개수를 구하려고 봤더니 숫자가 총 몇 개였냐면 6개였어.
<SYNC Start=1524879><P Class=KRCC>
근데 거기에서 1이 3개 있으니까 3개 없애 버렸고, 저게 내가 일부러 2, 2라고 써서 너희들한테 보여 준 건 ‘2, 3’하고 ‘3, 2’가 자리를 못 바꾼다는 뜻이야.
<SYNC Start=1534551><P Class=KRCC>
그러니까 그 둘이 자리 바꾸는 것도 없애 줘야지. 그래서 이거 계산해 보면 없어지면서 이거 4였어. 또 2하고 없어지니까 없어져서 60됐어. 이게 전체 케이스.
<SYNC Start=1548000><P Class=KRCC>
거기에서 이제 이 두 케이스를 빼 버리는 거야. 그럼 2로 시작하는 이 케이스 보자. 지금 숫자가 2로 시작해. 그럼 나머지 숫자들만 써 보면 1, 1, 1, 2 썼으니까 3, 4. 이게 다야.
<SYNC Start=1561811><P Class=KRCC>
그럼 이렇게 나열하는 케이스는 5!÷3!인 거지. 그러니까 없어지면서 5ㆍ4만 남아서 20까지. 한 번 더. 4하고 2 들어왔어. 그렇다는 얘기는 4하고 2 썼으니까 1, 1, 1, 3, 이것만 남았네.
<SYNC Start=1578249><P Class=KRCC>
그럼 얘를 나열하는 거니까 4!이었고 1이 똑같으니까 3! 그래서 전체 가짓수 4개. 그럼 이제 세 보자. 맨 처음에는 60개였어.
<SYNC Start=1588941><P Class=KRCC>
거기에서 만족하지 않는 이런 케이스들을 빼 버리면 내가 원하는 케이스가 나오겠지. 60-24 됐어. 그러니까 정답은 36이 나와 주면 되겠다.
<SYNC Start=1601687><P Class=KRCC>
그래서 8번 문제였는데 이 문제가 좀 어려웠을 거야. 조건이 2개나 나와. 그래서 그 조건을 좀 정확하게 해석해야지 풀 수 있는 문제가 8번이었고,
<SYNC Start=1611169><P Class=KRCC>
특히 ‘이상’이라는 표현 줄 때 있어. 저렇게 ‘뭐 이상’이라는 표현을 주게 되면 대부분 반대를 구하는 게 빨라. 왜냐면 어떤 값 이상인 케이스들이 훨씬 더 많이 나오니까.
<SYNC Start=1621683><P Class=KRCC>
이 8번이 오늘의 마지막 문제였어. 그래서 뭐 했는지 정리 한번 좀 해 보자. 오늘 뭐 했냐면 첫 번째로는 중복 순열. 뽑은 거 또 뽑아도 괜찮아. 그게 중복 순열이었지.
<SYNC Start=1639284><P Class=KRCC>
대신에 이 중복 순열은 꼭 공식 몰라도 돼. 곱의 법칙만으로도 충분히 가능. 그리고 두 번째로는 함수. 우리 오늘만 함수가 나온 게 아니라 앞으로도 함수랑 계속 같이 나와.
<SYNC Start=1651212><P Class=KRCC>
그래서 내가 일부러 함수의 정의를 다시 한 번 복습했던 거고. 그리고 특히 그냥 함수만 나오는 게 아니라 기본 함수, 일대일 대응, 이런 뜻들이 있었지. 상수 함수라든지 항등 함수.
<SYNC Start=1662737><P Class=KRCC>
그래서 그런 다양한 함수들은 정의를 꼭 다시 한 번 공부하고 와야 된다. 그래서 오늘도 너무 고생 많았고 다음 시간에 26강에서 보자. 안녕.
<SYNC Start=1673785><P Class=KRCC>
꿈을 전달하는 꿈틀이의 25일 던던. 빙글 같은 자리 원순열. 먹은 거 또 먹기 중복 순열. 살아 있는 나 대견하다!!
<SYNC Start=1690589><P Class=KRCC>
&nbsp;
</BODY>
</SAMI>