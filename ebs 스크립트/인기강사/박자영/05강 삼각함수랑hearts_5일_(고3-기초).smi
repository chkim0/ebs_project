<SAMI>
<HEAD>
<TITLE>(주)기록법인상생 자막 2015</TITLE>
<STYLE TYPE="text/css">
<!--
P { margin-left:8pt; margin-right:8pt; margin-bottom:2pt;
    margin-top:2pt; font-size:12pt; text-align:left;
    font-family:굴림, Arial; font-weight:normal; color:white;
    background-color:#405A8D; }
.KRCC { Name:한국어; lang:ko-KR; SAMIType:CC; }
#STDPrn { Name:Standard Print; }
#LargePrn { Name:Large Print; font-size:20pt; }
#SmallPrn { Name:Small Print; font-size:10pt; }
-->
</STYLE>
</HEAD>
<BODY>
<SYNC Start=10029><P Class=KRCC>
안녕하세요. 얘들아 오늘도 강의에 대한 사진을 좀 준비했는데 우리 지난번에 수업 끝나면서 아마 던던 리스트 나온 것 중에 내가 이렇게 적은 게 ‘꾹꾹 노트 만들기’ 뭐 그런 게 있었을 거야.
<SYNC Start=24491><P Class=KRCC>
그래서 내가 너희들 자료실에 이렇게 좀 필기하면서 스스로 만들 수 있도록 수학 개념 노트 만들 수 있는 양식 올려 뒀거든.
<SYNC Start=32162><P Class=KRCC>
그래서 이렇게 귀여운 그림도 이렇게 열심히 넣고 이런 것도 넣어 줘야 수학이 그나마 좀 귀여워 보일 거 아니야.
<SYNC Start=39422><P Class=KRCC>
그래서 중간중간 단원에 들어가는 개념들로 내가 노트 만들어서 자료실에다가 업로드해 놨어. 그래서 이걸 한 번 처음에 딱 제대로 만들어 놓으면 모의고사 볼 때라든지
<SYNC Start=50554><P Class=KRCC>
또 수능 날까지도 너희들이 가져가서 개념 정리할 수 있는 되게 중요한 노트가 되거든. 그래서 꼭 스스로 한 땀 한 땀 꾹꾹 눌러서 만들어 봤으면 좋겠고
<SYNC Start=60351><P Class=KRCC>
그리고 두 번째로는 오늘 촬영하러 이렇게 오는데 어느덧 이렇게 장미꽃이 폈더라. 그래서 보면서 ‘헐, 5월이야.’ 막 이런 생각이 들었거든. 시간 진짜 빠르지?
<SYNC Start=72080><P Class=KRCC>
그래서 나도 너희하고 작년 겨울부터 해서 수능개념을 찍고 수특을 찍고 또 이렇게 수완까지 오게 되면서 그렇게 시간이 흐르는 게 느껴지는 것 같아.
<SYNC Start=82796><P Class=KRCC>
그래서 너희들도 공부하느라 바쁘겠지만 동네 산책도 한 번 하고 운동도 좀 하고 이렇게 꽃 핀 것도 구경하고 예쁜 하늘도 보고 그럴 수 있었으면 좋겠다.
<SYNC Start=93359><P Class=KRCC>
그래서 준비한 사진이었고 그리고 우리 오늘은 지난 시간 마지막에 삼각 함수라는 거 했었지? 그래서 이제는 삼각비하고 다르게 좌표로 정의되는 게 삼각 함수였어.
<SYNC Start=105322><P Class=KRCC>
그래서 그 삼각 함수를 활용한 문제를 좀 볼 텐데 중심이 원점 O이고 반지름의 길이가 r인 그런 원이 있었는데 그 원이 한 점에 대해서 동경 OP가 나타내는 각의 크기가 θ였어.
<SYNC Start=118186><P Class=KRCC>
여기까지만 읽더라도 잘 감이 안 올 거야. 그래서 그럴 때에는 너희들이 직접 그림을 그려서 눈으로 보면 조금 덜 무섭거든. 그래서 사분면이 있었고 이렇게 원이 하나 있었어.
<SYNC Start=131392><P Class=KRCC>
근데 그 원에 대해서 동경이 하나 있었고 그 동경하고 원이 만나는 점이 지금 P라는 데였는데 여기의 좌표가 (a, 4)였던 거야. 근데 그랬을 때 sin θ가 3분의1이었대.
<SYNC Start=145258><P Class=KRCC>
그럼 지금 여기까지만 가지고 있는 정보로 그림을 그려 보자면 우리 항상 시초선은 x축의 양의 방향으로 그리는 거지? 그리고 동경하고 이루는 그 각이 θ였어.
<SYNC Start=156121><P Class=KRCC>
그럼 우리 여기에서 sin θ를 알려 줬잖아. 우리 사인의 정의는 뭐였었냐면 분모는 반지름. 그리고 ‘코엑스’라 그랬지? 그러니까 자동으로 사인은 y. y 좌표는 내가 4인 거 알고 있다.
<SYNC Start=169327><P Class=KRCC>
근데 지금 뭐가 없어? 응. 반지름이 없어. 그러니까 사인 값을 활용하기 위해서는 반지름 먼저 찾아야 되고 그 반지름은 여기 있지? 그럼 이만큼에 대한 길이가 반지름인 거야.
<SYNC Start=183468><P Class=KRCC>
근데 내가 가지고 있는 게 중심의 원점이었어. 그럼 반지름의 길이라는 건 OP의 길이하고 똑같잖아. 그러니까 반지름은 OP라는 그 두 점 사이의 거리 공식이고
<SYNC Start=195117><P Class=KRCC>
우리 거리 구하는 방법은 루트 길게 쓰고 x끼리 빼서 제곱, y끼리 빼서 제곱. 근데 (0, 0)이었으니까 a² 그리고 4²이니까 16. 이만큼이 지금 반지름의 길이인 거지.
<SYNC Start=208715><P Class=KRCC>
그래서 그대로 대입해 주면 a²+16이었어. 근데 그 사인 값을 우리 문제에서 3분의1이라고 알려 줬어. 그럼 이제 여기에서 a 값을 좀 찾을 수 있겠다.
<SYNC Start=221061><P Class=KRCC>
이만큼이 지금 3분의1이야. 그럼 분자만 비교해 볼까? 몇 배 됐어? 그렇지. 4배 됐어. 그럼 자연스럽게 분모도 4배 해 주면 되지? 그래서 분자 4배 했어. 분자도 4배 될 거야.
<SYNC Start=233687><P Class=KRCC>
그러니까 알 수 있는 식이 √(a²+16) 그만큼이 4배 했으니까 12가 될 거라는 거 알 수 있고 그만큼이 지금 반지름이었던 거지. 그럼 이만큼만 식 정리해 주면, 양변 제곱했어.
<SYNC Start=249248><P Class=KRCC>
따라서 a²+16. 제곱하면서 루트 벗겨졌고 오른쪽은 144였어. 그러니까 a²은 뭐가 나오냐면 128이 나와 주면 되지. 여기까지는 a² 찾은 거고 이제 우리 최종 목표 한번 보자.
<SYNC Start=265078><P Class=KRCC>
우리 최종 목표는 r에다가 cos² θ이었어. 저거 한번 찾아볼까? 지금 문제에서 물어보는 게 rㆍ cos² θ였다. 좀 더 예쁘게 쓰면 r 곱하기, 우리 코사인의 정의가 뭐였어?
<SYNC Start=280030><P Class=KRCC>
그렇지. ‘코엑스’라 그랬지? 그래서 r분의x인데 그걸 제곱한 거였어. 그럼 r하고 r²이었으니까 하나는 없어지면서 r 됐고 그리고 분자는 x²이겠지. 여기까지 괜찮아?
<SYNC Start=293355><P Class=KRCC>
근데 우리 r이라는 건 반지름이고 아까 전에 찾았다? 우리 r이라는 반지름 값이 12였어. 그리고 x 좌표의 제곱인데 우리 문제에서의 x 좌표는 a이지.
<SYNC Start=304130><P Class=KRCC>
그러니까 a². 그래서 여기에서 내가 구하는 건 12분의a²만 찾아 주면 되네. 따라서 12분의a²인데 그 a² 방금 전에 128이라는 거 구했지? 그래서 약분시켜 보면 4×3=12이고 4×2=8.
<SYNC Start=321110><P Class=KRCC>
그래서 정답은 3분의32가 나와 주면 되겠다. 그래서 이런 4번 같은 문제를 풀기 위해서는 일단 기본적으로 뭐 알아야 돼? 그렇지. 삼각 함수의 정의 알아야지.
<SYNC Start=332766><P Class=KRCC>
그래서 사인에 대한 정의 다 썼고 코사인에 대한 정의 썼어. 그래서 사인하고 코사인이라는 기본 애들에 대한 정의 기억하고 있어야 되고
<SYNC Start=341744><P Class=KRCC>
반지름을 구하는 과정에서 두 점 사이에 거리 공식 활용했어. 그래서 그렇게 정의를 활용해 준 문제가 4번 문제였고 이번에는 6번 한번 보자.
<SYNC Start=353686><P Class=KRCC>
그림과 같이 3개의 점이 있었고 삼각형 ABC에 대해서 저 각을 θ라고 불렀어. 그때 4(sin²θ-cosθ) 저거 계산을 좀 해 달래. 근데 이거 보자마자 조금 이상하다는 생각이 들어야 돼.
<SYNC Start=368212><P Class=KRCC>
우리가 그동안 풀었던 문제들은 예쁘게 원 자체가 중심이 원점에 와 있었다? 그리고 그 원점에서 동경이 움직이면서 각을 만들 때에도 원점에서 시작을 했었어.
<SYNC Start=380431><P Class=KRCC>
근데 지금 이 그림 같은 경우는 엇갈려 있지? 그래서 나는 문제 풀기가 뭐가 편해? 그 꼭짓점이? 그렇지. 원점에 와 있으면 편해. 그래서 이 삼각형을 원점으로 움직이고 한번 시작을 해 보자.
<SYNC Start=392758><P Class=KRCC>
그럼 여기 있는 점이 여기 와서 찍힐 거야. 근데 원점으로 옮겼으니까 -1에서 0까지 왔어. 즉 얼마큼 옮긴 거야? +1만큼 옮긴 거야.
<SYNC Start=403392><P Class=KRCC>
그럼 -2에 있던 이 점이 -1에 와서 찍힐 거고, 똑같이 한 번 더, 1이었던 그 점이 2에 가서 찍히겠지. 그래서 삼각형을 새로 만들어 보면 그 세 점을 이어서 만든 이런 삼각형이 생겼어.
<SYNC Start=420685><P Class=KRCC>
근데 사실은 이 삼각형을 그냥 오른쪽으로 한 칸 민 거야. 그러니까 우리 문제에서 맨 처음에 ABC라는 그 각도가 θ였어. 각의 사이즈가. 그럼 A, B, C, 여기가 θ였거든?
<SYNC Start=433613><P Class=KRCC>
근데 그 각의 사이즈가 오른쪽으로만 하나 민 거니까 그대로 각의 사이즈는 θ겠지. 그리고 중심이 뭘로 바뀌었어? 원점으로 바뀌었어.
<SYNC Start=443626><P Class=KRCC>
그러니까 여기서는 사인, 코사인, 탄젠트를 읽어 낼 수 있겠다. 그럼 여기서의 이 좌표를 찾아야 되는데 맨 처음에 a의 좌표가 (-2, √3)이었다. 근데 그걸 가지고 오른쪽으로 한 칸 옮겼어.
<SYNC Start=458109><P Class=KRCC>
그러니까 뭐가 되냐면 (-1, √3)이 되겠지. 그럼 내가 그 점에 좌표가 있다면 사인하고 코사인 바로 읽어 낼 수 있겠네. 그럼 정의 한번 써 볼까? 우리 사인은 정의가 뭐야? 응. ‘코엑스’였어.
<SYNC Start=472682><P Class=KRCC>
그러니까 사인은 r분의y. 근데 y 좌표는 있는데 또 뭐가 없냐면 r이 또 없다. 반지름. 근데 그 반지름이라는 거 이 길이 자체가 반지름이 되는 거지?
<SYNC Start=484548><P Class=KRCC>
그러면 원점하고 (-1, √3)하고의 거리 구해 주면 그 거리가 반지름. 그래서 루트 길게 써 주고 제곱하니까 1, 제곱하니까 3, √4니까 2. 반지름이 지금 2인 거야.
<SYNC Start=498684><P Class=KRCC>
그래서 사인 값은 2분의, y 좌표 갖고 와야 되니까 √3. 이게 sin θ. 같은 방법으로 cos θ. 우리 코사인은 ‘코엑스’라 그랬지? 그래서 r분의x였어.
<SYNC Start=511720><P Class=KRCC>
그래서 분모는 2였고 x 좌표는 -1. 사인하고 코사인 값 찾았네. 그럼 이제 대입 한번 해 보자. 그래서 내가 원하는 건 뭐였냐면 앞에 4 곱해서 있고 sin² θ.
<SYNC Start=524755><P Class=KRCC>
그러니까 사인을 제곱했어. 4분의3. 거기다가 -cos θ인데 마이너스니까 플러스로 바뀌면서 2분의1 됐어. 그래서 앞에 거 약분 하니까 3 나왔고, 뒤에 거 2 나왔어.
<SYNC Start=538178><P Class=KRCC>
결국 2개 더해 주면 5가 나와 주면 되겠다. 6번 문제였는데 이 문제는 사인하고 코사인의 정의만 알아서는 안 되지? 이 앞에 문제는 괜찮았어. 근데 이 문제 같은 경우에는 나 뭐 하고 시작했어?
<SYNC Start=552447><P Class=KRCC>
그렇지. 우리가 맨 처음에 생각하면서 시작했을 때 중심이 원점인 원에서 시작을 했잖아. 그래서 한 칸 오른쪽으로 옮겨 주고 나서 동경에서의 좌표를 찾은 다음에 시작해 준 문제가
<SYNC Start=563209><P Class=KRCC>
이 6번 문제였어. 그리고 다음 내용은 이제 우리 초스피드 각 정리 한번 해 보자. 이 각 정리라는 부분이 원래대로 얘기를 하자면 막 주기 공식 있고 음각 공식이 있고
<SYNC Start=577910><P Class=KRCC>
되게 여러 개의 공식들이 있었을 거야. 근데 그 부분을 가지고 조금 더 너희들이 문제 풀 때 빨리 풀 수 있도록 내가 정리한 게 초스피드 각 정리거든? 그래서 얘는 꼭 따로 적어 놔야 돼.
<SYNC Start=589524><P Class=KRCC>
첫 번째로 우리 각을 정리할 때 기본이 되는 게 모양이야. 모양. 근데 이 모양이 애들끼리 팀을 이뤄서 각도들이 움직일 거거든? 그래서 180˚하고 360˚가 한 세트야. 이렇게 둘이 한 팀.
<SYNC Start=604643><P Class=KRCC>
그리고 90˚하고 270˚가 한 팀이야. 그럼 너희가 느낌에 180˚ 하고 360˚는 이렇게 평평하고 순둥순둥한 애들 느낌이 나잖아. 이렇게 한 바퀴 싹 돌고.
<SYNC Start=617406><P Class=KRCC>
근데 90˚ 하고 270˚는 뾰쪽뾰쪽 서 있는 느낌이지? 그래서 얘는 순둥순둥해서 모양이 그대로 유지가 돼. 자기가 가지고 있던 모양 그대로.
<SYNC Start=628540><P Class=KRCC>
근데 이 까칠까칠하게 서 있었던 90˚, 270˚ 같은 애들은 모양이 딴 걸로 바뀐다? 근데 어떻게 다른 걸로 바뀌냐면 사인이 코사인으로 바뀔 거야. 그리고 코사인은 사인으로 바뀔 거야.
<SYNC Start=643255><P Class=KRCC>
근데 우리 하나 더 있잖아. 탄젠트. 탄젠트는 바뀔 게 없지. 그래서 자기 혼자 뒤집어진다? 그래서 탄젠트는 (탄젠트)분의1로 바뀔 거야.
<SYNC Start=652326><P Class=KRCC>
그래서 각을 정리하는 첫 번째 방법은 모양을 결정해 줄 거고 그리고 두 번째 그다음에는 부호를 결정할 거야. 근데 우리 삼각 함수에서의 부호를 결정해 주는 건 뭐였을까?
<SYNC Start=664641><P Class=KRCC>
잘 생각해 봐. 나 이거 앞에서 했는데. 우리 삼각 함수에서의 모양을 결정해 주고 부호를 결정해 주는 건? 그렇지. 사분면에서의 위치였지. 그래서 ‘얼싸안고 플러스’였지?
<SYNC Start=674952><P Class=KRCC>
그래서 1사분면부터 ‘얼싸안고 플러스’였어. 근데 그렇게 부호를 결정할 때 우리 두 가지 규칙이 있는데 첫 번째는 우리 아까 전에 까칠한 애들은 모양이 바뀐다 그랬잖아.
<SYNC Start=689051><P Class=KRCC>
그럼 사인으로 부호를 결정할지 코사인으로 부호를 결정할지 헷갈릴 거야. 그래서 이건 약속이야. 원래 걸로 계산해야 돼. 부호는 반드시.
<SYNC Start=698161><P Class=KRCC>
그래서 문제에서 주어져 있던 원래 걸로 부호를 계산해야 되고 두 번째는 뒤에 나오는 각도가 누군지 모르더라도 반드시 날씬하다고, 즉 예각이라고 생각하고 문제 풀 거야.
<SYNC Start=709710><P Class=KRCC>
아주 아주 날씬해서 조금 움직이는 거라고. 그래서 이런 게 언제 활용이 되냐면 만약에 문제에서 sin 120˚가 나왔어. 우리 이런 거 알아, 몰라? 모르지.
<SYNC Start=721264><P Class=KRCC>
우리 120˚라는 각도 특수각 아니라서 외운 적 없잖아. 근데 이제는 식 변형해서 구할 수 있어. 내가 얘를 가지고 다시 고치자면 90˚+30˚이지? 여기까지 괜찮아?
<SYNC Start=734758><P Class=KRCC>
그럼 이제 90˚. 우리 90˚는 우뚝 서 있어. 까칠한 애야. 사인이 뭘로 바뀌어야 돼? 그렇지. 코사인으로. 그래서 cos 30˚로 이렇게 바뀌어. 그 앞에 있던 각도는 없어지면서.
<SYNC Start=745856><P Class=KRCC>
근데 여기서 끝난 게 아니라 부호 결정. 90˚만큼 갔다가 조금 더 갔어? 2사분면. 우리 2사분면에서 사인은? ‘얼싸안고’ 였으니까 플러스. 그래서 플러스인 거야.
<SYNC Start=757390><P Class=KRCC>
그러면 cos 30˚이네. 그러니까 얘는 2분의√3. 이렇게 계산해 주는 게 삼각 함수에서의 성질을 활용한 각 정리 방법이야.
<SYNC Start=766422><P Class=KRCC>
그래서 이렇게 모르는 각도를 내가 아는 각도를 활용해서 고쳐 줄 수 있어. 이거에 관련된 문제가 여기 7번 문제이지. 같이 한번 보자.
<SYNC Start=777724><P Class=KRCC>
지금 중간에 들어간 각도가 cos 6분의5π 그리고 sin 4분의5π야. 우리 이런 거 알아, 몰라? 그렇지. 몰라. 우리가 아는 건 3분의π, 6분의π, 4분의π 그런 애들이잖아.
<SYNC Start=790273><P Class=KRCC>
그래서 얘를 보자마자 ‘이거 각 정리해야겠구나.’라는 생각이 들어야 돼. 그래서 코사인 얘 갖고 올 거고 사인 이거 갖고 올 거야.
<SYNC Start=799138><P Class=KRCC>
그래서 처음에 ‘얘를 가지고 어떻게 아는 걸로 고칠 수 있을까?’라는 고민부터 해야 돼. 내가 6분의π는 알고 있잖아. 그러니까 다시 쓰면 cos (π-6분의π)라고 쓸 수 있지? 잘 봐야 돼.
<SYNC Start=814890><P Class=KRCC>
그럼 이제 π 걸렸어. 평평해. 모양 그대로 유지. 그러니까 얘는 cos 6분의π. 근데 여기서 끝난 게 아니라 부호 결정. π만큼 갔다가 조금 돌아왔어? 2사분면.
<SYNC Start=827028><P Class=KRCC>
우리 2사분면에서 코사인은? ‘얼싸안고’였으니까 마이너스. 그럼 cos 30˚이네. -2분의√3인 거지. 첫 번째. 그리고 이제 두 번째 식 한번 보자. 이번에는 sin 4분의5π였어.
<SYNC Start=842328><P Class=KRCC>
그래서 얘도 똑같이 내가 알고 있는 각도로 식 정리해 주면 사인에다가 π+(4분의π)인 거지. 이렇게. 그럼 나 π 걸렸어. 평평하니까 모양 그대로 유지.
<SYNC Start=854204><P Class=KRCC>
그래서 sin 4분의π가 될 텐데 π만큼 갔다가 조금 더 갔어. 3사분면. ‘얼싸안’이니까 사인은 마이너스인 거지. 근데 우리 4분의π는 45˚지? 그러니까 -2분의√2 됐어.
<SYNC Start=869433><P Class=KRCC>
이렇게 2개의 값 찾았고 그다음에 할 일은 저 마지막 식에다가 대입. 그래서 앞부분이 3. 우리 부호 잘 봐야 돼. 원래 마이너스였는데 얘 마이너스였어.
<SYNC Start=880627><P Class=KRCC>
그러니까 플러스로 바뀌면서 2√2 앞에 곱해져 있었고 이만큼은 2분의√3인 거고. 괜찮아. 이제 다음 줄. 3이었고 +2√3이었는데 얘가 지금 마이너스야. 그러니까 가운데 마이너스로 부호 바뀌지?
<SYNC Start=898053><P Class=KRCC>
그리고 2√3이 곱해져 있었고 사인 값은 2분의√2였어. 이렇게. 그럼 이제 식 없애 볼게. 2하고 2 약분됐고 2하고 2 약분됐어. 그래서 남은 거 뭐냐면 3+√6 남았고 3-√6 남았어.
<SYNC Start=916139><P Class=KRCC>
이제 여기에서 생각나는 공식이 있어야지. 둘이 똑같이 생겼는데 가운데 부호만 달라. 그럴 때 쓰는 방법이? 합차. 그래서 앞에 거 제곱, 마이너스 뒤에 거 제곱.
<SYNC Start=927098><P Class=KRCC>
그러니까 정답은 3이 나와 주면 되겠다. 그래서 이 문제 풀기 위해서는 각 정리할 수 있어야 되지? 그래서 이제는 cos 6분의5π, cos 4분의5π 저런 각도 내가 알고 있는 특수각을 활용해서
<SYNC Start=941292><P Class=KRCC>
저렇게 더하기, 빼기로 바꿔 주는 거야. 그래서 얘가 성질을 활용하는 7번 문제였고 이번에는 그래프 한번 보자. 삼각 함수에서 제일 중요한 부분이지?
<SYNC Start=954050><P Class=KRCC>
우리 삼각 함수에서는 몇 가지의 그래프가 나왔어? 3가지의 그래프가 나왔어. 첫 번째로는 일단 기본형부터. 그래서 어떻게 생긴 그래프들이 있었냐면 맨 처음에는 y=sin x가 있었지.
<SYNC Start=969705><P Class=KRCC>
근데 이 y=sin x하고 y=cos x하고는 공통점이 되게 많았었다? 그래서 이 2개는 우리 같이 한번 그려서 비교를 해 보자. 그래서 사인 그래프였어.
<SYNC Start=981765><P Class=KRCC>
우리 사인하고 코사인, 이 삼각 함수라는 애는 어디서부터 출발을 했지? 그렇지. 원을 빙글빙글 돌면서 출발을 했었지.
<SYNC Start=990924><P Class=KRCC>
그래서 사인 같은 경우도 원을 빙글빙글 돌면서 나왔기 때문에 점점점 커지거나 작아지는 게 아니라 일정한 구간 안에 꽉 막혀 있었어.
<SYNC Start=999903><P Class=KRCC>
그래서 사인이 아무리 커 봐야 1이었고 아무리 작아져 봐야 -1이었지. 코사인도 마찬가지로 아무리 커 봐야 1이었고 아무리 작아져 봐야 -1이었어.
<SYNC Start=1011758><P Class=KRCC>
그리고 사인 그래프는 이렇게 꾸물하게 생긴 게 사인 그래프였지? 그래서 (0, 0)이라는 원점에서 시작을 해서 한 번 꾸물 이렇게 생긴 게 사인 그래프.
<SYNC Start=1024193><P Class=KRCC>
그래서 내 위치가 다시 나오기까지 걸리는 시간을 우리가 주기라고 불렀고 사인 함수의 주기는 2π였어.
<SYNC Start=1031391><P Class=KRCC>
근데 지금은 내가 한 토막만 그리긴 했지만 우리 동경은 빙글빙글 돌 수 있어서 동경이었잖아. 그러니까 그래프가 양쪽으로 끝도 없이 계속 이렇게 이어진다? 사인 그래프.
<SYNC Start=1042943><P Class=KRCC>
똑같이 한 번 더, 코사인 그래프야. 우리 코사인 그래프도 ±1로 이렇게 꽉 막혀 있었어. 근데 우리 코사인 그래프는 (0, 1)에서 시작해서 메롱하게 생겼거든?
<SYNC Start=1053846><P Class=KRCC>
그래서 얘가 이렇게 메롱하게 생긴 게 코사인 그래프. 그래서 내 위치까지 다시 나오는데 걸리는 시간이 주기이고 주기는 2π.
<SYNC Start=1062983><P Class=KRCC>
근데 얘도 마찬가지로 빙글빙글 돌면서 나온 거기 때문에 그래프가 저게 끝이 아니라 양쪽으로 계속 반복되는 형태를 가지고 있지? 그래서 2개의 함수가 다 주기 함수야, 같은 패턴이 반복되는.
<SYNC Start=1075997><P Class=KRCC>
그래서 공통점과 차이점을 좀 정리를 해 보자면 첫 번째로 둘 다 위아래가 꽉 막혀 있어. 즉 최댓값은 1이고 최솟값은 -1이야.
<SYNC Start=1087505><P Class=KRCC>
그리고 또 하나, 내 위치 다시 나오기까지 걸리는 시간이 주기인데 그 주기가 둘 다 한 바퀴인 2π였어. 그리고 두 번째로는 대칭성을 좀 구분할 수 있어야 돼. 이거 너무너무 중요한 표현이다.
<SYNC Start=1101043><P Class=KRCC>
대칭성. 우리 그래프 한 번만 다시 보자. 우리 사인 같은 경우는 대칭성이 같은 값일 때 양수일 때랑 같은 값일 때 음수일 때랑 비교 한번 해 볼게.
<SYNC Start=1112622><P Class=KRCC>
그때는 하나는 위에 있고 하나는 아래에 있어. 즉 위아래 달라. 근데 그냥 다른 게 아니라 부호만 달라. 근데 코사인 봐 봐.
<SYNC Start=1121858><P Class=KRCC>
코사인을 가지고 같은 값인데 부호만 다른 위치를 생각해 본다면 θ일 때랑 -θ일 때랑 그 두 값이 어떻게 나와? 나란하게 동일하게 나와.
<SYNC Start=1133243><P Class=KRCC>
그래서 우리 사인 그래프 같은 경우는 부호가 다른 원점 대칭이고 우리 코사인 같은 경우는 y축을 기준으로 접히면 완전 겹쳐지는 y축 대칭이야. 이렇게.
<SYNC Start=1147372><P Class=KRCC>
그래서 저 대칭성을 우리가 기호로 어떻게 쓰냐면 사인은 원점 대칭이야. 그래서 안에 있는 마이너스가 밖으로 기어 나와. 이렇게.
<SYNC Start=1159209><P Class=KRCC>
그래서 원점 대칭이라는 표현을 쓸 때 우리가 이런 표현을 쓰게 될 거고 코사인 함수는 y축 대칭이야. 즉 마이너스가 어떻게 되냐면 이렇게 사라져.
<SYNC Start=1169863><P Class=KRCC>
이런 특징을 가지고 있는 게 코사인 함수. 그래서 최댓값, 최솟값, 주기 그 3가지 특징의 그림을 그릴 때 가장 중요한 요건이고 그리고 대칭성까지도 파악할 수 있어야 되고
<SYNC Start=1181250><P Class=KRCC>
그리고 또 너무너무 중요한 게 뒤에서 방정식 부등식 문제 풀 때 중요하게 쓰이는 내용이 구석구석 대칭이라는 거야.
<SYNC Start=1190607><P Class=KRCC>
사인하고 코사인하고 탄젠트 그래프 전부 다 빙글빙글 돌면서 만들어진 그래프야. 그래서 그 각각의 그래프의 모양이 구석구석 대칭이야. 즉 똑같이 생겼어, 구간 구간에 대한 모양이.
<SYNC Start=1203176><P Class=KRCC>
그래서 이게 사인, 코사인에 대한 얘기였고 이번에는 탄젠트 한번 보자. y는 tan x. 그래서 우리 탄젠트 같은 경우에는 느낌이 좀 다르지.
<SYNC Start=1213935><P Class=KRCC>
그래서 탄젠트 그래프를 좀 그려 보면 우리 탄젠트 그래프는 어떻게 그렸어? 기본형에 대해서? 끝도 없이 커지고 끝도 없이 작아질 수 있지.
<SYNC Start=1223097><P Class=KRCC>
그래서 얘는 꼭 용이 승천하는 것처럼 슝 이렇게 생겼지? 그래서 그래프 자체가 이렇게 생긴 게 탄젠트. 다시 한 번, 점점점 가까워지지만 닿지 않는 선인 점근선이 존재하고
<SYNC Start=1234804><P Class=KRCC>
다시 한 번 같은 그래프 슝. 이렇게 생긴 게 탄젠트였어. 그리고 탄젠트만의 중요한 특징이 뭐였었냐면 내 위치가 다시 나오기까지 걸리는 이 시간이 사인하고 코사인하고 달랐어.
<SYNC Start=1247207><P Class=KRCC>
사인하고 코사인은 주기가 2π였지만 탄젠트 같은 경우는 주기가? 그렇지. π였던 거지. 그리고 또 뭐가 존재했었냐면 탄젠트는 첫 번째, 주기가 뭐였던 거야? π였던 거야.
<SYNC Start=1261110><P Class=KRCC>
그리고 두 번째, 탄젠트만의 특징은? 점근선인 거지. 그래서 이 점근선에 대한 좌표를 좀 보면 여기는 원점, 여기는 파이. 그러면 그거의 정 가운데는? 2분의π가 되겠지.
<SYNC Start=1273877><P Class=KRCC>
그래서 기본 점근선은 x=2분의π였는데 그 2분의π가 주기마다 반복되잖아. 근데 주기가 지금 π였어. 그러니까 nπ까지 고려해 줘야 되지.
<SYNC Start=1287185><P Class=KRCC>
그래서 탄젠트는 사인, 코사인하고 다른 저런 특징을 좀 가지고 있어. 그래서 기본적인 그래프에 대한 얘기였고 문제는 우리 지수 함수, 로그 함수에서도 그랬지만 기본형이 나왔으면 좋겠는데
<SYNC Start=1300158><P Class=KRCC>
기본형 잘 안 나오잖아. 그래서 항상 얘랑 같이 기억을 좀 해 놔야 돼. 그래서 얘는 사인 가지고 볼게. y=a sin (bx+c)+d 이런 상태야. 지금 가장 끝판왕인 상태거든? 가장 진화된 상태.
<SYNC Start=1317624><P Class=KRCC>
그래서 얘를 가지고 먼저 모양을 좀 다시 한번 정리해 보면 a sin, 내가 b로 이렇게 묶어 냈어. 그러면 (x+b분의c) 그리고 +d라고 쓸 수 있지?
<SYNC Start=1330198><P Class=KRCC>
그래서 이 그래프는 지금 어떻게 옮긴 거냐면 x 대신에 (x+b분의c)가 들어가 있고 y 대신에 y-d가 들어가 있는 거야. +d로 바뀌었으니까.
<SYNC Start=1340710><P Class=KRCC>
그래서 기본형인 y=a sin bx라는 그런 함수를 가지고 x축으로 -b분의c만큼 y축으로 +d만큼 평행 이동을 시킨 애야.
<SYNC Start=1354650><P Class=KRCC>
근데 우리가 항상 삼각 함수에서 제일 중요한 거 최대, 최소, 주기라 그랬지? 그거 여기서 읽어 낼 거야. 그럼 사인 함수가 하나 있었어. 이렇게 한 토막.
<SYNC Start=1365536><P Class=KRCC>
근데 내가 얘를 가지고 x축으로 평행 이동을 시켜. 제일 중요한 거 최대, 최소, 주기라 그랬지? 좌우로 움직인다 그래서 최대, 최소 안 바뀌어. 주기도 안 바뀌어.
<SYNC Start=1376131><P Class=KRCC>
그러니까 x축으로의 평행 이동은 그냥 위치만 바꿔 줄 뿐이야. 근데 y축으로 내가 위아래로 들어올리잖아? 그럼 내가 들어올린 만큼 최대, 최소 같이 올라가고
<SYNC Start=1386521><P Class=KRCC>
잡아 내린 만큼 최대, 최소가 같이 내려가지? 그래서 이 y축으로의 평행 이동은 어디에 영향을 주냐면 최댓값, 최솟값에 영향을 준다.
<SYNC Start=1395750><P Class=KRCC>
그래서 정리해 보면 첫 번째, 최댓값은, 그래프 자체에 a 값이 곱해져 있어. 즉 위아래로 빵 늘어나 있어. 그러니까 최댓값은 │a│지. 근데 거기서 끝나는 게 아니라 d만큼 들어올렸어.
<SYNC Start=1411365><P Class=KRCC>
그러니까 +d. 이제 최솟값. 가장 작은 게 최솟값. -│a│인데 거기다가 d만큼 들어올렸으니까 그대로 d가 되겠지.
<SYNC Start=1422842><P Class=KRCC>
그리고 두 번째, 주기 찾아야 되지? 우리 주기라는 건 ‘x가 얼마큼 뛰어가야 2π가 될 수 있니?’ 물어보는 거고 결국 ‘bx는 언제 이 파이가 될 수 있니?’ 그 값으로 찾아주면 되고.
<SYNC Start=1436140><P Class=KRCC>
그러니까 주기라는 값이 b분의2π. 근데 주기에 대한 정의는 최소인 양수였잖아. 그래서 절댓값 해 주는 거야. 그래서 기본형 잘 안 나와.
<SYNC Start=1446721><P Class=KRCC>
이렇게 진화된 상태에서 최대, 최소, 주기 이 3가지 특징 읽어 낼 수 있어야 돼. 그래서 얘를 가지고 우리가 삼각 함수 그래프에 대한 내용이었고 우리 8번만 한번 좀 풀어 보자.
<SYNC Start=1459466><P Class=KRCC>
지금 0부터 2분의5π까지 범위가 주어져 있고 주인공이 cos x였어. 우리 cos x 다행히도 기본형이야. 기본형. 그럼 이제 그림 한번 그려 보자.
<SYNC Start=1471375><P Class=KRCC>
cos x에 대한 그림 그려 보면 우리 cos x는꽉 막혀 있지? 어디 어디로 막혀 있어? 최대는 1, 최소는 -1. 그래서 아무리 커 봐야 1, 아무리 작아져 봐야 -1.
<SYNC Start=1486574><P Class=KRCC>
그리고 코사인 그래프는 (0, 1)에서 시작해서 메롱하게 생긴 게 코사인 그래프. 근데 내가 일부러 이렇게 짧게 그렸냐면 지금 우리가 가지고 있는 범위가 0부터 2분의5π까지다?
<SYNC Start=1499323><P Class=KRCC>
대부분의 문제들은 2π까지를 많이 줘. 근데 그거보다 더 클 때는 부호 조심해야 돼. 지금 내 위치에 다시 나오기까지 여기까지가 2π야.
<SYNC Start=1509490><P Class=KRCC>
그럼 그거의 절반인 여기가 π가 될 거고 그거의 절반인 여기가 2분의π가 되겠지 근데 2분의5π라는 얘기는 이만큼 한 토막이 더 있단 얘기야, 그림이.
<SYNC Start=1520506><P Class=KRCC>
그러니까 오른쪽 그림이 이만큼 더 그려야 되지. 이게 지금 내가 가지고 있는 코사인. 근데 그 코사인 함수하고 y=k라는 직선식이야. 특히 무슨 함수? 그렇지. 상수 함수.
<SYNC Start=1532902><P Class=KRCC>
그래서 y=k라는 상수 함수가 이렇게 있었어. 걔네가 지금 만났지? 근데 몇 번 만났냐면 하나, 둘, 셋. 세 번 만났어. 근데 그 만나서 찍은 x 좌표를 a, b, c라고 부르겠대.
<SYNC Start=1546968><P Class=KRCC>
여기가 a, 여기가 b, 여기가 c인 거야. 근데 그 b의 좌표가 몇이냐면 6분의11π야. 이제 시작이야. 가운데가 지금 2π였어. 근데 여기 좌표가 6분의11π래.
<SYNC Start=1560214><P Class=KRCC>
그럼 그 얘기는 결국 이 사이 간격이 얼마라는 얘기야? 가운데는 2π, 왼쪽은 6분의11π. 그러니까 6분의12에서 6분의11π를 뺀 거라서 결국 6분의π인 거지, 이 간격이.
<SYNC Start=1574814><P Class=KRCC>
그럼 그 간격이 6분의π라는 얘기는 우리 삼각 함수는 구석구석 대칭이라 그랬지? 그럼 내가 c라는 점은? 2π부터 똑같이 움직여 주면 되지. 이만큼.
<SYNC Start=1585263><P Class=KRCC>
그래서 c를 뭐라고 쓸 수 있냐면 가운데였던 2π에서 간격만큼 움직이니까 6분의π만큼 움직여 주면 되겠다. 이 사이에 간격만큼, 6분의π만큼, 이만큼. 그래서 뒤에다가 6분의π 더했어.
<SYNC Start=1600723><P Class=KRCC>
그러니까 6분의13π 되는 거지, c가. 그럼 이제 a만 찾으면 되지? 우리 구석구석 대칭이라 그랬지? 이만큼 구해야 돼. 근데 그 위치는 결국 이 길이네. 그 사이즈 자체가 좌표겠다.
<SYNC Start=1613652><P Class=KRCC>
근데 그 사이즈 방금 전에 뭐 나왔냐면 6분의π 나왔지. 그래서 여기가 6분의π 됐어. 그럼 이제 a, c 찾았고 우리 문제에서는 sin a+c이래. a하고 c 더하면 얼마? 응. 6분의14π.
<SYNC Start=1630310><P Class=KRCC>
6분의14π인데 약분해 주면? 그렇지. 2로 나눠서 3분의7π 나오는 거지. 그래서 얘는 결국 sin 3분의7π야. 근데 우리 2π라는 건 한 바퀴니까 그때그때 다 지워 내 주면 되지?
<SYNC Start=1643921><P Class=KRCC>
그래서 얘는 다시 쓰면 sin 3분의π하고 같겠다. 2π+(3분의π)이니까. 그럼 sin 60˚이네. 그러니까 얘는 2분의√3이 나와 주면 되지.
<SYNC Start=1655702><P Class=KRCC>
그래서 8번 문제였고 이 문제 풀기 위해서는 코사인 그래프 그릴 수 있어야 되고 상수 함수랑 교점 찾을 수 있어야 되고 구석구석 대칭이라는 특징 알아야지 풀 수 있는 게 이 8번 문제였어.
<SYNC Start=1668098><P Class=KRCC>
그래서 이게 오늘의 마지막 문제야. 그래서 오늘 뭐 했나 정리 한번 좀 해 보자. 그래서 우리 오늘은 삼각 함수.
<SYNC Start=1677312><P Class=KRCC>
그래서 이제는 너희가 중학교 때 배웠던 삼각비랑 다르게 사인, 코사인, 탄제트를 좌표로서 정의를 했고 그게 삼각 함수였지?
<SYNC Start=1688352><P Class=KRCC>
그리고 두 번째로는 초스피드 각 정리. 그래서 기본 각이 나오면 좋은데 너희들이 구할 수 없는 가게 나왔을 때는 특수각을 활용해서 고쳐 낼 수 있어야 돼.
<SYNC Start=1698787><P Class=KRCC>
그래서 오늘 수업 내용은 여기까지였고 다음 시간에 6강에서 만나자. 안녕.
<SYNC Start=1704259><P Class=KRCC>
&nbsp;
</BODY>
</SAMI>