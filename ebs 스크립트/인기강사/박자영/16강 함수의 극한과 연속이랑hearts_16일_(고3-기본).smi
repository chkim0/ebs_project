<SAMI>
<HEAD>
<STYLE TYPE="text/css">
<!--
P { margin-left:8pt; margin-right:8pt; margin-bottom:2pt;
    margin-top:2pt; font-size:12pt; text-align:left;
    font-family:굴림, Arial; font-weight:normal; color:white;
    background-color:#405A8D; }
.KRCC { Name:한국어; lang:ko-KR; SAMIType:CC; }
#STDPrn { Name:Standard Print; }
#LargePrn { Name:Large Print; font-size:20pt; }
#SmallPrn { Name:Small Print; font-size:10pt; }
-->
</STYLE>
</HEAD>
<BODY>
<SYNC Start=9455><P Class=KRCC>
안녕하세요. 얘들아 나 오늘도 사진을 좀 준비했는데, 이건 어떤 사진이냐면 나는 평소에 이렇게 사진 찍는 것도 되게 쑥스러워 하고, 남 앞에서 말하는 것도 진짜 힘들어한다?
<SYNC Start=22477><P Class=KRCC>
그래서 최대한 안 할 수 있을 만큼 안 하고, 늘 맨 뒤에 앉고. 막 이렇게 회식 같은 거 하면 최대한 문가에 앉고 그래. 언제든지 나갈 수 있게.
<SYNC Start=31438><P Class=KRCC>
근데 이제 EBS선생님을 시작하고 나니까 뭔가 이런 걸 찍는 일이 정말 많다? 그래서 나는 강의만 촬영하면 되는 줄 알았는데 뭔가 이런 특별한 영상을 촬영할 때가 있어.
<SYNC Start=41611><P Class=KRCC>
그래서 이때도 나 진짜 힘들었어. 이때 사진 보면 막 천장 보고 있잖아. 이때 막 스스로 천장 보면서 약간 현타 와 가지고 ‘나는 할 수 있어.’ 이런 거 되뇌던 사진이었거든.
<SYNC Start=52963><P Class=KRCC>
그리고 또 어떤 사진도 있냐면, 이 사진도 내가 프로필 사진이 지금 나하고 조금 다르잖아. 그래서 어떻게 하면 너희들한테 나와 좀 더 비슷한, 그리고 좀 더 예쁜 사진을 보여줄 수 있을까 해서
<SYNC Start=65899><P Class=KRCC>
또 막 이렇게 감독님 한 분을 부탁드려 가지고 촬영을 했다? 그래서 왼쪽 사진 보면 정말 조각상이 따로 없지. 잔뜩 얼어있어.
<SYNC Start=74146><P Class=KRCC>
그리고 이거는 수학 선생님들 주로 이렇게, 알지? 막 손가락 펴고 팔짱 끼고 하잖아. 이제 그런 대표적인 포즈를 하려 노력했으나 손가락이 펴지지 않았어. 부끄러움에.
<SYNC Start=86233><P Class=KRCC>
그래서 나 이런 사진이 진짜 다음 사진 보면 저렇게 10000장 찍혔거든. 저 10000장 중에서 소중한 1장을 찾아서 그 소중한 1장이
<SYNC Start=95434><P Class=KRCC>
내가 우리 올해 같이 수능 준비하면서 수능개념, 수능특강 그리고 완성에까지 이렇게 같이 쓰이고 있어.
<SYNC Start=102840><P Class=KRCC>
근데 이렇게 사진을 찍기 힘들어하는 내가 사진을 스스로 찍으러 사진관에 갔다. 그래서 어떤 사진 찍었냐면, 다다다음 시간에 알려줄게.
<SYNC Start=111373><P Class=KRCC>
전에 애들이 그랬는데 이러면 선생님 궁금해서 공부 더 열심히 한다고 하더라고. 그래서 다, 다, 다음 시간에 다시 한번 알려줄게. 그래서 오늘은 나의 사진 찍기를 힘들어하는 그런 사진이었어.
<SYNC Start=125458><P Class=KRCC>
지난 시간부터 자꾸 내가 분필을 부숴. 아까 지우개도 떨어뜨렸는데. 그래서 이거 제목이 ‘x가 움직움직’이야.
<SYNC Start=134009><P Class=KRCC>
그래서 우리 지난 시간에 마지막에 끝나면서 ‘극한이란 신세계’에 대한 얘기를 했고, 이제 여기는 x의 움직임에 대해서 다시 한번 정리를 해 보자.
<SYNC Start=142271><P Class=KRCC>
우리가 옛날에는 그냥 특정한 값 하나의 값만 구했었잖아. 근데 이제는 그런 게 아니라 x가 움직일 수 있었지.
<SYNC Start=150195><P Class=KRCC>
근데 x가 어떻게 움직일 수 있었냐면 점점점 커질 수도 있었고. 그래서 저거를 우리가 무슨 표현을 썼어? 그렇지. 양의 무한대. ‘양의 무한대’라는 뜻으로 사용을 했고.
<SYNC Start=163032><P Class=KRCC>
그리고 x가 점점점 작아질 수도 있었지. 좀 더 정확히는 음의 방향으로 커질 수 있었지. 그래서 얘를 가지고는 ‘음의 무한대’라는 표현을 썼지.
<SYNC Start=173238><P Class=KRCC>
근데 점점 커지거나 점점 작아지는 것만 존재하는 게 아니라 어떤 하나의 특정한 값에 가까워지는 것도 있었어.
<SYNC Start=180322><P Class=KRCC>
근데 어떤 하나의 값에 가까워지는 케이스로는 a한테 가까워질 수 있는 방법이 왼쪽에서 올 때도 있고, 오른쪽에서 올 때도 있었잖아.
<SYNC Start=188651><P Class=KRCC>
그래서 왼쪽에서 올 때를 a보다 조금 작다는 뜻에서 마이너스라는 기호를 사용하고, 이름으로는 ‘좌극한’이었고.
<SYNC Start=196623><P Class=KRCC>
그리고 오른쪽에서 다가올 때를 a보다 조금 큰 쪽에서 오는 거니까 플러스라는 기호를 사용하고, 이름으로는 오른쪽에서 오니까 ‘우극한’이라는 표현을 썼어.
<SYNC Start=207047><P Class=KRCC>
이제는 x가 단순히 하나에 고정되어 있는 게 아니라 이렇게 움직이는 게 가능했다. 그리고 두 번째로는 내가 새로운 함수를 하나 갖고 와서 우리 식 한번 읽어내 보자.
<SYNC Start=217716><P Class=KRCC>
나 어떤 함수가 하나 있었냐면 2였어, 2. 2라는 값이 하나가 존재했었는데. 이 왼쪽에서 존재하는, 다가오는 애는 이렇게 생겼고. 그리고 2보다 큰 쪽에서는 이렇게 생겼어, 함수가.
<SYNC Start=232216><P Class=KRCC>
그리고 그 때 이 값이 1, 이 값이 3이었다고 한번 해 보자. 이렇게 생긴 함수의 이름을 y=f(x)라고 붙일 거야.
<SYNC Start=240371><P Class=KRCC>
그럼 이런 함수에 대해서 극한값을 좀 읽어볼 건데. 첫 번째로 lim x가 2로 다가가. 그때 2 뒤에다가 내가 플러스 썼어. 2 뒤에다가 플러스 썼단 얘기는 내가 우극한을 물어보는 거지.
<SYNC Start=253354><P Class=KRCC>
그러니까 x가 2로 점점 다가가는데 큰 쪽에서 다가온다. 그때 f(x)는 어디로 가까워져? 지금 그걸 물어보는 거야.
<SYNC Start=260602><P Class=KRCC>
그럼 2한테 가까워지는데 큰 쪽에서 다가와. 그러니까 2한테 가까워지는데 큰 쪽에서 다가와야 돼, 그래프도.
<SYNC Start=267558><P Class=KRCC>
근데 구멍이 뻥 뚫려있지만 그거 극한값의 존재성과 상관없었지. 무슨 뜻이었어? 그렇지. 어디로 가까워지니? 어디를 항해 움직이고 있니?
<SYNC Start=276496><P Class=KRCC>
그러니까 결국 값이 뭐가 되는 거냐면 이때는 3. 이해돼? 하나 더 해 보자. 그럼 이번에는 x가 2로 가는데 왼쪽에서 다가와. 즉 좌극한이야. 그때는 누굴까? 2였어.
<SYNC Start=289694><P Class=KRCC>
근데 이번에는 작은 쪽에서 다가와. 작은 쪽에서 다가오니까 함숫값도 그래프 타고 움직여야 되는데 그때 값이 누구였냐면 1이었던 거지. 그래서 2에서의 우극한값은 3. 2에서의 좌극한값은 1이었어.
<SYNC Start=303792><P Class=KRCC>
그럼 이번에는 내가 뭘 좀 읽어볼 거냐면, 그러면 x가 2로 다가갈 때 그때 f(x)는 누굴까? 지금 2로 다가가는데 오른쪽에서 올 때는 3이었고, 왼쪽에서 올 때는 1이었어.
<SYNC Start=315292><P Class=KRCC>
그럼 2에서의 극한값은 3인 거야? 1인 거야? 이렇게 왼쪽에서 오는 애랑 오른쪽에서 오는 애가 달라.
<SYNC Start=322763><P Class=KRCC>
그래서 우리 이럴 때에는 극한값, 그 지점에서 극한값을 뭐라고 얘기하냐면 ‘존재하지 않는다’라고 얘기하는 거야.
<SYNC Start=329409><P Class=KRCC>
그래서 왼쪽, 오른쪽에서 다가오는 값이 둘이 서로 다르기 때문에 그때는 극한값이 존재하지 않아. 그래서 극한값이라는 게 무조건 존재하는 게 아니라
<SYNC Start=338343><P Class=KRCC>
왼쪽에서 올 때, 오른쪽에서 올 때가 만나야지만, 같아야지만 극한값이 존재할 수 있는 거야. 그래서 우리 이제 그 얘기를 한번 해 보자.
<SYNC Start=346408><P Class=KRCC>
lim x가 a라는 값으로 다가가는데 그때 f(x) 얘가 존재한대. 즉, 극한값이 존재한대. 극한값이 존재하기 위해서는 내가 지금 a라고 했으니까
<SYNC Start=358636><P Class=KRCC>
그 a라는 점에 대해서 왼쪽에서 다가올 때가 있을 거고, 오른쪽에서 다가올 때가 있을 텐데 그 둘이 반드시 만나야 돼. 단, 함숫값은 존재해도 되고, 안 해도 괜찮아.
<SYNC Start=370031><P Class=KRCC>
함숫값의 존재성은 상관이 없지만 왼쪽에서 오는 그 흐름과 오른쪽에서 오는 그 흐름이 같아야지만 그 지점에서의 극한값이라고 얘기를 할 수 있는 거지.
<SYNC Start=380815><P Class=KRCC>
수식으로 써보자면 lim, 극한값이 존재하기 위해서는 오른쪽에서 다가오는 우극한이 존재해야 되고. 그리고 두 번째로는 lim, 왼쪽에서 다가오는 좌극한도 존재해야 되고.
<SYNC Start=394182><P Class=KRCC>
그 둘이 같아야지만 극한값이 존재한다고 얘기를 하는 거야. 앞으로는 ‘극한값이 존재하니?’라고 문제가 나오게 되면 너희들은 좌극한, 우극한 구해서 그 둘이 같은지를 체크하는 거야.
<SYNC Start=406855><P Class=KRCC>
그래서 극한값이라는 거 항상 존재하는 게 아니고 좌우 극한이 같아야지만 존재할 수 있는 거다. 그리고 이렇게 ‘극한값이 존재한다’라는 표현을 쓰는 거고, 그 존재할 때의 값을 뭐라고 불렀어?
<SYNC Start=419754><P Class=KRCC>
극한값 또는 수렴값. 그런 표현들을 썼지. 그리고 리미트 말인데, 나는 보통 리미트를 저렇게도 쓰는데. 얘보다는 뭘 더 많이 쓰냐면 이 표현을 앞으로는 더 많이 쓸 거야.
<SYNC Start=431476><P Class=KRCC>
우리 조금 줄여서 이렇게 쓰자. 너희들도 리미트 편한 방법으로 작성해도 괜찮다. 이제 필수 유형 보자.
<SYNC Start=439884><P Class=KRCC>
우리 극한값을 묻는 이 그래프 문제는 반드시 나오지. 늘 첫 페이지에. 같이 한번 읽어보면 x가 0으로 움직이고 있어. 풀이가 없다. 그래프를 읽는 거야.
<SYNC Start=451130><P Class=KRCC>
x가 0으로 움직이는데 뒤에 플러스 있어. 즉 우극한이라는 뜻이지. 오른쪽에서 다가와. 그럼 0한테 다가가는데 오른쪽에서 다가와.
<SYNC Start=459867><P Class=KRCC>
그러니까 그림도 오른쪽 그래프 타고 움직이니까 값이 뭐가 되냐면 0이 되는 거지. 일단 각각 읽을게. x가 지금 1로 움직여. 근데 뒤에 마이너스 있어. 즉 좌극한.
<SYNC Start=470708><P Class=KRCC>
1로 가는데 왼쪽에서 다가오고 있는 거야. 그러니까 그림도 왼쪽에서 다가가야 되고, 그때의 값은 결국 2가 되는 거지. 위에다 쓰자. 2가 되는 거지.
<SYNC Start=480822><P Class=KRCC>
그럼 이제 우리 문제에서는 둘을 빼 달라 그랬어. 그러니까 답은 -2가 돼 주면 되겠다. 그래서 문제에서 주어지는 거 읽고 방향성만 잘 타고 움직여주면 돼. 얘가 필수 유형 문제였고.
<SYNC Start=492759><P Class=KRCC>
이제 1번 문제 한번 보자. 같은 내용이야. 같은 내용인데, 극한값하고 함숫값이 섞여 있는 것뿐이다. 한 줄씩 같이 볼게.
<SYNC Start=502296><P Class=KRCC>
x가 -1로 움직여. 근데 뒤에 플러스 있어. 우극한이야. -1로 움직이는데 우극한이야. 우극한이야. 값이 누구인 거냐면 0인 거지. 다음 거.
<SYNC Start=512898><P Class=KRCC>
x가 1로 가는데 뒤에 마이너스 있어. x가 1로 가는데 마이너스 있어. 좌극한이야. 결국 좌극한이고, 그때의 값은 누구냐면 2가 되는 거지. 그리고 이제 두 번째 꺼.
<SYNC Start=523445><P Class=KRCC>
이거 잘 봐야 돼. x가 지금 2로 움직여. 즉 극한값이야. 그럼 x가 2라는 값에 가까워지는데, 극한값이라는 건 어디로 가까워지냐를 묻는 거야.
<SYNC Start=533429><P Class=KRCC>
그럼 x가 2한테 가까워져. 그러면 그림도 따라서 움직이겠지. 그 값에서 비록 구멍이 뻥 뚫려있지만 어디에 가까워지냐를 물어보는 거니까 그때의 극한값은 뭐가 돼야 돼? 1.
<SYNC Start=545971><P Class=KRCC>
다음 거. 이제 f(2)야. 2에서의 함숫값. 2라는 그 지점에서 색칠되어 있는 부분 찾는 거야. 그럼 2라는 부분에서 색칠되어 있는 거 2가 되겠지. 그럼 이제 식 세울게.
<SYNC Start=557293><P Class=KRCC>
왼쪽은 둘 더했으니까 2인 거고, 오른쪽은 k 붙어있으니까 1+2k. 근데 두 값이 같다 그랬으니까 k값은 ½이 돼 주면 되겠다.
<SYNC Start=567633><P Class=KRCC>
그래서 우극한, 좌극한, 함숫값, 극한값, 이 네 가지가 다 나오는 문제가 이 1번 문제였어. 그리고 2번 한번 보자.
<SYNC Start=578426><P Class=KRCC>
여기서 너무너무 중요한 표현 나오는데. 지금 두 번째 줄에서 뭐라는 표현이 나오냐면 x가 1로 다가갈 때 f(x)가 존재한대.
<SYNC Start=587464><P Class=KRCC>
우리 극한값이 존재한다. 항상 존재하는 거 아니었어. 왼쪽에서 오는 거, 오른쪽에서 오는 거 같아야지만 존재하는 거였지.
<SYNC Start=594934><P Class=KRCC>
그럼 저 존재한다는 말을 가지고 수식으로 표현을 해 보자면 x가 1로 다가가. 근데 우극한을 먼저 좀 구해 볼 거야.
<SYNC Start=603708><P Class=KRCC>
그럼 1로 다가간다. 큰 쪽에서 다가와. 근데 내가 가지고 있는 그 f(x)라는 함수가 구간에 따라서 함수식이 달라져.
<SYNC Start=611069><P Class=KRCC>
그럼 지금 내가 갖고 있는 거 1보다 조금 크잖아. 그러니까 식에서는 1보다 큰 고함수지. 그럼 내가 이 함수식에 대해서는 lim x가 1보다 조금 커. 그때는 x+2였어.
<SYNC Start=623632><P Class=KRCC>
우리 원래대로라면 그림 그려서 누구한테 다가가는지를 확인해야 되지만, 우리가 알고 있는 기본적인 함수들은 함숫값에 다가가. 그러니까 식에다가 대입한다 그랬지. 그래서 값이 지금 3. 한 번 더.
<SYNC Start=636869><P Class=KRCC>
그럼 이번에는 x가 1로 다가가는데 그때 좌극한을 구해 볼 거야. 그럼 1보다 조금 작아. 즉 이 함수네. 그럼 lim x가 1로 다가갈 때 좌극한이고 함수식이 (x+7)분의a였어.
<SYNC Start=651148><P Class=KRCC>
우리 기본값은 대입이라 그랬다. 그래서 1 대입해 봤더니 8분의a가 됐어. 근데 극한값이 존재한다는 얘기는 이 2개의 값이 같아야 된다는 얘기잖아.
<SYNC Start=660854><P Class=KRCC>
그래서 8분의a가 3이 돼야 되고, 그러니까 a값은 24가 되겠지. 그래서 이제 a값은 찾았어. 그리고 이제 두 번째. 이게 보자마자 답이 나오면 좋은데 만약에 아직 낯설다면 그림 한번 그려보자.
<SYNC Start=676349><P Class=KRCC>
지금 f(x)라는 애가 있는데 어떤 상수 값으로 다가갔어. x가 어떤 b라는 애한테 다가갔다. 근데 글쎄 무한대로 움직인대. 양의 무한대로 커진다 그랬어.
<SYNC Start=686114><P Class=KRCC>
그럼 내가 x가 상수 값으로 다가가게 되면 우리 극한값의 기본은 대입이었어. 아무 이상이 없다면. 근데 그게 대입했을 때 문제가 생기는 부분이라는 얘기잖아.
<SYNC Start=696144><P Class=KRCC>
그래서 함수식을 봤더니 다항함수는 그런 문제가 생길 수가 없어. 이거 이렇게 생겼는데. 그럼 이제 이 위에 것에서 생기겠지. 근데 그 위에 있는 함수가 방금 전에 a값을 찾았으니까 (x+7)분의24지.
<SYNC Start=711158><P Class=KRCC>
괜찮아. 저거 그림 한번 그려보자. 우리 유리함수 그림 그릴 거야. 뭐 찾아야 돼? 그렇지. 대칭점. 분모 0 되는 거 -7, 오른쪽에 달린 건데 없으니까 0.
<SYNC Start=722016><P Class=KRCC>
그래서 (-7, 0)이라는 그 점이 대칭점이 되는 거고, 결국 그걸 가로세로로 연결해 준 게 점근선. 그리고 분자가 양수기 때문에 그림은 1사분면, 3사분면 위치에다 그리는 거지.
<SYNC Start=734868><P Class=KRCC>
근데 문제에서 원하는 건 x가 b를 향해서 움직여. 근데 오른쪽에서 다가온대. 오른쪽에서 다가와. 그때 무한대로 움직여. 결국 이쪽에서 다가올 때 무한대로 움직이지. 그래서 그 지점 누구냐면 -7.
<SYNC Start=748216><P Class=KRCC>
그래서 분모를 0 만들어 주는 그 지점에서 이런 움직임이 발견 돼. 저 표현이 우리 뒤에서 나오는 문제에도 계속 등장을 한다.
<SYNC Start=756157><P Class=KRCC>
앞으로는 이 표현을 보게 되면 ‘저거 분모 0 만들어 주는 값이구나.’ 하고 식 만들 수 있어야 돼. 그래서 분모 0 만들어 주는, 결국 뭐가 되는 거냐면 b라는 애가 -7인 거지.
<SYNC Start=767838><P Class=KRCC>
a, b 찾았고 우리 문제에서는 둘 더해 달라 그랬어. a가 24, b -7. 그러니까 둘 더하면 17이 나오면 되겠다.
<SYNC Start=777942><P Class=KRCC>
극한값이 존재한다는 표현 줬고, 존재하기 위해서는 좌우 극한이 존재하면서 같아야 되고. 그래서 각각 구한 게 같다는 식 썼고, 이런 움직임이 나올 수 있는 건 점근선에서 등장을 한다.
<SYNC Start=789672><P Class=KRCC>
이거 자주 나오는 표현이야. 그리고 3번 한번 보자. 이거 생각보다 되게 쉬운데 절댓값 때문에 긴장했을 것 같아.
<SYNC Start=800164><P Class=KRCC>
우리 저렇게 절댓값이 있으면 문제 못 풀어. 그러니까 이런 문제 풀 때 가장 먼저 할 일은 절댓값을 없애는 일이야. 근데 우리 절댓값의 정의가 뭐였냐면, 절댓값이라는 거 원점으로부터 거리였었지.
<SYNC Start=813346><P Class=KRCC>
그래서 만약에 절댓값 안이 0 이상이면 그냥 나오고, 절댓값 안이 음수면 마이너스 달고 나오고. 이게 기본적으로 알아야 되는 절댓값에 대한 정의이고 성질이었지.
<SYNC Start=824160><P Class=KRCC>
그럼 이제 이 내용 풀어볼 건데. lim x가 지금 3으로 다가가는데 뒤에 플러스 있어. 3보다 조금 큰 애다. 그럼 그때의 분모는 (x-3)(x-2).
<SYNC Start=836329><P Class=KRCC>
여기까지는 아무 이상 없어. 근데 이제 여기서 고민 해 봐야지. 나 3보다 조금 커. 3보다 조금 큰 거에서 3 뺐어. 그러니까 0이 아니라 0보다 조금 커. 즉 0 이상이니까 식이 그냥 나와야지.
<SYNC Start=849386><P Class=KRCC>
x가 지금 3보다 좀 크다. 3보다 조금 커. 거기서 2 뺐어. 양수니까 어떻게 나와? 그냥 나오지. 그리고 뒷부분은 (x+a) 그대로.
<SYNC Start=858802><P Class=KRCC>
그럼 이제 극한값 계산인데 이거 이거가 다 지워지네. 그리고 우리 극한값의 기본 계산은 대입이었지.
<SYNC Start=864948><P Class=KRCC>
x가 3으로 움직인다. 그러니까 식이 3+a 인데, 이만큼이 이 부분 계산한 거야. 그럼 똑같은 방법으로 두 번째 식 보자.
<SYNC Start=874299><P Class=KRCC>
lim 이번엔 x가 어디로 움직이냐면 1로 움직이는데 1보다 조금 작다 그랬어. 그때 분모는 (x-3)(x-2)인데 의미 없고, 절댓값만 정확히.
<SYNC Start=886345><P Class=KRCC>
1보다 조금 작아. 1보다 조금 작은 거에서 3 뺐어. 음수 나오지. 그러니까 마이너스 달고 나와야지. 다음 거.
<SYNC Start=894745><P Class=KRCC>
1보다 좀 작은 거에서 2 뺐어. 그러니까 음수. 얘도 마이너스를 달고 나오면서 저 식이 바뀌었네. 그리고 뒤에가 (x+a) 나왔어.
<SYNC Start=905119><P Class=KRCC>
그러니까 결과적으로 식은 똑같이 생겼어. 그냥 마이너스가 2개 나오면서 플러스로 바뀌었거든. 그래서 똑같은 식 지워지고, 1 대입해 보면 1+a가 됐고.
<SYNC Start=915344><P Class=KRCC>
근데 우리 문제에서는 그거 2개 더한 게 10이 된다 그랬지. 그래서 둘 더해 보면 2a+4인데 그만큼이 지금 10. 그럼 이거 만족하는 a값은 3이 돼 주면 되겠다.
<SYNC Start=927339><P Class=KRCC>
그래서 절댓값이 나오기는 했지만, 어차피 나는 절댓값을 풀어야 될 거 아냐. 근데 절댓값을 풀 때 제일 중요한 건 그 안에 들어가는 부호였어.
<SYNC Start=936699><P Class=KRCC>
그래서 그 안이 0 이상인지 0보다 작은지를 우극한, 좌극한이라는 표현으로 너희들한테 준 거지. 얘가 3번 문제였고, 이제 4번 문제 한번 보자.
<SYNC Start=948363><P Class=KRCC>
지금 집합 X라는 애가 있었는데 얘 그림이 이렇게 생겼대. 이 문제 어려웠지. 그랬을 때 너희들한테 무슨 조건을 줬냐면, 문제 마저 한번 읽어보자. 이런 표현을 줬어.
<SYNC Start=959823><P Class=KRCC>
지금 A, B, C 3개의 집합을 주면서 A∪B하고, C에서 그걸 좀 빼 달래. 그럼 내가 이 문제 풀려면 A, B, C를 각각 구해 봐야겠다. 그래서 A라는 저 조건을 먼저 써보면.
<SYNC Start=973344><P Class=KRCC>
내가 저 조건을 좀 나한테 보기 좋게 바꿀 거거든. 지금 나는 -1이지. 오른쪽. 얘만 이렇게 넘겨보자. 지금 lim x가 a에 대한 좌극한. 거기에서.
<SYNC Start=986429><P Class=KRCC>
나 식만 그냥 넘기는 중이다. 똑같이 쓸게. lim x가 a+ 그리고 f(x). 이만큼이 -1, 왼쪽으로 넘어가 주면 1. 여기까지 괜찮아? 왼쪽, 오른쪽 비교 한번 해 봐. 그냥 식만 넘겨준 거야.
<SYNC Start=1001782><P Class=KRCC>
근데 이렇게 쓰고 났더니 a라는 어떤 지점이 하나 있었는데 그 a라는 값에 대해서 마이너스 있으니까 좌극한, 플러스 있으니까 우극한. 나 좌극한에서 우극한을 뺐어. 그랬더니 1 나온대.
<SYNC Start=1015324><P Class=KRCC>
우리 좌에서 우를 뺐더니 1 나온다는 얘기는 결국 좌우 극한이 어쨌든 다르다는 얘기잖아. 그림 한번 봐봐. 이런 그림이었어.
<SYNC Start=1024274><P Class=KRCC>
그러니까 지금 내가 가지고 있는 저 조건을 만족하기 위해서는 이런 지점은 아닐 거야. 그래프가 예쁘게 이어져 있는 지점에서는 당연히 좌우 극한이 같잖아.
<SYNC Start=1033830><P Class=KRCC>
지금 내가 원하는 건 좌극한에서 우극한을 뺐을 때 1이 나와야 돼. 특히 누가 큰 거야, 지금? 좌극한이 큰 거야.
<SYNC Start=1041049><P Class=KRCC>
그러니까 좌극한이 더 위에 있으면서. 거기에서 우극한을 뺀 게 1이 돼야 돼. 즉 좌우의 차이 간격이 얼마야? 1.
<SYNC Start=1047467><P Class=KRCC>
내가 이걸 왜 자꾸 얘기하냐면, 이거 우리 해설지 보면 하나씩 다 대입해서 수식으로 풀려있는데 그거 어려워. 한 바닥이잖아.
<SYNC Start=1055336><P Class=KRCC>
근데 이 문제가 그래프를 이용하면 훨씬 더 간단하거든. 지금 좌우 극한이 다르면서 그 간격이 얼마인 거야? 1인 거야. 우리 그런 거 한번 여기에서 읽어내 보자.
<SYNC Start=1065200><P Class=KRCC>
일단 좌우 극한이 달라야 된다. 즉 그래프가 뚝 끊겨 있어야 돼. 그런 거 어디 있어? 그렇지. 여기 있지. -1.
<SYNC Start=1072497><P Class=KRCC>
지금 이런 지점에서 어떻게 생겼어? 1만큼의 차이가 생겨. 그리고 누가 더 큰 거야? 좌극한이 더 큰 거야. 그러니까 해당되는 -1. 괜찮아?
<SYNC Start=1083220><P Class=KRCC>
또 이렇게 생긴 거 계속 찾는 거야. 둘 사이의 간격이 1이면서 왼쪽에서 온 게 큰 거. 또 어디 있어? 그렇지. 그다음 거. 여기 있지. 0.
<SYNC Start=1092496><P Class=KRCC>
그리고 그다음에 또 끊겨 있는 거 봤더니. 1에서도 그래프가 끊겨 있기는 해. 근데 끊겨 있지만 이번에는 오른쪽 게 더 큰데? 그거 아니잖아. 내가 지금 원하는 건 왼쪽 게 더 큰 거지. 그다음 거.
<SYNC Start=1104842><P Class=KRCC>
2에서도 끊겨 있는데 이번에는 왼쪽에서 더 크니까 여기까지 같이겠다. 그래서 A를 만족하는 그런 x값은 -1, 0, 2. 이렇게 그래프를 읽어내는 거야.
<SYNC Start=1115290><P Class=KRCC>
그럼 얘는 이제 A였고, 이번에는 B 한번 찾아보자. B 조건이 뭔지 적어봤더니 이번에는 lim x가 a로 가는데 우극한이 없고, 그리고 lim x가 a로 다가가는데 f(x) 좌극한이었어.
<SYNC Start=1132973><P Class=KRCC>
이번에 내가 원하는 거 뭐냐면 우극한이 좌극한보다 커야 돼. 우리 우극한이 좌극한보다 크다는 얘기는 일단 같진 않잖아.
<SYNC Start=1141542><P Class=KRCC>
아까하고 마찬가지로 예쁘게 이어진 부분에서는 등장할 수가 없고, 뚝뚝 끊긴 부분이야. 근데 내가 방금 전에 끊긴 부분은 좌극한이 더 큰 거였지. 근데 그때는 뭐가 나왔냐면 -1, 0, 2 나왔어.
<SYNC Start=1154417><P Class=KRCC>
이 3개의 지점은 굳이 체크할 필요가 없지. 반대되는 내용이잖아. 그래서 이번에는 그래프가 끊겨 있으면서 이 지점 제외하고 나머지 부분에서 만족하는 거 읽어보자.
<SYNC Start=1166182><P Class=KRCC>
이제 그림하고 같이 본다. 5번이네. 그림하고 같이 보자. 여기 있어. 아까하고 마찬가지로 그림이 뚝 끊겨 있으면서 근데 이번에는 우극한, 오른쪽 게 더 높아야 돼.
<SYNC Start=1179024><P Class=KRCC>
그런 거 누구 있냐면 끊겨 있지만 아니지. 얘도 아니고. 여기 한번 체크해 볼까? 1 이 부분. 둘 사이에 끊겨 있지. 그리고 특히 누가 더 커? 오른쪽이 커.
<SYNC Start=1189708><P Class=KRCC>
그러니까 이거 해당되는 원소 지금 누구인 거냐면 1인 거지. 이거 말고는 존재하지 않지. 왜냐하면 2라는 부분도 여기 있었어. 왼쪽 게 더 큰 거잖아.
<SYNC Start=1199350><P Class=KRCC>
그래서 이제 A 찾았고, B 찾았고, 마지막 끝판왕이 누구였냐면 그게 C였지. 아마 C가 좀 어려웠을 거야.
<SYNC Start=1206684><P Class=KRCC>
C 만족하는 거 보면. lim x가 a로 움직이는데 그때 f(x). lim x가 a로 움직이는데 좌극한이야. 그리고 f(x)라는 애를 제곱했어.
<SYNC Start=1220182><P Class=KRCC>
이 문제가 어려운 이유가 이 C 때문이야. 사실 A하고 B는 내가 그림만 보더라도 바로 읽어낼 수 있어.
<SYNC Start=1227552><P Class=KRCC>
근데 이 C라는 게 왜 어렵냐면 이 위에 있던 문제들은 내가 f(x)라는 애가 그래프가 예쁘게 이어져 있는 구간에서는 아예 등장할 수가 없어.
<SYNC Start=1236529><P Class=KRCC>
그래프가 예쁘게 이어져 있단 얘기는 좌우 극한이 같다는 얘기니까 절대 이 두 값 사이에 차이가 생길 수가 없잖아.
<SYNC Start=1243063><P Class=KRCC>
근데 이 그림 같은 경우는, 지금 C를 만족하는 이 조건 같은 경우는 둘이 같더라도 가능한 케이스들이 생겨.
<SYNC Start=1250212><P Class=KRCC>
예를 들면 f(x)가 2였다고 해 봐. f(x)가 2였어. 근데 우리 f(x)를 가지고 그 지점에서 제곱했어. 뭐 나오는 거야? 4. 그러니까 그 f(x)의 극한값이 좌우 극한이 같더라도 성립하는 케이스가 생겨.
<SYNC Start=1266050><P Class=KRCC>
그래서 우리가 A, B 같은 경우는 극한값이 달라야지만 가능하기 때문에 뚝뚝 끊긴 정수점만 체크를 했지만,
<SYNC Start=1273184><P Class=KRCC>
이 마지막 C는 같아도 성립하기 때문에 정수점대 말고, 그래프 끊겨져 있는 지점 말고, 이어져 있는 부분까지 체크해야 돼. 그래서 이 C 집합 같은 경우는 2개를 다 체크해야 된다.
<SYNC Start=1285451><P Class=KRCC>
첫 번째는 정수인 케이스에서 먼저 한번 보자. 정수인 케이스. 식을 좀 봤더니. 나 정수인 케이스 확인하는 거야.
<SYNC Start=1294289><P Class=KRCC>
지금 내가 원하는 게 뭐냐면 여기 플러스 있어. 결국 우극한. 그리고 오른쪽은 마이너스 있어. 결국 좌극한. 우극한보다 좌극한에 제곱한 게 더 큰 부분을 찾는 거고, 정수점이야.
<SYNC Start=1307710><P Class=KRCC>
예를 들어서 -1 한번 봐봐. -1. 이거 좌극한은 지금 몇인 거냐면 1. 우극한은 몇인 거냐면 0. 근데 내가 원하는 건 지금 뭐냐면 우극한이 좌극한 제곱한 거 보다 작니 물어보고 있고,
<SYNC Start=1321368><P Class=KRCC>
얘 0이고, 얘 1이니까 제곱하면 더 큰 거 맞잖아. 그러니까 뭐 성립? -1일 때 성립. 집합으로 쓸까? 이런 식으로 하나씩 체크해야 돼. 그럼 나머지 것도 볼게. 끊겨진 부분.
<SYNC Start=1334299><P Class=KRCC>
이 부분에서도 그대로 성립하지. 아까하고 똑같이 생겼으니까. 이 부분도 한번 봤더니 이번에는 좌극한이 2였고, 우극한은 3이었거든.
<SYNC Start=1342753><P Class=KRCC>
근데 좌극한이 2이기는 한데 제곱하면 4 나와. 그러니까 더 큰 거 맞지. 그래서 -1도 가능. 0도 가능. 1도 가능. 그리고 마지막으로 나오는 지점인 2도 가능. 얘는 정수점이야.
<SYNC Start=1354657><P Class=KRCC>
근데 이번엔 뭘 봐야 되냐면 정수가 아닐 때도 체크해 봐야 돼. 얘가 정수 아니고 예쁘게 이어져 있는 2라는 값이었어도, 얘 2고 제곱하면 4 되니까 성립하잖아.
<SYNC Start=1365793><P Class=KRCC>
근데 이 식이 언제 성립하는지를 좀 확인해 보자. 내가 아까 예로 들어준 건 2였지. 당연히 2보다는 2를 제곱한 게 큰 거 맞지. 근데 제곱한 게 무조건 클까? 모든 값들이?
<SYNC Start=1378397><P Class=KRCC>
만약에 얘가 1이야. 그럼 이거 제곱하면 몇이야? 그렇지. 1이야. 항상 큰 거 아니다. 특히 얘가 만약에 ½이야. 그럼 제곱하면 뭐 나와? ¼. 오히려 더 작아져.
<SYNC Start=1388792><P Class=KRCC>
그러니까 얘가 항상 큰 게 아니라 성립하는 순간이 있어. 우리 어떤 애들이 제곱할수록 커지는 거였어? 맞지. 등비수열에서도 비슷한 거 했잖아. 우리 어떨 때 제곱하면 커져?
<SYNC Start=1399355><P Class=KRCC>
그렇지. 값이 1보다 큰 애들. 그래서 값이 1보다 큰 애들을 제곱해야 저게 성립하는 거야. 그럼 언제 1이 되는지 기점을 좀 찾아보자.
<SYNC Start=1407815><P Class=KRCC>
그럼 내가 이 식이 1이 되는 기점이 어디냐면 여기였지. 근데 이 1보다 큰 애들에 대해서만 성립하는 거야.
<SYNC Start=1414856><P Class=KRCC>
그래서 1보다 큰 부분이 어딘지 봤더니 여기 있지. 그리고 이쪽에 있지. 그거에 해당되는 x값 읽어보자.
<SYNC Start=1421220><P Class=KRCC>
그래서 어디냐면 ½보다 커야 되고, 1보다는 작은 부분 하나. 그리고 이 부분인데 그 부분은 1보다 크고 2보다 작은 부분 하나. 그래서 그 그림을 가지고 만족하는 범위를 찾은 거야.
<SYNC Start=1435508><P Class=KRCC>
그리고 이제 우리 최종 문제가 뭐였냐면 이거였어. 지금 a라는 표현을 너희들한테 주고 있지. 그래서 나 지금 x라고 썼는데 저거 a라고 생각하고 문제 풀어.
<SYNC Start=1445901><P Class=KRCC>
지금 각각을 구하는 원소를 찾는 거기 때문에 어차피 그 안에 들어가는 실수 값이야. 우리 문제에서는 이거라 그랬어. C에서 A∪B를 좀 빼 달래.
<SYNC Start=1455890><P Class=KRCC>
근데 A에 뭐 있나 봤더니 -1, 0, 2 있었고, B에 뭐 있나 봤더니 1 있었어. 그럼 이 2개의 합집합이라는 거 우리 바구니 안에 다 담는 거지. 양쪽에 있는 거. 그러니까 -1, 0, 1, 2.
<SYNC Start=1469202><P Class=KRCC>
근데 C라는 집합이 뭐였냐면 정수인 거는 이거였고. 두 번째 이제 a에 대해서 표현을 좀 하자면 ½, 1 그리고 1, 2. 이만큼이었지.
<SYNC Start=1480807><P Class=KRCC>
근데 지금 C라는 집합에서 이거 뺐으니까 얘는 전부 없어졌네. 그래서 남은 건 뭐냐면 얘네들이야. 그래서 이거 지금 ③번 보기에서 합집합으로 표현되어 있지? 그래서 정답은 이 부분이었어.
<SYNC Start=1492306><P Class=KRCC>
얘가 C를 찾는 과정이 좀 어려웠을 것 같아. 그래서 C라는 집합 찾고, 그 안에서 A∪B라는 부분을 전체 다 빼 주는 거고. 그래프를 통해서 읽어내는 게 훨씬 빠르다.
<SYNC Start=1502871><P Class=KRCC>
그래서 값 말고 내가 한 것처럼 이렇게, 그래서 누가 큰 거지? 우가 큰가? 좌가 큰가? 수치 찾아내고, 그 표현을 그 그림 안에서 읽어내는 게 빨랐을 거야. 얘가 4번 문제였고, 이제 5번 한번 보자.
<SYNC Start=1518728><P Class=KRCC>
이거는 문제가 어렵진 않은데 너희들이 또 표현이 낯설었을 것 같아. 지금 실수 전체의 집합이 있었는데 f(x)라는 함수가 딱 고정돼 있었으면 좋겠거든.
<SYNC Start=1528742><P Class=KRCC>
근데 f(x)가 이 범위에 따라서 함수식이 달라져. 그랬을 때 이걸 좀 구해 달래. 예를 들어서 한번 해 보자.
<SYNC Start=1535808><P Class=KRCC>
너희들이 모르는 함수가 나왔을 때는, 나도 마찬가지야. 나도 처음 보는 함수거든. 그러니까 그 식에다가 대입해서 한번 확인해 봐.
<SYNC Start=1543438><P Class=KRCC>
내가 만약에 a가 2였어. 그럼 a가 2였다면 함수식은 2x겠지. 근데 그 2x가 언제냐면 a가 2인 거니까 1부터 2까지 범위에서 함수식이 2x인 거야. 지금 구간에 따라서 함수식이 달라진다.
<SYNC Start=1557908><P Class=KRCC>
그럼 만약에 얘가 3이었어. a가 3이야. 그러면 ax니까 3x가 될 텐데 a가 3이기 때문에 2부터 3까지가 될 거고. 만약에 a가 1이야. 그렇다면 식은 x고, a가 1이니까 0부터 1까지가 되겠지.
<SYNC Start=1573799><P Class=KRCC>
근데 이런 값들이 무수히 많이 있을 거 아냐. 이렇게. 여기까지 이해 돼? 그럼 이제 규칙성 하나 찾아놓고 이제 문제에서 주어진 거 한번 읽어보자.
<SYNC Start=1582880><P Class=KRCC>
지금 여기에서 이거 빼 달라 그랬으니까 결국 내가 구하고 싶은 건 저 앞에 거, 뒤에 거 각각 찾아봐야 되지. 그래서 이 첫 번째 식이, lim x가 지금 p+2로 움직여. 근데 뒤에 마이너스야.
<SYNC Start=1597526><P Class=KRCC>
얘가 만약에 어려우면 우리 p+2라는 애를 세모라고 생각해 보자. x가 지금 세모보다 지금 조금 작아. 즉 세모에 대한 좌극한이야.
<SYNC Start=1606377><P Class=KRCC>
내가 만약에 기준점을 잡았을 때, 2보다 조금 작아. 2보다 조금 작은 애들에 대해선 함수가 어떻게 생겼어? 2x.
<SYNC Start=1614826><P Class=KRCC>
지금 p+2보다 조금 작아. 그럼 그런 애들에 대해선 함수가 어떻게 생겼어? (p+2)f(x)라고 생겼겠지. 그 f(x)가 지금 x지, x. (p+2)x. 이렇게.
<SYNC Start=1628552><P Class=KRCC>
지금 식 봐봐. 이 범위에서의 함수는 2x. 이 범위에서 함수는 3x. 지금 (p+2)보다 조금 작아. 그러니까 함수식이 (p+2)x. 근데 그때 lim x가 어디로 움직이냐면 (p+2)의 좌극한.
<SYNC Start=1643815><P Class=KRCC>
우리 극한값의 기본은 대입. 그러니까 (p+2), (p+2) 되니까 (p+2)²으로 움직이겠지. 이 과정을 다시 한번 해 보자.
<SYNC Start=1653008><P Class=KRCC>
이번에는 x가 어디로 움직이냐면 p로 움직여. 근데 p에서가 정확히는 뒤에 플러스 있어. 그때 f(x) 읽어내는 거야.
<SYNC Start=1662754><P Class=KRCC>
그럼 이번에는 또 함수식 보자. p보다 조금 더 커. p보다 조금 더 큰 우극한이야. 지금 내가 2보다 조금 커. 2보다 조금 큰 값에서 함수식이 뭐 나왔냐면 3x였어.
<SYNC Start=1673787><P Class=KRCC>
내가 실제로 넣은 그 2보다 함수 앞에 있는 숫자가 하나 커. 지금 p보다 조금 커. 그러니까 함수식은 (p+1)x가 되겠지. 걔보다 하나 크니까.
<SYNC Start=1684701><P Class=KRCC>
근데 그때 lim 뭐 붙어있냐면 x가 p로 움직이고, 뒤에 플러스. 우리 극한값의 기본은 대입이라 그랬지. 식에다 넣어보면 p(p+1). 이만큼이야.
<SYNC Start=1695782><P Class=KRCC>
각각에 대한 수식 구했고, 내가 원하는 건 이제 둘을 뺄 거야. 위에 있는 거 (p+2)² 거기에서 뭐 뺄 거냐면, 전개해서 쓰자. p²+p를 뺄 거야.
<SYNC Start=1707165><P Class=KRCC>
그랬더니 p², p² 없어졌지. 그리고 4p인데 거기서 p 하나 뺏으니까 3p 그리고 상수항 4. 근데 이만큼이 뭐가 되냐면 157.
<SYNC Start=1717218><P Class=KRCC>
그러니까 3p라는 애는 153이 되고, 그래서 p라는 애는 51 나와 주면 되겠다. 그래서 이 5번 문제는 규칙성을 찾는 게 중요하고, 규칙성을 찾기 위해서는 몇 개 해 봐. 그 방법이 제일 좋아.
<SYNC Start=1732209><P Class=KRCC>
그러니까 몇 개 대입해서 내 눈으로 보는 거야. 지금 2보다 작은 값들에 대해서 2x인 거고, 3보다 작은 값들에 대해서 3x로 함수식이 주어져.
<SYNC Start=1740655><P Class=KRCC>
근데 그 숫자 대신에 문자로만 주어진 것뿐이야. 그래서 좌우 극한을 가지고 함수식이 어떻게 달라지는지 봐야 된다. 얘가 5번 문제였고, 이제 극한에 대한 성질 한번 보자.
<SYNC Start=1754707><P Class=KRCC>
이 극한에 대한 성질은 내가 앞으로 리미트를 가지고 열심히 계산하는 방법이 나와 있거든. 그래서 이 극한에 대한 성질은 증명이 정확하게 있다기보다는 하나씩 우리가 느낌으로 좀 봤었지.
<SYNC Start=1766622><P Class=KRCC>
지금 f(x)라는 함수 앞에 뭐가 붙어있어? c 붙어있어. 저 숫자 어떻게 할 수 있어? 앞으로 꺼낼 수 있지. 얘는 c lim x가 a로 다가갈 때 f(x). 이렇게 쓰는 거 가능.
<SYNC Start=1779909><P Class=KRCC>
근데 우리 지금 두 번째 내용은 뭐냐면 f(x)±g(x). 즉 2개의 함수를 더하거나 뺐어. 그거의 극한값인데.
<SYNC Start=1787870><P Class=KRCC>
이거 마치 각각 분배되는 것처럼 보여서 lim x가 a로 움직일 때 f(x), 그리고 lim x가 a로 움직일 때 g(x)로 분배가 가능해.
<SYNC Start=1800936><P Class=KRCC>
근데 더하기 빼기만 되는 게 아니고 우리 세 번째 수식은 곱하기지. 이 곱하기일 때도 가능. 그래서 lim x가 a로 다가갈 때 f(x), 그리고 lim x가 a로 다가갈 때 g(x). 이렇게 곱하기도 가능한 거야.
<SYNC Start=1817489><P Class=KRCC>
그리고 마지막 꺼. 나누기도 가능. 그래서 각각 분배해 보면 [lim x가 a로 움직일 때 g(x)]분의[lim x가 a로 움직일 때 f(x)].
<SYNC Start=1830131><P Class=KRCC>
대부분의 애들이 그냥 이렇게 해놓고 끝나. 아, lim 더하기, 빼기, 그리고 숫자 곱한 거, 곱하기, 나누기 다 분배 가능. 근데 사실 이 내용을 쓰는 것보다 더 중요한 건 언제냐면 이 전제조건이야.
<SYNC Start=1842304><P Class=KRCC>
지금 이 f(x), g(x)가 누구나 다 가능한 게 아니라 ‘이때만’ 가능한 거야. 뭐라 그랬냐면 lim x가 a로 갈 때 f(x)가 α가 된대. 그리고 lim x가 a로 다가갈 때 g(x)가 β가 된대.
<SYNC Start=1857151><P Class=KRCC>
즉 둘 다 뭐 한 상태야? 각각이 수렴하는 상태야. 그래서 각각이 수렴한다는 조건이 있어야지만 이 네 가지 수식을 사용하는 게 가능한 거야. 그래서 항상 쓸 수 있는 거 아니다.
<SYNC Start=1868888><P Class=KRCC>
그리고 이 마지막에 나누기 같은 경우에는 한 번 더 정리해 주면 결국 g(x)이니까 β분의α라고 쓸 수 있는데, 그 β는. 그렇지. 0이 아니겠지. 그래서 나머지도 일단 함숫값 바꾸자. 극한값으로.
<SYNC Start=1882101><P Class=KRCC>
그래서 이만큼은 cα에 수렴하게 될 거고. 이만큼은 α±β에 수렴하게 될 거고. 이 값은 αβ에 수렴하게 되겠지.
<SYNC Start=1892323><P Class=KRCC>
그래서 리미트라는 애는 계산이 용이할 수는 있지만 무조건 되는 게 아니라 각각이 수렴할 때에만 이런 성질들을 쓸 수 있는 거야.
<SYNC Start=1900816><P Class=KRCC>
우리 나온 김에 시그마하고 같이 비교해 보자면, 우리 시그마는 뭐에 대해서 분배가 가능했어? 그렇지. 더하기, 빼기, 그리고 실수배.
<SYNC Start=1910072><P Class=KRCC>
근데 우리 방금 전에 한 리미트는 뭐에 대해서 분배가 가능? 더하기, 빼기, 곱하기, 나누기, 실수배 전부 다 가능.
<SYNC Start=1918801><P Class=KRCC>
단, 항상 성립하는 게 아니라 언제만 성립하냐면 내가 가지고 있는 그 함수가 수렴할 때만 가능. 그래서 아무래도 시그마보다는 리미트가 계산이 좀 더 말랑말랑해서 문제 풀기가 편할 거야.
<SYNC Start=1930803><P Class=KRCC>
그래서 이런 성질들을 가지고 있고, 이제 다음 내용 한번 보자. 필수 유형 문제야.
<SYNC Start=1938343><P Class=KRCC>
이런 문제를 풀 때도 보통 애들이 답을 바로 대입해서 구해. 근데 이게 만약에 서술형이었다면 식 정리를 좀 제대로 해야 되거든.
<SYNC Start=1947119><P Class=KRCC>
나 f(x)라는 애를 지금 몰라. 근데 얘를 가지고 이렇게 분배해서 풀면 틀려. 그 이유가 뭐냐면 f(x)가 수렴한다는 조건이 없어. 그래서 리미트를 분배하면 안 되는 거야.
<SYNC Start=1958377><P Class=KRCC>
수렴한다는 조건이 없기 때문에 나는 수렴한다는 걸 알고 있는 이 부분을 g(x)라는 새로운 함수로 잡아야 되는 거야. 이 문제를 서술형으로 푼다면.
<SYNC Start=1968364><P Class=KRCC>
그럼 내가 쟤를 가지고 다시 한번 써보면. (x+1)f(x)라는 그 함수를 g(x)라고 정의를 했어. 그러면 이 식 가지고 결국 f(x)를 뭐라고 쓸 수 있냐면 (x+1)분의g(x)라고 쓸 수 있겠지.
<SYNC Start=1983059><P Class=KRCC>
내가 f(x)라는 애가 수렴하는지 원래 몰랐어. 그래서 얘를 각각을 분배할 수가 없었던 거야. 대신에 이만큼을 통째로 g(x)로 묶은 거야. 그럼 그랬을 때 아래 줄 한번 고쳐보자.
<SYNC Start=1994405><P Class=KRCC>
lim x가 지금 1로 움직여. 그때. f(x) 대신에 이만큼 대입해도 되지. 그럼 분모가 뭐가 되냐면 (x+1)분의. 분자가 뭐가 되냐면 (2x²+1), 그리고 g(x)로 이렇게 바뀌는 거야.
<SYNC Start=2009422><P Class=KRCC>
근데 이렇게 쓰고 났더니 다항함수지. 수렴하지. 다항함수지. 수렴하지. 그리고 g(x)도 내가 수렴하는 거 알고 있지. 그러니까 분배 가능. 그래서 이제서야 하나씩 하나씩 분배가 가능해진 거야.
<SYNC Start=2022032><P Class=KRCC>
그리고 극한값의 기본 계산은 대입이었지. 그래서 1 넣었더니 2분의. 1 넣었으니까 3. 1 넣을 건데 그거 어디로 수렴하냐면 1로 수렴하지. 그래서 정답은 2분의3인데.
<SYNC Start=2033999><P Class=KRCC>
우리 문제에서는 거기에다 20 곱해 달라는데? 이만큼이 a였고. 그러니까 문제에서 원하는 20a=2분의3×20 되니까 30이 나와 주면 되겠다.
<SYNC Start=2046966><P Class=KRCC>
필수 유형 문제고, 각각 분배해서 풀더라도 답은 얘하고 동일하게 나와. 하지만 서술형이었다면 이런 부분에서 점수가 많이 깎였을 거야.
<SYNC Start=2055485><P Class=KRCC>
그래서 수렴한다는 조건이 있어야지만 이렇게 분배가 가능하다. 얘가 필수 유형 문제였어. 그리고 6번 문제 한번 보자.
<SYNC Start=2065535><P Class=KRCC>
지금 문제에서 f(x), g(x)를 줬고, g(x) 지금 정확하게 모른다. f(x)는 수렴한다는 거 알고 있어. 근데 g(x)는 모르고. 단, x분의g(x)는 수렴한다는 걸 알아.
<SYNC Start=2077508><P Class=KRCC>
그러니까 나는 이 식 안에서 x분의g(x)를 만들어 내야지. 그럼 x분의g(x)를 만들겠다는 얘기는 양변을? 그렇지. x로 나눠주면 되지. 분자, 분모를.
<SYNC Start=2087076><P Class=KRCC>
우리 분수식일 때는 분자, 분모에 같은 걸 곱하거나 나눠도 식의 값이 그대로 유지되잖아. 그래서 그렇게 한번 바꿔보자. 결국 lim x가 지금 1로 움직인다. 그때 양변을 전부 다 x로 나누는 거야.
<SYNC Start=2099586><P Class=KRCC>
그럼 식이 뭐가 되냐면 x분의[f(x)g(x)]+x분의[2g(x)]. 그냥 x로만 나누는 중이야. 그리고 이제 분자. x로 나눴고 (f(x))²이고. 마이너스. x로 나눴고 (x+2)g(x). 이만큼이 됐어. 이제 식 정리.
<SYNC Start=2122482><P Class=KRCC>
지금 x분의g(x)는 k로 수렴하고, 얘는 4로 수렴한다. 그럼 이제 x분의g(x) 여기 있지. x분의g(x) 여기 있어.
<SYNC Start=2130486><P Class=KRCC>
근데 이 f(x)는 어디로 수렴하냐면 x가 1로 다가갈 때 4로 수렴. 결국 이 전체 값은 4k로 수렴할 거고, 그 옆에 건 2k로 수렴을 하겠지.
<SYNC Start=2139953><P Class=KRCC>
이제 분자. 이거 1로 다가가. 1 대입하면 되지? f(x) 4로 다가가고 있어. 그러니까 16-. x분의g(x) 나왔는데 그거 k로 수렴. 그리고 x 1로 움직이고 있으니까 -3k 되겠다.
<SYNC Start=2154346><P Class=KRCC>
근데 이 부분 한 번 더 계산해 주면 결국 6k분의(16-3k)인데 그거 우리 문제에서 지금 ⅓ 된다 그랬지. 약분해서 2 됐고, 결국 2k=16-3k가 됐어.
<SYNC Start=2169399><P Class=KRCC>
그러니까 5k=16이 나오고, 우리 문제에서는 k값 구해 달라 그랬네. 그래서 k=5분의16이 돼 주면 되겠다.
<SYNC Start=2178030><P Class=KRCC>
내가 g(x)를 몰라. 그러니까 g(x) 대신에 수렴한다는 걸 알고 있는 x분의g(x)를 식 안에다가 만들어 주는 거야.
<SYNC Start=2185623><P Class=KRCC>
그래서 양변에 x로 쭉 나눠주고, 각각 수렴한다는 확신이 있으니까 그제서야 리미트를 분배해 주는 거고. 정답은 5분의16이었어. 그리고 7번 한번 보자.
<SYNC Start=2198677><P Class=KRCC>
이제 이런 문제들이 진짜인데, 너희들이 식을 스스로 만들어야 돼. 하나씩 읽어볼게. 지금 최고차항의 계수가 1인.
<SYNC Start=2206657><P Class=KRCC>
이런 거 잘 봐야 되지. 앞부분이 무조건 1이야. 그리고 f(x), g(x)가 둘 다 몇 차? 2차였어. 그리고 다음 단계. 각각을 함수로 바꿨을 때 x축하고는 이때만 만난대. (a, 0).
<SYNC Start=2221055><P Class=KRCC>
우리 이차함수가 x축하고 만나는 그 지점이 방정식의 근이었잖아. 그럼 지금 이 f(x), g(x)라는 애가 a이라는 근을 동시에 갖고 있는 거지.
<SYNC Start=2232497><P Class=KRCC>
그럼 내가 모양을 좀 생각해 봤을 때 f(x)가 a라는 근이 있어야 돼. 그러니까 식은 (x-a)겠지. a라는 근이 있어야 되니까. 두 번째로 g(x)도 쟤가 근이었으니까 (x-a)가 있어야 돼.
<SYNC Start=2247274><P Class=KRCC>
근데 둘 다 이차함수이기 때문에 얘가 아니라 뭔가 하나씩을 더 갖고 있어야겠지. 근데 그거에 대한 힌트가 뭐냐면 첫 번째. x가 2로 다가갈 때 f(x)=0이 된다 그랬어.
<SYNC Start=2258600><P Class=KRCC>
우리 원래대로라면 이 뒤에 뭐가 나올지 모르니까 (x+△). 뭐 이렇게 식을 만들겠지. 근데 x가 어디로 다가가? 2로 다가가. 그때 뭐가 돼야 된대? 0.
<SYNC Start=2269764><P Class=KRCC>
우리 함숫값의 기본 뭐였어? 극한값 구하기 위해서는 대입. 결국 이거 구하겠단 얘기는 f(2)가 될 텐데, 그 f(2)라는 애가 뭐가 나온다고? 0이 된다고.
<SYNC Start=2280485><P Class=KRCC>
2를 넣었을 때 0이 된다는데? 그러려면 f(x)가 뭘 갖고 있어야 돼? 2를 넣었을 때 0이 되려면. 그렇지. (x-2). 이렇게 식을 너희가 한 단계씩 만드는 거야. 그리고 다음 줄.
<SYNC Start=2292285><P Class=KRCC>
이만큼 나와 있고 이제 이 식을 활용해 볼 텐데. 결국 g(x)에 대한 정보는 부족하니까 우리 (x+k)라고 한번 잡아보자. 여기까지는 이제 식 잡았어. 그리고 두 번째 이 식 한번 써볼까?
<SYNC Start=2305497><P Class=KRCC>
lim x가 1로 가고 있어. 내가 왜 이거보다 이걸 먼저 쓸까? 이거 써봐야 모르는 문자가 너무 많아. 근데 얘를 쓰게 되면 g(x)분의f(x)를 분수식으로 쓸 거고, 똑같은 부분 약분 되겠지.
<SYNC Start=2321035><P Class=KRCC>
그래서 얘가 식이 더 간단해서 이 조건을 먼저 쓰는 거야. 그럼 g(x) 데리고 오면 (x-a)(x+k). 이만큼이 지금 분모. 그리고 f(x)는 (x-a)(x-2). 이만큼이었어.
<SYNC Start=2335104><P Class=KRCC>
근데 똑같은 부분 지워지고, 극한값의 기본 계산은 대입이었지. 그래서 1 넣어보면 1+k. 1 넣어보면 -1. 근데 이 전체 값이 뭐가 돼야 돼? ⅓.
<SYNC Start=2346392><P Class=KRCC>
이만큼이 ⅓이 된단 얘기는 분모인 k+1이 -3이 된다는 얘기고. 그러니까 k값이 -4로 나오는 거야. 그럼 내가 k값을 구했으니까 g(x)가 완성된 거지. 이 뒷부분이 -4로.
<SYNC Start=2361106><P Class=KRCC>
이제 f(x), g(x)의 모양 나왔고, 이제 두 번째 조건 한번 활용해 보자. 이 두 번째 조건은 뭐였냐면 lim x가 지금 1로 다가가고 있어. 근데 그때 f(x)+2g(x). 이 전체값이 지금 0이 된대.
<SYNC Start=2376846><P Class=KRCC>
대입할 거지? f에다가 1 넣을 거야. 근데 우리 식 모양 만들어 놨잖아. 거기다가 x 대신에 1만 넣어주면 돼.
<SYNC Start=2383841><P Class=KRCC>
그럼 식이 (1-a), 1 넣었으니까 (-1). 그리고 앞에 2 곱해져 있고, 이제 g(x)에다가 1 넣는다. 그럼 식이 (1-a) 그리고 -3. 이만큼이지.
<SYNC Start=2396612><P Class=KRCC>
그럼 이제 (1-a)가 공통인수이니까 묶어내면 여기서 -1 있었고, 이 둘 곱하니까 -6 됐어. 근데 중요한 건 이 전체 값이 0이 된대.
<SYNC Start=2406663><P Class=KRCC>
얘는 이미 0이 아니잖아. 그럼 전체가 0이 된단 이야기는 이만큼이 0이 된단 얘기고. 그럼 쟤가 0이 되기 위해서는 a값이 1이란 이야기지. 그래서 a값이 나왔어.
<SYNC Start=2417129><P Class=KRCC>
근데 우리 문제에서 진짜 구하라는 거 뭐냐면 lim x가 0으로 갈 때 f(x)g(x)야. 우리 각각 수렴하고 0, 0 대입을 하겠지.
<SYNC Start=2427782><P Class=KRCC>
그래서 f(x)에다 0 넣게 되면 나오는 값은 -a, 그리고 0 넣었으니까 -2. 이만큼이 f(x). 그리고 g(x)에다가 0 넣게 되면 -a, 0 넣었으니까 -4.
<SYNC Start=2440539><P Class=KRCC>
이거 어차피 다 마이너스니까 다 없어질 거고, 그러니까 나오는 값은 a²인데 a가 1이니까 의미 없고. 그러니까 4×2=8 나와 주면 되겠다. 그래서 이 문제 정답은 8이었어.
<SYNC Start=2453696><P Class=KRCC>
내용 보면 이런 각각에 대한 조건을 줬고. 그리고 중요한 건 차수야, 차수. 여기. 그래서 f(x), g(x)에 대한 조건을 가지고 너희들이 스스로 이렇게 식을 만들어야 돼.
<SYNC Start=2465608><P Class=KRCC>
그래서 이 뒤에 나오는 문제들부터는 너희들이 함수식을 스스로 만드는 문제들이 주로 나온다. 쟤가 7번이었고, 이제 8번 한번 보자.
<SYNC Start=2476318><P Class=KRCC>
지금 8번 문제에서 y=f(x)라는 그래프가 그림과 같다 그랬어. 그리고 이제 또 설명을 주기 시작해. 최고차항의 계수가 1이고, 상수항이 0인 삼차함수. 우리 여기까지 g(x) 모양 좀 만들어 보자.
<SYNC Start=2488894><P Class=KRCC>
일단 최고차항의 계수가 1인 그런 삼차함수라 그랬으니까 이 g(x)의 앞부분은 x³+어쩌고저쩌고. 이렇게 생겼을 거야.
<SYNC Start=2498839><P Class=KRCC>
근데 또 뭐 줬냐면 상수항이 0이래. 우리 상수항이 0이란 얘기는 상수항이 없단 얘기지. 내가 g(x)를 가지고 모양을 잡았을 때 얘가 ax²+bx까지로 끝나겠네.
<SYNC Start=2512966><P Class=KRCC>
그럼 이렇게 끝난단 얘기는 x로 묶게 되면 x²+ax+b 이렇게 생긴 게 지금 g(x)야. 그리고 이제 문제 읽자.
<SYNC Start=2521833><P Class=KRCC>
얘하고 얘가 모두 존재한대. 극한값이지. 우리 극한값은 항상 존재하는 거 아니었어. 좌우가 같아야지만 존재해. 그러니까 얘를 가지고 각각 좌우로 나눠 가지고 한번 계산해 보자.
<SYNC Start=2532931><P Class=KRCC>
첫 번째로는, 첫 번째 거 lim x가 1인데 우극한 먼저 체크. 그러면 f(x+1), 그리고 g(x)이지. 괜찮아? x가 1보다 조금 커. 근데 거기다가 x+1이야. 그러니까 얘는 2보다 조금 커.
<SYNC Start=2549673><P Class=KRCC>
2보다 조금 큰 쪽에서 다가온다? 값이 몇이야? 1. 이만큼은 1이야. 그리고 우리 기본은 대입이지. 결국 g(1)이 되겠네. 1×g(1)이니까.
<SYNC Start=2560362><P Class=KRCC>
다음 거. 이번에는 좌극한 볼 거야. lim 그냥 쓸까? lim x가 1로 가는데 좌극한이었어. 우리 좌극한이니까 저 f(x) 안에 들어가는 값 바뀌겠다.
<SYNC Start=2572620><P Class=KRCC>
x가 이번에는 1보다 조금 작아. 그러니까 이만큼이 2보다 조금 작아. 2보다 조금 작은 쪽에서 다가온다. 그때는 -1.
<SYNC Start=2581477><P Class=KRCC>
그러니까 얘가 지금 마이너스야. 근데 얘는 그냥 1 대입한 값이니까 -g(1)이 될 거 아냐. 근데 문제에서 존재한다고 했으니까 이 둘이 반드시 같아야 돼.
<SYNC Start=2591220><P Class=KRCC>
넘어가 주면 결국 g(1)이 뭐인 거냐면 0인 거지. 이해했어? 이제 이 과정 한번 똑같이 해 보자. 이번엔 저 그림 밑에 가서 해 보자.
<SYNC Start=2600447><P Class=KRCC>
결국 두 번째 식은 뭐가 되는 거냐면, 얘도 존재한다며. 그러니까 lim x가 2로 다가갈 때 우극한 먼저 볼게. 이만큼이야.
<SYNC Start=2610295><P Class=KRCC>
그럼 이번에는 2로 다가가는데 우극한이야. 2로 다가가는데 우극한이고, 그때의 값은 누구냐면 1이었어.
<SYNC Start=2617038><P Class=KRCC>
그럼 일단 얘는 1한테 가. 근데 그다음 얘가 x+1. 그러니까 2로 다가가면 3으로 다가가겠지. 그러니까 g(3)이겠다.
<SYNC Start=2625637><P Class=KRCC>
그리고 두 번째, lim x가 이번에는 좌극한이었어. 아까는 우극한이었는데 이번엔 왼쪽에서 다가와. 2를 기점으로 왼쪽에서 다가오고 있지. 그러니까 그때의 값은 누구냐면 -1.
<SYNC Start=2639158><P Class=KRCC>
그래서 식이 뭐 나오냐면 마이너스인데 거기다가 2로 다가가고 있으니까 전체 값은 3. 이 둘이 같다는 얘기는 결국 g(3)=0이 된다는 얘기인 거지.
<SYNC Start=2650053><P Class=KRCC>
그래서 g(3)이 0이었고, 방금 전에 찾아낸 또 하나의 식이 g(1)=0이었어. 우리 어떤 식에다가 대입했을 때 0이 되는 값을 뭐라고 불렀어? 그렇지. 근이라고 불렀지. 그럼 이제 정리해 보자.
<SYNC Start=2662747><P Class=KRCC>
지금 g(x)라는 애 모양을 찾는 중이었다. 근데 앞부분에 공통인수인 x를 꺼낸 것까지는 만들었어. 그리고 또 하나, 1 넣었을 때 0이 된다는 얘기는 (x-1)을 갖고 있는 거고.
<SYNC Start=2674538><P Class=KRCC>
그리고 또 하나, 3 넣었을 때 0이 된다는 얘기는 (x-3)을 갖고 있는 거고. 그리고 우리 문제에서는 g(5)를 구해 달라 그랬어.
<SYNC Start=2683135><P Class=KRCC>
그럼 이제 대입. 5였으니까 5, 4, 2. 그래서 값이 40이 나와 주면 되겠다. 그래서 이 8번 문제 같은 경우는 지금 식이 뭐였어? 이 값이 지금 모두 존재한다 그랬고, g(5)의 값을 좀 찾아달라 그랬어.
<SYNC Start=2698464><P Class=KRCC>
그래서 식에 존재한다는 사실을 활용해서 식 정리했고, 그리고 마지막에 40이라는 값까지 찾아준 거지.
<SYNC Start=2706665><P Class=KRCC>
그리고 이제 극한값의 계산 한번 보자. 얘는 내가 ‘극한값의 계산’이라는 표현으로 정리를 해놓기는 했는데. 우리 극한값의 계산에서 기본은 대입이었어.
<SYNC Start=2717552><P Class=KRCC>
그래서 식의 형태 보면 lim x가 a한테 다가갈 때 f(x). 이걸 내 목표로 하고 있지. 그래서 x가 a로 다가갈 때 f(x)가 어떻게 움직이니?
<SYNC Start=2727673><P Class=KRCC>
기본 계산은 대입이야. 근데 대입이 안 되는 애들이 있어. 근데 그 대입이 안 될 때에는 주로 어떤 방법을 활용하냐면 가장 많이 사용하는 게 인수분해야.
<SYNC Start=2738211><P Class=KRCC>
식 정리를 해야 되는데 가장 자주 등장하는 건 인수분해고, 그리고 또 사용하는 게 만약에 그 안에 무리식이 들어있다면 그때는 유리화를 많이 시켜.
<SYNC Start=2749481><P Class=KRCC>
그리고 걔가 만약에 분수식이었다면 통분을 시키거나 아니면 약분을 시키게 될 거야. 그래서 기본적으로는 대입인데, 대입이 안 될 때는 이런 식 정리를 해야 되고.
<SYNC Start=2760787><P Class=KRCC>
이거는 외우는 게 아니야. 문제를 보면 ‘인수분해 한번 해 볼까?’, ‘통분 한번 해 볼까?’ 하고 느낌이 좀 올 거야. 그래서 우리 다음 시간에는 극한값을 가지고 한번 계산을 해 보자.
<SYNC Start=2773139><P Class=KRCC>
이제는 대입이 안 된다고 당황하면 안 된다. ‘어, 대입 안 되네? 뭔가 좀 해 봐야겠다.’라는 생각을 하고 있으면 돼.
<SYNC Start=2779801><P Class=KRCC>
그래서 우리 오늘 뭐 했냐면 함수의 극한 했어. 우리 함수의 극한이라는 거 ‘어디에 가까워지니?’를 물어보는 거고, 항상 존재하는 거 아니었다.
<SYNC Start=2790110><P Class=KRCC>
그래서 두 번째 내용으로는 뭐가 있었냐면 극한에 대한 성질. 항상 존재하는 게 아니었어. 근데 이 극한에 대한 성질 막 쓰는 게 아니라 존재할 때, 각각이 수렴할 때만 쓸 수 있는 거야.
<SYNC Start=2802292><P Class=KRCC>
그래서 언제 함수의 극한값이 존재했냐면 좌우가 같을 때였지. 다음 시간에는 조금 더 함수의 극한 가지고 식 만들어 보고, 계산하는 시간을 가질게.
<SYNC Start=2812304><P Class=KRCC>
오늘도 너무너무 고생 많았고, 다음 시간에 보자. 안녕!
<SYNC Start=2815765><P Class=KRCC>
&nbsp;
</BODY>
</SAMI>