<SAMI>
<HEAD>
<TITLE>(주)기록법인상생 자막 2015</TITLE>
<STYLE TYPE="text/css">
<!--
P { margin-left:8pt; margin-right:8pt; margin-bottom:2pt;
    margin-top:2pt; font-size:12pt; text-align:left;
    font-family:굴림, Arial; font-weight:normal; color:white;
    background-color:#405A8D; }
.KRCC { Name:한국어; lang:ko-KR; SAMIType:CC; }
#STDPrn { Name:Standard Print; }
#LargePrn { Name:Large Print; font-size:20pt; }
#SmallPrn { Name:Small Print; font-size:10pt; }
-->
</STYLE>
</HEAD>
<BODY>
<SYNC Start=10038><P Class=KRCC>
안녕하세요. 애들아 오늘 준비한 사진은 지난 시간하고 이어서 우리 같이 지켜야 되는 항목들 좀 준비했는데 다섯 번째.
<SYNC Start=19988><P Class=KRCC>
잘 먹어라. 제철 과일과 제철 음식 내 사람들과 좋은 대화하며 먹는 게 건강 챙기는 데 최고다. 라는 글이야.
<SYNC Start=27968><P Class=KRCC>
그래서 실제로 나는 과일을 되게 좋아하거든? 그래서 내 최애 과일은 수박이란 말이지. 근데 엄마가 그러는데 내가 배 속에 있을 때부터 그렇게 수박만 먹었다고 하더라고.
<SYNC Start=37092><P Class=KRCC>
그래서 다음 사진 보면, 되게 많이 먹는 거처럼 보이는데 나는 평소에 물이 많은 과일 좋아해. 복숭아, 딸기, 수박 이런 거.
<SYNC Start=47119><P Class=KRCC>
그런데 한겨울이었는데, 수박이 너무 먹고 싶은 거야. 근데 이때 먹으면 수박이 되게 비싸잖아.
<SYNC Start=53094><P Class=KRCC>
그래서 용기 내서 먹고 싶으니까 이렇게 커다란 수박을 샀는데, 확실히 여름에 먹던 그 맛이 아니더라고.
<SYNC Start=61096><P Class=KRCC>
그래서 좀 아쉬워하면서도 열심히 다 먹기는 했다. 근데 이제는 다음 사진 보면, 뭘 골라서 먹어도 맛있는 수박의 계절이 왔지.
<SYNC Start=70153><P Class=KRCC>
그래서 여기가 저기 건너편에 보이는 게 우리 학교란 말이야. 그래서 급식에 수박 나오면 나 되게 좋아하고 영양사 선생님한테 막 감사 인사하거든.
<SYNC Start=80049><P Class=KRCC>
그리고 또 맛있는 반찬 있으면 반찬 통에 안 뜨고 밥그릇에다가 수박 뜨고 이랬어. 근데 내가 밥그릇에 수박 먹는 거 보시더니 영양사 선생님이 이거 가져가라면서 수박 챙겨 주셨어.
<SYNC Start=92054><P Class=KRCC>
그래서 밥 다 먹고 이렇게 수박도 마저 받아 가지고 챙겨 오고 그랬다. 그리고 다음 사진 보면, 6번 아무리 바빠도 취미 하나는 갖자. 메마른 일상을 적셔 주는 윤활유가 된다.
<SYNC Start=104156><P Class=KRCC>
그리고 마지막 이거 진짜 지키기 힘들지. 잠들기 전에 책 한 장씩이라도 읽자는 내용이야. 그래서 나도 이거 보면서 앞으로 읽을 책을 하나 골라 놨거든?
<SYNC Start=114871><P Class=KRCC>
나중에 너희들한테도 읽다가 좋은 글 있으면 소개해 주고 그럴게. 그래서 준비한 사진이었고. 우리 오늘은 또 새로운 단어들을 시작을 해 볼 텐데,
<SYNC Start=125212><P Class=KRCC>
여기서부터가 이제 진짜 미분에서 어려운 유형들의 문제들이 나오는 파트지. 그래서 증가하고 감소에 대한 얘기야.
<SYNC Start=133070><P Class=KRCC>
첫 번째로는 우리 정의부터 한번 보자. 증가 무슨 뜻이었어? 진짜로 자꾸자꾸 커지는 게 증가였어.
<SYNC Start=143109><P Class=KRCC>
x 값이 커질 때 y 값이 같이 커지는 거 우리가 증가라는 표현을 썼고, 그럼 반대로 감소라는 건 뭐였어? 자꾸자꾸 작아지는 게 감소였지.
<SYNC Start=154213><P Class=KRCC>
그래서 x 값이 커짐에 따라서 y 값은 작아지는 거. 이런 걸 우리가 감소라고 얘기를 했어. 근데 단순히 그림으로 커지면 증가, 작아지면 감소.
<SYNC Start=165210><P Class=KRCC>
우리가 그렇게 쓸 수는 없잖아. 그래서 뭐라고 얘기했었냐면, x 값이 커졌어. 그랬더니 y 값인 함수 값도 같이 커져. 그렇다면 증가.
<SYNC Start=177138><P Class=KRCC>
x 값이 커졌어. 그랬는데 있잖아. 반대로 y 값은 작아졌어. 그렇다면 감소. 그래서 이게 증가하고 감소에 대한 정의였어.
<SYNC Start=188278><P Class=KRCC>
근데 이 정의가 또 중요한 게 가끔 문제에서 조건으로 이런 문구 자체를 줄 때가 있어. x 값이 커졌는데, y 값이 같이 커졌대.
<SYNC Start=197287><P Class=KRCC>
그 얘기는 결국 이거 증가라는 얘기구나. 하고 너희들이 읽어 낼 수 있어야 돼. 근데 그 함수 위에 수많은 점들이 있잖아.
<SYNC Start=205235><P Class=KRCC>
근데 그 수많은 점들을 하나하나 뽑아 가지고 누가 더 크냐고 비교하는 건 불가능한 일이지. 그래서 여기에서는 이제 뭘 활용하게 되냐면,
<SYNC Start=215010><P Class=KRCC>
우리가 앞에서 배웠던 f´(x)라는 그 도함수에 부호를 활용을 하게 되지. 증가, 감소를 판단하기 위해서.
<SYNC Start=223174><P Class=KRCC>
그래서 증가하는 애들의 공통점을 찾아봤더니 여기에서 각각 접선을 그었을 때, 전부 다 뭐 나왔어? 기울기가 양수 나왔어.
<SYNC Start=233165><P Class=KRCC>
근데 오른쪽 봐 봐. 이 감소하는 그래프는 내가 각각의 점에서 이렇게 접선을 그었을 때 그 접선의 기울기는 다를지 모르지만 부호 자체는 전부 다 뭐 나왔어? 음수 나왔어.
<SYNC Start=246216><P Class=KRCC>
그래서 여기서 또 하나 알 수 있는 사실이 뭐였냐면, f´(x)라는 도함수의 부호가 양수야. 그렇다면 f(x)라는 그 함수는 증가한다는 걸 알 수 있었고.
<SYNC Start=259173><P Class=KRCC>
반대로 f´(x)의 부호가 음수였어. 그렇다면 f(x)라는 그 함수는 감소라는 걸 알 수가 있었지. 그래서 정의를 가지고 문제를 푸는 케이스는 잘 없어.
<SYNC Start=273229><P Class=KRCC>
왜냐하면 그 위에서 점을 뽑아서 비교할 수 없잖아. 그래서 그거 대신에 대부분 도함수의 부호를 가지고 문제를 풀게 될 거야.
<SYNC Start=281229><P Class=KRCC>
근데 여기에서 너무 중요한 내용이 있었지. 미분 계수가 0보다 커. 그 지점에서 도함수가 항상 양수야. 그렇다면 f(x)가 증가인 게 맞아.
<SYNC Start=291150><P Class=KRCC>
근데 증가라 그래서 항상 0보다 큰 건 아니었지. 그래서 대표적인 반례가 누가 있었냐면, y=x³ 같은 거. y=x³은 이렇게 생긴 그래프잖아.
<SYNC Start=303987><P Class=KRCC>
근데 0이었을 때는 나 어떤 상태야 지금? 그렇지. 계속 커지고 있으니까 증가야. 하지만 나 0보다 크지 않지. 0인 지점에서 미분 계수도 0 나오잖아.
<SYNC Start=315405><P Class=KRCC>
그러니까 얘가 0보다 크면 증가인 건 맞지만, 증가인 케이스에서는 항상 0보다 큰 게 아니라 0인 애도 이렇게 존재하는 거야.
<SYNC Start=324384><P Class=KRCC>
그래서 그 반대편에 됐을 때에는 부등호가 달라졌지. 그거 봐야 돼. 그래서 이번에는 반대 방향으로 한번 정리를 해 보자.
<SYNC Start=333296><P Class=KRCC>
f(x)라는 함수가 하나 있었어. 근데 얘가 있잖아 증가한다 그랬어. 그럼 증가라는 얘기는 f´(x)의 부호가 0보다 큰 거 맞지?
<SYNC Start=345388><P Class=KRCC>
하지만 0보다 큰 것만 있는 게 아니라 0일 때도 증가하잖아. 그렇게 0인 순간에도 반드시 증가하는 때가 존재하지. 그래서 크거나 같다가 되는 거야.
<SYNC Start=355269><P Class=KRCC>
같은 방법으로 f(x)라는 애가 감소한다 그랬어. 그렇다면 f´(x)가 0보다 작아. 또는 같을 수도 있는 거지.
<SYNC Start=366287><P Class=KRCC>
그래서 증가할 때, 감소할 때 이 부등호 등호 들어가는 거 조심해 줘야 돼. 그리고 세 번째로는 그럼 나 뭐가 빠져 있을까?
<SYNC Start=375264><P Class=KRCC>
f(x)가 증가했어. 그때 0 이상이고 f(x)가 감소했어. 그때는 0 이하야. 근데 우리가 앞에서 봤던 내용들 중에서 f´(x)가 0보다 크면 그때는 증가였고
<SYNC Start=388333><P Class=KRCC>
f´(x)가 0보다 작으면 그때는 감소였어. 그래서 지금 어떤 케이스가 하나 빠져 있냐면, f´(x)가 0인 케이스.
<SYNC Start=396420><P Class=KRCC>
그래서 이렇게 f´(x)가 0이었어. 즉 어떤 지점에서의 미분 계수가 0이야. 그럴 때는 그 앞뒤에 있는 애들이 중요해.
<SYNC Start=404503><P Class=KRCC>
내가 앞뒤에 있는 애들이랑 다 같이 마치 y=x³처럼 증가할 수도 있고 감소할 수도 있고 증가도 아니고 감소도 아니고 그 움직임이 바뀔 때가 있어.
<SYNC Start=415497><P Class=KRCC>
그래서 뒤에 가서 할 건데, 그 케이스에서는 극값을 가지는 케이스도 생겨. 그래서 미분 계수가 0인 그 지점에서는 증가인지 감소인지 극값인지를 너희들이 직접 체크해 봐야 돼.
<SYNC Start=427439><P Class=KRCC>
부등호 쓸 때 등호가 들어가는지 빠지는지 그 부분 조심해서 문제 풀어야 된다. 애들이 많이 실수하는 부분 중에 하나야.
<SYNC Start=436494><P Class=KRCC>
그래서 13번 보면, 실수 전체에서 정의된 함수가 있었어. 이 문제에 진짜 중요한 표현 나오는데, 뭐가 존재한대?
<SYNC Start=447542><P Class=KRCC>
역함수가 존재한대. 역함수라는 게 항상 존재하는 게 아니었지. 이거 언제만 존재해? 다섯 글자. 일대일 대응. 그럼 여기에서 왜 일대일 대응이라는 단어가 등장을 하게 되냐면,
<SYNC Start=461508><P Class=KRCC>
우리 일대일 대응이라는 거 x 값 하나에 y 값 하나씩만 짝지어지면서 치역하고 공역이 같은 게 일대일 대응이었어.
<SYNC Start=470449><P Class=KRCC>
그래서 얘를 가지고 일대일 대응 체크하는 방법이. 내가 가로선을 그었는데 교점이 하나 생겨. 이거 일대일 대응이었지.
<SYNC Start=478538><P Class=KRCC>
근데 안 되는 케이스 중에 대표적인 게 y=x² 같은 거. 내가 가로로 선을 긋게 되면 이렇게 교점이 두 개가 생긴다.
<SYNC Start=486576><P Class=KRCC>
그래서 얘가 y=x²이었어. 그때에 y=9가 되는 그런 지점은 -3만 있는 게 아니라 3도 있었지. 그래서 이런 건 함수인 건 맞지만 일대일은 아니라고 얘기했었잖아.
<SYNC Start=500530><P Class=KRCC>
그래서 일대일 대응이 되기 위해서는 가로선 그었을 때 교점이 하나씩만 생겨야 돼. 얘 지금 교점이 두 개 생겼다는 얘기는 대응할 수 있는 x 값이 애초에 두 개였다는 얘기니까.
<SYNC Start=511572><P Class=KRCC>
그럼 지금 우리가 가지고 있는 저 그래프는 몇 차 함수였어? 3차 함수였어. 그러니까 일대일 대응이 되기 위해서는 커지던 건 계속 커지고 작아지던 건 계속 작아져야 돼.
<SYNC Start=525580><P Class=KRCC>
그래야지만 내가 가로로 선 그었을 때 교점이 하나씩만 등장할 수 있지. 얘가 만약에 작아지다가 조금이라도 위로 올라가잖아?
<SYNC Start=534598><P Class=KRCC>
그럼 그 순간에는 교점 몇 개 생겨? 그렇지. 두 개 생겨. 그래서 일대일 대응이 커지는 거야. 그래서 이 일대일 대응이라는 표현을 만족하기 위해서는 증가이든지 감소이든지
<SYNC Start=545505><P Class=KRCC>
커지던 건 계속 커지고 작아지던 건 계속 작아져야 돼. 근데 우리가 가지고 있는 이 삼차 함수가 최고 차의 부호가 뭐 나왔어?
<SYNC Start=553610><P Class=KRCC>
마이너스 나왔지. 그 얘기는 무슨 뜻이야? 그렇지. 감소해야 된다는 얘기지. 따라서 얘가 일대일 대응을 만족하기 위해서는
<SYNC Start=562499><P Class=KRCC>
내가 f(x) 누군지는 정확히 모르지만 적어도 그 f(x)가 감소해야 된다는 조건을 찾은 거야. 그럼 f(x)라는 애가 감소하기 위해서는 f´(x)가 0보다 작든지 아니면 0이든지.
<SYNC Start=577580><P Class=KRCC>
이 두 가지 케이스로 존재를 하겠지. 그럼 이제 이거 한번 활용을 해 보자. f(x) 감소해야 되고 그래야지 일대일 대응될 수 있지.
<SYNC Start=585547><P Class=KRCC>
그러기 위해서는 도함수라는 애가 항상 0보다 작거나 같아야 돼. 그럼 이제 도함수 찾을 거야.
<SYNC Start=594604><P Class=KRCC>
도함수 찾으려고 미분했더니 -3x²+2ax-3a였어. 근데 내가 원하는 건 얘가 0보다 작거나 같았으면 좋겠어.
<SYNC Start=606623><P Class=KRCC>
그럼 양변에다가 마이너스 곱해 주면 식이 3x²-2ax+3a. 대신에 내 마음대로 마이너스를 곱했으니까 부등호 방향 뒤집혀야 되지.
<SYNC Start=619651><P Class=KRCC>
그럼 이제 여기에서 내가 활용할 수 있는 거. 우리 지난 시간에도 비슷한 거 했다. 이차 함수가 항상 0보다 크거나 같대.
<SYNC Start=626561><P Class=KRCC>
내가 가지고 있는 이 이차 함수 지금 식 정리하면서 양수로 바뀌었어. 그러면 최고 차가 양수니까 웃는 모양인 아래로 볼록.
<SYNC Start=634653><P Class=KRCC>
그 아래로 볼록인 애가 항상 0보다 크거나 같대. 그러려면 그래프가 x 축 기준으로 동동 떠 있든지 아니면 살짝 한번 만나든지 이 두 가지 케이스지.
<SYNC Start=645707><P Class=KRCC>
그럼 이 두 가지 케이스를 만족하는 건 동동 뜨려면 판별식이 0보다 작아야 되고 살짝 만나려면 0이어야 되고 그러니까 판별식이 0보다 작거나 같아야겠다.
<SYNC Start=657742><P Class=KRCC>
근데 이왕이면 이 문제 풀 때 무슨 판별식 쓰면 좋을까. 짝수 판별식 쓰면 좋지. 나 공식 한 번만 더 쓸게.
<SYNC Start=665730><P Class=KRCC>
우리 짝수 판별식을 4분의D라고 표현을 하고 (b´)²-ac. 얘가 공식이었지? 그럼 이제 이렇게 해서 판별식 써 보자.
<SYNC Start=676759><P Class=KRCC>
가운데 거 절반의 제곱. a²-9a 나왔어. 묶어 주면 a(a-9)인 거고. 긴게 9야. 짧은 게 a이고. 그리고 판별식이었으니까 0보다 작거나 같다.
<SYNC Start=695754><P Class=KRCC>
그럼 a 쪽으로 부등호 오므라져 있어. 그림도 닫혀지게 오므라진 쪽으로 열려야 되지. 그래서 0부터 a 값은 9까지.
<SYNC Start=705734><P Class=KRCC>
그리고 우리 문제에서는 정수의 개수 구해 달래. 양쪽에 등호가 들어 있을 때는 큰 거에서 작은 거 빼서 1 더해 주면 되지?
<SYNC Start=714791><P Class=KRCC>
9-0이니까 9. 거기다가 1을 더했어. 그러니까 전체 개수는 10개. 그래서 이 문제 정답은 10이 나와 주면 되겠다.
<SYNC Start=723794><P Class=KRCC>
그래서 이 문제는 역함수가 존재하니까 일대일 대응. 일대일 대응이 되려면 커지던 건 계속 커지고 작아지던 건 계속 작아지는 감소여야 돼.
<SYNC Start=732832><P Class=KRCC>
최고 차가 음수이기 때문에 f(x)가 감소 함수가 돼야 되고 그러기 위해서는 도함수의 부호가 항상 0보다 작거나 같아야 돼.
<SYNC Start=741683><P Class=KRCC>
근데 그 도함수가 이차 함수였어. 그래서 부호 바꾸는 과정에서 0 이상이어야 되니까 그래프 동동 떠야 되지. 아니면 한번 살짝 만나든지.
<SYNC Start=749791><P Class=KRCC>
그래서 판별식이 0보다 작거나 같다는 식이 나오는 거야. 이번에는 14번 한번 보자. 이 문제 잘했어. 이 문제는 저 f(x-10)이라는 표현 때문에 좀 낯설었을 거야.
<SYNC Start=767811><P Class=KRCC>
지금 내가 원하는 게 f(x)의 증가 구간이 아니라 f(x-10)의 증가 구간이야. 그래서 x라는 문제 대신에 x-10을 대입해서 푼 사람도 있을 거야.
<SYNC Start=779782><P Class=KRCC>
근데 그렇게 풀더라도 답은 같게 나오거든. 근데 식이 엄청 복잡했지. 근데 우리 이거 아는 표현인데.
<SYNC Start=787867><P Class=KRCC>
우리 f(x-10)이라는 애 어떻게 하는 거야? f(x)라는 함수가 하나 있었어. 근데 그 f(x)라는 함수를 가지고 x 축으로 어떻게 해 주면 f(x-10)이 될까?
<SYNC Start=801748><P Class=KRCC>
우리 평행 이동할 땐 뭐? 부호가 반대로 들어가지. 그럼 x 축으로 10만큼 평행 이동시키니까 x-10이 됐겠지.
<SYNC Start=811763><P Class=KRCC>
그래서 식을 가지고 바꾼 다음에 계산을 해도 괜찮고 그게 아니라면 원래 식 가지고 계산을 한 다음에 10만큼 평행 이동시켜 주면 돼.
<SYNC Start=820367><P Class=KRCC>
원래 그래프가 증가하는 구간을 10만큼만 밀어 주면 되잖아. 그래서 나는 f(x)를 가지고 그대로 활용을 한다.
<SYNC Start=828612><P Class=KRCC>
그럼 이제 f(x) 갖고 왔고. 나는 f(x)가 어디에서 증가하는지가 궁금해. 그래서 f´(x) 한번 구해 볼 거야.
<SYNC Start=835862><P Class=KRCC>
그래서 식을 미분했더니 12x³+12x²-24x였어. 공통 인수 묶을 수 있지. 그래서 12x로 묶어 냈더니, 12x(x²+x-2)됐어.
<SYNC Start=851886><P Class=KRCC>
한 번 더. 그래서 12x로 묶여 있고 12x(x+2)(x-1)로 이렇게 인수 분해 되겠다. 우리가 갖고 있던 함수는 사차 함수, 미분했더니 각각 값이 이렇게 세 개 나왔어.
<SYNC Start=865816><P Class=KRCC>
우리 그런 함수에서의 증가, 감소를 판단하는 거야. 그래서 증가, 감소를 판단하는 가장 좋은 방법은 그래프 그리는 거지.
<SYNC Start=873849><P Class=KRCC>
그래서 여기에서는 그래프를 활용해 주면 조금 더 문제 풀기가 편했을 거야. 그래서 우리 여기서는 다항 함수에서의 기본 그래프 한번만 보자.
<SYNC Start=883936><P Class=KRCC>
이 내용은 어차피 너희들이 기본 모양을 갖고 있어야 되거든? 우리 일차 함수는 직선 식. 이차 함수는 아래로 볼록 또는 위로 볼록인 포물선. 그렇게 그래프의 모양을 알고 있잖아.
<SYNC Start=894883><P Class=KRCC>
그래서 다항 함수에서도 최고 차가 0보다 큰 케이스에 대해서 생각을 할게. 그래서 일차 함수였어. 예를 들면 y=ax+b 이런 상태야.
<SYNC Start=904892><P Class=KRCC>
그럼 기울기가 양수니까 점점 커지는 직선이지. 얘가 일차 함수. 그럼 이차 함수야. y=ax²+bx+c였어.
<SYNC Start=914993><P Class=KRCC>
이럴 때에는 최고 차가 양수니까 웃는 모양인 아래로 볼록. 그래서 얘를 가지고 알아낼 수 있는 조건이 뭐냐면, 최고 차가 양수일 때는 x 값이 커지면 결국에는 같이 커지잖아.
<SYNC Start=926992><P Class=KRCC>
그래서 오른쪽 위를 향하는 그래프가 나와. 마찬가지로 삼차 함수. y=ax³+bx²+cx+d였어. 그때 꾸물거리는 게 처음에는 일차, 이차일 때는 한 번 꾸물.
<SYNC Start=942988><P Class=KRCC>
그래서 삼차일 때는 한 번 더 꾸물인 이런 상태가 나와. 그리고 최고 차 양수니까 오른쪽 위를 향하는 그래프.
<SYNC Start=950047><P Class=KRCC>
마찬가지로 얘가 만약에 기본적인 사차 함수잖아. 그렇다면 그래프가 한 번 더 꿀렁이면서 오른쪽 위를 향하는 이런 그래프가 나와.
<SYNC Start=967973><P Class=KRCC>
그래서 다항 함수 같은 경우는 오른쪽 위에서 시작하는 그래프가 나와. 0보다 크면. 그럼 이제 이 문제도 그래프의 기본 꼴을 알고 있으면 문제 푸는 게 훨씬 더 편리해.
<SYNC Start=978977><P Class=KRCC>
지금 내가 가지고 있는 게 사차 함수, 그리고 얘는 삼차 함수야. 그럼 사차 함수의 기본 모양인데, 양수니까 이렇게 W 모양처럼 생겼지? 오른쪽 위를 향하는 그래프.
<SYNC Start=989747><P Class=KRCC>
그리고 미분 계수가 0이 되는 그런 점이 몇 개 생겨? 세 개 생겨. 그게 볼록이는 점이었잖아. 그래서 첫 번째 볼록이는 게 -2, 그다음에 볼록이는 거 0, 그다음에 볼록이는 거 1.
<SYNC Start=1008007><P Class=KRCC>
이게 지금 내가 가지고 있는 저 사차 함수 그래프. 근데 여기에서 지금 뭐가 궁금하냐면 증가인 순간이 궁금하다. 커지는 순간.
<SYNC Start=1015924><P Class=KRCC>
그래서 어디가 증가인지 봤더니, 여기는 감소하지. 그다음에 증가하는 거 이만큼이지. 다시 감소하지. 증가하는 거 계속 증가하지.
<SYNC Start=1026104><P Class=KRCC>
근데 n부터 n+2까지래. 그러니까 조건 만족하는 구간은 이 부분이 가장 처음으로 등장하겠다.
<SYNC Start=1033075><P Class=KRCC>
그래서 어디에서 증가하게 되냐면, -2부터 0까지. 여기서 증가하는 거야. 근데 원래 f(x)에서는 그래.
<SYNC Start=1044720><P Class=KRCC>
근데 여기서 끝이 아니라, 내가 얘를 가지고 x 축으로 +10 만큼 평행 이동 시켰어. 밀겠다는 얘기잖아.
<SYNC Start=1052031><P Class=KRCC>
그러니까 증가 구간도 같이 밀려서 10만큼 밀렸으니까 8, 그리고 같이 밀렸으니까 10. (8, 10)이라는 구간이 되겠지.
<SYNC Start=1060972><P Class=KRCC>
그래서 우리 문제에서는 정수 n의 최솟값을 구해 달라고 그래고 그러니까 정답은 8이 나와 주면 되겠다.
<SYNC Start=1068147><P Class=KRCC>
그래서 이런 14번 문제 풀 때는 증가, 감소를 가지고 너희들이 증감표를 그려도 괜찮기는 해. 근데 그거 너무 오래 걸리잖아.
<SYNC Start=1076020><P Class=KRCC>
그래서 그거보다는 그림 바로 그려서 기본 형태 가지고 읽어 낼 수 있으면 좋고. 그리고 뒤에서도 우리 방금 전에 다항 함수 복습한 거 있지?
<SYNC Start=1085072><P Class=KRCC>
다항 함수의 기본 모양. 나 이거 그대로 계속 갖다 쓸 거야. 그러니까 이 네 가지 형태에 대해서는 잘 정리를 해 놓자.
<SYNC Start=1094013><P Class=KRCC>
이번에는 극대, 극소 한번 보자. 우리 증가, 감소는 그래도 평소에 좀 들어 봤던 단어인데, 극대하고 극소는 정말 이쪽 파트에서 미분에서 처음으로 등장하는 단어였지?
<SYNC Start=1108137><P Class=KRCC>
y=f(x)라는 함수가 하나 있었어. 근데 그 함수에 대해서 x=a 그 한 점을 포함하는 구간이 있었다. 근데 그냥 구간이 아니라 열린 구간이야.
<SYNC Start=1121210><P Class=KRCC>
우리 열린 구간이라는 거 뭐였어? 양쪽 끝이 뻥 뚫려 있는 거. 그럼 그 구간 안에는 몇 개의 점이 있겠어. 실수니까.
<SYNC Start=1129943><P Class=KRCC>
그렇지. 수없이 많은 점들이 있겠지. 그럼 x=a라는 점이 하나 있었는데, 그 점을 포함하는 열린 구간이 존재해서 그 열린 구간에 들어 있는 모든 x에 대해서 성립할 때 쓰는 방법이야.
<SYNC Start=1142179><P Class=KRCC>
그래서 어떤 x를 가지고 오든지 간에 a에서의 값이 항상 크거나 같대. 수많은 x들이 있을 텐데, 누굴 갖고 오든지 간에 a에서가 더 크거나 같아.
<SYNC Start=1154089><P Class=KRCC>
우리가 그때를 x는 a에서 극대라고 표현을 했지. 그리고 그 a에서의 함수 값을 극댓값이라고 불렀던 거고.
<SYNC Start=1167259><P Class=KRCC>
그리고 같은 방법으로 내가 어떤 x를 가지고 오든지 간에 만약에 a에서의 값이 가장 작거나 같았어. 그렇다면 나는 x는 a에서 극소라고 부르고,
<SYNC Start=1181095><P Class=KRCC>
그 a에서의 함수 값을 극솟값이라고 불렀지. 그래서 여기서 등장하는 극댓값, 극솟값, 최댓값, 최솟값. 우리 그런 건 항상 y 값이야.
<SYNC Start=1194140><P Class=KRCC>
그래서 x 좌표가 아니라 y 좌표를 읽어 낼 수 있어야 돼. 그래서 정의 자체는 이래. 극대, 극소의.
<SYNC Start=1200233><P Class=KRCC>
근데 얘도 역시나 그 열린 구간 안에 수많은 x들이 있을 텐데, 그 x를 다 꺼내서 a 값에서의 함수가 크거나 같은지 비교하는 거 불가능한 일이잖아.
<SYNC Start=1211092><P Class=KRCC>
그래서 이거 대신에 뭐를 또 다시 활용을 하냐면, 우리 도함수에서도 뭘 활용했어? 이 바로 앞에 파트 증가, 감소에서 도함수의 부호를 활용했지.
<SYNC Start=1221198><P Class=KRCC>
여기서도 마찬가지야. f(x)라는 애가 만약에 미분이 가능해. 그럼 미분이 가능하다는 얘기는 내가 도함수를 활용할 수 있다는 얘기지.
<SYNC Start=1234200><P Class=KRCC>
그러고 나서 봤더니, 극대라는 건 뭐냐면, 우리 동네에서 내가 제일 큰 거 잖아. 어떤 열린 구간 안에서 결국에는 가장 큰 값이라는 표현이니까.
<SYNC Start=1244183><P Class=KRCC>
그래서 우리 동네에서 내가 제일 커. 우리 이런 부분을 x는 a에서 극대라고 썼던 거지. 그러고 나서 봤더니, 나를 기준으로 왼쪽으로는 기울기가 전부 다 플러스야. 접선의 기울기가.
<SYNC Start=1258356><P Class=KRCC>
근데 극대가 되는 그 순간에서는 0이 되지. 그리고 오른쪽에서는 뭐가 되냐면, 전부 다 음수였어.
<SYNC Start=1265295><P Class=KRCC>
그래서 우리가 뭐라고 얘기하냐면 극대라는 그 표현은 접선의 기울기가 양수였다가 0이었다가 음수로 바뀌어. 그 지점에서 극대가 된다고 표현을 하는 거야.
<SYNC Start=1279078><P Class=KRCC>
그럼 반대로 극소는 어디에서 등장을 할까? 그림 한번 그려 볼까? 내가 제일 작아. 우리 동네에서.
<SYNC Start=1286365><P Class=KRCC>
그럼 그 얘기는 그래프가 이렇게 생겼다는 얘기지. 내가 가장 작다는 얘기지. 여기가 x=a였어.
<SYNC Start=1293298><P Class=KRCC>
그럼 좌우를 비교하자면 왼쪽에서는 접선의 기울기가 음수, 오른쪽에서는 접선의 기울기가 양수.
<SYNC Start=1301282><P Class=KRCC>
그리고 극소가 되는 그 지점에서는 잠깐 멈칫 0. 그러니까 기울기가 음수였다가 0이었다가 양수로 바뀌는 그 지점에서 극소가 되는 거야.
<SYNC Start=1312383><P Class=KRCC>
그래서 정의 가지고 체크하는 거 불가능하다고 그랬어. 그 지점에서의 뭘 확인을 할 거냐면 이렇게 도함수의 부호의 변화를 확인하는 거야.
<SYNC Start=1321389><P Class=KRCC>
그래서 커지다가 작아지면 거기서 극대, 작아지다가 커지면 거기서 극소인 거야. 그래서 식의 형태 잘 봐야 되고. 그리고 이 파트에서 세 번째.
<SYNC Start=1332331><P Class=KRCC>
또 많이 나오는 얘기가 극값을 갖는다는 표현이야. f´(a)라는 애가 있었어. 근데 그 지점에서 미분 계수가 0이었어. 그럼 나 거기서는 항상 극값을 가질까? 맞아, 틀려?
<SYNC Start=1346092><P Class=KRCC>
틀려. 미분 계수가 0이라고 해서 항상 거기서 극값인 거 아니야. 여기서도 대표적인 예제가 누구냐면 y=x³.
<SYNC Start=1354361><P Class=KRCC>
y=x³이라는 함수는 증가하는 함수였잖아. 그래서 미분 계수가 0인 점에서 0인 건 맞아. 하지만 극값인 거 아니잖아.
<SYNC Start=1364444><P Class=KRCC>
그래서 얘를 가지고 어떻게 좀 기억을 해야 되냐면 f(a)라는 애가 있었는데, 여기에서 극값을 갖는다고 그랬어. 걔가 극값이야.
<SYNC Start=1373407><P Class=KRCC>
그렇다면 그 지점에서의 미분 계수는 0이 되는 게 맞아. 하지만 미분 계수가 0이라고 해서 극값인 건 아니야.
<SYNC Start=1382431><P Class=KRCC>
이거 너무너무 중요한 표현이다. 그래서 극값의 후보는 0이 되는 지점들이 맞지만 0이라 그래서 항상 극값인 건 아니야.
<SYNC Start=1391376><P Class=KRCC>
그래서 이 반례 떠올릴 수 있어야 돼. 그래서 극대하고 극소에 대한 얘기였고. 우리 이번에는 17번 문제 한번 보자.
<SYNC Start=1402316><P Class=KRCC>
f(x)라는 함수가 하나 있었는데, 지금 몇 차 함수였어? 그렇지. 사차 함수였어. 저 f(x)라는 사차 함수가 하나 있었고 저 아이가 여기, 여기에서 극소가 된대.
<SYNC Start=1414337><P Class=KRCC>
그리고 x 좌표가 α, β인 그 두 점을 A, B라고 했을 때, 그 직선 AB가 지금 원점을 지났으면 좋겠다고 그랬어.
<SYNC Start=1423108><P Class=KRCC>
여기까지 한번 활용을 해 보자. 내가 원하는 거 극대하고 극소야. 그러니까 나는 쟤를 미분해서 0이 되는 지점을 체크하겠지.
<SYNC Start=1430517><P Class=KRCC>
그래서 저 식을 가지고 미분했더니 12x³-12x²-24x 됐어. 이거 묶어 낼 수 있겠다. 12x로 묶으니까 12x(x²-x-2)인 거지.
<SYNC Start=1447384><P Class=KRCC>
한 번 더. 12x로 묶고 나서 인수 분해까지 되니까 이렇게 표현이 됐어. 미분 계수 0 되는 지점이 어디 어디냐면, 0, 2, 그리고 -1이야. 세 개 나와.
<SYNC Start=1459555><P Class=KRCC>
근데 원래 그래프가 4차였잖아. 4차이면서 최고 차가 양수인 이런 그래프 나오는데, 첫 번째 볼록이는 거 -1, 그다음 볼록한 거 0 나오고 그다음에 볼록한 거 2인 거지.
<SYNC Start=1472499><P Class=KRCC>
근데 우리 문제에서 원하는 거 극소였어. 그럼 나 어디에서 극소냐면, -1하고 2. 이 두 부분에서 극소겠다.
<SYNC Start=1481149><P Class=KRCC>
근데 그 극소가 되는 좌표를 하나는 α, 하나는 β라고 부르겠대. 그래서 α는 -1, β는 2. 거기까지는 구했어.
<SYNC Start=1490540><P Class=KRCC>
근데 직선 AB를 만들어 내야 돼. 그러니까 나는 A, B의 좌표를 정확하게 구해야 되지. 그래서 A라는 점은 x 좌표가 α였어.
<SYNC Start=1500473><P Class=KRCC>
그러니까 -1, 그때 함수 값 구해야 되니까 f(-1) 찾아야지. 그래서 -1 넣으니까 3+4-12+a 됐어. 이거 계산하면 7 나오지? 그래서 얘는 a-5.
<SYNC Start=1519596><P Class=KRCC>
그래서 a라는 그 점은 a-5가 y 값이 되겠다. 그래서 같은 방법으로 이번에는 B의 좌표. 우리 B라는 애는 x 좌표가 2였어.
<SYNC Start=1530449><P Class=KRCC>
똑같이 2 한번 f(x)에다가 식 넣어 보면, 2였으니까 3ㆍ16-4ㆍ8-12ㆍ4+a였어. 그래서 이거 계산해 주면 되는데 -48이고 얘 48 없어졌네.
<SYNC Start=1549594><P Class=KRCC>
그러니까 남는 거 뭐가 되냐면, a-32. 그래서 B라는 점의 좌표가 y 좌표는 a-32. 여기까지가 A하고 B 좌표를 찾은 거야.
<SYNC Start=1563594><P Class=KRCC>
근데 여기서도 A 좌표 찾았고 B 좌표 찾았어. 근데 이 두 개를 가지고 만든 직선 식인 그 AB라는 식 만들 수 있지. 두 점의 좌표 줬으니까.
<SYNC Start=1575528><P Class=KRCC>
근데 그 AB라는 애가 (0, 0)을 지난다고 그랬어. 그래서 AB 직선 식 만들고 거기다가 (0, 0)을 대입해도 답은 나와. 답은 나오기는 한데, 식이 엄청 복잡했을 거야.
<SYNC Start=1587631><P Class=KRCC>
그러지 말고. 지금 내가 쓴 이 A, B를 이해해 보자. 지금 내가 가지고 있는 저 A, B가 x 값이 클수록 y 좌표는 작아지고 있지? 여기가 지금 -1이고 여기가 2였어.
<SYNC Start=1600612><P Class=KRCC>
그럼 여기가 지금 A인 거고 여기가 지금 B인 거지. 이해돼? 근데 이 직선이 어디를 지나? 원점을 지나.
<SYNC Start=1609657><P Class=KRCC>
즉 여기서 O 나온다. 그럼 얘네가 한 직선에 있다는 얘기는 기울기가 전부 같다는 얘기잖아. 그러니까 굳이 직선 식을 만들어서 원점에 대입하지 말고 기울기만 한번 체크를 해 보자.
<SYNC Start=1621691><P Class=KRCC>
그래서 AO의 기울기하고 이 BO, 또는 OB라고 부르는 기울기가 같아지면 되지. 대신에 기울기의 정의는 x 증가량 분의 y 증가량. 그게 기울기의 정의였지.
<SYNC Start=1634451><P Class=KRCC>
그럼 나 이제 AO 기울기 쓴다. 그럼 AO라는 애는 결국 O는 (0, 0)이었으니까 -1분의(a-5)가 될 거고.
<SYNC Start=1643739><P Class=KRCC>
OB. 얘 기울기 구하고 싶어. 근데 O는 어차피 (0, 0)이잖아. 그러니까 2분의(a-32)가 돼 주면 되지.
<SYNC Start=1652670><P Class=KRCC>
그래서 -a+32=2a-10이었어. 넘어가니까 3a이고 넘어가니까 42. 그래서 a 값은 14 나와 주면 되겠다. 그래서 a 값이 14였어.
<SYNC Start=1668592><P Class=KRCC>
우리 문제 한번 다시 볼까? 그래서 문제에서는 상수 a 값을 구해 달라 그랬고 따라서 정답은 14가 나와 주면 되겠다.
<SYNC Start=1676685><P Class=KRCC>
그래서 이 17번 문제 풀기 위해서 되게 여러 가지 조건이 쓰였어. 일단 그래프 그릴 수 있어야 되고 도함수 활용했고 극솟값 썼고 직선의 기울기까지 활용해 준 문제가 이 17번 문제야.
<SYNC Start=1688989><P Class=KRCC>
이게 오늘의 마지막 문제였어. 그래서 뭐 했나, 우리 정리 한번 좀 해 보자. 그래서 이제 슬슬 문제들이 정말 함수에 대한 특징들이 등장을 하지?
<SYNC Start=1703677><P Class=KRCC>
그래서 오늘 첫 번째로는 증가와 감소. 그래서 증가 자꾸자꾸 커지는 거. 감소는 점점 작아지는 거.
<SYNC Start=1709804><P Class=KRCC>
근데 얘를 가지고 정의로 체크하는 거 불가능, 도함수의 부호 써야 돼. 그리고 두 번째로는 역함수.
<SYNC Start=1717600><P Class=KRCC>
우리 역함수라는 게 존재한다는 얘기는 일대일 대응이었어. 그게 증가, 감소랑 어떤 연관성이 있는지를 꼭 잘 체크해 놔야 돼.
<SYNC Start=1725269><P Class=KRCC>
그래서 오늘도 너무 고생 많았고 다음 시간에 보자. 안녕.
<SYNC Start=1730508><P Class=KRCC>
&nbsp;
</BODY>
</SAMI>