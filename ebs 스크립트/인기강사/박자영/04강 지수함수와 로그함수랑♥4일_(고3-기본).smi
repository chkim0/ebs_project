<SAMI>
<HEAD>
<TITLE>(주)기록법인상생 자막 2019</TITLE>
<STYLE TYPE="text/css">
<!--
P { margin-left:8pt; margin-right:8pt; margin-bottom:2pt;
    margin-top:2pt; font-size:12pt; text-align:left;
    font-family:굴림, Arial; font-weight:normal; color:white;
    background-color:#405A8D; }
.KRCC { Name:한국어; lang:ko-KR; SAMIType:CC; }
#STDPrn { Name:Standard Print; }
#LargePrn { Name:Large Print; font-size:20pt; }
#SmallPrn { Name:Small Print; font-size:10pt; }
-->
</STYLE>
</HEAD>
<BODY>
<SYNC Start=9680><P Class=KRCC>
안녕하세요. 얘들아, 나 오늘도 사진을 좀 준비했는데 오늘 건 특히나 나한테 마음 아픈 사진 중에 하나야. 내 너덜너덜한 핸드폰 보이지?
<SYNC Start=20235><P Class=KRCC>
이게 내가 아침에 늦잠 자고 일어나서 출근하다가 급하게 언덕 길을 내려갔다. 근데 주머니에서 우당탕탕 하면서 핸드폰이 날아갔어. 기분이 오싹하더라고.
<SYNC Start=30865><P Class=KRCC>
근데 열어 봤더니 진짜 이렇게 와장창. 핸드폰도 다 부서지고 내 마음도 부서지고 그랬다. 나 원래 이런 새 기계 사는 걸 별로 안 좋아해. 왜냐하면 이거 다 어플 새로 깔아야 되지, 로그인 해야지.
<SYNC Start=44395><P Class=KRCC>
로그인 얼마나 어려워. 그래서 핸드폰을 바꿀 생각을 하니까 까마득한 거야. 근데 이 핸드폰도 내가 정말 4년 넘게 쓴 아이거든. 그래서 한동안은 테이프를 칭칭 감고 버텼어.
<SYNC Start=56228><P Class=KRCC>
내가 이번에 알게 된 건데 스카치 테이프를 붙여도 멀쩡히 터치가 되더라고. 한참 동안 열심히 쓰다가 결국에는 너무 창피한 거야. 핸드폰을 올려놓을 때마다.
<SYNC Start=67084><P Class=KRCC>
그래서 이제 진짜 안 되겠다 해서 핸드폰을 드디어 새로 샀어. 다음 사진 보면 짠. 이렇게 예쁘게 나온다. 얘를 확대해 보면 진짜 그 안에 있는 벌의 무늬까지 보이더라고.
<SYNC Start=79022><P Class=KRCC>
이래서 요즘 사람들이 다들 기계를 새로 사는구나. 그런 생각을 했어. 내가 이거 찍어 가지고 동생한테 보냈거든. 내 핸드폰 엄청 좋다고. 그랬더니 나보고 이제 누나 아줌마 다 됐다고.
<SYNC Start=92010><P Class=KRCC>
이런 거는 주로 엄마들 프사라면서 얘기하는 거야. 이런 사진도 찍고, 또 다음 사진 보면 이렇게 핸드폰 새로 산 기념으로 거울에다 비친 내 모습도 찍었어.
<SYNC Start=103450><P Class=KRCC>
내가 수업 시작할 때 너희들한테 이런 내 사진들 한 번씩 보여 주잖아. 이제 핸드폰을 새로 산 만큼 조금 더 고퀄의 사진을 앞으로 보여 줄 수 있을 것 같아. 여기까지 준비한 사진이었어.
<SYNC Start=116206><P Class=KRCC>
그리고 이제 오늘 내용 한번 같이 보면, 우리 지난 시간까지는 지수 함수를 했었지. 근데 아무래도 너희들이 지수보다는 이 로그 쪽에 조금 더 낯설 거야.
<SYNC Start=126267><P Class=KRCC>
그래서 문제 풀 때도 나도 최대한 로그에 대한 개념들 나올 때마다 다시 한번 설명을 해 줄게. 로그 함수라는 애였어. 우리 어떤 애를 로그 함수라고 얘기를 했었냐면, 기본형이 y=log a의 x.
<SYNC Start=139395><P Class=KRCC>
x라는 그 변수가 진수에 들어 있는 걸 우리가 로그 함수라고 얘기를 했고, 우리 로그에서 중요한 거 밑 조건, 진수 조건이었지. 밑 조건 먼저 써 보자면 a는 양수이면서 1이 아닌 숫자였고,
<SYNC Start=152317><P Class=KRCC>
그리고 x라는 애는 진수니까 0보다 커야 되고. 이 진수인 값이 x라는 문자로 들어가 있잖아. x가 항상 0보다 큰 구간에서만 함숫값이 존재해.
<SYNC Start=163968><P Class=KRCC>
내가 아직 안 해 봤지만 그래프를 그리자면 0보다 큰쪽에서만 x가 존재하기 때문에 그래프가 오른쪽에만 그려지겠지. 실제로 진짜 그래프를 좀 그려 보면,
<SYNC Start=175620><P Class=KRCC>
우리 로그에서의 중요한 특징 중에 하나가 진수가 1일 때는 무조건 몇이었어? 값이? 그렇지. 0이었지. (1,0)을 지나면서 점점 커지는 증가 상태의 그래프가 있었고,
<SYNC Start=187651><P Class=KRCC>
우리 증가 감소를 결정하는 건 밑의 사이즈였지. 증가할 때는 a가 1보다 컸고, 그리고 마찬가지로 (1,0)을 지나면서 자꾸자꾸 작아지는 케이스.
<SYNC Start=197622><P Class=KRCC>
즉 감소하는 케이스가 있었는데 얘는 밑의 범위가 0부터 1까지였어. 우리 로그 함수에 대한 기본 특징을 좀 정리하자면 첫 번째, 우리 함수에서 제일 중요한 건 그래프를 그릴 수 있다는 거고,
<SYNC Start=210474><P Class=KRCC>
그래프 안에서 중요했던 건 모양이었어. 그리고 함수에서의 모양을 결정해 주는 건 로그 함수에서는 밑이었지. 밑의 사이즈가 1보다 크다면 자꾸자꾸 커지는 증가 상태인 거고,
<SYNC Start=223248><P Class=KRCC>
만약에 밑에 대한 범위가 1보다 작은 이런 숫자라면 감소하기 때문에 자꾸자꾸 작아지는 이런 그림을 갖고 작아지는 감소 상태라고 얘기를 했었지.
<SYNC Start=235531><P Class=KRCC>
그리고 둘 다 나 어떤 점을 지나고 있어? 그렇지. (1,0). 이거 로그에 대한 특징이야. 기본형에 대해서는 어디를 지나고 있냐면 항상 (1,0)이라는 점을 지나고 있어.
<SYNC Start=247943><P Class=KRCC>
그리고 또 중요한 특징 중에 하나, 우리 지수 함수에서도 그림 그릴 때 너무너무 중요한 특징이었지. 나 점점 가까워지지만 닿지 않는 선이 하나 존재하는데 그거 누구냐면 y축이지.
<SYNC Start=260727><P Class=KRCC>
가까워지지만 닿지 않는 선, 3글자로 우리 점근선이라는 표현을 썼고. 이 점근선에 대해서는 우리가 가지고 있는 기본형에서는 y축이었어.
<SYNC Start=272739><P Class=KRCC>
근데 우리가 저 y축을 가지고 수식으로 표현할 수 있어야 되지. y축의 다른 이름은? 그렇지. x=0이었지. 여기까지는 로그 함수의 기본형에 대한 얘기였는데,
<SYNC Start=283210><P Class=KRCC>
우리 기본형보다는 뭐가 훨씬 더 많이 나와? 그렇지. 움직여 놓은 거. 그래서 우리 이번에는 움직움직 해 놓은 상태를 좀 보자. 우리 지수 함수에서도 이거 똑같이 했다.
<SYNC Start=294062><P Class=KRCC>
우리 지수 함수를 가지고 들어서 옮겼었지. 어떻게 움직일 수 있었냐면 첫 번째는 평행 이동이었어. 평행 이동이라는 거 x하고 y하고 평행하게 움직이는 거였고,
<SYNC Start=305410><P Class=KRCC>
즉 가로로 움직이는 거, 세로로 움직이는 거 그게 평행 이동이었지. 그래프를 들어서 진짜로 이렇게 옮기는 거야. 기본형 하나 가지고 오면 y=log a의 x라는 로그 함수가 하나 있었고,
<SYNC Start=319339><P Class=KRCC>
내가 그 로그 함수를 x축으로 m만큼, y축으로 n만큼 평행 이동시킬 거야. 근데 우리 평행 이동시킬 때 중요한 점이 부호가 반대로 들어갔지. 식에서는.
<SYNC Start=330155><P Class=KRCC>
그래서 어떤 식이 되냐면 y-n=log a의 (x-m) 조금 더 예쁘게 우리가 알고 있는 함수 형태로 고치자면 y=log a의 (x-m)+n 이런 값이 되는 거지. 우리 함수식으로는 고쳤어.
<SYNC Start=347701><P Class=KRCC>
근데 그래프가 어떻게 바뀌는지 한번 생각해 보자. 나 기본형 그래프를 생각해 볼 건데 커지는 상태, 증가할 때 먼저 갖고 와 볼게.
<SYNC Start=356227><P Class=KRCC>
나 로그 함수가 하나 있었고 걔를 가지고 그래프를 그대로 들어서 옮길 거야. 근데 내가 만약에 얘를 가지고 이렇게 위아래로 움직여. 위아래로 움직이더라도 그래프의 모양은 그대로지.
<SYNC Start=367841><P Class=KRCC>
우리 그래프 그릴 때 중요한 건 모양하고 점근선이었다. 근데 위아래로 옮겼어. 나 이거 점근선이 바뀌어, 안 바뀌어? 그렇지. 안 바뀌어.
<SYNC Start=376479><P Class=KRCC>
우리 지수 함수 같은 경우는 y축으로의 평행 이동이 점근선을 결정했거든. 근데 로그 함수 같은 경우에는 내가 얘를 가지고 이번엔 좌우로 움직였어. 왼쪽으로 움직이면 점근선 따라서 왼쪽으로,
<SYNC Start=387814><P Class=KRCC>
그리고 오른쪽으로 움직이면 점근선도 따라서 오른쪽으로 움직이지. 그러니까 로그 함수에서의 점근선을 결정해 주는 건 이번에는 x인 거야. x로의 평행 이동이 중요하다.
<SYNC Start=398796><P Class=KRCC>
기본형에 대해서는 점근선이 x=0이라는 y축이었어. 근데 내가 x축으로 얼마큼 평행 이동시켰냐면  m만큼. 그러니까 점근선도 같이 m만큼 움직였겠지.
<SYNC Start=411685><P Class=KRCC>
그래서 로그 함수에서의 점근선을 결정해 주는 요소는 x축으로의 평행 이동이야. 그리고 두 번째로 뭐도 있었어? 그렇지. 대칭 이동. 우리 대칭 이동에는 총 몇 가지가 있었어?
<SYNC Start=423876><P Class=KRCC>
그렇지. 4가지가 있었지. 첫 번째는 x축 대칭, 두 번째는 y축 대칭, 세 번째는 원점 대칭, 마지막으로는 y=x 대칭.
<SYNC Start=434880><P Class=KRCC>
우리가 대칭 이동을 할 때는 특히나 나 이 대칭 이동이라는 거 어려운 게 아니라 그거로 반 접는 거라 그랬다. x축으로 반 접는단 얘기는 나 위에 있던 점이 아래로 뚝 떨어진단 얘기지.
<SYNC Start=447316><P Class=KRCC>
그래서 뭐가 바뀌냐면 y의 부호가 바뀌었고, y축은 x의 부호가 바뀌었고, 원점 대칭은 부호가 둘 다 바뀌었고, y=x가 중요했지. 나 y=x 대칭시키게 되면 x가 y로, y가 x로 바뀌었었어.
<SYNC Start=461663><P Class=KRCC>
여기까지가 로그 함수에 대한 기본형. 그리고 움직움직한 형태였고, 우리 지난 시간에 했던 거하고 이어서 한번 이 내용까지는 따로 필기를 해 놓자.
<SYNC Start=472460><P Class=KRCC>
우리 지난 시간에 지수 함수 했잖아. 근데 그 지수 함수에서 y=2의 x제곱이라는 함수랑 y=3의 x제곱이라는 함수. 우리 이거 한번 좀 비교해 볼까? 무슨 차이가 있는지?
<SYNC Start=485443><P Class=KRCC>
나 이거 둘 다 기본형의 지수 함수야. 그럼 그래프 그려 봤을 때 나 얘는 밑이 2고 얘는 밑이 3이야. 둘 다 1보다 크니까 증가하는 상태의 그래프가 되겠지.
<SYNC Start=497066><P Class=KRCC>
그리고 얘도 (0,1)을 지나고 얘도 (0,1)을 지나는 애야. 근데 우리 무슨 차이가 생기냐면 얘는 1이었을 때 함숫값이 2가 되는 이런 함수거든. 근데 얘는 x값이 1이었을 때 y값이? 그렇지.
<SYNC Start=510370><P Class=KRCC>
3이 되지. 그래서 조금 더 위에 찍히는 이런 함수가 나와. 그래서 y=2의 x제곱은 (0,1)을 지나는 이런 그림, y=3의 x제곱은 (0,1)을 지나는 이런 그림.
<SYNC Start=522239><P Class=KRCC>
지금 누가 더 위에 올라가 있냐면 y=3의 x제곱이 (0,1) 기준으로 그래프가 더 위에 있어. 지수 함수는 증가하는 상태에서는 (0,1)을 기점으로 밑이 클수록 그래프가 위로 나와.
<SYNC Start=534965><P Class=KRCC>
근데 로그 함수는 어떨까? 로그 함수 우리 방금 전에 한 거 한번 해 볼게. y=log 2의 x 그리고 y=log 3의 x 이 두 개 한번 비교해 보자.
<SYNC Start=545666><P Class=KRCC>
방금 전에 했던 것처럼 우리 조금 더 만만한 점들 한번 넣어 볼게. 쉬운 거 뭐 넣어 볼까? 기준점 되는 거. 나 얘하고 얘가 동시에 지나는 점 있어. 그거 누구였냐면? 그렇지. (1,0).
<SYNC Start=557684><P Class=KRCC>
(1,0)을 둘 다 지나고 있고 얘는 나 좀 더 계산하기 쉽게 1 되는 점을 기준으로 삼을게. 나 x가 2가 됐어. 우리 log 2의 2 밑하고 진수가 같을 때는 1. 그래서 얘는 어딜 지나냐면 (2,1).
<SYNC Start=572520><P Class=KRCC>
즉 이렇게 증가하는 그래프야. 그럼 이번엔 두 번째, 나 y=log 3의 x를 그릴 건데 나 이거 x가 1 될 때는 마찬가지로 0. 근데 이번에는 나 1이란 값이 되기 위해서는 x값이 3이어야 되지.
<SYNC Start=585608><P Class=KRCC>
밑하고 진수가 같아야지만 1이니까 log 3의 3이 1. 즉 어디를 지나냐면 나 여기를 지나. (3,1). 아까 같은 경우는 밑이 클수록 그래프가 위에 있었어.
<SYNC Start=596321><P Class=KRCC>
근데 로그 같은 경우는 (1,0)을 기점으로 밑이 큰 함수가 어디 있어? 그렇지. 더 밑에 있어. 그래프에서의 위아래 위치까지 정확하게 봐야 된다.
<SYNC Start=606772><P Class=KRCC>
로그 함수에 대한 기본 내용이었고, 이제 필수 유형 한번 보자. 이거는 너희들이 갑자기 원이 나와서 좀 놀랐을 것 같아. a가 1보다 크다 그랬어.
<SYNC Start=619735><P Class=KRCC>
그리고 실수 a에 대해서 로그 함수가 등장을 했고 원이 하나 등장을 했지. 그때 원하고 만났대. 그 원하고 만나서 생기는 두 개의 교점을 P, Q라고 얘기했고 선분PQ가 원 C의 지름이 된대.
<SYNC Start=632993><P Class=KRCC>
그때 내가 원하는 건 a값이야. 그림하고 한번 같이 보자. 이렇게 생겼어. 로그 함수 하나 있었고 원의 식이 하나 있었고 그 원하고 로그 함수가 두 점에서 만났어. P하고 Q.
<SYNC Start=646058><P Class=KRCC>
그리고 그 P하고 Q가 지름이 된다 그랬어. 나 이런 특징을 주면서 너희들한테 a를 구하래. 우리 문제가 원의 방정식을 예쁘게 줬다.
<SYNC Start=654687><P Class=KRCC>
그럼 내가 이 원의 방정식을 가지고 원에 대한 특징을 좀 먼저 읽어 본다면 내가 가지고 있는 원의 중심이 얼마인 거냐면 (4분의5,0)이라는 게 원의 중심.
<SYNC Start=666645><P Class=KRCC>
그리고 원에서의 또 하나의 특징은 반지름인데 반지름이 4분의√13. 여기까지가 원에 대한 특징이었어. 근데 점이 두 개 나와. P하고 Q.
<SYNC Start=677007><P Class=KRCC>
근데 이 문제가 시작이 어려운 이유가 문자가 없어. 그러니까  너희들이 P하고 Q에 대한 특징을 먼저 잡아야 되지. 문자로. 우리 P, Q의 좌표 한번 만들어 보자.
<SYNC Start=686556><P Class=KRCC>
내가 P라는 점의 x좌표를 p로 잡았어. 그럼 p를 대입했을 때 함숫값이니까 log a의 p가 될 거고, 나 Q라는 점의 x좌표를 q라고 잡았어. 그러면 y값은 함수에 대입하면 되니까 log a의 q가 되겠지.
<SYNC Start=703050><P Class=KRCC>
여기까지 괜찮아? PQ의 좌표를 잡은 거야. 근데 이 PQ라는 게 이거 두 개를 이어서 만든 이 선이 문제에서 뭐라 그랬어? 지름이라 그랬지.
<SYNC Start=713733><P Class=KRCC>
우리 이 둘을 이어서 만든 선이 지름이란 얘기는 이 두 좌표의 중간 지점, 정가운데인 중점이 뭐가 된단 얘기야? 원의? 그렇지. 중심이 된단 얘기지. 이만큼. 얘가 원의 중심인 거야.
<SYNC Start=726834><P Class=KRCC>
내가 그 중심을 우리 C라고 한번 해 보자. 근데 내가 중심의 좌표를 알고 있지. 그러니까 C라는 그 중심의 좌표가 (4분의5,0)이 되는 거고 그 중심의 좌표는 두 점 사이의 정가운데, 즉 중점인 거지.
<SYNC Start=740742><P Class=KRCC>
근데 우리가 중점 좌표 구할 줄 알잖아. 가운데니까 둘 더해서 반으로 나눠 버리면 되지. 그러니까 우리 이제 중점 한번 구해 보자.
<SYNC Start=748573><P Class=KRCC>
결국 원의 중심인 중점의 좌표는 나 p하고 q 두 좌표를 더해서 반으로 나눴고, 마찬가지로 y값도 log a의 p 그리고 log a의 q 둘을 더해서 반으로 나눴어.
<SYNC Start=763523><P Class=KRCC>
근데 이거 계산하게 되면 뭐가 나와야 되냐면 원의 중심의 좌표 알고 있고 그거 (4분의5,0)인 거지. 이렇게. 그럼 나 이 값이 같으니까 x끼리 같고 y끼리 같은 거지. 그거 바로 한번 써 보자.
<SYNC Start=777257><P Class=KRCC>
나 이만큼이 4분의5가 돼야 돼. 그러기 위해서는 p+q라는 애가 2분의5가 돼야지만 4분의5 될 수 있지. 그리고 이제 위에 부분인데 얘 한번 같이 보자. 나 이만큼이 전체가 0이 돼야 돼.
<SYNC Start=792247><P Class=KRCC>
우리 분수가 0이 되려면 분자가 0이 돼야 돼. 근데 쟤 아직 정리 덜 됐지. 이거 내가 로그 하나로 합치면 밑이 같은 두 로그끼리 합이었으니까 진수끼리의 곱이 되고,
<SYNC Start=804136><P Class=KRCC>
우리 로그값이 언제 0이 되냐면 진수가 1인 순간. 따라서 뭐가 나오냐면 pq라는 그 두 개의 곱이 1이라는 거 알 수 있어. 이제 여기까진 아마 했을 거야.
<SYNC Start=815233><P Class=KRCC>
그 다음 단계가 문제인데 지금 내가 문제에서 뭘 구했냐면 합, 그리고 곱이야. 우리 합하고 곱을 구했다. 이때 뭐 생각나는 거 없어? 내가 합을 알고 있고, 곱을 알고 있어.
<SYNC Start=828904><P Class=KRCC>
그럼 내가 이 두 가지로 뭐 할 수 있냐면? 그렇지. 방정식 만들 수 있지. 결국 내가 두 근의 합, 두 근의 곱을 알고 있는 거니까 그거 활용해서 방정식 만들면 되잖아.
<SYNC Start=838846><P Class=KRCC>
우리 방정식 만드는 방법이 x²-합x+곱=0 이렇게 만들던 거 기억나? 이거 1학년 때 내용이었지. 그럼 이제 가지고 온다. 내가 갖고 있는 방정식의 근을 pq라고 봤을 때 두 근의 합 -2분의5x.
<SYNC Start=855290><P Class=KRCC>
두 근의 곱 +1=0. 이렇게 만들고 났더니 나 분수 있어서 불편해. 양변에다가 2 곱할게. 그럼 2x²-5x+2=0 됐고 인수 분해까지 하자. 이렇게. 그러면 4 됐고 1 돼서 둘 다 마이너스였어.
<SYNC Start=873159><P Class=KRCC>
그럼 여기에서 무슨 식이 나오냐면 (2x-1) 한 덩어리 (x-2) 한 덩어리 그래서 근이 두 개 나오는데 한 근은 ½이었고 그리고 다른 한 근은 2였어. 여기까지 괜찮아?
<SYNC Start=886365><P Class=KRCC>
근데 나 이거 뭐로 만든 방정식이야? 그렇지. 나 pq로 만든 방정식이야. 그러니까 이 방정식의 근이 pq인 거지. 하나는 p, 하나는 q일 건데 우리 그림 한번만 다시 보자.
<SYNC Start=898026><P Class=KRCC>
내가 가지고 있는 그림이 Q가 더 왼쪽에 있다. 그렇지? P가 더 오른쪽에 있고. 그러니까 둘 중에 작은 걸 q, 큰 걸 p라고 잡자.
<SYNC Start=906851><P Class=KRCC>
그래서 방금 전에 나왔던 저 두 개의 좌표를 가지고 나 ½이 q 그리고 p라는 애가 2가 돼 주면 되겠네. 그래서 여기까지는 pq를 잡은 거야. 근데 우리의 진짜 목적은 뭐였었냐면 a값 구하는 거지.
<SYNC Start=920464><P Class=KRCC>
근데 그 a값을 구하기 위한 과정에서 무슨 특징이 또 있었냐면, 나 얘가 뭐가 된다 그랬어? 지름이 된다 그랬지. 그럼 내가 얘 좌표 구할 수 있지. p 찾았으니까. 이거 좌표 구할 수 있지.
<SYNC Start=934126><P Class=KRCC>
p 찾았으니까. 그럼 이제 두 점 사이의 거리를 구하면 그게 지름이지. 그거 활용해도 괜찮고, 우리 해설지 같은 경우는 지름으로 구했어. 근데 나는 반지름으로 구했거든. 같은 식이야. 결국에는.
<SYNC Start=945627><P Class=KRCC>
우리 이 두 개를 가지고 계산하게 되면 결국 이것도 반지름, 이것도 반지름. 그러니까 나는 뭐 구할 거냐면 이거 PC 구할 거야.
<SYNC Start=953799><P Class=KRCC>
PC의 길이를 구하게 되면 그거 결국 반지름이고 나는 반지름의 길이가 4분의√13이라는 거 알고 있지. 이번에는 저거 한번 해 보자. 이번엔 PC 구할 거야.
<SYNC Start=966823><P Class=KRCC>
그럼 방금 전에 어디까지 구했냐면 p하고 q까지는 구했고 저거 가지고 이제 PC를 좀 찾았어. PC 길이를 구할 건데 P라는 점의 좌표 먼저 찾아보면 방금 전에 p 2 나왔어. 얘들아, 좌표가 2였다.
<SYNC Start=981333><P Class=KRCC>
그러면 y값은 log a의 2가 되겠지. 이거 괜찮아? 그리고 우리 C라는 거 원의 중심이었고 좌표는 (4분의5,0)이었어.
<SYNC Start=992211><P Class=KRCC>
그럼 이제 저 두 점 사이의 거리를 구할 건데 이거 구하기 위해서는 뭐 쓸 수 있어야 돼? 그렇지. 두 점 사이의 거리 공식.
<SYNC Start=1000196><P Class=KRCC>
우리 두 점 사이의 거리 공식 뭐였냐면 √에다가 빼서 제곱, 빼서 제곱이었지. 둘 빼서 제곱할 거니까 (2-4분의5)²이고 y값끼리 빼서 제곱할 건데 0은 빼나 마나니까 (log a의 2)²이었어.
<SYNC Start=1016477><P Class=KRCC>
근데 이거 쭉 계산한 게 결국 반지름이 될 텐데 그 반지름이 4분의√13인 거지. 나 왼쪽도 √고 오른쪽도 √야. 계산하기 불편하니까 우리 제곱해서 넘기면서 풀자.
<SYNC Start=1029110><P Class=KRCC>
그럼 알맹이 계산해 주면 이거 4분의8. 거기서 4분의5 뺐어. 그러니까 (¾)²이고 거기다가 (log a의 2)²이었고 나 양변 제곱했으니까 얘 제곱해서 16분의13인 거지. 이해돼?
<SYNC Start=1045465><P Class=KRCC>
이제 이거 계산하면 a값 찾을 수 있겠다. (log a의 2)²은 16분의13 거기서 16분의9 뺐어. 그러니까 16분의 결국 4. 한번 더 약분해 주면 ¼. 우리 여기서는 이제 로그 계산할 수 있어야 돼.
<SYNC Start=1062479><P Class=KRCC>
나 얘를 가지고 제곱했더니 ¼이 됐어. 그러니까 내가 원하는 log a의 2는 결국 ½이 되겠지. 그리고 얘 다시 한번 지수식으로 바꾸자. 얘를 가지고 지수로 바꿔 주면 a의 ½제곱은 2 됐어.
<SYNC Start=1078456><P Class=KRCC>
그럼 여기에서 내가 원했던 a값은 양변 제곱해 주면 ½ 사라지지. 제곱했더니 4라는 값이 나오는 거야. 그래서 정답은 4. 이 필수 유형 문제 풀기 위해서는 일단 그래프 볼 수 있어야 돼.
<SYNC Start=1092103><P Class=KRCC>
원 있었고, 나 원하고 만나서 생기는 두 점을 줬어. 근데 문제를 시작하려고 봤더니 문자가 많이 없어. 그러니까 p, q에 대한 문자부터 설정하고. 지름이라 그랬으니까 저 둘의 가운데가 원의 중심.
<SYNC Start=1104498><P Class=KRCC>
그래서 중점의 좌표를 활용해서 중심의 좌표를 구하고 내가 원하는 P, Q값을 가지고 a값까지 구해 주는 문제가 필수 유형 문제였어. 그리고 19번 한번 보자.
<SYNC Start=1116516><P Class=KRCC>
이제 기본적인 함수를 가지고 평행 이동, 대칭 이동 시키는 문제들이 주룩주룩 나온다. 이때는 계산 실수 하지 않게 조심해야 돼.
<SYNC Start=1125552><P Class=KRCC>
함수가 하나 있었는데 나 저거 가지고 풀려고 봤더니 아직 정리가 덜 되어 있어. 최대한 좀 분해해서 정리해 보자. 식이 y=log 2의 2 묶어 내고 (x+2분의a)였어.
<SYNC Start=1139466><P Class=KRCC>
이제 얘를 가지고 쪼개 보면 우리 언제 진수를 곱했냐면 밑이 같은 두 로그를 더할 때. 그러니까 찢으면 더하기로 찢어져야 되지. 그리고 이왕이면 나 문자가 나오는 걸 먼저 앞에다가 쓴다.
<SYNC Start=1151499><P Class=KRCC>
그럼 log 2의 (x+2분의a) 그리고 +1. 얘가 기본형이야. 근데 이 기본형을 가지고 뭐 했냐면 x축으로 3만큼, y축으로 b만큼 평행 이동시켰어.
<SYNC Start=1164007><P Class=KRCC>
그럼 이제 얘를 가지고 x축으로 3만큼, y축으로 b만큼 옮겨 볼 거야. 우리 평행 이동은 식에서는 부호가 반대로 들어가는 거지.
<SYNC Start=1173648><P Class=KRCC>
그럼 다시 한번 써 보면 y=log 2의 x 대신에 x-3으로 들어가야 되고, 우리 +b인데 -b 했다가 오른쪽으로 다시 넘어왔어. 그러니까 뒤에다가 +b. 얘가 옮겨 놓은 완전체야.
<SYNC Start=1189635><P Class=KRCC>
근데 여기에서 무슨 일이 일어났냐면 걔가 원점을 지난대. 이거 너무 중요한 표현이지. 지난다, 위에 있다. 저거 무슨 뜻이야? 식에다가? 그렇지. 대입하면 성립한다.
<SYNC Start=1200274><P Class=KRCC>
나 이런 말 나오게 되면 ‘저거 식에다가 넣어야겠다.’ 그 생각 해야 돼. 그리고 또 뭐 줬냐면 점근선을 줬어. 우리 로그 함수의 점근선은 누가 결정해? 그렇지. x로의 평행 이동.
<SYNC Start=1213349><P Class=KRCC>
근데 x축으로의 평행 이동 이거로 표현 가능하고 평행 이동은 부호가 반대였지. 결국 얼마큼 평행 이동 된 거냐면 3-2분의a만큼 평행 이동이 된 건데 그 값이 -2인 거지. 그럼 이제 식 넘겨 보자.
<SYNC Start=1228726><P Class=KRCC>
나 저거 a값 구하고 싶어. 결국 2분의a 넘어왔더니 +5. 그래서 a값은 10이라는 게 나왔네. 그럼 이제 a가 10인 거 나왔고 식에다가 대입 한번 해 보자.
<SYNC Start=1239540><P Class=KRCC>
결국 내가 원하는 저 평행 이동된 함수식이 log 2의 (x+2)+b+1이었던 거야. 근데 이 함수가 어디를 지난다 그랬냐면? 그렇지. 원점. 그럼 나 얘가 원점 지나니까 (0,0) 대입하면 성립해야 되지.
<SYNC Start=1256216><P Class=KRCC>
나 이제 넣는다. 나 x에다가 0 넣는 순간 무슨 일이 일어나냐면 log 2의 2야. 밑하고 진수 같으니까 1. 그래서 1+b+1 되는데 결국 b+2인데 그 값이 0 나오는 거지. (0,0)이니까.
<SYNC Start=1270178><P Class=KRCC>
여기서도 b라는 애가 -2가 나왔어. 그리고 우리 문제에서는 a하고 b 더해 달라는데. 둘 더했더니 8이 돼 주면 되겠다. 이 19번 문제는 가장 기본적인 형태의 문제였어.
<SYNC Start=1283161><P Class=KRCC>
저 함수 하나 주고, 평행 이동시켰고, 점근선하고 너희들한테 지나는 점 알려 주면서 그 안에 들어가는 문자 찾는 거. 이런 거 하기 위해서는 맨 처음에 여기 식 정리 중요했고,
<SYNC Start=1295581><P Class=KRCC>
그리고 평행 이동은 부호가 반대로 들어가. 그거 조심해야 돼. 19번 문제였어. 그리고 20번 보자. 이거 잘 풀었어? 이 20번 문제. 얘도 너희가 문자부터 시작을 좀 해야 돼.
<SYNC Start=1312460><P Class=KRCC>
형태 보면 나 y=k라는 상수 함수지. 숫자밖에 없으니까. y=k라는 상수 함수가 있었는데 두 곡선하고 만나는 점을 각각 A, B라고 부르겠대. A 여기 있고 B 여기 있어.
<SYNC Start=1325959><P Class=KRCC>
그리고 뭘 줬냐면 y축하고 평행한 직선이 저 로그 함수하고 만나는 점을 C라고 줬어. 지금 내가 가지고 있는 점은 A, B, C 이렇게 세 개의 점이 있어.
<SYNC Start=1336733><P Class=KRCC>
그리고 뭐 줬냐면 O, A, C가 한 직선 위에 있도록. 이거 지난번에 한번 봤는데. 이거 무슨 뜻이야? 이 세 점이 하나의 직선 위에 있다 그랬어. 이렇게 되면 우리가 활용할 수 있는 게 뭐지?
<SYNC Start=1349812><P Class=KRCC>
굳이 직선식을 잡아서 식에다가 점의 좌표를 대입할 게 아니라, 우리 하나의 직선식에 나란히 있단 얘기는 뭐가 같은 거야? 세 글자? 그렇지. 기울기. 이거 너무너무 중요하다.
<SYNC Start=1360651><P Class=KRCC>
앞으로도 하나의 직선 위에 있다는 표현을 주면 이거 기울기 같단 뜻이구나. 이렇게 해석할 수 있어야 돼. 하나의 직선 위에 존재하도록 실수 k값을 구해 달라 그랬어.
<SYNC Start=1371482><P Class=KRCC>
그럼 이제 이 안에서 식을 좀 찾아볼 텐데. 우리 함수를 줬어. 그럼 내가 x값 대입할 때마다 함숫값 튀어나올 거 아니야. 근데 문제가 x값이 하나도 없지.
<SYNC Start=1381957><P Class=KRCC>
그러니까 우리 시작할 때는 문자 먼저 잡는 거야. 내가 이 부분을 a라고 잡고 이 부분을 우리 b라고 한번 잡아 보자. 그럼 A라는 점의 좌표는 a 대입했을 때 구할 수 있겠지.
<SYNC Start=1394857><P Class=KRCC>
그거 식 한번 세워 볼게. k라는 그 높이는 결국 함숫값은 a를 대입했을 때 나오는데 우리 a라는 거 여기 log 4의 x에 있는 점이었어. 그러니까 저기다가 넣어 주면 log 4의 a 이만큼이 k겠지.
<SYNC Start=1408819><P Class=KRCC>
근데 k가 되는 그 점이 a 하나가 있는 게 아니야. 나 여기 B에서의 함숫값도 높이가 k인 거지. 근데 그 B가 어딘지 봤더니 b였고 그때 함수식은 뭐냐면 log 8의 x.
<SYNC Start=1420862><P Class=KRCC>
거기다 대입해 주면 log 8의 b. 이게 첫 번째 식. 그러니까 k라는 애가 내 목표인데 그 값을 구하려면 결국 a든 b든 문자 하나는 구해야겠다. 그래서 이 부분부터 식 정리해 보자.
<SYNC Start=1434652><P Class=KRCC>
저거 다시 한번 가지고 오면 우리 4는 2²이지. ½log 2의 a. 이거 괜찮아? 우리 밑에 있는 제곱, 진수에 있는 제곱 앞으로 밀려나가기로 했지. 그리고 오른쪽은 8이었어.
<SYNC Start=1448934><P Class=KRCC>
그러니까 ⅓log 2의 b. 어떤 문자로 정리하든 상관없는데 나 같은 경우는 나 b보다는 a를 더 편하게 생각하거든. 그래서 나는 시간에서 b를 다 없앨 거야.
<SYNC Start=1460765><P Class=KRCC>
그럼 양변에다가 3 곱해 주면 log 2의 b=2분의3 log 2의 a. 나 다른 거 한 거 아니고 b 앞으로 보냈고 그냥 양변에다가 3만 곱해 준 거야.
<SYNC Start=1472416><P Class=KRCC>
그럼 이거 한번 더 써주면 결국 log 2의 a의 (2분의3)제곱. 이만큼이지. 그럼 b라는 애가 뭐하고 같은 거냐면 a의 (2분의3)제곱.
<SYNC Start=1481840><P Class=KRCC>
그럼 내가 b라는 애 대신에 a의 (2분의3)제곱을 대입할 수 있게 된 거지. 이렇게 문자 하나로 정리했어. 그리고 또 하나 내가 알 수 있는 게 뭐냐면 너무너무 중요한 조건이라 그랬지.
<SYNC Start=1492969><P Class=KRCC>
그림 다시 볼게. 나 하나의 직선 위에 있다 그랬어. 그럼 기울기가 같은 거지. 나 여기다 따로 써 보면 O라는 애 있었고, A라는 애 있었고, C라는 애 있었어.
<SYNC Start=1503502><P Class=KRCC>
근데 얘가 하나의 직선 위에 있으니까 기울기가 같은 거야. 그럼 기울기라는 거 (x증가량)분의(y증가량) 이게 기울기고 하나는 원점이지.
<SYNC Start=1512519><P Class=KRCC>
그러니까 내가 굳이 기울기를 구할 때 A, C를 잡아서 문자 잔뜩 들어가게 기울기를 잡을 게 아니라 그리고 A하고 O하고 구하는 거 한 번, 그리고 C하고 O하고 구하는 거 한 번.
<SYNC Start=1526601><P Class=KRCC>
그러니까 원점하고 구하게 되면 훨씬 더 계산하기가 편해. 그래서 식 나 그렇게 잡는다. AO의 기울기 그리고 CO의 기울기 각각 구했는데 한 직선 위에 있으니까 그게 같은 거야.
<SYNC Start=1537588><P Class=KRCC>
그럼 이제 식 세워 볼게. 나 A라는 점의 좌표부터. 우리 A라는 점은 a, 식이 뭐였었냐면 log 4였으니까 log 4의 a. 그리고 C라는 점의 좌표는 나 x좌표가 b였지.
<SYNC Start=1550850><P Class=KRCC>
근데 걔가 어느 함수 위에 올라가 있었냐면 함수식이 같았어. log 4의 b. 이 상태야. 근데 기울기가 같다 그랬다. 그럼 나 처음에 OA의 기울기 구하려면 식이 a분의log 4의 a였고.
<SYNC Start=1565631><P Class=KRCC>
나 이제 OC의 기울기를 구해 보면 b분의log 4의 b 이만큼인 거지. 식 엇갈리는 거 보여? 우리 이렇게 분수식일 때는 대각선끼리 곱하면 같았지. 그거 이제 써 보자.
<SYNC Start=1578646><P Class=KRCC>
식이 결국 a log 4의 b 이만큼이 b log 4의 a였어. 근데 저 안에서 밑이 아직 정리가 덜 됐거든. 나 여기 밑을 뭐로 바꿀 수 있을까? 4는 뭐의 얼마? 그렇지. 2². 그럼 나 여기서도 2 밀려나온다.
<SYNC Start=1597827><P Class=KRCC>
분모로. 근데 여기서도 2가 밀려나와. 양쪽에 똑같이 밀려나오니까 굳이 쓰지 말자. 그럼 이제 알맹이만 써 보면 a 나왔고 log 2의 b고 그리고 오른쪽 b 나왔고 log 2의 a였어.
<SYNC Start=1611863><P Class=KRCC>
이 하나의 식 안에 a, b가 막 섞여 있어. 근데 내가 아까 정리해 놨지. 나 뭐로 정리했냐면 이 부분. b라는 애가 a의 (2분의3)제곱이었어. 그럼 이제 b 자리에다가 다 저거 넣자.
<SYNC Start=1623731><P Class=KRCC>
그럼 앞에 a 있었고 log 2에다가 b 대신에 a의 (2분의3)제곱, b 대신에 a의 (2분의3)제곱 그리고 log 2의 a였어. 우리 머리 위에 있는 2분의3 앞으로 데굴데굴 떨어질 수 있지. 식이.
<SYNC Start=1637985><P Class=KRCC>
그리고 났더니 뭐 남냐면 log 2의 a, log 2의 a 지워졌어. 그러니까 (2분의3)a=a의 (2분의3)제곱. 여기까지 이해돼? 그럼 나 이제 a 양변에다가 나눠서 없애 보자.
<SYNC Start=1651369><P Class=KRCC>
양변에서 a 나누게 되면 2분의3만 나눴고 나 a로 나눴으니까 지수에서 하나 빠져야 돼. 그러니까 ½제곱. 그럼 내가 원하는 a는 양변 제곱해 주면 4분의9제곱. 근데 이게 내 최종 목적이 아니었어.
<SYNC Start=1665132><P Class=KRCC>
우리 맨 처음 목적이 뭐야? 첫 번째 줄 다시 읽어 보자. 지금 내가 원하는 건? 그렇지. k값이었어. 근데 그 k값을 구하려면 나 이런 조건이 있었지. 그리고 a값 구했으니까 log 4의 a.
<SYNC Start=1677582><P Class=KRCC>
여기다가 대입해 주면 되겠다. 그래서 k는 결국 log 4의 a였는데 그 a가 4분의9. 그러니까 다시 쓰면 log 4의 9 -1. 근데 정리 덜 됐지. 4는 2², 9는 3² 제곱, 제곱 밀려 나와서 없어졌어.
<SYNC Start=1694961><P Class=KRCC>
결국 남은 거 log 2의 3 그리고 -1. 얘가 정답이겠다. 이 문제 풀려면 나 함수식 들어가는 내용 알아야 되고 그리고 두 번째는 기울기야. 나 하나의 직선 위에 있기 때문에 기울기가 같은 거고.
<SYNC Start=1708913><P Class=KRCC>
문제 풀 때 a, b가 섞여 있어서 어려울 수 있어. 한 문자로 정리해야 된다. 나 같은 경우는 a의 관한 식으로 정리를 했는데 너희가 편한 문자로 정리해서 하나의 식으로 표현해 주면 돼.
<SYNC Start=1720047><P Class=KRCC>
얘가 20번이었고 이제 21번 한번 보자. 얘는 그림은 복잡한데 생각보다 문제는 괜찮았지. 세 개의 정사각형이 있었어. 그림 조금 이따가 볼게.
<SYNC Start=1734018><P Class=KRCC>
그리고 너희들한텐 뭘 알려 줬냐면 정사각형인데 넓이를 알려 줬다. 맨 처음에 T₁의 넓이는 1이 되고 그리고 마지막으로 T₃의 넓이는 9가 됐대. 정사각형인데 넓이를 알려 줬어.
<SYNC Start=1746959><P Class=KRCC>
결국 뭘 알려 준 거야? 그렇지. 변의 길이를 알려 준 거야. 따로 써 보면 우리 T₁이라는 애는 넓이가 1이었어. 그러니까 한 변의 길이가 1인 거고. T₃라는 애는 누군지는 모르지만 넓이가 9였어.
<SYNC Start=1760163><P Class=KRCC>
그러니까 한 변의 길이는 3인 거고. 그리고 또 뭐 줬냐면 너희들한테 a의 10제곱의 식을 좀 구해 달래. 이제 그림하고 같이 보자. 이런 상황인 거야.
<SYNC Start=1769525><P Class=KRCC>
T₁ 있었고 T₂ 있었고 T₃ 있었고 함수식이 두 개가 나와. 근데 나는 이 T₁하고 T₃의 넓이를 알고 있어. 즉 변의 길이를 알고 있는 거야.
<SYNC Start=1779809><P Class=KRCC>
그럼 이 길이는 한 변이 1인 거고 마지막 얘는 한 변의 길이가 3인 거지. 근데 그 변의 길이라는 거 정사각형이니까 이 길이도 1이고 이 세로 길이도 3이 되겠지.
<SYNC Start=1791912><P Class=KRCC>
근데 그 각각에 대한 길이가 만나는 지점을 봤더니 함수하고 만나서 생기는 교점 부분이야. 그러니까 내가 저 변의 길이를 활용해 주면 함숫값을 구할 수 있는 건데,
<SYNC Start=1802713><P Class=KRCC>
이 문제도 앞에 문제처럼 뭐가 없냐면 x값이 없어. 내가 뭔가 x값이 있어야지 식에다가 대입해서 함숫값을 찾잖아. 그러니까 이 문제도 내가 가장 먼저 할 일은 문자를 잡는 거야.
<SYNC Start=1814060><P Class=KRCC>
앞에서부터 문자 잡자. 나 이 부분을 b, 여기를 c, 이 부분을 d라고 한번 잡아 볼게. 이해했어? 나 여기가 b, 여기가 c, 여기가 d였어. 그럼 이제 식으로 표현해 보자.
<SYNC Start=1826876><P Class=KRCC>
맨 첫 번째로 내가 뭐 알고 있냐면 b라는 그 점에서의 함숫값이 이만큼이지. 근데 길이가 1이야. 근데 x축 밑에 깔려 있어. 그러니까 함숫값은 -1. 근데 어떤 함수냐면 나 이런 함수였어.
<SYNC Start=1839600><P Class=KRCC>
이제 넣어 보자. y=log ½인데 거기다가 b 대입했어. 그랬더니 함숫값이 -1 나와야 돼. 조금 낯서니까 지수식으로 다시 한번 고쳐 보면 결국 (½)의 -¹이 b가 됐는데 우리 ½은 2의 -¹.
<SYNC Start=1856026><P Class=KRCC>
그러니까 얘 자체가 뭐가 되냐면 2가 되겠지. 이 b라는 값이 2가 된다. 머리 위에다 쓸게. 얘가 2였던 거야. 그럼 자동으로 c도 나와. 나 얘가 b잖아. 근데 1만큼 옆으로 한 칸 움직인 게 c.
<SYNC Start=1868776><P Class=KRCC>
그러니까 c는 자동으로 3. 여기까지 이해돼? 또 하나 있어. 나 변의 길이 알고 있는 게 여기 d 하나 더 있거든. 그거 대입해 볼게. 나 d에서의 변의 길이는 3이야. 근데 아래로 뚝 떨어져 있어.
<SYNC Start=1881201><P Class=KRCC>
그러니까 그때는 함숫값을 구하게 되면 -3이겠지. 다시 넣어 보자. 여기다가. log ½ 이번에는 d를 넣었어. 그랬더니 그 값이 누구냐면 -3. 그럼 얘를 가지고 다시 값으로 고쳐 보면 나 ½의 -³.
<SYNC Start=1899415><P Class=KRCC>
그만큼이 d거든. 근데 우리 2는 2의 -¹의 -³. 그러니까 2³이니까 얼마 나와? 8. 그럼 써 보자. 이 d라는 애가 누구였냐면 결국 8이었어. 다시. 여기가 2였어. 여기가 3이었고 여기가 8이야.
<SYNC Start=1917341><P Class=KRCC>
그럼 3하고 8이니까 이 길이 몇인 거야? 5인 거지. 나 이만큼이 5란 얘기는 나머지 변의 길이도 당연히 5인 거지. 그럼 내가 c라는 점을 대입했을 때 함숫값이 뭐가 돼야 돼? 5가 돼야 되지.
<SYNC Start=1930595><P Class=KRCC>
이제 c 한번 넣어 보자. 우리 c라는 거 누구였냐면 3이었어. 결국 나 여기다가 x 대신에 3을 넣잖아. 그러면 함숫값이 5 나온다. 그럼 이제 얘 정리해 볼게.
<SYNC Start=1941392><P Class=KRCC>
지수로 고쳐 보면 결국 a의 5제곱이 3인 거지. 이게 나왔어. 그러니까 내가 a를 정확하게 구할 순 없지만 5제곱을 구하는 게 나온 거야.
<SYNC Start=1951403><P Class=KRCC>
근데 우리 이 문제 a 구하는 게 아니라 뭐 구하는 문제였냐면 a의 10제곱 구하는 문제였지. 그럼 a의 10제곱은 (a의 5제곱)²이고 a의 5제곱은 3이었으니까 제곱해 주면 9.
<SYNC Start=1963775><P Class=KRCC>
따라서 정답은 9가 돼 주면 되겠다. 이 문제는 식 보면 알겠지만 그림은 어려워 보이는데 풀이가 별로 없어.
<SYNC Start=1971328><P Class=KRCC>
그러니까 너희들이 각각의 기준점에 대한 문자만 잘 잡아서 그 문자에서의 길이를 좌표로만 부호 조심해서 표현해 주면 돼. 얘가 21번 문제였어. 그리고 이제 활용 한번 보자.
<SYNC Start=1984916><P Class=KRCC>
우리 지수 함수의 활용에서는 뭐 했었어? 그렇지. 방정식. 그리고 부등식 했지. 여기도 마찬가지야. 나 로그 함수를 가지고 방정식하고 부등식을 좀 풀어 볼 텐데 맨 처음에 나오는 건 일단 방정식.
<SYNC Start=1998435><P Class=KRCC>
우리 로그가 들어간 방정식이라는 거 문자가 대부분은 진수에 있는 케이스가 많아. 예를 들면 log 2의 x가 3이었어. 나 이거 만족하는 x는 누굴까? 누구의 얼마? 그렇지. 2³. 그래서 뭐가 되는 거야?
<SYNC Start=2013991><P Class=KRCC>
8. 이런 유형의 방정식들이 등장을 해. 첫 번째 케이스는 뭐냐면 log a의 f(x). 나 이만큼이 b가 된다 그랬어. 그럼 내가 이거 만족하는 f(x)라는 값을 찾는 방법은 a의 b제곱. 이런 형태가 되겠지.
<SYNC Start=2030126><P Class=KRCC>
그리고 또 어떤 형태도 많이 등장을 하냐면 왼쪽하고 오른쪽이 아예 로그값이 똑같아. 밑이. 나 log a의 f(x)가 log a의 g(x)라 그랬어. 그럼 나 밑이 a로 같잖아. 근데 두 로그가 같다는데.
<SYNC Start=2043837><P Class=KRCC>
그럼 그러기 위해서는 누구끼리 같아야 되냐면? 그렇지. 진수끼리 같아야겠지. 이게 두 번째. 그리고 세 번째 유형은 나 만약에 식 안에서 log a의 f(x)라는 같은 모양이 반복된다.
<SYNC Start=2057020><P Class=KRCC>
우리 이거 지수 함수에서도 했었는데. 나 이렇게 같은 모양이 반복되게 되면 뭐 해야 될까? 그 부분을? 그렇지. 간단한 문자로 바꿔야 돼.
<SYNC Start=2065015><P Class=KRCC>
우리 간단한 문자 다른 문자로 바꿔 주는 걸 치환이라고 불렀지. 반복되는 그 값을 t로 치환을 할 건데 우리 지수 함수 같은 경우에는 항상 x축 위에 둥둥 떠 있었어.
<SYNC Start=2076547><P Class=KRCC>
그래서 치환하게 되면 그 치환한 값이 무조건 0보다 커야 되지. 하지만 로그는 아니야. 치환하더라도 다른 조건이 안 붙어.
<SYNC Start=2084571><P Class=KRCC>
왜냐하면 내가 알고 있는 로그 함수는 증가든 감소든 실수 전체의 범위는 같기 때문에. 대신에 중요한 건 뭐냐면 우리 로그에서는 항상 머릿속에 갖고 있어야 되는 조건이 두 개 있어.
<SYNC Start=2096345><P Class=KRCC>
첫 번째는 밑 조건. 그리고 두 번째는 진수 조건. 방정식을 풀더라도 나 거기서 나온 해가 진짜 답이 아니라 밑 조건하고 진수 조건을 만족시키는 애만 해가 될 수 있는 거야.
<SYNC Start=2108400><P Class=KRCC>
이거 너무너무 중요해. 꼭 따로 정리해 놔. 그리고 두 번째로는 부등식 보자. 이번에는 로그가 들어 있는 부등식이야. 우리 지수에서도 똑같이 log a의 f(x) 그리고 log a의 g(x).
<SYNC Start=2123353><P Class=KRCC>
이런 형태를 본 적 있을 거야. 그럼 나 이번에는 밑이 같아. 그리고 식 정리할 거야. 근데 여기에서 우리 지수에서도 부등식이 무조건 밑이 같다고 그대로 뚝 떨어지는 게 아니라,
<SYNC Start=2134520><P Class=KRCC>
밑의 범위에 따라서 달라졌지. 밑이 1보다 컸어. 즉 증가야. 우리 증가할 때는 부등호 방향을 그대로 유지하면서 아래로 뚝 떨어지는 거고.
<SYNC Start=2145629><P Class=KRCC>
두 번째, 나 만약에 이렇게 밑의 범위가 감소하는 상태야. 그럴 때는 부등호 방향이 뒤집히면서 나왔었지. 부등호 방향이 증가라면 그대로 유지되고, 감소였다면 반대로 뒤집혀.
<SYNC Start=2160188><P Class=KRCC>
근데 로그에서는 이게 끝이 아니야. 나 뭐 생각해야 되냐면 f(x)하고 g(x)가 둘 다 진수야. 그러니까 아무 조건이 없더라도 진수는 둘 다? 그렇지. 0보다 커야지.
<SYNC Start=2170202><P Class=KRCC>
그래서 이게 전부가 아니라 그런 애들도 0보다 커야 되고, 마찬가지로 이쪽도 g(x)보다 큰 게 전부가 아니라 0보다 커야 돼. 그래서 우리 지수에서는 치환할 때 부호가 중요하고,
<SYNC Start=2181483><P Class=KRCC>
로그에서는 진수 조건, 밑 조건이 중요한 거야. 잊으면 안 돼. 이거 때문에 많이 틀려. 밑 조건, 진수 조건. 애들이 몰라서 틀리는 게 아니라 밑 조건, 진수 조건을 빼 먹어서 많이 틀리니까
<SYNC Start=2192500><P Class=KRCC>
꼭 머릿속에 가지고 있어야 돼. 그리고 필수 유형 한번 보자. 이 필수 유형 문제가 이차 함수 그리고 일차 함수랑 같이 나오는 유형의 문제였지.
<SYNC Start=2204190><P Class=KRCC>
이차 함수가 하나 있었고 직선식이 있었는데 너희들한테 뭐 구해 달라 그랬냐면 이 부등식을 만족시켜 주는 x값의 합. 그럼 이제 내가 할 일은 쟤부터 정리해야겠다.
<SYNC Start=2215561><P Class=KRCC>
근데 얘를 정리하려고 봤더니 밑이 안 맞아. ⅓이야. 그럼 우리 ⅓은 3의 -¹이지. 그 -¹ 앞으로 뚝 떨어져서 -로 바뀌었어. 그리고 내가 오른쪽으로 넘길 거야. 양쪽 로그 똑같아지게.
<SYNC Start=2229315><P Class=KRCC>
그럼 무슨 식으로 바뀌냐면 log 3의 f(x)였고 그리고 오른쪽으로 넘어갔으니까 log 3의 (x-1). 이거 이해돼? 나 이거 -1 바뀌었고 넘겼고. 그럼 이제 log, log 똑같아. 그리고 3이니까 증가.
<SYNC Start=2245662><P Class=KRCC>
그러면 그대로 뚝 떨어질 건데 부등호 방향 그대로 유지. 무슨 얘기냐면 나 f(x)라는 애가 x-1이라는 일차 함수보다 작거나 같아야 돼. 우리 함수가 작단 얘기는 더 밑에 쪽에 있단 얘기다.
<SYNC Start=2260220><P Class=KRCC>
그럼 이제 찾아보자. f(x)는 여기 있는 이차 함수였고 x-1은 일차 함수였어. 일단 둘이 같은 건 언제냐면 둘이 만나는 순간이 이렇게 같겠지.
<SYNC Start=2269755><P Class=KRCC>
그리고 작아져야 되는데 그 작아지는 부분을 좀 색칠해 보면 어느 부분이 작아? 이차 함수가 더 작아야 되니까 이 부분. 그리고 이차 함수가 더 작아야 되니까 이 아래 부분. 이렇게야.
<SYNC Start=2283310><P Class=KRCC>
근데 이만큼이 답이야, 아니야? 절대 아니야. 우리 로그를 가지고 방정식, 부등식 풀 때는 그냥 단순히 푸는 게 중요한 게 아니라 뭐 체크해야 된다 그랬어? 진수 조건, 밑 조건.
<SYNC Start=2295187><P Class=KRCC>
그럼 내가 갖고 있던 로그가 두 개였으니까 진수 조건도 두 개가 돼야 돼. f(x) 그 자체도 0보다 커야 되고 동시에 x-1도 0보다 커야 돼. 그러니까 x는 누구보다 커야 되냐면 1보다 커야 돼.
<SYNC Start=2310235><P Class=KRCC>
그럼 나 f(x)라는 애가 0보다 커야 된다. 그럼 f(x) 이차 함수였고 0이 되는 기점은 여기 있어. 여기서 0보다 큰 구간만 진짜. 그러니까 내가 색칠했던 이 아래 부분들은 해당되는 게 없는 거야.
<SYNC Start=2322799><P Class=KRCC>
근의 방정식을 만족할지는 몰라도 진수 조건 때문에 제외돼야 돼. 그리고 또 1보다 커야 된대. 나 1보다 큰 쪽은 만족하네. 진짜 범위는 여기서부터 여기까지.
<SYNC Start=2333514><P Class=KRCC>
식으로 써 주면 결국 나 4는 들어가고 7은 안 들어가고 이 범위지. 우리 문제에서는 만족하는 자연수 다 더해 달라는데. 그래서 4, 5, 6 세 개 더해 주면 15가 돼 주면 되겠다.
<SYNC Start=2348761><P Class=KRCC>
이 필수 유형 문제는 너희들이 로그에 들어간 부등식 풀 수 있어야 되고. 그리고 또 해야 되는 게 이거 읽어내는 거야. 그래프가 크다, 작다는 거 높이였어.
<SYNC Start=2359494><P Class=KRCC>
크다면 더 위에 있어야 되고 작다면 더 밑에 있어야 되고. 얘가 필수 유형 문제였어. 그리고 22번 한번 해 보자. 아마 이쪽 부분은 그래도 다른 함수 문제들보다는 조금 더 쉽게 느껴질 거야.
<SYNC Start=2374386><P Class=KRCC>
나 방정식이 하나가 있었는데 얘의 해를 α라고 하겠대. 근데 풀려고 봤더니 나 왼쪽은 로그가 하나만 있어서 괜찮아. 근데 오른쪽이 아직 정리가 덜 됐지.
<SYNC Start=2384810><P Class=KRCC>
오른쪽부터 로그를 한 덩이로 만들어 보자. 나 1이라는 거 다시 쓰면 log 3의 3인 거고 나 앞에 있던 2는 원래 어디 있었으니까 뚝 떨어진 거야? 그렇지. 머리 위에.
<SYNC Start=2395796><P Class=KRCC>
그래서 머리 위로 다시 올렸어. 그랬더니 log 3의 (x+1)². 괜찮아? 그럼 이제 한 덩어리로. 나 밑이 같으니까 로그끼리 합칠 수 있고 결국 3(x+1)². 근데 나 우변 정리한 거지.
<SYNC Start=2411839><P Class=KRCC>
근데 그 우변이 뭐하고 같냐면 원래 식이었던 log 3의 좌변 (4x+11)하고 같은 거야. 나 왼쪽, 오른쪽 밑이 3으로 같고 그러니까 진수끼리만 같아지면 되겠네. 이만큼.
<SYNC Start=2425384><P Class=KRCC>
얘만 떨어뜨려서 풀어 보자. 나 x²이었는데 3 곱해져 있으니까 3x², 2x인데 6x, 1이었으니까 3. 이만큼이 좌변이고 이제 우변. 4x+11. 저기로 넘어간다. 그러면 3x²+2x-8=0이라는 방정식이 됐어.
<SYNC Start=2446494><P Class=KRCC>
이거 우리가 너무 잘 풀 수 있는 기본형인 거지. 3하고 1, 4하고 2. 곱했고 6, 4였고 +-여서 이렇게 식 정리됐어. 여기서 나오는 식이 하나는 (3x-4) 그리고 하나는 (x+2)=0. x값이 두 개가 나와.
<SYNC Start=2464614><P Class=KRCC>
이럴 때 잘 봐야 돼. 나 x가 하나는 3분의4고 그리고 다른 x는 -2야. 보통 이걸 내가 학교에서 서술형 같은 문제로 내 보면 애들이 열심히 계산하고 여기서 끝난다.
<SYNC Start=2476807><P Class=KRCC>
근데 우리 지금 로그 문제 풀고 있어. 중요한 건 밑 조건, 진수 조건. 그럼 여기서 나온 해가 전부가 아니라 밑하고 진수 조건 만족하는지 체크해야 돼. 맨 처음에 4x+11 이거 진수였고,
<SYNC Start=2489549><P Class=KRCC>
그리고 x+1 얘도 진수였지. 이런 거 풀 때는 부등식이라면 범위를 정확하게 알아야 되지만 방정식이라면 내가 구한 해를 가지고 대입해서 확인만 해 주면 돼.
<SYNC Start=2501401><P Class=KRCC>
근데 -2를 체크하려고 봤더니 대입하면? 그렇지. 이거 음수 나오지. 그러니까 탈락. 따라서 x값은 3분의4. 근데 우리가 그 구한 해를 α라고 구할 거고 진짜 구하는 건 12α.
<SYNC Start=2514537><P Class=KRCC>
12×3분의4가 되니까 정답은 16이 나와 주면 되겠다. 이 22번 문제는 가장 기본 형태의 방정식이었어. 열심히 왼쪽 한 덩어리, 오른쪽 한 덩어리 만들어 주고,
<SYNC Start=2526920><P Class=KRCC>
양쪽 방정식 풀어서 나온 해를 가지고 거기서 끝나면 안 돼. 진수 조건, 밑 조건 반드시 한 번 더 체크. 얘가 22번 문제였고, 이제 23번 한번 보자.
<SYNC Start=2539855><P Class=KRCC>
얘도 방금 전에 했던 방정식의 모양인데 얘가 좀 더 어려웠지. 내용이. 일단 왼쪽에 있는 식을 좀 봤더니 로그가 두 개야. 불편하다. 그렇지? 우리 로그는 한 덩어리여야지 문제 풀기가 편한데.
<SYNC Start=2552744><P Class=KRCC>
로그를 가지고 하나로 만들어 보자. 밑이 같은 두 로그를 더했으니까 진수끼리는 곱하기만 해 주면 되겠네. 이만큼이 a인 거야. 이렇게 써 놓고 났더니 나 이거 조금 더 만만한 지수로 바꿔 볼까?
<SYNC Start=2568190><P Class=KRCC>
얘가 한 번 밑은 영원한 밑이야. 나 로그에서의 밑이 2니까 지수에서의 밑도 2야. 그리고 a 머리 위로 올라가고 얘가 (x+3)(5-x)인 거야.
<SYNC Start=2579652><P Class=KRCC>
근데 이 식이 근이 어떻게 나오냐면 서로 다른 두 실근이 나온대. 우리 지금 방정식 풀고 있지. 근데 만약에 방정식 문제가 풀기 어려워. 그럴 때는 뭐로 바꿔서 풀었었어? 그렇지. 함수로.
<SYNC Start=2595076><P Class=KRCC>
얘도 마찬가지야. 지금 너희들이 이 방정식을 풀기가 어려워. 왜냐하면 내가 풀 수 있는 방정식은 한정되어 있거든. 근데 너희가 풀 수 있는 근에 대한 형태가 아닐 거야.
<SYNC Start=2605093><P Class=KRCC>
그러니까 우리가 이 방정식을 푸는 게 아니라 각각을 함수라고 생각하고 그 함수에서 방정식의 근이 두 함수가 만나서 생기는 교점이었지. 그래서 교점 문제로 바꿔서 풀 거야.
<SYNC Start=2617106><P Class=KRCC>
그럼 방정식의 근이 서로 다른 두 실근이 된단 얘기는 얘를 가지고 함수 그래프 그렸을 때 만나서 생기는 교점이 서로 다른 거 두 개가 나온단 얘기겠지.
<SYNC Start=2627114><P Class=KRCC>
얘도 함수, 얘도 함수라고 한번 생각해 보자. 그럼 각각을 내가 함수라고 봤을 때 하나는 y=2의 a제곱, 다른 하나는 내가 여기서 마이너스가 뒤에 있어서 불편해. 마이너스 뽑아서 쓸게.
<SYNC Start=2639731><P Class=KRCC>
마이너스 뽑아서 (x+3)(x-5) 이렇게 정리할 수 있겠다. y=2의 a제곱이니까 이거 무슨 함수냐면 지수 함수 아니다. 상수 함수지. 나 a라는 거 하나의 고정된 수니까. 그리고 또 y라는 거 이렇게 나왔어.
<SYNC Start=2655119><P Class=KRCC>
얘는 이차 함수. 이차 함수 그림 그려 주고 y=2의 a제곱이라는 상수 함수 그려서 교점이 두 개 나와야 되는 거야. 그럼 이제 완전체인 이차 함수 먼저 그림 한번 그려 볼게.
<SYNC Start=2667074><P Class=KRCC>
내가 가지고 있는 저 이차 함수는 교점이 어디 어디 있어? 하나는? 그렇지. -3. 다른 하나는 5. 그리고 내가 갖고 있는 게 최고차가 마이너스다.
<SYNC Start=2677828><P Class=KRCC>
그러니까 식이 어떻게 돼야 되냐면 위로 볼록인 이런 모양이 되겠지. 근데 얘하고 y=2의 a라는 상수 함수야. 그러니까 내가 만약에 이쯤 존재해. 그럼 교점이 몇 개 나와? 두 개 나와.
<SYNC Start=2690627><P Class=KRCC>
이런 거 찾는 거야. 이 밑은 전부 다 교점이 두 개씩 나와. 근데 이 문제는 너희들이 진수 조건을 생각 안 해도 답은 나온다. 근데 만약에 서술형이었다면 감점됐을 거야.
<SYNC Start=2701934><P Class=KRCC>
여기서 끝나는 게 아니라 항상 뭐 생각해야 돼? 진수 조건. 근데 진수를 좀 봤더니 첫 번째 거 x+3. 두 번째 거 5-x. 재 가지고 진수 조건 한번 써 보자. 여기다 쓸까?
<SYNC Start=2713995><P Class=KRCC>
첫 번째로 x+3이라는 거 진수니까 양수. 그러니까 x는 -3보다 커야 돼. 두 번째로, 나 5-x도 진수니까 양수. 그러니까 x는 5보다 작아야 돼.
<SYNC Start=2727182><P Class=KRCC>
그럼 내가 갖고 있는 범위에서 어디가 진짜냐면 우리 -3보다는 커야 되고 5보다는 작은 이 범위 있지. 여기만 진짜인 거야. 그러니까 이 범위 안에서만 서로 다른 두 실근을 갖는 조건을 찾는 거야.
<SYNC Start=2742196><P Class=KRCC>
근데 어디만 아니면 계속 교점 두 개 생겨? 나 그어 볼게. 봐 봐. 교점 몇 개야? 두 개지. 교점 몇 개야? 두 개지. 근데 언제 교점이 하나가 되냐면 꼭지에 닿는 순간만 하나 생기지.
<SYNC Start=2756129><P Class=KRCC>
그럼 이 꼭지에 닿는 순간보다 작기만 하면 되겠다. 근데 그 꼭지가 어디냐면 꼭짓점인 거잖아. 그리고 이차 함수에서의 특징은 좌우 대칭이었지. -3, 5였어. 둘 더하면 2, 가운데는 1.
<SYNC Start=2770968><P Class=KRCC>
우리 1 대입해 보면 값이 16이겠다. 그럼 내가 원하는 건 2의 a제곱이라는 애가 16보다 작아야 되고. 우리 16이라는 건 2⁴이어야 되고 그러니까 a는 4보다 작아야 되지.
<SYNC Start=2785946><P Class=KRCC>
근데 우리 문제에서는 정수 a의 최댓값이래. 나 4보다 작은 정수에서 가장 큰 거는 3. 그러니까 이 문제 정답은 3이 돼 주면 되겠다.
<SYNC Start=2795825><P Class=KRCC>
이 문제 풀기 위해서는 맨 첫 번째는 로그에 대한 식부터 정리해 주고, 그리고 그래프 그려서 직접 너희들이 한번 움직여 봐야 돼.
<SYNC Start=2804210><P Class=KRCC>
그리고 방정식을 풀기가 어려우니까 함수 문제로 바꿔서 교점의 개수가 두 개인 문제로 바꿔 푼 거야. 이 23번이 오늘의 마지막 문제였어. 뭐 했나 정리 한번 좀 해 보자.
<SYNC Start=2819851><P Class=KRCC>
근데 문제 자체는 지난 시간 게 오히려 더 어렵지 않았어? 로그에 대한 개념이 들어가서 오히려 문제는 조금 더 쉽게 느껴졌을 거야. 오늘 뭐 했냐면 처음으로는 로그 함수.
<SYNC Start=2830378><P Class=KRCC>
우리 로그 함수에서 중요한 특징들, 그리고 기본형보다는 움직움직된 상태가 많이 나와. 그래프가 어떻게 변하는지, 점근선을 결정해 주는 건 누구인지 그 부분을 중점으로 봐야 돼.
<SYNC Start=2842305><P Class=KRCC>
그리고 두 번째로는 이차 함수. 우리 마지막에 문제 풀 때도 그렇고 이 이차 함수라는 게 수능에 들어가는 직접적인 범위는 아니지만 옛날에 배운 개념이라서 계속 나와.
<SYNC Start=2853146><P Class=KRCC>
이차 함수가 등장을 했을 때 대칭축을 찾는다든지 그래프를 그린다든지 그런 부분들에서는 꼭 제대로 체크할 수 있어야 된다. 오늘도 너무너무 고생 많았고 다음 시간에 5강에서 보자. 안녕.
<SYNC Start=2866610><P Class=KRCC>
꿈을 전달하는 꿈틀이의 4일 던던. 내가 좋아하는 거 1개 먹기. 나한테 칭찬 2개 하기. 수강 후기 댓글 10개 쓰기.
<SYNC Start=2879874><P Class=KRCC>
&nbsp;
</BODY>
</SAMI>