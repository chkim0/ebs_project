<SAMI>
<HEAD>
<TITLE>(주)기록법인상생 자막 2015</TITLE>
<STYLE TYPE="text/css">
<!--
P { margin-left:8pt; margin-right:8pt; margin-bottom:2pt;
    margin-top:2pt; font-size:12pt; text-align:left;
    font-family:굴림, Arial; font-weight:normal; color:white;
    background-color:#405A8D; }
.KRCC { Name:한국어; lang:ko-KR; SAMIType:CC; }
#STDPrn { Name:Standard Print; }
#LargePrn { Name:Large Print; font-size:20pt; }
#SmallPrn { Name:Small Print; font-size:10pt; }
-->
</STYLE>
</HEAD>
<BODY>
<SYNC Start=10356><P Class=KRCC>
안녕하세요. 얘들아 오늘도 사진을 좀 준비했는데 오늘 준비하는 사진은 5월에 할 일. 우리 벌써 5월이 얼마 안 남았다.
<SYNC Start=20032><P Class=KRCC>
근데 시간이 진짜 점점 더 빠른 게 애들한테 막 새해 복 많이 받으라고 인사했던 게 엊그제 같은데 벌써 올해가 반을 향해 달려가고 있는 거야.
<SYNC Start=29291><P Class=KRCC>
그래서 얼마 남지 않은 5월을 위한 할 일 세 가지를 준비했어. 그래서 일어나지 않은 일 걱정 안 하기. 나 저거 되게 많이 하거든.
<SYNC Start=37515><P Class=KRCC>
근데 원래 사람들이 걱정하는 일 중에 실제로 일어나는 건 정말 10%도 되지 않는다고 하더라고. 그리고 두 번째로는 내 사람들과 작은 추억 만들기.
<SYNC Start=47470><P Class=KRCC>
그리고 마지막으로는 작은 일에도 감사하며 행복하기. 그래서 우리 애들 같은 경우에는 이렇게 학습 다이어리가 있는데 거기다가 감사 일기를 써.
<SYNC Start=57111><P Class=KRCC>
그래서 오늘의 감사한 일 세 가지를 쓰는데 진짜 이것저것 막 감사한다? 급식이 맛있어서 감사합니다. 막 이런 거 쓰고 그래. 그래서 너희들도 이건 오늘의 과제야.
<SYNC Start=67470><P Class=KRCC>
수강 후기에 오늘의 감사했던 일 있지? 오늘 너희들이 행복했던 일, 감사했던 일 그렇게 세 가지를 써서 나한테 보내 주면
<SYNC Start=75658><P Class=KRCC>
나도 이제 다음 번에 읽어 보고 다음 강의에서 나도 감사했던 일 세 가지 너희들한테 소개해 줄게. 그래서 준비한 사진이었고 우리 이제 오늘부터는 새로운 과목을 좀 들어가 볼 거야.
<SYNC Start=87778><P Class=KRCC>
수학Ⅱ라는 과목이고 아무래도 공부하는 친구들 중에는 이 수학 2가 가장 부담되는 영역일 것 같아. 좀 어려운 문제들이 많이 출제되는 부분이기도 하고
<SYNC Start=98700><P Class=KRCC>
좀 극한의 미분, 적분까지 수학적인 내용들이 많이 등장하는 파트거든. 나도 최대한 좀 예시들도 많이 들어주고 기호들이랑 친해질 수 있도록 설명을 할게.
<SYNC Start=109674><P Class=KRCC>
그래서 맨 처음으로 등장하는 내용은 함수의 극한이야. 우리가 앞에서 했었던 수열 같은 경우는 정말 막 따박따박한 그런 느낌이 있었잖아.
<SYNC Start=119318><P Class=KRCC>
10번째 항, 30번째 항 이렇게 특정한 항의 값을 물어보는 문항들이 많았지? 근데 이 함수의 극한은 리미트라는 기호가 등장하면서 뭔가 느낌적인 느낌인 게 되게 많다?
<SYNC Start=131227><P Class=KRCC>
그래서 특정한 항보다는 ‘그래서 걔가 어떻게 되는데?’ ‘어떻게 달라지는데?’ ‘어디를 향해서 움직이는데?’ 그런 걸 물어보는 게 함수의 극한이야.
<SYNC Start=141414><P Class=KRCC>
그래서 x값이 움직이는 영역을 좀 생각해 보면 이제 x=3 그럼 특정한 값이 아니라 x라는 값이 점점점점 움직인다? 그렇게 움직일 수 있는 케이스가 크게 세 가지가 있어.
<SYNC Start=153509><P Class=KRCC>
첫 번째는 x가 이렇게 움직여. 우리 저 기호 무슨 뜻? 그렇지. 무한대였지. 점점점 커진다는 얘기지? 특히나 얘를 가지고 뭐라고 불렀었냐면 양의 무한대라는 표현을 썼어. 양의 무한대.
<SYNC Start=167794><P Class=KRCC>
그럼 내가 쟤를 양의 무한대로 부르겠다는 얘기는 음의 무한대도 존재한다는 얘기지. 그래서 점점점점 작아진다는 표현을 쓰기도 하지만
<SYNC Start=176599><P Class=KRCC>
그거보다는 음의 방향으로 커진다는 표현을 조금 더 많이 써. 그래서 얘를 가지고 음의 무한대라고 불렀어.
<SYNC Start=186050><P Class=KRCC>
근데 우리가 수직선을 상상을 하나 했을 때 0이라는 점을 기점으로 해서 점점점점 커지거나 점점점점 작아지는 것만 존재하는 건 아니지.
<SYNC Start=195886><P Class=KRCC>
우리 어떤 특정한 하나의 실수 값에 가까워질 수도 있잖아. 만약에 내가 그런 값을 a라는 값으로 하나 설정을 한다면 이 a라는 값에 가까워질 수 있는 방법에는 뭐가 있을까?
<SYNC Start=208763><P Class=KRCC>
a라는 값에 가까워지는 방법은? 그렇지. 양쪽에서 다가오는 방법이 있지. 그래서 왼쪽에서 다가올 때를 우리가 좌극한이라는 표현을 썼어.
<SYNC Start=217934><P Class=KRCC>
그리고 기호로는 마이너스를 썼던 게 실제로 a의 왼쪽에서 다가오니까 a보다는 조금 작은 애들이지? 반대로, 오른쪽에서 다가오는 값이 있을 텐데 그걸 우리가 우극한이라는 표현을 썼고
<SYNC Start=231226><P Class=KRCC>
이 오른쪽에 있는 애들은 a보다 조금 크지? 그래서 더하기라는 기호를 썼어. 그래서 왼쪽에서 다가오는 걸 a의 좌극한이라고 불렀고 오른쪽에서 다가오는 걸 a의 우극한이라고 불렀지.
<SYNC Start=245378><P Class=KRCC>
그래서 함수의 극한을 이해하기 위해서는 적어도 이 3개의 기호부터 좀 연습을 해 봐야겠다. 점점점 커지는 양의 무한대, 음의 방향으로 커지는 음의 무한대,
<SYNC Start=256059><P Class=KRCC>
그리고 하나의 실수 값으로 다가가는데 그렇게 다가가는 방향에는 왼쪽, 오른쪽. 좌극한과 우극한 이렇게 두 가지 방향성이 있어.
<SYNC Start=264522><P Class=KRCC>
그러면 우리 함수 가지고 진짜 한번 연습을 좀 해 보자. f(x)라는 함수가 하나 있었는데 x+3이라는 일차 함수였어. 그럼 이거 그림 하나만 좀 그려 볼게.
<SYNC Start=276579><P Class=KRCC>
지금 내가 가지고 있는 저 함수는 기울기가 1이야. 즉 점점점점 커지지. 그리고 y절편은 3이면서 x절편은 -3이었어. 이렇게 생긴 직선식인 함수가 하나 있는 거야.
<SYNC Start=290949><P Class=KRCC>
근데 그랬을 때 극한값 몇 가지를 한번 구해 보자. 그래서 lim x가 무한대로 움직이고 있어. 점점점 커져. ‘그때 f(x)는 어떻게 되니?’ 이렇게 물어보는 게 극한이지.
<SYNC Start=304651><P Class=KRCC>
x가 커질 때 그때 f(x)는 어떻게 되고 있을까? 응. 같이 커지고 있어. 점점점점 끝없이 커지고 있어. 우리 그걸 무슨 기호로 썼어? 양의 무한대라는 표현을 썼지.
<SYNC Start=317858><P Class=KRCC>
두 번째, lim x가 마이너스 무한대로 움직여. 그때 f(x)는 어떻게 되니 물어보고 있어. 즉 x가 점점점점 작아진다? 그때 f(x)는 어떻게 되고 있냐면 같이 작아지고 있지.
<SYNC Start=332679><P Class=KRCC>
그러니까 얘는 마이너스 무한대가 되겠다. 즉 음의 무한대. 그럼 이번에는 특정한 상수값 한번 해 볼까? x가 5로 움직여. 그때 f(x)야.
<SYNC Start=344017><P Class=KRCC>
x=5라는 값에 가까워져. 한 이쯤 5가 있었어. 그럼 5라는 값에 가까워질 수 있는 방법에는 두 가지가 있지? 5의 왼쪽에서 오는 좌극한. 그랬을 때 함수는 여기 값으로 가까워지겠다.
<SYNC Start=358205><P Class=KRCC>
다시 한 번, 5의 오른쪽에서 오는 우극한. 그때는 그래프 타고 마찬가지로 이 값에 가까워지는데 얘 누구일까? 지금 여기 있는 이 값은 누구에서의 얼마하고 같아?
<SYNC Start=371891><P Class=KRCC>
그렇지. 5에서의 함숫값하고 같지. 지금 5에서의 함숫값은 뭐가 되냐면 8이 나오겠지. 그래서 이때 극한값은 8인 거야.
<SYNC Start=381211><P Class=KRCC>
그래서 함수라는 애가 통통 튀지 않고 예쁘게 잘 이어져 있다면 사실 어디로 가까워지냐를 물어봤을 때에는 그 값에서의 함숫값에 가까워져.
<SYNC Start=391251><P Class=KRCC>
그렇지? 좀 더 문제가 익숙해지면 이런 거 나왔을 때 애들 어떻게 풀어? 그냥 x에다가 5를 대입해 버리지? 왜냐하면 그 값에 결국 가까워지니까.
<SYNC Start=400245><P Class=KRCC>
그리고 이렇게 특정한 실수 값에 가까워질 때를 우리가 ‘수렴한다’라는 표현을 썼어. 그 값으로 점점점 몰려간다는 얘기지.
<SYNC Start=408253><P Class=KRCC>
그리고 그때 8이라는 이 값을 뭐라고 불렀었냐면 극한값이라고도 부르고 수렴한다는 뜻에서 수렴 값이라고 부르기도 했었지.
<SYNC Start=419904><P Class=KRCC>
그리고 이렇게 하나의 값에 가까워지지 않고 커지거나 작아지는 이런 케이스를 ‘발산한다’라는 표현을 썼을 거야. 근데 여기서 우리 하나만 더, 지금 내가 여기서 그래프를 좀 바꿔 볼 건데
<SYNC Start=431820><P Class=KRCC>
우리 아까는 예쁘게 쭉 이어져 있었잖아. 근데 지금은 내가 5가 되는 그 점에서 구멍 뻥 뚫었어. 이렇게. 아까 그린 그래프하고 형태는 같은데 구멍 뻥 뚫었어.
<SYNC Start=443781><P Class=KRCC>
그 얘기는 5라는 값에서 함숫값이 정의되지 않는단 얘기지? 근데 우리 마지막 케이스 봐 봐. 저 그림에서 만약에 5에서의 극한값을 물어봐. 그때는 답이 뭐가 될까?
<SYNC Start=456020><P Class=KRCC>
8인 걸까, 존재하지 않는 걸까? 우리 극한값이라는 게 뭐였어? 그 점에서의 함숫값을 묻는 게 아니지. 이거 어디로 가까워지니? 어디를 향해서 움직이니? 그걸 물어보는 거야.
<SYNC Start=469134><P Class=KRCC>
구멍이 뻥 뚫려 있더라도 그 값을 향해서 움직이고 있다는 건 동일하지? 그래서 그때도 이 순간에서는 극한값이 8이 되는 거야.
<SYNC Start=478335><P Class=KRCC>
그래서 함숫값의 존재성하고 극한값하고는 관련이 없어. 어디를 향해서 움직여? 그걸 물어보는 게 극한인 거야. 그래서 이런 부분 조심해야 돼. 그럼 이번에는 우리 예제 하나만 더 보자.
<SYNC Start=491336><P Class=KRCC>
지금 이번에 내가 그리는 그림은 그래프가 좀 어떻게 생겼냐면 끊겨 있어. 여기가 3이라는 값이었고 왼쪽 그래프, 그리고 여기가 오른쪽 그래프야.
<SYNC Start=504013><P Class=KRCC>
그 왼쪽 그래프에서는 1. 이 오른쪽 그래프에서는 2였어. 여기서 한번 읽어 보자. 이 함수에 대해서는 x가 지금 3으로 움직여. 그때 뒤에다가 플러스 썼는데 저거 무슨 뜻?
<SYNC Start=518798><P Class=KRCC>
그렇지. 3보다 조금 커. 그러니까 우극한이지? 오른쪽에서 다가와. 3한테 가는데 오른쪽에서 다가와? 오른쪽에서 다가와. 그때 값 몇인 거야? 2인 거지.
<SYNC Start=529173><P Class=KRCC>
그리고 x가 3으로 가는데 이번에는 마이너스 써어. 마이너스 썼단 얘기는 왼쪽에서 다가와. 왼쪽에서 다가와. 그 값 누구인 거야? 1.
<SYNC Start=539767><P Class=KRCC>
근데 이번에 문제, lim x가 3으로 가는데 그때 f(x) 궁금해. 나 이거 무슨 뜻인 거냐면 3에서의 극한값 물어보는 거지?
<SYNC Start=548872><P Class=KRCC>
3에서의 극한값은 3에 가까워질 때 함수는 어디에 가까워지느냐를 물어보는 건데 지금 좌, 우극한이 달라. 그럼 내가 얘를 2라고 대답해야 돼, 1이라고 대답해야 돼?
<SYNC Start=561452><P Class=KRCC>
이때는? 그렇지. 존재하지 않는 거였지. 그래서 좌, 우극한이 다르다면 극한값이 존재하지 않는 거였어. 그래서 우리 극한값이라는 게 항상 존재하는 게 아니라
<SYNC Start=572716><P Class=KRCC>
왼쪽에서 오는 애랑 오른쪽에서 오는 애가 만날 수 있어야 돼. 단 함숫값의 존재랑은 관련이 없었어. 하지만 향해서 움직이는 값은 같아야 돼.
<SYNC Start=582999><P Class=KRCC>
이 내용 기억하면서 우리 다시 한 번 극한값의 정의를 좀 해 보자. 그래서 지금 내가 써 준 예제들로 이해한 다음 봐야 된다, 수식을. 그래서 이번엔 진짜 정의야.
<SYNC Start=597813><P Class=KRCC>
그래서 앞으로 너희들이 어떤 문구들을 보게 될 거냐면 lim x가 a로 갈 때 f(x). 이 극한값이 존재한다 그랬어. 존재한다. 우리 극한값이라는 게 항상 존재하는 게 아니었지?
<SYNC Start=612289><P Class=KRCC>
방금 전에 배웠어. 왼쪽에서 오른쪽에서 오는 애가 만날 수 있어야 돼. 우리 왼쪽에서 오는 극한을 뭐라고 불렀었냐면 좌극한이라고 불렀고
<SYNC Start=622363><P Class=KRCC>
결국 극한값이 존재하려면 일단 좌극한이 존재해야 되지. 그리고 두 번째, lim x가 a로 가는데 이번에는 오른쪽에서 와. 즉 우극한이야. 그때의 값도 존재해야 돼.
<SYNC Start=636206><P Class=KRCC>
근데 이 둘이 각각 존재한다고 되는 게 아니라 마지막 너무너무 중요한 조건 세 번째, 그 두 개가 어때야 되는 거야? 같아야 되는 거야.
<SYNC Start=645312><P Class=KRCC>
그래서 극한 값이 존재한다는 표현을 주게 되면 왼쪽에서 오는 애랑 오른쪽에서 오는 애가 이렇게 만날 수 있으면 돼. 함숫값의 존재성이랑은 관련이 없다.
<SYNC Start=655521><P Class=KRCC>
그래서 얘가 함수의 극한에 대한 얘기였고 우리 1번 문제 한번 보자. 그래서 이쪽 파트에서 우리 그래프 읽어 내는 문제가 꼭 한 문제씩 나오는 거 알지? 첫 장에.
<SYNC Start=667083><P Class=KRCC>
그래서 그래프가 그림과 같다 그랬고 읽을 수 있으면 돼. 그림 잘 따라가야 된다. x가 지금 0한테 가고 있어. 근데 0 뒤에 마이너스 있다. 이거 무슨 뜻이야?
<SYNC Start=678126><P Class=KRCC>
좌극한. 0보다 좀 작단 얘기지. x가 0으로 가긴 가는데 왼쪽에서 와. 그때 f(x)는 누구한테 가고 있어? 2한테 가고 있어. 근데 여기 구멍 뻥 뚫렸는데 저거 괜찮아? 괜찮지.
<SYNC Start=692209><P Class=KRCC>
우리 극한값은 함숫값하고 관련이 없었다. 그래서 얘는 지금 몇이 되는 거냐면 2였어. 똑같이 한 번 더, 나 이번엔 1로 가는데 1 뒤에 플러스 있어. 즉 1보다 조금 커. 오른쪽에서 와.
<SYNC Start=705863><P Class=KRCC>
1보다 큰 쪽에서 다가온다. 그럼 그때 함수 그래프 타고 움직였더니 어디를 향해서 가고 있냐면 -1을 향해서 움직이고 있지. 둘을 더해 달라 그랬어. 그러니까 값은 1이 나와 주면 되겠다.
<SYNC Start=720653><P Class=KRCC>
그래서 가장 기본 형태의 문제야. 그 자체로 그래프 따라가서 읽어 주는 유형. 근데 이거 말고 실제로 우리가 조금 더 어렵게 느끼는 문제는 이 3번 같은 유형이지. 3번 한번 보자.
<SYNC Start=735249><P Class=KRCC>
지금 f(x) 그래프가 그림과 같았어. 이렇게 생겼대. 근데 앞부분까진 괜찮아. x가 0으로 가는데 뒤에 마이너스 있어. 0으로 가는데 왼쪽에서 와. 0으로 가는데 왼쪽에서 와.
<SYNC Start=748530><P Class=KRCC>
그러니까 그때 값은 -1. 근데 문제는 오른쪽이야. 저 오른쪽에 있는 식을 풀려고 봤더니 f(x)만 있는 게 아니라 f(-x)도 있어.
<SYNC Start=759086><P Class=KRCC>
근데 우리가 이런 거 풀 때 일단 리미트는, 곱하기에 대해서 각각 수렴한다면 분배가 가능하지. 그럼 얘 가지고 풀어 보면 lim x가 1보다 커. 우극한. 그때 f(x).
<SYNC Start=773191><P Class=KRCC>
그리고 lim x가 1보다 큰데 그때 -x 이렇게야. 그럼 이 값 정도는 바로 읽을 수 있겠다. x가 1로 가는데 오른쪽에서 다가와. 이렇게.
<SYNC Start=785203><P Class=KRCC>
그러니까 그때의 값은 뭐가 되는 거냐면 -1인 거지. 이만큼은 -1. 근데 이제 문제는 이 오른쪽에 있는 값이야. 그래서 우리 교재 같은 경우는 얘를 가지고 치환했어.
<SYNC Start=798377><P Class=KRCC>
그래서 그렇게 치환해서 풀어도 괜찮고 아니면 지금 내가 쓰는 방법 봐 봐. 이게 통상적으로 맞는 수식으로 그렇게 쓰는 건 아니지만 우리 느낌적인 느낌 그거 알지?
<SYNC Start=809213><P Class=KRCC>
그 상태로 식을 좀 바꿔 볼 거야. x가 1로 가는데 1보다 조금 커, 실제로는. 근데 그 앞에 지금 뭐 붙어 있냐면 마이너스 붙어 있어.
<SYNC Start=818930><P Class=KRCC>
그럼 내가 이 값 자체로 우리 원래 극한값 구할 때 x가 3으로 다가가면 아무 문제 없다면 대입하기로 했지.
<SYNC Start=825982><P Class=KRCC>
그런 느낌으로 x가 1보다 조금 크다면 이 값 자체는 어디로 움직이냐면 1보다 좀 크지만 앞에 마이너스 붙었다? 그럼 -1이 되겠지.
<SYNC Start=837434><P Class=KRCC>
그리고 원래 플러스였는데 부호 바뀌었으니까 마이너스 되겠지. 무슨 얘기냐면 -1보다 조금 작은 쪽에서 오고 있는 거야. x가 -1인데 조금 작은 쪽에서, 즉 왼쪽에서 다가와.
<SYNC Start=850925><P Class=KRCC>
그러니까 그때 값은 뭐가 돼야 되는 거야? -2가 되겠지. 이만큼은 -2. 그래서 치환해서 풀어도 괜찮은데 얘를 가지고 치환해서 풀게 되면 조금 더 오래 걸려.
<SYNC Start=863282><P Class=KRCC>
그래서 이렇게도 풀어 줄 수 있어. 그래서 둘 곱하게 되면 2가 되고 그 뒤의 값이 2였어. 근데 우리의 문제에서는 둘을 더해 달래.
<SYNC Start=873363><P Class=KRCC>
그래서 -1하고 2하고 더했으니까 정답은 1이 나와 주면 되겠다. 그래서 저 앞부분에 있는 애들은 그냥 읽어 내면 되지만 이런 유형에 있는 애들은 부호 잘 봐야 돼.
<SYNC Start=884577><P Class=KRCC>
x가 움직이는 값이랑 내가 구해야 되는 값이 달라. 그래서 x로 바꿔 주든지 아니면 이런 식으로 결국 어디로 움직일지를 확인해 보는 거야.
<SYNC Start=894623><P Class=KRCC>
얘가 3번 문제였고 이번에는 극한값의 계산 한번 보자. 우리 극한값을 가지고 계산하는 유형의 문제들이 가장 많이 등장을 하지?
<SYNC Start=906769><P Class=KRCC>
그래서 결국에는 x라는 애가 a로 갈 때 f(x). 이 극한값을 구하라는 유형의 문제가 나와. 근데 이렇게 x가 어떤 값으로 다가간다면 우리 그때는 어떻게 풀자 그랬어? 응. 대입해서 풀자 그랬어.
<SYNC Start=921700><P Class=KRCC>
그래프가 통통 튀지 않는다면 보통은 함숫값하고 극한값이 같게 나와. 근데 대입이 안 되는 애들이 있다? 그럼 그렇게 대입이 안 되는 유형의 문제들은 어떻게 풀어야 되냐면
<SYNC Start=934775><P Class=KRCC>
뭔가 너희가 식 정리를 해야 됐었지. 근데 얘는 외우는 게 아니라 문제를 보면 느낌이 온다? ‘이거 이거 한번 해 볼까?’ ‘얘는 유리화 한번 해 볼까?’ 그렇게 식의 모양을 보고 느낌이 와.
<SYNC Start=947932><P Class=KRCC>
가장 대표적인 식 정리에는 인수 분해가 있어. 인수 분해. 그래서 뭔가 대입할 수가 없는데 다행히도 인수 분해가 돼서 위아래 식이 정리가 되는 그런 유형이 있고
<SYNC Start=959383><P Class=KRCC>
두 번째로는 대입이 안 되는데 루트가 있어. 그럴 때는 뭐 해야 되냐면 유리화시켜야 되지. 그리고 마지막으로 세 번째에는 통분을 시키거나, 분수꼴일 때.
<SYNC Start=971432><P Class=KRCC>
아니면 약분을 시켜 주는 이런 케이스가 있어. 그리고 대입이 안 돼서 이렇게 인수 분해하거나 유리화하거나 통분, 약분을 이용하는 대표적인 모양의 형태로는 ∞분의∞꼴이 있었고
<SYNC Start=986425><P Class=KRCC>
또? 그렇지. ∞-∞. ∞분의∞꼴이 있었고 ∞-∞꼴이 있었지. 그리고 또 하나 마지막으로는 0분의0꼴이 있었고. 그래서 이런 형태의 문제들이 나왔을 때는 대표적으로 식 정리를 하게 될 거야.
<SYNC Start=1005861><P Class=KRCC>
그래서 이런 형태일 때 가장 많이 등장하는 게 유리화하는 케이스. 이 형태일 때 가장 많이 등장하는 게 인수 분해하는 케이스. 근데 우리 ∞분의∞꼴은 문제 어떻게 풀자 그랬었지? 이때는?
<SYNC Start=1019224><P Class=KRCC>
그렇지. 케이스 나눴던 거 기억나? ∞분의∞이다? 얘 마치 뭐처럼 생겼어? 그렇지. 분수처럼 생겼어. 그래서 얘를 가지고 분수 모양으로 케이스를 나눴었잖아.
<SYNC Start=1031795><P Class=KRCC>
그래서 이렇게 분수꼴일 때에는 분모의 차수가 분자의 차수보다 클 때가 있을 거야. 만약에 분수꼴인데 분모가 훨씬 커. 분모가 훨씬 더 빨리 커지고 있어.
<SYNC Start=1043877><P Class=KRCC>
그러면 분수의 전체 값은? 작아지지. 그래서 결국 어디에 수렴했냐면 점점점점 작아져서 0에 수렴했지. 그리고 두 번째 케이스, 만약에 분모의 차수랑 분자의 차수가 같아.
<SYNC Start=1057629><P Class=KRCC>
우리 이렇게 차수가 같을 때에는 어디에 수렴했었냐면 최고차항의 계수비에 수렴을 했었어. 그래서 얘도 마찬가지로 수렴하는 케이스 중에 하나였지.
<SYNC Start=1070085><P Class=KRCC>
그리고 마지막, 분모가 있고 분자가 있었는데 이번에는 분자의 차수가 더 커. 지금 여기서의 크다, 작다는 차수에 대한 얘기다. 그럼 값이 분수 값이야. 근데 분자가 더 빨리 커져.
<SYNC Start=1084652><P Class=KRCC>
그러니까 이 전체 값은 같이 커지거나 작아지고 있어. 즉 무슨 형태가 나오냐면 발산하는 형태가 나오지.
<SYNC Start=1092263><P Class=KRCC>
근데 그 발산이 양의 무한대로 발산을 하는지 또는 음의 무한대로 발산을 하는지는 그 최고차항의 계수비가 결정을 해 줬지? 그래서 내가 분모가 큰 이 케이스를 흔히 이런 기호를 쓸 거야.
<SYNC Start=1106653><P Class=KRCC>
분모가 훨씬 더 커, 사이즈가. 그래서 분수 값인데 분모가 크니까 얘는 점점점점 0에 수렴을 하겠지. 분자하고 분모의 차수가 같아. 즉 네모 형태인 거야.
<SYNC Start=1119623><P Class=KRCC>
우리 이럴 때는 어디에 수렴한다 그랬냐면 최고차항의 계수비에 수렴한다 그랬어. 최고차항의 계수비. 그리고 마지막, 분모보다 분자가 더 커.
<SYNC Start=1130922><P Class=KRCC>
그러니까 이번에는 이렇게 삼각형 뒤집어진 것 같은 모양이야. 우리 그럴 때는 뭐 한다 그랬냐면 분자가 크니까 발산한다 그랬지.
<SYNC Start=1139841><P Class=KRCC>
여기서의 크다, 작다라는 표현은 차수에 대한 얘기이고 ∞분의∞꼴이 나왔을 때는 식 정리를 바로 하기보다는 이렇게 차수만 가지고도 수렴인지, 그리고 어디에 수렴하는지,
<SYNC Start=1153603><P Class=KRCC>
그리고 발산하는지 체크하는 게 가능해. 그래서 다시 한 번 정리하면 우리 기본적으로 극한값 문제를 푸는 방법은 대입이야. 근데 대입이 안 되는 애들이 있어.
<SYNC Start=1163997><P Class=KRCC>
그런 애들은 인수 분해, 유리화, 통분&약분 같은 방법을 활용해야 돼. 근데 그 대표적인 모양들이 ∞분의∞, ∞-∞, 0분의0 이런 꼴이 있어.
<SYNC Start=1175666><P Class=KRCC>
그리고 그중에서도 이렇게 생긴 분수 형태일 때는 차수를 이용해서 수렴, 발산을 결정할 수 있는 거야. 그래서 이 내용들이 문제에서 어떻게 쓰이는지 한번 보자.
<SYNC Start=1187152><P Class=KRCC>
4번 문제였어. 이거의 값을 구해 달래. x가 지금 어디로 움직여? 그렇지. -2로 움직여. -2를 향해서 가고 있다. 우리 극한값의 기본 계산은? 대입이었지.
<SYNC Start=1200542><P Class=KRCC>
그래서 -2를 넣으려고 봤더니 무슨 일이 생기냐면 분모가 0이 돼 버려. 우리 분모가 0인 그런 숫자 존재하지 않잖아. 그러니까 나는 얘를 구하기 위해서 뭔가 식 정리를 해야 돼.
<SYNC Start=1213167><P Class=KRCC>
근데 위아래 식 잘 봐 봐. 뭐 하고 싶다는 생각이 들어? 둘 다? 그렇지. 인수 분해되는 애지. 그래서 인수 분해 했더니 (x+2)(x-2)가 됐고 인수 분해했더니 (x-3)(x+2)가 됐어. 이렇게.
<SYNC Start=1231125><P Class=KRCC>
그래서 아까 전에 -2을 대입했더니 0이 됐어. 그 얘기는 (x+2)라는 인자가 있었다는 얘기잖아. 그렇게 0 만들어 준 인자가 인수 분해했더니 사라진다?
<SYNC Start=1242527><P Class=KRCC>
그럼 이제는 식에다가 대입해도 괜찮은 거지. 0이 아니니까 .그래서 -2로 움직여. -4인 거고. -2로 움직이니까 -5인 거고. 그래서 마이너스 없어지면서 4분의5가 나와 주면 되지.
<SYNC Start=1259185><P Class=KRCC>
그래서 원래 극한값은 대입해서 푸는 거지만 이렇게 대입했을 때 문제가 생기는 애들은 인수 분해한다든지 유리화시키는 것처럼 뭔가 너희들이 식 정리를 좀 해 줘야 돼.
<SYNC Start=1270639><P Class=KRCC>
그 0이 되는 인자가 사라질 수 있도록. 얘가 4번 문제였고 이번에는 5번 한번 보자. 우리 저 동그라미 냅두자. 저 동그라미 중요한 부분에 쳐져 있거든?
<SYNC Start=1283536><P Class=KRCC>
우리 앞에서는 실수 값으로 다가가는 거였지? 이거 잘 봐야 돼. 애들이 많이 틀리는 것 중에 하나야. 이번에는 x가 어디로 가? 그냥 무한대가 아니다. 무슨 무한대야? 그렇지. -∞야.
<SYNC Start=1296608><P Class=KRCC>
근데 우리 이렇게 -∞로 움직이는 거 문제 많이 안 풀어 봤지? 나한테 낯선 형태야. 그러니까 지금 저 식이 나한테 익숙한 형태가 될 수 있도록 문자를 좀 바꿔 보자.
<SYNC Start=1310075><P Class=KRCC>
지금 x라는 애가 -∞로 움직인다고 그랬어. 그럼 -x는 어디로 움직일까? x는? 그렇지. 부호 바뀌었으니까 얘는 ∞로 움직이겠지. 그러니까 나는 ∞로 움직이는 식으로 바꾸고 싶은 거야.
<SYNC Start=1324681><P Class=KRCC>
그러니까 -x라는 값을 t라는 문자로 한번 바꿔 볼게. 그럼 내가 t라는 문자로 치환했으니까 t는 무한대로 움직일 거고 -x가 지금 t인 거니까 결국 x는 -t인 거지.
<SYNC Start=1339967><P Class=KRCC>
그래서 이 식에서의 주인공의 문자를 x에서 t로 바꿀 거야. 이렇게. 그럼 이번에는 식 정리 한번 해 보자. 리미트, 나 x였어. x가 -∞로 움직여.
<SYNC Start=1352073><P Class=KRCC>
그 식은 결국에는 t가 무한대로 움직인다는 얘기인 거고 이 x들 대신에 전부 다 뭘로 바꿀 거냐면 -t로 바꿀 거야. 그럼 -t로 대입했으니까 t², -t니까 -3t, -t니까 +t로 바뀌었고.
<SYNC Start=1372039><P Class=KRCC>
분자, -2t+5 이렇게 나왔어. 그래서 가능하면 우리 원래 이렇게 루트 있을 때는 뭐 시켜? 응. 유리화시켜. 그래서 유리화를 시켜서 봐도 괜찮아. 근데 우리 이 문제는 좀 더 빨리 풀 수 있지?
<SYNC Start=1388706><P Class=KRCC>
지금 t라는 애가 무한대로 움직이고 있다? 이렇게 ∞분의∞꼴일 때는 어떻게 푼다 그랬어? ∞분의 ∞. 방금 전에 했는데 이거 무슨 형태야? 그렇지. 분수 형태야.
<SYNC Start=1401980><P Class=KRCC>
우리 분수 형태일 때는 중요한 게 뭐였냐면 분자, 분모의 차수가 중요했어. 그래서 분자, 분모의 차수를 좀 확인해 봤더니
<SYNC Start=1410390><P Class=KRCC>
이거 1차, 1차, 루트 안에가 2차처럼 보이지만 루트 씌워져 있으니까 1차. 결국 차수가 전부 다 어때? 동일해. 우리 이렇게 분자, 분모의 차수가 같을 때에는 어떻게 나온다 그랬냐면
<SYNC Start=1425230><P Class=KRCC>
최고차항의 계수비로 몰려나온다 그랬지. 특히나 지금 차수가 동일했어. 그럼 앞부분, 최고차의 계수는 1이니까 √1이고 t 앞에 있는 숫자는 1이고 t 앞에 있는 숫자는 -2이고
<SYNC Start=1441123><P Class=KRCC>
굳이 얘를 유리화시키거나 더 이상의 식 정리하지 말고 ∞분의∞꼴이면서 차수가 동일하니까 바로 계수비를 읽어 낼 수 있는 거야. 그래서 식 약분하고 나면 -1이 되겠지.
<SYNC Start=1453966><P Class=KRCC>
그래서 5번 유형의 문제였는데 이번에는 ∞가 아니라 -∞로 움직이는 문제였어. 그래서 저런 문제가 나왔을 때 잘 안 되면 지금 내가 해 준 것처럼 ∞로 움직일 수 있도록 치환하고 나면
<SYNC Start=1466800><P Class=KRCC>
조금 더 식이 간단해질 거야. 그래서 얘가 5번이었고 이번에 6번 한번 보자. 이거 어려웠을 것 같은데 지금 저 식을 만족시켜 주는 두 개의 상수 a, b 값을 구해 달라 그랬어.
<SYNC Start=1481437><P Class=KRCC>
이거 꼼꼼하게 풀었어야 된다. 지금 x가 어디로 움직여? 무한대로 움직여. x가 무한대로 움직여. 점점 커지고 있어. 그럼 x가 점점 커지니까 당연히 이 값도 점점 커질 거고
<SYNC Start=1491691><P Class=KRCC>
x가 점점 커지니까 ax도 커질 텐데 정확히는 a가 뭔지에 따라서 달라지지? 만약에 a=0이었어. 그렇다면 얘 없어질 거야. 근데 앞에 게 점점 커져.
<SYNC Start=1507594><P Class=KRCC>
그 점점 커지는 값이 하나의 b라는 상수 값에 수렴할 수 없잖아. 그러니까 일단 a는 0이 아니겠지. 근데 만약에 a가, 케이스 나눠 줄게. 첫 번째, 0이었어. 그런 케이스는 존재 안 하고.
<SYNC Start=1519823><P Class=KRCC>
a가 양수였어. 그럼 얘가 양수라는 얘기는 3, 4, 5. 예를 들어서 그런 숫자였다는 얘기야. 그럼 얘도 커지고 얘도 커져. 무한대로 점점점 커지는 거 두 개를 더해서 상수 값에 수렴할 수는 없지.
<SYNC Start=1534679><P Class=KRCC>
그러니까 뭐가 나와 줘야 되냐면 a는 음수였어야 돼. a가 음수여야지만 ∞-∞꼴이 되면서 식 정리가 되지. 그래서 이 문제에서는 a 값의 부호를 찾아내는 일이 너무너무 중요했어.
<SYNC Start=1548583><P Class=KRCC>
그래서 나중에 a 값이 여러 개가 나올 텐데 그중에서 조건 만족하는 음수인에만 골라낼 수 있어야 돼. 그럼 이제 a가 음수인 거 알았고
<SYNC Start=1557531><P Class=KRCC>
나는 극한값을 구할 건데 지금 식 정리 해야 된다는 거 느껴지지? 그리고 루트 들어 있어. 나 뭐 해야 될까? 그렇지. 유리화해야 되지.
<SYNC Start=1567912><P Class=KRCC>
그러면 쟤를 유리화했다 치고 똑같이 생겼는데 가운데 부호만 바꾼 걸 분자, 분모에다 곱해야 돼. 그러니까 분모는 얘로 바뀌었어.
<SYNC Start=1578316><P Class=KRCC>
그리고 이제 분자, 앞에 거 벗겨지니까 9x²+4x-, 뒤에 거 제곱이니까 a²x²으로 이렇게 풀리겠다. 조금 더 식 정리해 볼까?
<SYNC Start=1591597><P Class=KRCC>
분자에서 식 정리해 보면 lim x가 ∞로 갈 때, 분모는 더 이상 정리할 게 없지? 그래서 9x²+4x -ax가 그대로야. 근데 여기에서 최고차끼리 묶어 가지고 정리해 주면 (9-a²)x²+4x.
<SYNC Start=1613854><P Class=KRCC>
여기까지 이해돼? 동류항끼리 계산해 준 거야. 근데 이제 여기서 좀 이상했어야지. 지금 얘는 1차, 앞에 것도 1차, 얘 1차야. 근데 이런 2차가 존재하게 되면 전체 값 커지지? 차수가 다르니까.
<SYNC Start=1628218><P Class=KRCC>
그럼 얘가 뭔가 하나의 상수 값으로 수렴하기 위해서는 이 이차인 항이 없어져야 돼. 그러니까 그 앞에 있는 계수가 뭐가 돼야 돼? 빵이 돼서 사라져야지.
<SYNC Start=1638558><P Class=KRCC>
그럼 그 앞의 계수가 0이 된다는 얘기는 a²=9가 된다는 얘기이고 원래는 ±이지만 a가 지금은 음수니까 -3이겠지. 이렇게 a 값이 나와.
<SYNC Start=1649329><P Class=KRCC>
그럼 이제 앞에 있는 항은 사라졌고 뒷부분만 마저 계산을 해 보자. lim x가 ∞로 움직일 때 a=-3이었어.
<SYNC Start=1659310><P Class=KRCC>
그래서 9x²+4x, a=-3이니까 +3x, 그리고 4x였으니까 앞에 부분은 없어지면서 그대로 4x. 그래서 이제 여기서 눈에 보이면 좋겠다. 1차, 1차, 1차야. 차수가 동일해.
<SYNC Start=1677141><P Class=KRCC>
우리 그럴 때에는 최고차만 밀려나오기로 했지. 그래서 x² 앞에 있는 계수니까 √9, x 앞의 계수니까 3, x 앞의 계수니까 4. 그래서 3하고 3 더했어. 6분의4. 약분하니까 3분의2. 그게 지금 b.
<SYNC Start=1694261><P Class=KRCC>
그리고 우리 문제에서는 a, b를 더해 달라 그랬어. 그래서 a=-3이고 b=3분의2였어. 그러니까 -(3분의7)이 나와 주면 되겠다. 그래서 이 문제에서 제일 중요했던 건 이 첫 번째 단계야.
<SYNC Start=1709354><P Class=KRCC>
그래서 쟤가 수렴할 수 있도록 a가 음수라는 걸 찾아낼 수 있어야 돼. 얘가 오늘의 마지막 문제였어. 뭐 했나 정리 한 번 좀 해 보자.
<SYNC Start=1723440><P Class=KRCC>
그래서 단어, 오늘 배운 내용들이 첫 번째로는 함수의 극한. 함수의 극한이라는 건 어떤 특정한 값이 아니라 ‘그래서 어디로 움직이니?’ ‘어디를 향해서 가니?’
<SYNC Start=1733791><P Class=KRCC>
그 끝을 물어보는 게 함수의 극한이었어. 그리고 두 번째로는 극한값의 계산. 기본적으로 대입인데 대입이 안 되는 유형들은 인수 분해, 유리화, 통분과 약분.
<SYNC Start=1745806><P Class=KRCC>
그런 특정한 식 정리를 좀 필요로 하지. 그래서 우리 다음 시간에는 성질부터 조금 더 한번 나가 보자. 그래서 오늘도 너무 고생 많았고 다음 시간에 보자. 안녕.
<SYNC Start=1756569><P Class=KRCC>
&nbsp;
</BODY>
</SAMI>